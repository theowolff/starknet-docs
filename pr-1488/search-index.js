antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,39.758,1,27.778]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[2,42.087,3,21.278]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[4,45.116,5,36.645]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[6,32.855,7,34.267]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[7,34.267,8,54.637]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1-6",[9,29.344,10,31.916,11,42.414]],["name/1-6",[]],["text/1-6",[]],["component/1-6",[]],["title/1-7",[12,30.94,13,30.724]],["name/1-7",[]],["text/1-7",[]],["component/1-7",[]],["title/1-8",[12,30.94,14,37.865]],["name/1-8",[]],["text/1-8",[]],["component/1-8",[]],["title/1-9",[15,38.767,16,39.758]],["name/1-9",[]],["text/1-9",[]],["component/1-9",[]],["title/1-10",[16,33.126,17,42.414,18,36.886]],["name/1-10",[]],["text/1-10",[]],["component/1-10",[]],["title/1",[19,42.087,20,29.708]],["name/1",[19,0.806,21,1.16]],["text/1",[0,0.549,1,1.288,3,1.975,6,1.208,7,0.473,8,0.755,12,0.427,13,1.425,14,3.853,15,1.798,16,2.499,17,0.703,18,3.886,20,1.378,22,0.581,23,1.467,24,0.755,25,0.79,26,0.79,27,2.59,28,0.755,29,0.79,30,2.818,31,0.837,32,3.217,33,0.909,34,0.837,35,0.909,36,0.549,37,0.79,38,0.636,39,0.909,40,1.614,41,0.837,42,0.542,43,0.79,44,0.755,45,0.909,46,0.909,47,1.574,48,0.909,49,0.909,50,1.111,51,0.535,52,2.398,53,1.708,54,1.574,55,1.485,56,1.708,57,2.944,58,0.717,59,0.755,60,0.837,61,0.421,62,0.683,63,0.79,64,0.983,65,1.485,66,0.79,67,0.65,68,0.636,69,0.496,70,1.259,71,0.529,72,0.549,73,0.84,74,0.909,75,0.909,76,0.469,77,0.666,78,0.727,79,1.009,80,2.591,81,1.307,82,4.314,83,0.962,84,1.408,85,0.666,86,0.79,87,0.909,88,1.366,89,1.129,90,2.642,91,3.092,92,0.549,93,0.995,94,0.727,95,0.666,96,0.591,97,1.574,98,1.485,99,6.845,100,2.053,101,0.727,102,0.478,103,0.461,104,1.32,105,1.589,106,0.501,107,1.406,108,1.489,109,0.683,110,1.282,111,1.746,112,0.995,113,0.591,114,2.673,115,0.581,116,0.837,117,1.111,118,4.175,119,3.156,120,0.915,121,1.366,122,1.347,123,0.491,124,1.666,125,1.172,126,0.853,127,0.601,128,0.683,129,0.79,130,1.172,131,3.682,132,0.486,133,1.007,134,0.496,135,0.983,136,0.601,137,0.755,138,0.523,139,1.392,140,1.644,141,0.454,142,0.601,143,1.753,144,0.834,145,2.733,146,1.007,147,1.574,148,0.923,149,1.485,150,0.847,151,0.293,152,1.871,153,0.549,154,1.562,155,0.623,156,0.564,157,0.437,158,0.755,159,0.517,160,0.683,161,0.623,162,1.708,163,1.708,164,1.489,165,0.79,166,0.581,167,0.79,168,0.683,169,0.755,170,0.542,171,2.958,172,1.708,173,1.708,174,1.196,175,3.051,176,0.535,177,0.703,178,0.79,179,0.573,180,0.517,181,0.496,182,1.485,183,1.708,184,0.942,185,2.361,186,1.046,187,1.196,188,2.928,189,0.529,190,0.591,191,0.875,192,1.771,193,0.557,194,0.683,195,0.557,196,0.491,197,2.053,198,0.611,199,0.727,200,0.666,201,0.65,202,2.534,203,0.79,204,0.79,205,1.222,206,1.196,207,2.102,208,0.837,209,2.136,210,1.369,211,0.79,212,0.666,213,0.755,214,2.134,215,1.87,216,0.942,217,1.572,218,0.65,219,0.496,220,0.591,221,0.623,222,0.837,223,0.755,224,0.755,225,0.79,226,1.217,227,0.837,228,0.727,229,0.666,230,2.294,231,2.136,232,0.79,233,0.727,234,1.627,235,0.755,236,0.549,237,0.65,238,0.666,239,0.909,240,0.79,241,0.523,242,0.867,243,1.485,244,0.683,245,0.623,246,0.79,247,0.636,248,0.564,249,0.755,250,0.837,251,0.909,252,0.581,253,0.703,254,0.683,255,0.837,256,0.601,257,0.601,258,0.529,259,0.65,260,0.755,261,0.727,262,0.517,263,0.549,264,0.581,265,0.501,266,1.033,267,2.053,268,1.319,269,0.755,270,0.421,271,0.542,272,0.501]],["component/1",[273,0.458]],["title/2-1",[274,29.903,275,46.039]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[3,21.278,274,29.903]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[216,45.348]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2-4",[80,36.905]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["title/2-5",[276,58.833]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["title/2-6",[52,27.31,90,34.574]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["title/2-7",[52,27.31,277,46.039]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["title/2-8",[3,21.278,164,32.094]],["name/2-8",[]],["text/2-8",[]],["component/2-8",[]],["title/2-9",[3,21.278,271,39.25]],["name/2-9",[]],["text/2-9",[]],["component/2-9",[]],["title/2-10",[278,61.832]],["name/2-10",[]],["text/2-10",[]],["component/2-10",[]],["title/2-11",[214,38.767,215,33.969]],["name/2-11",[]],["text/2-11",[]],["component/2-11",[]],["title/2-12",[107,25.25,143,26.539,279,36.886]],["name/2-12",[]],["text/2-12",[]],["component/2-12",[]],["title/2-13",[108,26.741,139,31.549,279,36.886]],["name/2-13",[]],["text/2-13",[]],["component/2-13",[]],["title/2-14",[280,82.251]],["name/2-14",[]],["text/2-14",[]],["component/2-14",[]],["title/2-15",[281,49.71]],["name/2-15",[]],["text/2-15",[]],["component/2-15",[]],["title/2-16",[241,47.343]],["name/2-16",[]],["text/2-16",[]],["component/2-16",[]],["title/2-17",[9,44.035]],["name/2-17",[]],["text/2-17",[]],["component/2-17",[]],["title/2-18",[4,56.409]],["name/2-18",[]],["text/2-18",[]],["component/2-18",[]],["title/2-19",[51,48.471]],["name/2-19",[]],["text/2-19",[]],["component/2-19",[]],["title/2-20",[282,46.306]],["name/2-20",[]],["text/2-20",[]],["component/2-20",[]],["title/2-21",[2,30.054,3,15.194,27,12.851,107,21.64]],["name/2-21",[]],["text/2-21",[]],["component/2-21",[]],["title/2-22",[27,22.501]],["name/2-22",[]],["text/2-22",[]],["component/2-22",[]],["title/2-23",[27,17.997,283,43.489]],["name/2-23",[]],["text/2-23",[]],["component/2-23",[]],["title/2-24",[27,17.997,111,27.778]],["name/2-24",[]],["text/2-24",[]],["component/2-24",[]],["title/2-25",[114,30.52]],["name/2-25",[]],["text/2-25",[]],["component/2-25",[]],["title/2-26",[111,27.778,284,47.055]],["name/2-26",[]],["text/2-26",[]],["component/2-26",[]],["title/2-27",[285,45.116,286,52.601]],["name/2-27",[]],["text/2-27",[]],["component/2-27",[]],["title/2-28",[5,45.818]],["name/2-28",[]],["text/2-28",[]],["component/2-28",[]],["title/2",[287,75.77]],["name/2",[287,2.082]],["text/2",[1,0.396,2,1.126,3,2.444,4,1.706,5,2.623,6,0.469,9,1.332,10,0.546,13,0.438,16,0.567,19,0.6,20,1.677,22,0.6,23,0.846,27,2.451,31,0.864,36,1.064,40,2.291,44,0.779,51,1.038,52,3.041,58,0.739,69,2.027,70,0.489,71,1.025,73,1.223,76,0.909,78,0.75,80,2.482,84,0.546,90,0.493,91,0.943,92,0.567,93,0.546,102,1.307,103,1.885,105,0.489,106,1.371,107,2.549,108,1.529,110,1.97,111,3.094,112,1.448,113,0.61,114,2.958,119,0.643,120,2.268,121,0.75,122,1.386,124,2.027,126,3.262,130,0.643,132,1.332,133,1.038,134,1.358,136,0.62,138,1.804,139,0.54,143,0.454,144,0.458,149,0.816,150,1.553,153,3.562,154,1.273,155,1.207,156,0.583,157,1.785,160,0.705,164,0.458,166,0.6,170,2.216,174,1.232,176,1.847,191,0.48,193,0.575,194,1.484,201,0.671,210,0.421,212,1.29,214,0.553,215,1.284,216,1.728,217,0.61,226,0.472,234,1.185,236,0.567,241,1.804,243,0.816,248,1.093,254,1.324,262,1.002,263,0.567,266,0.567,268,1.075,270,0.435,271,0.56,272,1.371,274,1.425,275,0.657,277,1.232,278,0.705,279,1.674,281,1.894,282,1.765,283,1.164,285,1.706,286,0.75,288,0.879,289,0.779,290,1.694,291,2.242,292,0.938,293,2.189,294,0.864,295,0.917,296,1.362,297,0.61,298,1.319,299,0.517,300,0.938,301,0.583,302,0.507,303,0.779,304,1.164,305,1.259,306,0.779,307,0.631,308,2.169,309,1.259,310,1.093,311,1.069,312,0.6,313,0.591,314,0.657,315,0.62,316,0.61,317,1.87,318,0.461,319,0.816,320,0.938,321,0.75,322,0.864,323,0.643,324,1.095,325,0.643,326,1.078,327,0.61,328,0.528,329,0.75,330,1.761,331,0.779,332,0.816,333,0.705,334,0.631,335,1.408,336,0.726,337,0.816,338,1.362,339,0.75,340,0.75,341,0.894,342,0.528,343,1.093,344,1.126,345,1.324,346,0.75,347,0.426,348,0.657,349,0.56,350,0.864,351,0.75,352,1.408,353,0.631,354,0.816,355,0.923,356,0.726,357,0.952,358,0.938,359,1.503,360,0.816,361,1.223,362,0.816,363,2.072,364,0.643,365,0.643,366,0.779,367,1.925,368,0.816,369,0.75,370,0.816,371,0.546,372,0.75,373,0.567,374,0.806,375,1.358,376,1.622,377,1.53,378,1.462,379,1.53,380,1.05,381,0.779,382,0.643,383,0.583,384,0.48,385,0.575,386,0.938,387,1.484,388,0.583,389,3.066,390,0.705,391,0.517,392,1.038,393,0.705,394,0.705,395,0.705,396,0.512,397,0.705,398,0.62,399,0.534,400,1.144,401,0.864,402,1.362,403,0.726,404,1.804,405,0.553,406,0.705,407,0.62,408,1.185,409,0.779,410,1.093,411,0.864,412,1.462,413,0.726,414,0.779,415,0.591,416,0.816,417,0.631,418,0.705,419,0.671,420,1.284,421,0.864,422,0.938,423,0.62,424,0.726,425,0.938,426,0.816,427,1.185,428,0.705,429,0.657,430,0.502,431,0.493,432,0.512,433,0.864,434,0.864,435,0.779,436,1.87,437,0.6,438,0.631,439,0.816,440,0.779,441,0.591,442,1.324,443,0.705,444,0.657,445,0.643,446,0.75,447,0.657,448,0.62,449,0.657,450,1.259,451,0.671,452,0.75,453,0.726,454,0.726,455,0.546,456,0.864,457,1.164,458,0.894,459,0.643,460,0.502,461,0.61,462,0.512,463,1.144,464,1.622,465,0.864,466,0.816,467,0.643]],["component/2",[273,0.458]],["title/3-1",[27,17.997,468,38.306]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3-2",[64,37.865,469,60.601]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["title/3-3",[302,44.458]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["title/3-4",[190,53.468]],["name/3-4",[]],["text/3-4",[]],["component/3-4",[]],["title/3-5",[27,14.995,470,36.235,471,50.493]],["name/3-5",[]],["text/3-5",[]],["component/3-5",[]],["title/3",[42,49.075]],["name/3",[472,1.446]],["text/3",[3,1.99,12,1.845,13,1.832,27,3.088,40,1.749,50,2.55,52,1.629,64,3.542,108,1.914,110,2.081,114,1.456,120,2.1,135,3.542,138,2.258,139,2.258,150,1.944,153,2.371,155,2.69,170,3.671,180,4.321,194,2.459,210,2.761,212,2.873,262,2.233,264,2.51,272,2.163,274,1.783,279,2.64,282,2.209,283,2.593,296,3.036,298,2.081,302,2.12,303,3.258,304,2.593,308,2.008,309,2.806,324,1.727,355,2.817,363,2.593,376,3.614,377,3.41,378,3.258,379,3.41,389,2.341,404,2.258,435,3.258,436,5.708,437,2.51,438,2.64,439,3.41,440,3.258,441,2.472,442,4.626,443,2.949,444,2.745,445,2.69,446,3.137,447,2.745,448,2.593,468,4.421,470,4.068,473,2.258,474,4.626,475,3.923,476,2.472,477,4.22,478,2.55,479,3.41,480,2.873,481,3.923,482,3.036,483,3.258,484,3.137,485,3.923,486,2.69,487,2.69]],["component/3",[273,0.458]],["title/4",[488,54.637,489,60.601]],["name/4",[488,1.046,489,1.16]],["text/4",[0,1.811,11,2.319,68,2.098,72,3.826,81,1.62,91,2.652,102,1.575,103,1.522,106,1.652,134,1.636,157,2.381,191,1.534,196,3.974,257,1.981,270,1.39,288,1.497,290,2.677,308,1.534,318,1.473,324,2.181,325,5.043,332,2.605,355,3.254,374,2.897,380,1.788,431,2.603,458,1.522,460,2.652,477,2.056,488,4.114,490,2.605,491,2.997,492,7.955,493,2.761,494,3.731,495,2.761,496,6.762,497,2.997,498,2.397,499,2.997,500,2.997,501,4.953,502,1.522,503,2.997,504,2.253,505,2.761,506,2.253,507,3.467,508,3.397,509,4.953,510,3.169,511,4.948,512,4.114,513,2.435,514,2.997,515,4.953,516,2.761,517,2.761,518,2.999,519,2.997,520,2.761,521,2.098,522,2.761,523,2.997,524,3.644,525,2.997,526,2.997,527,2.397,528,6.392,529,2.761,530,4.953,531,6.331,532,5.146,533,7.353,534,7.353,535,2.997,536,2.997,537,2.997,538,2.761,539,2.997,540,1.981,541,2.397,542,2.997,543,2.997,544,1.981]],["component/4",[273,0.458]],["title/5-1",[545,49.454,546,42.764]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[7,28.551,36,33.126,467,37.591]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[507,46.039,547,50.906]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5-4",[548,54.637,549,60.601]],["name/5-4",[]],["text/5-4",[]],["component/5-4",[]],["title/5",[7,28.551,27,14.995,545,41.204]],["name/5",[27,0.345,545,0.947]],["text/5",[0,0.577,1,0.585,3,0.16,5,0.531,6,1.587,7,4.586,8,1.485,9,1.16,10,1.041,12,0.449,14,1.029,19,0.61,20,0.979,23,0.237,27,2.801,36,3.492,38,1.252,40,0.797,43,3.024,44,0.792,58,0.751,59,2.096,61,1.171,63,0.829,64,0.549,67,0.682,70,0.497,76,0.255,80,0.802,81,0.267,84,0.806,88,0.395,92,0.577,93,0.287,95,0.361,100,0.332,101,1.733,102,1.978,103,1.281,107,0.439,108,0.465,110,1.517,112,1.666,113,0.321,114,1.061,115,0.61,119,0.338,120,0.264,122,0.275,123,0.967,124,3.053,128,0.371,133,0.291,134,0.269,136,1.433,138,0.549,139,0.549,143,0.239,144,1.231,148,0.967,151,0.813,153,0.577,155,0.338,156,0.306,158,0.41,159,0.281,165,0.829,168,0.371,170,1.293,176,0.291,177,0.382,179,0.311,187,0.969,188,0.967,189,1.041,191,0.253,194,1.612,203,0.829,204,1.204,207,0.429,208,0.879,210,0.802,211,0.429,217,2.066,219,2.201,221,0.338,232,0.429,233,0.395,242,1.1,245,0.338,246,1.884,247,0.345,248,0.306,249,2.096,252,2.033,254,0.717,255,0.455,258,0.806,262,0.543,263,0.577,264,0.316,265,0.986,268,0.213,270,1.005,272,0.986,279,0.642,282,0.537,289,0.41,290,1.364,293,2.05,295,0.497,298,0.506,299,0.763,313,0.311,324,1.399,333,0.717,339,1.43,342,0.78,344,0.316,346,0.395,349,0.294,355,0.354,357,0.267,359,0.298,363,1.669,364,0.338,366,1.15,367,1.677,369,3.225,371,0.287,372,0.395,374,0.634,375,1.561,380,0.294,382,0.338,384,0.253,385,0.302,387,0.569,389,1.067,391,0.763,392,0.291,398,0.631,399,0.543,404,0.284,405,0.291,407,0.326,412,0.41,413,0.382,418,0.717,419,0.353,420,0.255,421,0.879,424,0.382,427,0.332,430,0.511,432,0.269,437,0.61,442,1.041,444,0.969,446,0.395,449,0.969,451,0.353,457,1.669,460,0.264,467,1.486,470,0.326,473,1.453,477,2.386,483,0.792,484,1.733,504,0.371,507,2.224,513,0.243,518,0.847,524,0.284,545,2.15,547,1.071,548,2.096,549,0.455,550,1.55,551,0.493,552,1.204,553,1.555,554,1.204,555,0.788,556,2.376,557,0.879,558,1.555,559,1.014,560,1.555,561,0.738,562,0.717,563,0.738,564,1.014,565,0.717,566,1.788,567,1.277,568,0.371,569,1.204,570,0.879,571,0.493,572,0.455,573,0.493,574,0.382,575,0.879,576,0.455,577,0.429,578,0.395,579,1.328,580,0.601,581,0.41,582,0.429,583,0.41,584,0.429,585,1.517,586,0.493,587,1.385,588,0.717,589,0.879,590,1.677,591,0.493,592,0.829,593,1.385,594,0.954,595,0.493,596,1.204,597,0.455,598,0.763,599,0.654,600,0.455,601,0.455,602,1.828,603,0.592,604,1.172,605,0.395,606,0.915,607,3.271,608,0.41,609,1.071,610,0.699,611,1.384,612,0.455,613,0.493,614,0.493,615,0.41,616,0.879,617,0.353,618,0.62,619,1.31,620,0.792,621,0.306,622,1.276,623,0.382,624,0.763,625,0.382,626,1.788,627,0.294,628,0.455,629,0.298,630,0.549,631,0.382,632,0.455,633,0.829,634,0.371,635,0.954,636,0.601,637,0.829,638,0.493,639,2.434,640,0.792,641,2.524,642,0.371,643,0.954,644,1.385,645,0.521,646,0.954,647,1.279,648,0.353,649,1.485,650,0.493,651,2.167,652,3.125,653,0.879,654,0.371,655,0.353,656,1.55,657,0.763,658,0.915,659,0.493,660,1.788,661,0.493,662,0.493,663,0.493,664,0.493,665,0.493,666,0.493,667,0.493,668,0.361,669,0.338,670,0.654,671,0.763,672,0.954,673,0.642,674,0.763,675,1.385,676,0.41,677,0.493,678,0.345,679,0.493,680,0.493,681,0.792,682,0.298,683,0.549,684,0.763,685,1.385,686,0.493,687,0.493,688,0.954,689,0.493,690,1.788,691,0.493,692,0.41,693,0.361,694,0.493,695,0.41,696,0.792,697,0.763,698,0.429,699,0.41,700,1.486,701,0.493,702,0.429,703,1.276,704,2.167,705,0.954,706,0.61,707,1.555,708,0.493,709,0.493,710,0.493,711,0.493,712,0.954,713,0.493,714,0.493,715,0.41,716,2.325,717,0.455,718,0.455,719,0.382,720,0.829,721,0.493,722,0.455,723,0.493,724,0.338,725,0.429,726,0.631,727,0.298,728,0.738,729,0.284,730,0.954,731,0.493,732,1.385,733,0.302,734,0.9,735,0.493,736,0.429,737,0.493,738,0.954,739,0.41,740,1.849,741,2.487,742,2.389,743,0.879,744,0.879,745,0.954,746,0.879,747,1.107,748,0.682,749,0.763,750,0.954,751,0.395,752,0.493,753,0.493,754,0.493,755,0.455,756,0.493,757,0.262,758,0.41,759,0.493,760,0.493,761,0.493,762,0.382,763,0.493,764,0.493,765,0.493,766,0.493,767,0.382,768,0.493,769,2.046,770,0.493,771,0.395,772,0.455,773,0.338,774,0.371,775,0.886,776,0.41,777,0.455,778,0.429,779,0.668,780,0.41,781,0.429,782,0.493,783,0.338,784,0.493,785,1.385,786,1.014,787,0.493,788,0.493,789,0.493,790,0.829,791,0.395,792,0.738,793,0.879,794,0.455,795,0.429,796,0.682,797,0.306,798,1.041,799,0.41,800,0.954,801,0.455,802,0.493,803,0.954,804,0.41,805,0.493,806,0.493,807,0.41,808,0.493,809,0.493,810,0.338,811,0.371,812,0.493,813,0.361,814,0.371,815,0.493,816,0.493,817,0.493,818,0.429,819,0.353,820,0.493,821,0.954,822,0.879,823,0.455,824,0.493,825,0.493,826,0.493,827,0.455,828,0.429,829,0.493,830,0.493,831,0.493,832,0.311,833,0.382,834,0.41,835,0.455,836,0.382,837,0.429,838,0.455,839,0.879,840,0.493,841,0.493,842,0.493,843,0.353]],["component/5",[273,0.458]],["title/6",[302,44.458]],["name/6",[472,1.446]],["text/6",[]],["component/6",[273,0.458]],["title/7-1",[27,12.851,42,28.028,215,24.256,683,27.038]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[2,35.067,151,17.659,215,28.302]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[9,19.557,27,9.994,215,18.863,395,27.462,844,36.531,845,26.757]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[9,35.219,215,33.969]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[215,33.969,395,49.454]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[215,33.969,845,48.183]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7-7",[27,14.995,215,28.302,295,28.551]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["title/7",[215,42.471]],["name/7",[215,1.167]],["text/7",[0,0.817,3,0.799,9,3.704,12,1.161,16,0.817,20,1.115,22,0.865,23,1.638,27,2.549,52,1.025,70,1.286,80,2.706,93,1.438,94,1.081,96,1.605,102,0.71,104,0.738,106,0.745,110,1.31,111,2.921,112,0.787,114,3.522,120,0.724,123,1.842,124,4.334,125,0.927,126,1.233,127,0.893,129,1.175,132,0.724,135,0.778,136,2.253,138,2.423,144,0.659,148,0.731,150,3.428,151,1.356,154,1.264,157,0.65,161,1.693,165,1.175,168,2.562,169,2.051,170,2.512,177,1.046,201,1.766,210,0.606,214,3.242,215,5.885,216,1.361,219,1.348,220,1.605,234,0.91,236,0.817,237,3.011,238,3.083,240,3.659,242,0.686,248,2.614,256,0.893,262,0.769,268,1.067,270,0.627,290,3.26,295,2.553,298,0.717,304,2.253,318,1.214,324,0.595,339,1.081,352,1.081,359,1.492,361,1.676,362,1.175,363,2.253,367,1.911,369,1.081,370,1.175,375,1.86,387,1.473,391,0.745,395,4.887,396,0.738,428,1.016,430,1.322,437,0.865,441,0.852,445,1.693,448,0.893,449,0.946,458,0.686,462,0.738,468,0.787,470,1.632,506,1.856,538,1.245,555,0.769,564,1.808,617,0.967,619,0.99,622,1.245,627,1.473,631,1.046,632,1.245,639,0.946,645,1.86,658,0.893,670,0.927,683,1.962,684,1.081,716,1.245,727,0.817,740,1.808,748,0.967,775,1.58,776,1.122,811,1.016,845,3.083,846,0.865,847,0.967,848,1.016,849,1.352,850,1.122,851,1.245,852,1.352,853,1.245,854,1.352,855,1.046,856,2.275,857,1.081,858,0.967,859,1.352,860,1.352,861,1.352,862,1.081,863,1.046,864,1.352,865,1.728,866,1.016,867,0.865,868,1.856,869,1.352,870,2.469,871,1.352,872,1.122,873,1.016,874,1.352,875,1.352,876,1.245,877,1.352,878,1.245,879,1.245,880,1.081,881,2.578,882,1.662,883,1.245,884,1.016,885,0.828,886,1.352,887,2.725,888,1.352,889,1.352,890,1.533,891,1.175,892,1.122,893,2.469,894,1.175,895,2.833,896,1.245,897,1.016,898,2.275,899,2.275,900,1.605,901,1.245,902,2.275,903,0.967,904,1.016,905,0.967,906,1.245,907,1.245,908,0.927,909,1.352,910,1.352,911,1.245,912,1.175]],["component/7",[273,0.458]],["title/8-1",[4,56.409]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[4,37.591,389,32.703,913,42.414]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[4,28.187,144,20.051,302,22.215,914,37.862,915,37.862]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8-4",[4,37.591,12,25.779,290,29.626]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["title/8-5",[316,42.764,916,60.601]],["name/8-5",[]],["text/8-5",[]],["component/8-5",[]],["title/8-6",[917,75.77]],["name/8-6",[]],["text/8-6",[]],["component/8-6",[]],["title/8",[281,49.71]],["name/8",[42,0.752,281,0.761]],["text/8",[4,5.171,5,4.288,6,0.346,12,0.621,14,0.76,16,0.418,27,1.318,52,3.482,70,2.152,76,1.496,80,0.592,81,1.806,83,0.39,84,1.407,90,0.694,93,1.687,96,0.858,102,0.694,103,0.961,104,1.319,109,0.52,110,1.537,112,0.403,113,0.45,114,1.533,120,2.578,122,0.735,123,2.77,124,1.581,125,3.303,126,1.669,127,0.457,128,0.992,129,0.601,133,0.408,134,2.955,138,0.398,150,1.436,151,0.425,153,3.436,157,0.333,160,0.52,161,1.298,169,0.575,170,0.413,177,2.585,180,0.394,181,1.581,187,0.484,188,1.023,189,0.403,193,0.808,194,1.158,210,1.854,217,2.686,219,0.378,231,1.324,233,1.055,236,0.418,242,1.471,246,1.645,252,0.443,256,0.872,258,0.403,260,0.575,262,0.751,265,0.381,270,1.74,272,1.842,278,0.52,281,4.125,282,2.711,285,0.905,288,0.346,290,2.233,291,0.944,293,0.778,298,2.554,299,1.043,302,0.713,304,0.872,308,0.676,311,0.297,315,0.457,316,2.439,321,0.553,324,1.276,326,0.424,338,1.021,342,2.112,343,3.183,344,0.443,349,0.413,355,1.392,357,1.306,363,2.48,364,0.905,365,0.474,373,0.418,375,0.72,377,1.645,380,1.441,383,0.43,384,0.354,385,0.424,387,0.787,389,5.886,390,1.422,391,1.332,392,0.408,393,0.52,394,0.992,400,1.57,402,1.021,403,2.585,404,1.089,405,0.408,406,0.52,414,0.575,420,0.357,423,0.457,424,0.535,428,0.992,430,1.013,442,0.52,444,4.326,446,1.055,453,0.535,459,0.474,462,0.378,467,0.474,468,0.403,482,0.535,483,0.575,498,0.553,502,0.67,506,0.992,511,0.466,513,0.34,527,0.553,546,0.45,547,0.535,554,0.601,555,0.394,562,0.992,565,0.52,567,0.408,578,0.553,583,0.575,590,0.535,592,0.601,603,0.43,604,0.374,605,0.553,607,0.601,617,0.944,619,0.507,620,1.571,624,0.553,627,1.729,639,0.484,645,1.581,648,2.39,654,0.52,658,0.457,673,0.466,674,1.055,683,0.398,733,0.808,740,0.507,743,0.637,748,0.495,751,0.553,755,0.637,757,1.004,771,1.055,775,0.844,779,0.484,796,0.944,797,0.43,798,0.52,813,0.507,832,0.832,833,0.535,834,1.571,846,0.844,847,0.495,848,0.992,850,0.575,851,0.637,857,1.513,873,1.422,881,0.424,882,0.466,892,1.096,906,0.637,908,0.474,913,4.597,914,0.637,916,0.637,917,0.637,918,1.216,919,0.637,920,2.317,921,1.32,922,1.892,923,0.82,924,0.992,925,1.216,926,1.32,927,0.553,928,0.637,929,3.304,930,1.513,931,0.575,932,1.513,933,0.944,934,0.575,935,1.021,936,1.892,937,0.637,938,0.601,939,7.375,940,1.216,941,1.32,942,1.32,943,0.474,944,0.553,945,0.692,946,0.692,947,0.692,948,0.52,949,0.553,950,0.553,951,1.096,952,0.601,953,0.601,954,1.869,955,0.443,956,0.692,957,0.692,958,0.601,959,1.021,960,1.096,961,0.692,962,0.601,963,0.924,964,2.242,965,0.637,966,1.892,967,1.055,968,0.637,969,0.637,970,0.553,971,0.637,972,0.692,973,0.413,974,0.692,975,0.692,976,0.553,977,0.535,978,0.484,979,0.575,980,0.535,981,1.32,982,0.553,983,1.147,984,0.692,985,0.457,986,2.406,987,0.888,988,0.575,989,1.422,990,2.416,991,0.553,992,2.416,993,1.021,994,0.52,995,0.692,996,0.535,997,1.32,998,0.495,999,0.637,1000,0.474,1001,0.637,1002,0.37,1003,1.147,1004,1.055,1005,0.557,1006,1.147,1007,2.007,1008,0.601,1009,0.466,1010,0.637,1011,0.637,1012,0.413,1013,0.601,1014,0.637,1015,0.692,1016,0.601]],["component/8",[273,0.458]],["title/9-1",[3,13.294,12,19.33,154,21.041,302,22.215,380,24.522]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[3,15.194,4,32.217,5,26.168,1017,33.601]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[3,15.194,148,25.391,1005,19.836,1018,28.772]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[1005,23.144,1018,33.571,1019,50.493]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[1005,23.144,1018,33.571,1020,50.493]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9-6",[3,21.278,1021,60.601]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["title/9-7",[4,37.591,334,36.886,423,36.235]],["name/9-7",[]],["text/9-7",[]],["component/9-7",[]],["title/9",[5,36.645,929,52.601]],["name/9",[5,0.702,929,1.007]],["text/9",[1,0.761,3,3.383,4,3.289,5,4.792,12,0.848,14,1.038,23,0.463,27,0.493,30,1.104,34,0.887,44,0.799,52,1.056,58,0.404,67,2.71,70,1.974,73,0.473,76,0.931,83,0.542,84,1.481,92,0.582,93,2.206,95,0.705,98,0.837,102,1.683,103,0.489,104,0.525,106,0.994,107,0.443,110,0.956,111,0.406,114,0.944,117,1.172,119,1.237,120,0.515,122,1.417,123,0.52,125,0.66,126,0.481,134,0.984,136,0.636,142,0.636,143,0.466,144,0.88,148,0.975,150,2.139,151,1.929,153,1.935,154,1.94,158,1.498,159,0.548,170,1.076,189,0.56,191,0.493,194,1.515,196,0.52,201,0.688,210,0.432,236,0.582,248,1.12,249,0.799,256,0.636,258,0.56,262,0.548,265,0.531,268,1.1,270,0.446,271,0.574,272,0.994,278,1.355,279,0.648,282,0.542,288,0.901,291,2.71,295,0.501,297,1.172,299,0.531,308,0.493,309,1.82,311,1.376,312,1.154,316,1.172,324,0.794,325,1.237,327,1.172,328,0.542,331,1.498,352,0.77,355,1.94,359,0.582,361,0.473,364,0.66,368,0.837,369,0.77,378,0.799,380,0.574,383,0.598,388,0.598,389,2.576,391,0.531,393,1.355,394,2.407,407,0.636,423,3.17,424,0.745,428,1.355,429,1.78,430,1.714,432,0.525,436,0.723,453,2.477,460,0.965,466,1.567,506,0.723,511,0.648,512,0.799,541,0.77,544,1.682,546,1.172,550,1.29,555,0.548,562,1.912,563,2.477,565,0.723,567,0.567,568,0.723,580,0.606,581,1.498,599,0.66,604,0.52,631,1.395,658,1.192,670,0.66,715,0.799,726,0.636,740,1.321,775,0.616,778,0.837,804,0.799,832,1.603,833,0.745,836,0.745,846,0.616,847,0.688,901,0.887,908,0.66,923,1.58,929,2.56,930,0.77,933,0.688,949,3.03,951,1.498,955,0.616,963,0.674,969,1.661,977,0.745,986,1.498,993,0.745,996,1.395,999,0.887,1004,0.77,1005,1.823,1007,3.983,1012,0.574,1017,1.29,1018,0.589,1019,2.343,1020,5.823,1022,0.962,1023,0.962,1024,0.962,1025,1.803,1026,0.962,1027,0.887,1028,3.201,1029,0.674,1030,0.837,1031,0.837,1032,0.799,1033,1.567,1034,2.544,1035,1.321,1036,2.544,1037,0.887,1038,1.442,1039,0.887,1040,3.452,1041,2.544,1042,0.962,1043,0.962,1044,0.962,1045,0.962,1046,0.962,1047,2.544,1048,0.962,1049,1.803,1050,0.962,1051,1.803,1052,0.962,1053,0.962,1054,0.962,1055,0.962,1056,0.962,1057,2.544,1058,0.962,1059,1.803,1060,0.962,1061,1.803,1062,0.962,1063,0.962,1064,0.962,1065,0.962,1066,0.962,1067,0.962,1068,0.962,1069,0.962,1070,0.962,1071,0.962,1072,0.962,1073,0.962,1074,0.962,1075,0.962,1076,0.962,1077,0.962,1078,0.962,1079,0.962,1080,0.962,1081,0.962,1082,0.962,1083,0.962,1084,0.962,1085,0.962,1086,0.962,1087,0.962,1088,0.962,1089,0.962,1090,0.962,1091,0.962,1092,0.962,1093,0.962,1094,0.962,1095,0.962,1096,0.962,1097,0.962,1098,0.962,1099,0.962,1100,0.962,1101,0.962,1102,0.962,1103,1.803,1104,0.962,1105,0.962,1106,0.962,1107,0.962,1108,0.962,1109,0.962,1110,1.803,1111,0.962,1112,0.962,1113,0.962,1114,0.962,1115,0.962,1116,1.355,1117,1.661,1118,0.962,1119,1.661,1120,0.887,1121,0.745,1122,1.661,1123,0.962,1124,1.395,1125,1.498,1126,1.803,1127,1.803,1128,1.558,1129,0.962,1130,0.962,1131,0.962,1132,0.837,1133,0.837,1134,0.636,1135,0.962,1136,0.837,1137,1.661,1138,0.77,1139,0.962,1140,0.962,1141,1.745,1142,1.213,1143,0.962,1144,1.803,1145,0.962,1146,0.837,1147,0.616,1148,0.887,1149,0.962,1150,0.962,1151,0.962,1152,0.962,1153,1.498,1154,0.962,1155,0.77,1156,0.962,1157,0.962,1158,0.745,1159,0.962,1160,0.705,1161,0.837,1162,0.887,1163,1.661,1164,0.962,1165,0.962,1166,0.688,1167,0.887,1168,0.962,1169,0.962,1170,0.799,1171,0.887,1172,0.962,1173,0.77,1174,0.962,1175,0.626,1176,0.962,1177,0.626,1178,0.962]],["component/9",[273,0.458]],["title/10-1",[480,34.407,510,30.054,1179,30.537,1180,34.407]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[27,12.851,50,30.537,124,25.641,308,24.049]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[308,28.061,447,38.36,868,41.204]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10-4",[27,17.997,73,32.342]],["name/10-4",[]],["text/10-4",[]],["component/10-4",[]],["title/10-5",[27,17.997,226,33.122]],["name/10-5",[]],["text/10-5",[]],["component/10-5",[]],["title/10-6",[27,17.997,268,28.438]],["name/10-6",[]],["text/10-6",[]],["component/10-6",[]],["title/10-7",[27,17.997,461,42.764]],["name/10-7",[]],["text/10-7",[]],["component/10-7",[]],["title/10-8",[27,17.997,1181,60.601]],["name/10-8",[]],["text/10-8",[]],["component/10-8",[]],["title/10-9",[27,17.997,1182,60.601]],["name/10-9",[]],["text/10-9",[]],["component/10-9",[]],["title/10-10",[27,17.997,1183,57.187]],["name/10-10",[]],["text/10-10",[]],["component/10-10",[]],["title/10-11",[27,17.997,1184,60.601]],["name/10-11",[]],["text/10-11",[]],["component/10-11",[]],["title/10-12",[27,17.997,1185,60.601]],["name/10-12",[]],["text/10-12",[]],["component/10-12",[]],["title/10-13",[27,17.997,1186,60.601]],["name/10-13",[]],["text/10-13",[]],["component/10-13",[]],["title/10-14",[27,17.997,1187,60.601]],["name/10-14",[]],["text/10-14",[]],["component/10-14",[]],["title/10-15",[27,17.997,266,39.758]],["name/10-15",[]],["text/10-15",[]],["component/10-15",[]],["title/10-16",[27,17.997,1188,60.601]],["name/10-16",[]],["text/10-16",[]],["component/10-16",[]],["title/10",[27,12.851,192,34.407,288,23.461,1189,37.561]],["name/10",[195,1.384]],["text/10",[1,2.461,3,2.401,6,0.919,7,1.225,9,0.985,11,1.819,15,1.385,20,0.579,22,1.806,27,2.445,30,3.073,32,0.374,40,0.299,47,2.166,50,2.624,52,0.278,57,2.084,58,3.117,70,0.349,71,2.132,72,2.213,73,3.802,77,0.491,80,2.823,85,1.347,91,1.511,102,1.236,104,0.699,105,0.349,107,0.847,108,0.897,111,0.283,114,1.968,120,0.359,121,0.536,122,2.04,124,2.203,126,0.64,132,0.985,133,0.395,134,0.366,138,0.386,148,1.761,151,1.518,152,0.519,157,0.616,159,0.729,164,0.327,170,0.4,174,0.469,179,0.807,180,0.729,184,1.296,189,0.746,191,2.067,192,2.957,193,0.411,194,3.307,195,0.411,210,0.575,224,0.557,226,0.645,230,1.383,231,2.563,232,0.583,234,0.451,236,3.033,257,2.421,258,0.391,262,0.729,264,1.177,266,1.111,268,1.22,270,1.09,272,0.706,274,2.958,288,0.64,298,0.356,308,3.106,309,0.48,311,2.156,313,2.307,314,0.469,315,3.317,318,0.33,324,0.564,341,1.194,355,1.968,361,0.904,364,0.46,373,0.405,374,1.676,375,1.778,380,0.4,382,0.46,384,0.343,387,0.764,390,2.449,391,0.706,398,0.847,399,0.382,410,2.724,419,0.916,430,0.686,431,1.924,432,0.366,438,0.451,447,1.645,455,1.897,457,0.847,459,0.46,460,0.359,461,1.196,467,0.46,473,1.059,478,0.436,494,0.755,507,0.469,508,1.612,510,3.728,511,2.717,518,1.543,524,2.323,540,0.847,546,1.196,567,1.084,585,0.897,598,1.024,629,0.774,668,0.491,669,0.46,670,0.46,695,0.557,706,0.82,727,2.213,757,0.356,783,0.46,786,0.491,797,0.417,798,0.504,799,0.557,868,2.449,881,3.073,882,1.238,892,0.557,905,0.916,973,1.403,979,2.706,987,1.238,989,0.504,1002,0.686,1005,0.283,1018,0.411,1177,0.436,1179,1.196,1180,0.491,1181,0.618,1182,0.618,1183,0.583,1184,1.18,1185,0.618,1186,0.618,1187,0.618,1188,1.18,1190,0.519,1191,0.504,1192,1.114,1193,0.519,1194,1.281,1195,1.423,1196,0.671,1197,0.519,1198,1.281,1199,1.281,1200,0.671,1201,1.281,1202,0.671,1203,1.281,1204,1.821,1205,2.812,1206,4.341,1207,2.753,1208,1.996,1209,4.136,1210,1.682,1211,2.351,1212,2.351,1213,2.344,1214,2.822,1215,1.114,1216,1.44,1217,1.281,1218,1.839,1219,1.347,1220,0.671,1221,0.671,1222,0.618,1223,0.916,1224,0.519,1225,0.557,1226,0.429,1227,1.281,1228,1.18,1229,0.671,1230,2.243,1231,0.504,1232,0.671,1233,0.671,1234,1.281,1235,1.18,1236,0.557,1237,0.451,1238,0.671,1239,0.536,1240,0.671,1241,0.557,1242,0.557,1243,0.671,1244,0.671,1245,0.557,1246,0.671,1247,0.671,1248,0.536,1249,1.024,1250,1.064,1251,1.238,1252,0.46,1253,0.491,1254,0.519,1255,0.671,1256,1.527,1257,0.469,1258,2.257,1259,0.557,1260,0.618,1261,0.391,1262,1.281,1263,0.583,1264,0.536,1265,0.618,1266,0.583,1267,0.504,1268,0.519,1269,0.618,1270,0.519]],["component/10",[273,0.458]],["title/11-1",[559,60.244]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[518,38.96]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[79,34.338]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11-4",[1120,60.601,1209,36.645]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["title/11-5",[72,49.71]],["name/11-5",[]],["text/11-5",[]],["component/11-5",[]],["title/11-6",[257,43.489,1209,36.645]],["name/11-6",[]],["text/11-6",[]],["component/11-6",[]],["title/11-7",[135,37.865,1271,46.039]],["name/11-7",[]],["text/11-7",[]],["component/11-7",[]],["title/11-8",[1205,53.722]],["name/11-8",[]],["text/11-8",[]],["component/11-8",[]],["title/11-9",[1272,75.77]],["name/11-9",[]],["text/11-9",[]],["component/11-9",[]],["title/11-10",[1273,75.77]],["name/11-10",[]],["text/11-10",[]],["component/11-10",[]],["title/11-11",[1274,71.502]],["name/11-11",[]],["text/11-11",[]],["component/11-11",[]],["title/11-12",[13,30.724,767,50.906]],["name/11-12",[]],["text/11-12",[]],["component/11-12",[]],["title/11-13",[1275,78.272]],["name/11-13",[]],["text/11-13",[]],["component/11-13",[]],["title/11-14",[1276,82.945]],["name/11-14",[]],["text/11-14",[]],["component/11-14",[]],["title/11-15",[1277,71.502]],["name/11-15",[]],["text/11-15",[]],["component/11-15",[]],["title/11-16",[388,55.92]],["name/11-16",[]],["text/11-16",[]],["component/11-16",[]],["title/11-17",[1278,75.77]],["name/11-17",[]],["text/11-17",[]],["component/11-17",[]],["title/11-18",[1279,75.77]],["name/11-18",[]],["text/11-18",[]],["component/11-18",[]],["title/11-19",[1280,82.945]],["name/11-19",[]],["text/11-19",[]],["component/11-19",[]],["title/11-20",[1281,75.77]],["name/11-20",[]],["text/11-20",[]],["component/11-20",[]],["title/11",[192,34.407,288,23.461,341,23.848,1189,37.561]],["name/11",[27,0.239,257,0.577,341,0.443]],["text/11",[0,1.555,3,2.625,13,1.201,20,3.015,27,2.044,40,1.147,50,1.672,52,1.068,58,2.381,69,1.404,72,5.926,77,4.154,90,1.352,91,1.377,96,1.672,105,1.34,119,1.764,122,1.433,126,1.285,134,1.404,135,3.264,142,1.7,150,1.275,151,0.829,152,1.99,153,1.555,157,1.236,164,2.767,191,2.231,193,1.575,194,1.028,214,1.516,220,1.672,244,1.934,271,1.535,274,1.169,310,2.707,316,1.672,323,1.764,324,1.919,341,4.811,353,1.731,355,4.271,384,1.317,388,5.371,391,1.418,411,2.37,431,2.981,455,2.538,462,1.404,508,1.764,510,2.788,511,2.933,518,1.218,544,1.7,767,1.99,774,3.277,836,1.99,865,1.8,973,1.535,985,1.7,1002,1.377,1179,1.672,1205,4.458,1209,1.433,1241,2.136,1263,3.789,1271,1.8,1272,2.37,1273,2.37,1274,2.236,1275,3.789,1276,5.224,1277,3.789,1278,2.37,1279,2.37,1280,4.015,1281,2.37,1282,1.646,1283,2.057,1284,4.359,1285,4.359,1286,4.359,1287,2.989,1288,3.192,1289,4.71,1290,3.373,1291,2.236,1292,2.572,1293,2.37,1294,2.572,1295,2.37,1296,2.057,1297,1.516,1298,2.572,1299,1.672,1300,2.572,1301,1.84,1302,2.236,1303,2.572,1304,2.572]],["component/11",[273,0.458]],["title/12-1",[3,17.728,154,28.061,180,31.196]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12",[441,34.538,486,37.591,1305,36.886]],["name/12",[3,0.407,1305,0.848]],["text/12",[1,1.209,3,2.311,6,1.429,27,2.172,32,2.656,57,3.92,58,1.202,90,2.506,124,1.562,132,2.552,154,1.465,157,2.291,179,1.804,194,3.426,195,1.753,225,2.488,226,1.441,242,1.453,264,5.079,265,2.629,268,2.061,274,1.301,299,1.578,341,1.453,355,4.375,359,1.73,374,1.31,375,1.562,424,2.215,441,5.002,457,1.892,477,3.27,480,2.096,486,1.963,502,1.453,561,3.689,606,1.892,608,2.377,645,2.602,674,2.289,757,1.518,774,3.584,797,1.778,967,2.289,985,4.051,1190,2.215,1205,1.708,1261,1.667,1282,1.831,1305,3.208,1306,3.689,1307,2.862,1308,1.892,1309,2.862,1310,2.862,1311,2.637,1312,2.637,1313,2.488,1314,2.862,1315,2.862,1316,2.289,1317,2.003,1318,2.862,1319,2.862,1320,2.637,1321,2.215,1322,2.047,1323,2.377,1324,2.488,1325,2.862,1326,2.289,1327,2.289,1328,2.862,1329,5.372,1330,3.96,1331,3.689,1332,5.53,1333,3.812,1334,4.768,1335,3.96,1336,4.741,1337,2.377,1338,2.377,1339,2.862,1340,2.862,1341,2.862,1342,1.778,1343,2.377,1344,2.637,1345,2.215,1346,2.637,1347,2.862,1348,3.96,1349,2.862,1350,4.768]],["component/12",[273,0.458]],["title/13-1",[727,39.758,819,47.055]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13",[]],["name/13",[441,0.794,1305,0.848]],["text/13",[0,5.008,1,2.148,3,0.299,12,1.456,19,2.349,23,0.835,27,2.267,30,1.064,32,1.368,57,1.571,58,0.388,61,1.703,68,0.647,72,2.219,77,1.798,79,0.386,85,0.677,124,2.004,139,0.532,151,1.35,157,0.835,171,0.661,176,0.545,191,0.473,194,2.808,196,0.5,205,0.661,264,2.349,268,0.4,273,0.326,274,0.789,290,0.5,299,0.51,315,0.611,324,0.407,326,0.566,353,1.169,355,4.833,375,1.69,383,1.923,395,2.327,399,0.526,405,0.545,431,0.913,441,1.951,458,0.469,462,0.505,502,0.469,505,0.852,510,1.111,521,0.647,522,0.852,604,0.939,625,0.715,631,0.715,640,1.442,645,2.777,684,1.389,727,4.394,779,0.647,810,0.634,814,0.695,819,4.177,880,0.739,890,1.923,903,0.661,985,0.611,1000,1.191,1012,2.78,1029,0.647,1038,1.389,1136,0.804,1160,0.677,1177,0.601,1179,1.129,1195,3.606,1204,1.739,1225,0.768,1282,2.68,1287,1.684,1299,2.013,1301,0.661,1302,0.804,1305,1.652,1306,4.24,1311,0.852,1312,0.852,1351,2.691,1352,1.344,1353,0.852,1354,1.963,1355,2.004,1356,0.925,1357,0.601,1358,0.925,1359,1.51,1360,0.925,1361,1.737,1362,0.925,1363,1.6,1364,0.925,1365,0.925,1366,0.925,1367,1.737,1368,3.382,1369,0.925,1370,0.611,1371,1.737,1372,0.677,1373,0.925,1374,0.925,1375,1.389,1376,1.737,1377,0.768,1378,1.737,1379,3.859,1380,1.737,1381,6.32,1382,5.088,1383,0.925,1384,0.925,1385,1.442,1386,1.389,1387,1.737,1388,0.925,1389,0.925,1390,0.925,1391,0.925,1392,1.737,1393,0.925,1394,0.925,1395,3.191,1396,1.737,1397,0.925,1398,1.737,1399,0.925,1400,0.925,1401,0.925,1402,0.925,1403,0.925,1404,1.737,1405,0.925,1406,1.737,1407,0.925,1408,0.852,1409,0.804,1410,1.737,1411,0.925,1412,0.925,1413,0.925,1414,0.925,1415,0.591,1416,0.804,1417,0.925,1418,0.925,1419,0.925,1420,0.925,1421,0.925,1422,0.925,1423,0.715,1424,0.925,1425,0.925,1426,0.925,1427,0.739,1428,0.768,1429,1.737,1430,5.088,1431,3.096,1432,2.455,1433,2.262,1434,0.925,1435,0.925,1436,0.852,1437,1.305,1438,0.768,1439,0.677,1440,0.695,1441,1.737,1442,0.852,1443,3.096,1444,3.096,1445,1.737,1446,0.925,1447,1.272,1448,3.096,1449,3.096,1450,1.737,1451,1.737,1452,0.677,1453,0.925,1454,2.455,1455,0.925,1456,0.925,1457,0.925]],["component/13",[273,0.458]],["title/14-1",[3,21.278,361,32.342]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14",[]],["name/14",[361,0.619,1305,0.848]],["text/14",[0,3.169,1,1.682,3,1.916,5,0.482,23,0.416,27,1.621,28,0.719,32,0.482,51,0.51,57,0.554,64,0.498,70,1.525,71,0.504,72,2.104,73,2.389,80,0.732,89,0.572,90,0.455,91,0.463,114,1.087,117,0.563,123,0.882,124,0.472,126,0.815,130,0.593,134,0.472,144,2.558,146,0.51,151,1.431,157,1.113,179,1.028,180,1.318,191,1.499,194,1.392,257,1.079,264,1.481,268,0.374,270,0.401,309,0.619,311,0.701,324,0.718,341,0.439,342,1.303,353,1.098,355,4.901,357,0.882,360,0.752,363,0.572,374,1.059,384,0.443,388,0.537,395,1.227,396,0.472,404,0.498,410,1.013,417,0.582,419,1.167,441,1.459,458,2.662,494,0.51,495,0.797,502,0.439,508,0.593,512,1.355,527,1.305,528,0.752,621,2.758,634,0.651,645,2.174,654,0.651,669,0.593,727,1.399,733,0.999,751,0.692,757,1.228,773,1.119,786,0.634,797,0.537,819,0.619,863,0.67,881,0.999,882,1.098,890,0.537,932,1.305,963,0.606,985,0.572,1000,1.588,1009,0.582,1012,1.381,1132,0.752,1175,0.563,1177,0.563,1190,0.67,1195,3.083,1204,1.445,1205,2.899,1226,1.481,1267,0.651,1282,0.554,1296,0.692,1299,1.061,1305,3.27,1306,0.67,1330,1.923,1335,1.355,1345,0.67,1346,0.797,1351,0.752,1359,0.752,1363,1.503,1368,1.503,1370,0.572,1381,6.989,1395,4.866,1408,0.797,1428,1.355,1433,1.503,1437,0.651,1442,2.133,1452,0.634,1458,0.752,1459,0.865,1460,1.632,1461,2.928,1462,2.928,1463,2.928,1464,2.928,1465,4.441,1466,1.632,1467,3.984,1468,3.482,1469,0.865,1470,3.984,1471,1.632,1472,2.928,1473,2.315,1474,2.928,1475,3.482,1476,0.865,1477,1.632,1478,1.503,1479,1.632,1480,1.632,1481,3.984,1482,1.632,1483,1.632,1484,1.632,1485,2.928,1486,1.632,1487,1.503,1488,0.865,1489,0.606,1490,1.632,1491,1.632,1492,0.619,1493,0.865,1494,0.865,1495,1.227,1496,0.606,1497,0.865,1498,1.632,1499,0.865,1500,0.797,1501,1.632,1502,0.797,1503,0.797,1504,0.865,1505,0.865,1506,0.865,1507,0.865,1508,0.865,1509,0.865,1510,0.752,1511,0.563,1512,0.865,1513,1.632,1514,1.632,1515,1.632,1516,1.632,1517,2.928,1518,1.632,1519,4.441,1520,1.632,1521,1.632,1522,0.865,1523,1.632,1524,0.865,1525,0.865,1526,0.797,1527,0.865,1528,0.752,1529,0.865,1530,0.865,1531,0.865,1532,1.418,1533,0.797,1534,0.752,1535,0.865,1536,0.865,1537,0.797,1538,0.651,1539,0.752,1540,0.865,1541,0.797]],["component/14",[273,0.458]],["title/15-1",[1542,54.375]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[134,35.907,1543,40.292]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[341,33.397,1543,40.292]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15",[3,17.728,341,27.826,1543,33.571]],["name/15",[341,0.639,1543,0.772]],["text/15",[3,3.153,12,1.776,27,1.848,40,0.97,58,0.913,64,1.252,72,1.315,77,3.663,81,1.176,83,4.169,89,1.438,115,1.392,123,1.176,124,1.188,132,3.617,134,1.188,151,0.701,154,1.114,157,1.815,159,1.238,166,2.415,179,3.151,180,1.238,194,1.509,196,2.041,210,0.976,219,1.188,226,1.095,268,0.941,270,1.751,308,1.114,309,1.556,313,1.371,341,3.43,355,4.389,357,2.041,392,1.282,396,2.061,397,2.838,399,1.238,432,1.188,437,1.392,455,2.912,462,1.188,467,1.492,473,1.252,474,1.636,480,1.594,502,1.105,623,1.684,645,1.188,669,1.492,678,1.523,719,1.684,733,2.312,757,1.154,811,1.636,867,5.385,885,1.333,890,1.351,895,1.464,919,2.004,933,2.701,983,1.891,1000,1.492,1012,1.298,1205,1.298,1282,3.2,1299,3.251,1317,3.5,1322,2.701,1326,1.74,1327,1.74,1329,4.488,1331,2.922,1332,4.62,1333,3.019,1337,1.807,1338,1.807,1342,1.351,1344,2.004,1345,1.684,1348,3.136,1355,1.188,1370,1.438,1496,1.523,1543,3.657,1544,1.594,1545,1.556,1546,1.636,1547,1.556,1548,2.838,1549,1.594,1550,1.891,1551,1.807,1552,3.478,1553,1.684,1554,1.684,1555,4.348,1556,1.523,1557,1.684,1558,2.176,1559,2.176,1560,2.176,1561,2.004,1562,2.176,1563,4.348,1564,4.633,1565,4.348,1566,2.176,1567,2.176,1568,2.176,1569,2.176,1570,1.684,1571,2.176,1572,3.775,1573,2.004,1574,1.464,1575,1.807,1576,1.351,1577,2.004,1578,1.523,1579,2.176,1580,2.176]],["component/15",[273,0.458]],["title/16-1",[1542,54.375]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[27,12.851,271,28.028,299,25.899,885,28.772]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[274,24.915,1492,39.206,1581,45.523]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[226,27.597,885,33.571,1543,33.571]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[268,23.695,885,33.571,1543,33.571]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[361,26.947,885,33.571,1543,33.571]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16",[3,11.816,226,18.393,268,15.792,361,17.96,885,22.375,1543,22.375]],["name/16",[1582,1.494]],["text/16",[1,2.313,3,2.322,5,0.574,13,0.482,19,0.66,27,1.886,36,0.623,37,0.896,38,0.722,40,0.46,51,0.608,52,0.798,58,2.623,61,1.572,64,0.593,71,0.6,72,2.048,73,2.234,77,0.755,79,0.43,90,1.011,96,1.25,104,0.563,111,0.812,114,1.686,115,0.66,120,0.552,123,0.557,124,1.475,127,0.682,131,0.755,132,1.447,143,0.499,148,2.96,151,1.464,154,0.985,164,3.363,179,0.65,180,0.587,181,0.563,193,0.632,194,2.755,195,4.221,210,1.213,219,1.475,221,0.707,226,2.96,234,0.694,236,0.623,242,0.976,257,1.787,262,0.587,263,0.623,265,0.568,266,2.417,268,2.846,270,1.254,271,3.268,274,3.598,298,1.02,299,1.49,308,0.528,310,0.64,311,2.527,312,0.66,324,0.454,326,1.178,341,2.307,342,3.084,347,0.469,355,4.054,357,2.96,359,0.623,361,1.666,382,0.707,384,0.528,388,0.64,392,0.608,408,1.294,431,0.542,432,1.05,437,0.66,455,1.574,458,0.523,462,0.563,473,0.593,474,1.446,486,0.707,496,0.856,502,1.372,510,2.168,511,0.694,518,0.911,524,0.593,562,0.775,567,0.608,582,0.896,629,1.162,645,2.183,658,0.682,678,0.722,726,1.271,741,0.896,757,0.547,786,3.687,796,1.933,798,3.006,799,0.856,885,3.355,933,1.376,973,2.022,985,0.682,988,0.856,1121,1.488,1191,1.446,1195,2.091,1223,1.376,1224,0.798,1236,1.597,1242,3.321,1282,1.23,1299,0.67,1301,0.738,1321,0.798,1355,1.05,1372,0.755,1492,2.424,1496,0.722,1543,2.449,1544,0.755,1545,0.738,1546,0.775,1547,0.738,1548,1.446,1549,0.755,1554,1.488,1555,0.896,1563,1.672,1565,2.946,1574,0.694,1576,0.64,1581,3.321,1582,1.787,1583,0.824,1584,0.824,1585,1.031,1586,1.031,1587,1.923,1588,5.416,1589,1.031,1590,0.95,1591,1.031,1592,0.775,1593,1.031,1594,1.031,1595,0.755,1596,0.95,1597,1.031,1598,1.031,1599,1.923,1600,1.923,1601,1.923,1602,1.031,1603,1.031,1604,1.031,1605,1.923,1606,1.031,1607,4.544,1608,1.031,1609,1.597,1610,1.772,1611,1.031,1612,1.031,1613,0.896,1614,0.896,1615,1.672,1616,0.95,1617,2.946,1618,3.95,1619,1.031,1620,1.031,1621,3.476,1622,1.031,1623,2.349,1624,0.798,1625,0.95,1626,1.772,1627,0.95,1628,0.95,1629,3.122,1630,1.031,1631,1.031,1632,1.031,1633,0.95,1634,1.923,1635,3.999,1636,1.031,1637,1.923,1638,1.031,1639,1.031,1640,0.856,1641,0.95,1642,1.031,1643,1.031,1644,1.031]],["component/16",[273,0.458]],["title/17-1",[1542,54.375]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[895,44.27,1282,42.087]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[27,15.912,1282,23.372,1317,25.566,1556,25.566,1582,24.15]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[1645,57.187,1646,57.187]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17-5",[1647,71.502]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["title/17-6",[195,40.292,1282,42.087]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["title/17-7",[1645,57.187,1646,57.187]],["name/17-7",[]],["text/17-7",[]],["component/17-7",[]],["title/17-8",[1647,71.502]],["name/17-8",[]],["text/17-8",[]],["component/17-8",[]],["title/17",[27,11.244,50,26.718,219,22.434,308,21.041,473,23.657]],["name/17",[50,0.819,1648,1.046]],["text/17",[3,0.485,5,3.283,13,4.437,22,4.419,27,3.155,40,0.668,50,0.974,52,0.622,58,1.913,64,0.862,92,2.245,106,0.826,115,0.958,131,1.097,135,0.862,154,0.767,159,2.114,166,1.735,194,1.084,195,4.717,210,0.672,214,0.883,215,0.774,219,2.487,220,2.962,221,1.027,242,2.313,247,1.048,265,1.495,295,0.78,297,0.974,301,2.83,308,2.7,324,0.66,326,0.918,345,3.426,355,1.957,357,1.466,361,0.737,373,2.245,396,0.818,404,0.862,432,1.48,473,3.036,477,4.412,479,1.302,486,1.027,502,1.886,510,0.958,567,0.883,575,1.38,588,1.126,629,0.905,656,1.072,669,1.027,683,0.862,706,0.958,726,0.99,810,2.547,885,0.918,895,3.55,933,1.94,958,4.585,989,1.126,1000,1.027,1179,0.974,1197,2.874,1282,6.806,1283,4.218,1313,1.302,1317,6.205,1372,1.097,1496,1.048,1544,1.097,1545,1.072,1547,1.072,1548,1.126,1549,1.097,1552,1.38,1556,5.837,1575,1.244,1582,5.862,1584,1.198,1613,1.302,1645,2.357,1646,2.357,1647,2.357,1648,1.244,1649,1.498,1650,1.38,1651,1.38,1652,1.048,1653,1.498,1654,1.498,1655,1.38,1656,1.159,1657,1.498,1658,1.198,1659,1.244,1660,2.357,1661,1.498,1662,1.498,1663,1.048,1664,1.498,1665,1.498,1666,2.357,1667,8.091,1668,1.072,1669,1.684,1670,4.381,1671,3.785,1672,3.426,1673,2.498,1674,2.168,1675,2.712,1676,1.498,1677,4.557,1678,1.498,1679,1.302,1680,3.961,1681,1.498,1682,1.498,1683,1.498,1684,1.302,1685,1.498,1686,1.498,1687,1.38]],["component/17",[273,0.458]],["title/18",[27,11.244,90,21.601,810,28.187,1357,26.718,1549,30.103]],["name/18",[90,0.662,1357,0.819]],["text/18",[20,1.993,27,2.959,32,2.459,40,1.968,58,1.853,64,2.54,90,2.32,115,2.824,190,2.869,210,1.98,219,2.409,220,2.869,226,2.222,268,1.908,270,2.047,302,2.386,355,3.035,361,2.17,391,2.433,430,2.363,431,2.32,468,2.57,478,2.869,479,3.837,518,2.091,555,4.655,621,2.741,697,7.32,706,6.309,832,2.781,885,2.703,932,3.529,933,4.822,1016,3.837,1245,7.604,1282,4.313,1355,2.409,1357,2.869,1489,3.089,1538,3.318,1543,2.703,1544,3.233,1545,3.157,1546,3.318,1547,3.157,1548,5.068,1549,4.938,1575,3.666,1576,2.741,1669,2.741,1688,4.066,1689,4.414,1690,3.157,1691,3.837,1692,3.837,1693,3.529,1694,3.837,1695,4.066,1696,3.666,1697,3.837,1698,3.837,1699,3.837]],["component/18",[273,0.458]],["title/19",[27,11.244,42,24.522,933,29.398,1545,29.398,1546,30.897]],["name/19",[42,1.348]],["text/19",[3,3.334,27,2.985,32,3.134,50,3.657,64,3.238,90,4.241,219,4.404,226,2.833,268,4.079,308,2.88,324,2.477,341,2.856,355,2.994,361,3.967,473,3.238,810,3.858,885,3.446,933,5.772,985,3.719,1166,4.024,1321,4.353,1357,3.657,1538,4.229,1543,6.313,1544,4.121,1545,4.024,1546,4.229,1547,4.024,1548,4.229,1549,5.91,1550,4.891,1551,4.672,1663,3.937,1695,5.183,1700,5.183,1701,5.626,1702,5.626]],["component/19",[273,0.458]],["title/20-1",[1542,54.375]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[32,22.895,268,17.767,270,19.063,274,18.683,473,23.657]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[32,30.533,268,23.695,1543,33.571]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[32,30.533,361,26.947,1543,33.571]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20",[3,11.816,27,9.994,32,20.35,268,15.792,361,17.96,1543,22.375]],["name/20",[32,1.259]],["text/20",[1,2.259,3,2.009,5,0.627,6,1.043,23,0.541,27,2.057,30,0.69,32,3.46,36,3.233,40,1.301,50,0.732,57,1.336,58,2.436,61,0.968,64,0.648,70,0.587,72,2.586,73,1.026,77,0.825,80,1.92,81,0.609,90,0.592,94,0.901,104,0.615,108,0.549,110,0.597,111,0.476,114,2.305,115,0.721,122,0.627,123,1.128,148,1.128,151,0.673,157,1.003,164,1.424,181,1.593,188,0.609,193,0.69,194,1.71,195,5.052,219,1.139,221,0.772,222,2.688,226,2.922,236,0.681,242,1.06,266,2.586,268,4.091,270,2.691,271,2.173,274,4.302,311,1.565,312,0.721,315,0.745,316,0.732,326,0.69,336,0.871,341,0.572,342,2.727,345,0.847,355,3.343,357,3.909,361,1.791,375,0.615,383,1.297,384,2.48,388,0.699,398,0.745,399,1.661,404,1.202,431,1.097,455,1.216,461,0.732,468,2.492,474,0.847,486,0.772,502,1.06,510,2.33,511,1.405,524,1.202,555,0.641,567,0.664,582,0.979,604,0.609,606,0.745,621,0.699,636,1.315,645,3.167,668,0.825,669,0.772,678,1.461,682,2.201,726,0.745,757,1.548,786,2.137,796,0.806,798,0.847,819,0.806,873,2.738,923,0.699,928,1.037,933,1.493,955,0.721,973,2.891,985,0.745,988,0.935,1121,2.258,1166,2.087,1177,0.732,1195,2.818,1223,0.806,1236,0.935,1242,3.025,1263,0.979,1282,1.336,1287,0.772,1320,1.037,1354,0.901,1355,1.139,1375,0.901,1440,1.569,1489,0.788,1492,2.087,1543,2.621,1544,0.825,1545,0.806,1546,0.847,1547,0.806,1548,0.847,1549,0.825,1555,0.979,1563,1.815,1565,1.815,1574,0.758,1581,1.734,1582,1.38,1584,0.901,1588,4.928,1614,0.979,1615,3.72,1617,3.72,1618,4.211,1621,3.72,1623,2.537,1624,0.871,1625,1.037,1626,1.923,1627,1.037,1628,1.037,1629,2.688,1640,0.935,1641,1.037,1690,0.806,1703,1.037,1704,1.126,1705,1.126,1706,1.126,1707,0.979,1708,1.126,1709,2.088,1710,1.126,1711,0.847,1712,2.088,1713,3.72,1714,0.772,1715,1.126,1716,1.126,1717,0.901,1718,1.126,1719,1.126,1720,1.126,1721,2.088,1722,1.126,1723,3.72,1724,0.935,1725,1.126,1726,1.037,1727,0.979,1728,1.126,1729,1.126,1730,3.642,1731,1.126,1732,1.126,1733,1.126,1734,1.529,1735,1.126,1736,1.126,1737,1.126]],["component/20",[273,0.458]],["title/21-1",[50,35.631,308,28.061,473,31.549]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[195,28.772,1680,40.836,1738,43.274,1739,37.561]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[226,20.694,268,17.767,361,20.206,885,25.173,1543,25.173]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[13,17.061,195,22.375,226,18.393,310,22.688,341,18.545,1738,33.652]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[32,26.168,268,20.307,361,23.094,1543,28.772]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[32,26.168,274,21.353,1492,33.601,1581,39.015]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21",[27,11.244,1545,29.398,1546,30.897,1548,30.897,1707,35.729]],["name/21",[1707,1.965]],["text/21",[12,1.479,13,5.146,72,1.901,135,1.811,148,4.517,154,1.61,164,1.535,170,1.877,188,1.7,194,3.34,195,5.498,226,3.297,242,1.597,274,2.343,301,4.067,308,2.639,310,1.954,341,4.557,355,3.517,357,4.093,373,1.901,374,1.439,385,1.927,388,1.954,404,2.967,415,1.982,524,1.811,540,2.08,645,1.717,727,4.576,774,3.875,798,5.693,885,3.157,890,1.954,958,2.735,973,1.877,987,3.469,1000,2.157,1195,5.067,1219,3.775,1242,2.613,1282,3.298,1283,2.515,1317,6.633,1354,2.515,1375,2.515,1492,3.687,1495,3.875,1574,3.469,1615,2.735,1617,2.735,1618,4.481,1621,2.735,1623,2.735,1624,2.434,1667,5.693,1668,2.25,1680,4.481,1713,2.735,1739,2.515,1740,3.146,1741,3.146,1742,3.146,1743,3.146,1744,5.154,1745,5.154,1746,2.898,1747,3.875,1748,2.613,1749,3.146]],["component/21",[273,0.458]],["title/22-1",[302,29.626,602,28.807,1012,32.703]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[3,21.278,602,34.574]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[3,17.728,630,31.549,1750,34.538]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[3,17.728,579,33.571,1751,43.827]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22-5",[3,17.728,647,39.206,1134,36.235]],["name/22-5",[]],["text/22-5",[]],["component/22-5",[]],["title/22-6",[170,39.25,1116,49.454]],["name/22-6",[]],["text/22-6",[]],["component/22-6",[]],["title/22",[302,35.557,602,34.574]],["name/22",[302,1.221]],["text/22",[1,0.831,2,0.676,3,3.116,7,3.64,10,2.374,12,0.926,20,1.562,23,1.959,27,1.115,36,2.463,43,1.711,58,0.826,61,0.49,69,1.074,70,2.41,79,0.822,81,0.571,83,2.605,84,2.374,93,2.982,95,0.774,102,0.555,103,0.537,112,1.146,120,0.566,123,3.427,124,0.577,135,1.133,139,0.608,143,0.512,144,1.347,148,2.501,150,3.603,151,1.491,159,3.169,161,0.725,168,0.794,170,2.064,181,1.074,194,0.787,201,1.408,210,0.883,214,0.623,245,0.725,248,0.656,258,0.615,262,0.602,265,1.907,272,1.085,273,0.373,288,0.528,290,2.203,291,0.756,293,0.623,295,0.551,298,1.465,299,1.907,302,2.203,324,0.465,328,2.605,333,0.794,355,0.73,359,1.669,361,1.358,364,0.725,365,0.725,371,1.146,384,0.541,396,0.577,399,0.602,400,0.687,402,0.818,404,1.133,430,1.054,432,2.795,459,0.725,470,1.301,477,0.725,487,0.725,502,0.537,507,2.421,524,0.608,529,0.974,545,1.479,547,4.308,550,0.756,563,0.818,567,0.623,579,5.825,580,3.763,590,0.818,600,0.974,602,5.565,604,0.571,617,0.756,618,0.687,621,1.715,625,0.818,627,1.174,630,5.319,642,2.076,647,3.982,655,0.756,656,0.756,657,0.845,682,0.639,683,0.608,700,1.894,720,1.711,728,1.523,729,1.991,733,1.205,742,0.794,749,0.845,762,0.818,776,0.878,797,0.656,811,1.479,848,0.794,855,0.818,866,2.076,867,0.676,882,4.019,899,0.974,908,1.35,923,1.222,924,0.794,948,1.479,955,0.676,963,0.74,973,0.631,1004,0.845,1005,0.831,1006,1.711,1012,0.631,1013,0.919,1116,2.076,1128,1.205,1134,3.059,1147,1.767,1177,0.687,1190,0.818,1193,0.818,1204,1.146,1237,0.711,1258,0.845,1270,1.523,1288,2.023,1355,0.577,1489,0.74,1750,4.208,1751,1.574,1752,0.74,1753,0.74,1754,1.968,1755,1.057,1756,1.324,1757,1.057,1758,0.878,1759,1.057,1760,3.154,1761,0.974,1762,4.022,1763,0.845,1764,1.057,1765,1.711,1766,1.634,1767,1.057,1768,0.818,1769,0.974,1770,0.878,1771,0.974,1772,1.813,1773,2.544,1774,0.974,1775,1.441,1776,0.974,1777,0.974,1778,0.974,1779,1.057,1780,0.974,1781,0.974,1782,0.974,1783,0.974,1784,0.699,1785,0.974,1786,0.878,1787,1.057,1788,0.974,1789,1.057,1790,0.818,1791,1.057,1792,0.974,1793,0.919,1794,1.057,1795,0.974,1796,0.919]],["component/22",[273,0.458]],["title/23",[579,40.292,642,49.454]],["name/23",[579,0.772,642,0.947]],["text/23",[1,4.338,3,3.195,7,2.909,27,2.196,36,2.099,58,1.458,80,1.558,81,1.877,93,2.022,114,2.072,124,1.895,126,1.734,135,1.999,150,4.894,151,2.257,170,2.072,181,1.895,194,1.388,258,4.08,299,1.915,301,2.157,314,2.43,355,1.288,361,1.707,371,2.022,383,2.157,385,2.127,392,2.046,396,1.895,400,2.257,429,2.43,430,1.859,468,2.022,470,2.296,487,2.381,502,1.763,579,6.292,602,5.399,618,2.257,627,2.072,630,5.408,642,5.267,683,1.999,729,1.999,734,2.257,757,1.842,786,2.543,843,5.011,890,2.157,923,2.157,973,4.18,991,4.466,1005,1.466,1355,1.895,1574,4.715,1750,3.519,1752,2.43,1753,2.43,1762,3.019,1773,3.199,1775,2.543,1796,3.019,1797,3.199,1798,2.484,1799,2.777,1800,3.199,1801,2.884,1802,3.199]],["component/23",[273,0.458]],["title/24",[602,34.574,630,37.865]],["name/24",[602,0.662,630,0.725]],["text/24",[1,2.379,3,2.613,7,3.676,27,2.21,36,4.266,58,1.474,80,1.575,83,3.172,91,1.88,102,1.845,113,2.282,114,1.303,123,3.046,126,1.753,135,2.021,150,4.383,151,1.815,159,3.207,181,1.916,194,1.403,242,1.782,258,3.281,301,2.18,314,2.457,318,2.77,324,1.546,355,1.303,361,1.726,387,2.095,392,2.069,396,1.916,400,2.282,449,2.457,460,1.88,468,2.044,476,3.551,487,2.408,502,1.782,579,3.451,602,4.963,618,2.282,619,2.572,627,2.095,630,6.285,634,2.639,683,2.021,729,2.021,757,1.862,786,2.572,881,2.15,882,2.363,890,2.18,952,4.898,954,2.717,967,2.807,973,4.211,1005,1.482,1147,2.246,1308,2.321,1355,1.916,1574,2.363,1663,2.457,1750,6.252,1752,2.457,1753,2.457,1758,2.916,1774,5.191,1775,5.17,1786,2.916,1803,3.234,1804,3.511,1805,3.511,1806,3.052,1807,2.807]],["component/24",[273,0.458]],["title/25",[150,32.595,1160,48.183]],["name/25",[602,0.662,973,0.752]],["text/25",[1,2.84,3,2.877,7,3.503,9,0.863,10,0.939,20,0.728,27,1.317,32,1.614,36,5.212,37,1.402,40,0.719,58,2.595,80,2.161,83,2.221,89,1.915,91,1.551,102,0.847,117,1.048,123,0.871,135,0.928,142,1.066,143,2.688,150,3.568,151,1.991,170,0.962,181,0.88,188,0.871,189,0.939,192,2.889,194,3.194,195,2.95,196,0.871,210,0.723,214,1.707,215,1.496,220,2.564,237,1.153,238,1.181,242,2.445,258,0.939,265,0.889,266,2.911,268,0.697,270,0.748,274,0.733,288,1.447,293,0.95,295,0.84,298,2.092,301,1.001,302,0.871,308,0.825,313,1.016,314,2.028,324,0.71,343,1.001,353,1.085,355,2.672,356,2.242,357,0.871,361,0.793,365,1.106,393,1.212,396,1.581,400,1.048,455,1.687,468,2.297,476,1.826,487,1.106,502,2.003,518,1.869,524,0.928,532,2.028,579,2.95,585,1.128,602,5.705,618,1.048,627,0.962,630,2.772,634,4.173,656,2.072,678,1.128,683,0.928,699,1.339,727,2.911,729,1.668,741,1.402,762,1.248,780,2.406,783,1.106,867,1.032,890,1.799,894,1.402,897,1.212,900,1.048,948,2.178,973,4.768,1005,3.218,1032,1.339,1224,1.248,1261,1.687,1308,1.066,1354,1.289,1355,0.88,1375,1.289,1423,1.248,1447,1.181,1574,1.95,1578,1.128,1663,1.128,1669,1.001,1688,1.485,1703,1.485,1713,2.518,1723,2.518,1750,3.035,1752,1.128,1753,1.128,1775,2.889,1786,1.339,1798,1.153,1806,1.402,1807,2.316,1808,1.402,1809,1.612,1810,1.612,1811,1.612,1812,1.612,1813,2.669,1814,1.612,1815,1.612,1816,1.612,1817,1.485,1818,1.485,1819,2.406,1820,2.316,1821,2.669,1822,1.612,1823,1.485,1824,1.612,1825,3.851,1826,1.402,1827,1.485,1828,1.612,1829,1.612,1830,1.612,1831,1.485]],["component/25",[273,0.458]],["title/26-1",[150,32.595,1760,50.906]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[630,37.865,1832,57.187]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26-3",[420,33.969,1261,38.306]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["title/26",[293,32.301,602,28.807,1288,40.146]],["name/26",[602,0.662,1288,0.923]],["text/26",[1,2.906,3,2.838,7,2.582,10,0.976,12,1.411,27,1.56,36,2.996,40,0.747,58,2.081,80,1.827,81,1.621,83,4.142,93,2.371,113,1.95,114,1.839,119,2.057,123,4.403,135,0.965,150,2.825,151,2.37,181,0.915,192,1.228,194,1.199,210,0.752,220,1.09,242,0.851,256,1.108,265,0.924,274,1.364,293,0.988,299,3.143,301,1.863,302,0.906,308,1.536,314,3.469,335,2.399,355,0.622,365,2.057,375,0.915,383,1.863,385,1.837,392,2.921,396,2.706,399,0.954,400,1.09,460,0.897,468,2.371,487,1.15,502,1.523,524,1.727,556,1.392,574,1.297,579,4.215,602,4.455,603,1.863,618,1.09,621,3.541,627,1,630,4.879,683,0.965,700,2.057,728,6.017,729,2.853,858,2.146,890,3.079,900,1.09,930,2.399,950,1.34,955,1.072,973,3.401,1005,2.093,1204,1.69,1237,4.263,1288,2.982,1355,0.915,1439,2.197,1489,5.442,1574,2.019,1669,1.041,1714,2.057,1750,3.124,1752,1.173,1753,1.173,1760,6.303,1762,3.539,1765,2.608,1771,1.544,1772,3.751,1775,2.982,1780,1.544,1782,3.751,1798,2.146,1801,1.392,1802,1.544,1832,8.07,1833,4.956,1834,5.883,1835,3.751,1836,3,1837,1.457,1838,2.399,1839,1.34,1840,1.457]],["component/26",[273,0.458]],["title/27",[602,34.574,733,40.292]],["name/27",[602,0.662,733,0.772]],["text/27",[1,3.991,3,3.367,7,4.425,12,2.209,23,2.257,27,1.933,36,4.271,58,1.18,73,2.309,80,1.261,83,3.978,91,1.505,93,1.637,114,1.043,123,1.52,126,1.404,135,1.618,150,4.683,151,2.737,181,1.535,194,2.418,301,1.746,314,1.968,355,2.245,371,2.735,373,2.839,385,1.722,392,1.657,396,1.535,399,2.673,400,1.828,432,1.535,463,1.828,468,1.637,476,2.96,487,1.928,502,1.427,524,1.618,546,3.053,579,3.705,602,5.597,618,1.828,627,1.677,630,5.652,634,4.548,683,1.618,700,1.928,727,1.699,729,3.482,733,4.328,762,2.176,843,3.36,867,1.799,890,1.746,973,3.609,1005,1.187,1308,3.999,1355,1.535,1574,1.892,1750,4.453,1752,1.968,1753,1.968,1760,3.635,1769,5.573,1776,5.573,1778,2.59,1798,2.011,1799,2.248,1800,2.59,1817,2.59,1841,2.811,1842,2.59]],["component/27",[273,0.458]],["title/28-1",[102,24.689,150,23.276,159,26.736,602,24.689]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[630,31.549,773,37.591,1750,34.538]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28-3",[23,26.343,948,41.204,1825,43.827]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["title/28-4",[1,27.778,159,37.442]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["title/28-5",[1,19.836,61,21.788,102,24.689,150,23.276]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["title/28-6",[1,17.355,61,19.063,150,20.364,579,25.173,630,23.657]],["name/28-6",[]],["text/28-6",[]],["component/28-6",[]],["title/28-7",[20,29.708,420,33.969]],["name/28-7",[]],["text/28-7",[]],["component/28-7",[]],["title/28",[102,24.689,159,26.736,602,24.689,630,27.038]],["name/28",[102,0.351,159,0.38,602,0.351,630,0.385]],["text/28",[1,3.809,3,3.068,12,0.784,20,0.753,23,3.727,27,1.877,58,2.385,61,1.385,62,1.253,73,0.82,80,2.215,84,0.971,102,3.605,103,0.846,114,2.108,117,1.941,135,0.96,138,0.96,150,4.19,151,2.498,159,2.307,181,0.91,194,3.099,210,0.748,226,0.839,258,2.361,270,2.635,272,0.919,288,0.833,301,3.067,302,0.901,308,2.528,313,1.881,314,3.975,346,2.387,355,1.832,371,2.361,383,1.035,384,0.854,391,0.919,392,3.347,396,3.101,400,1.084,428,1.253,430,0.893,432,0.91,468,2.875,486,1.143,487,1.143,502,0.846,518,1.414,532,2.089,558,2.595,564,1.221,577,2.595,579,3.479,590,1.29,602,4.741,604,0.901,618,1.084,627,0.995,630,5.959,645,1.63,683,0.96,699,2.48,733,1.021,773,2.048,832,1.051,858,1.193,890,3.528,938,1.449,948,5.157,963,1.167,973,5.222,991,1.333,1005,2.399,1216,1.021,1241,1.385,1261,0.971,1355,0.91,1423,2.31,1496,1.167,1574,4.249,1669,2.518,1750,5.328,1752,1.167,1753,1.167,1758,1.385,1775,1.221,1798,1.193,1801,1.385,1806,1.449,1823,1.536,1825,6.497,1826,2.595,1827,2.75,1838,1.333,1843,2.986,1844,2.986,1845,2.986,1846,1.667,1847,2.986]],["component/28",[273,0.458]],["title/29-1",[1542,54.375]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[148,35.557,504,49.454]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[0,39.758,1190,50.906]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[502,33.397,783,45.116]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29-5",[265,36.27,293,38.767]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["title/29-6",[42,49.075]],["name/29-6",[]],["text/29-6",[]],["component/29-6",[]],["title/29-7",[647,47.055,1134,43.489]],["name/29-7",[]],["text/29-7",[]],["component/29-7",[]],["title/29-8",[579,40.292,602,34.574]],["name/29-8",[]],["text/29-8",[]],["component/29-8",[]],["title/29-9",[964,63.648]],["name/29-9",[]],["text/29-9",[]],["component/29-9",[]],["title/29-10",[1,27.778,3,21.278]],["name/29-10",[]],["text/29-10",[]],["component/29-10",[]],["title/29-11",[1,27.778,107,30.305]],["name/29-11",[]],["text/29-11",[]],["component/29-11",[]],["title/29-12",[3,17.728,579,33.571,1751,43.827]],["name/29-12",[]],["text/29-12",[]],["component/29-12",[]],["title/29-13",[3,17.728,159,31.196,647,39.206]],["name/29-13",[]],["text/29-13",[]],["component/29-13",[]],["title/29-14",[1,27.778,108,32.094]],["name/29-14",[]],["text/29-14",[]],["component/29-14",[]],["title/29-15",[3,17.728,579,33.571,1751,43.827]],["name/29-15",[]],["text/29-15",[]],["component/29-15",[]],["title/29-16",[3,17.728,647,39.206,1134,36.235]],["name/29-16",[]],["text/29-16",[]],["component/29-16",[]],["title/29-17",[3,21.278,602,34.574]],["name/29-17",[]],["text/29-17",[]],["component/29-17",[]],["title/29-18",[545,49.454,1005,27.778]],["name/29-18",[]],["text/29-18",[]],["component/29-18",[]],["title/29",[42,39.25,602,34.574]],["name/29",[42,1.348]],["text/29",[1,0.505,3,0.387,7,2.902,9,0.64,10,1.789,12,0.563,13,1.031,16,1.334,23,0.575,27,1.763,30,3.412,32,3.103,36,4.12,58,0.927,59,1.833,68,0.837,69,1.205,70,1.15,80,0.99,81,3.259,82,0.805,83,1.243,88,0.956,90,0.629,93,0.697,99,0.926,106,0.66,113,0.778,117,0.778,123,0.647,124,2.087,135,0.689,136,1.459,137,0.994,138,1.27,142,0.791,143,1.488,148,0.647,150,4.487,154,0.612,156,0.743,159,0.681,168,1.659,170,3.017,181,0.653,189,1.789,193,0.733,194,0.478,198,0.805,214,2.639,215,1.974,219,0.653,225,1.04,242,1.121,248,0.743,257,0.791,262,1.256,268,0.517,270,0.555,290,1.193,293,3.283,295,1.15,307,0.805,308,1.957,328,0.673,344,0.765,348,0.837,355,3.294,357,2.066,364,0.82,367,0.926,384,0.612,400,0.778,402,0.926,415,0.754,420,1.14,429,0.837,432,2.087,450,0.856,452,1.765,457,0.791,460,0.64,462,0.653,470,1.459,472,0.765,487,0.82,502,1.941,507,1.545,545,0.899,547,0.926,550,0.856,555,0.681,569,1.04,579,3.412,580,0.754,588,0.899,590,2.958,602,5.009,603,0.743,609,0.926,617,0.856,618,0.778,627,0.714,628,1.102,630,4.119,647,2.735,656,2.198,669,0.82,682,1.334,683,0.689,699,3.175,700,2.108,720,2.672,727,0.723,728,0.926,733,0.733,734,1.435,748,0.856,783,1.514,811,0.899,848,0.899,867,0.765,882,3.403,905,0.856,927,0.956,935,0.926,948,1.659,949,0.956,954,0.926,964,1.708,979,0.994,985,0.791,1004,0.956,1005,0.932,1012,0.714,1029,0.837,1032,1.833,1134,2.032,1147,0.765,1216,0.733,1219,0.876,1224,1.708,1288,0.876,1323,0.994,1355,0.653,1377,0.994,1415,0.765,1438,0.994,1489,0.837,1496,0.837,1510,1.04,1542,0.791,1577,2.831,1584,0.956,1668,0.856,1669,0.743,1691,1.04,1692,1.04,1693,0.956,1699,1.04,1752,0.837,1753,0.837,1756,0.805,1760,2.378,1761,1.102,1786,1.833,1788,1.102,1792,1.102,1793,1.919,1807,0.956,1808,1.919,1819,2.552,1821,1.102,1825,0.956,1831,1.102,1833,1.919,1834,1.765,1848,0.956,1849,1.04,1850,1.196,1851,1.196,1852,1.196,1853,1.833,1854,3.057,1855,1.196,1856,2.672,1857,1.919,1858,0.994,1859,1.196,1860,1.196,1861,1.196,1862,0.876,1863,1.102,1864,0.994,1865,1.919,1866,0.994,1867,1.196,1868,0.956,1869,2.831,1870,1.196,1871,1.196,1872,1.833,1873,2.552,1874,1.196,1875,3.073,1876,1.196,1877,2.207,1878,2.207,1879,1.04,1880,1.196,1881,1.196,1882,1.196,1883,1.196,1884,2.207,1885,1.196,1886,1.196,1887,1.04,1888,2.831,1889,3.823,1890,1.04,1891,1.196,1892,1.196,1893,1.196,1894,1.102,1895,1.196,1896,1.196,1897,1.196,1898,1.196,1899,1.196,1900,1.196,1901,1.196,1902,1.196,1903,1.196,1904,1.196,1905,0.791,1906,1.196,1907,1.04]],["component/29",[273,0.458]],["title/30-1",[140,26.157,602,34.574]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[151,21.194,179,41.453]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30",[140,18.678,151,15.134,179,29.601,602,24.689]],["name/30",[140,0.266,151,0.215,179,0.421,602,0.351]],["text/30",[0,1.153,1,2.3,3,2.683,7,1.753,10,1.111,12,1.583,18,1.284,20,2.039,23,2.17,27,1.7,36,1.153,58,1.896,61,2.882,72,1.153,80,0.856,81,1.031,83,2.542,92,1.153,102,1.003,103,0.968,111,1.421,123,1.819,135,1.937,140,2.471,141,4.755,144,0.931,148,1.031,150,2.237,151,2.21,179,3.916,181,1.041,189,1.111,194,1.805,234,3.665,242,0.968,265,3.002,268,0.825,270,1.561,288,0.953,293,2.661,301,1.185,308,0.977,314,1.335,324,1.988,326,1.168,328,1.074,355,1.675,375,1.837,392,1.124,396,1.041,397,4.094,400,1.24,415,1.202,431,1.003,432,1.837,463,1.24,468,1.111,472,1.221,476,1.202,478,1.24,487,1.308,502,0.968,507,1.335,546,2.188,563,1.476,567,1.124,574,2.604,577,7.21,579,4.201,602,5.791,604,1.031,617,1.365,618,1.24,627,1.138,630,3.948,631,1.476,642,1.434,645,1.041,656,1.365,670,1.308,683,1.098,700,2.308,863,1.476,866,2.53,867,2.889,881,1.168,890,1.185,948,1.434,952,1.658,973,2.008,1005,2.3,1204,0.792,1230,1.168,1258,1.525,1288,2.465,1355,1.041,1427,1.525,1428,1.584,1547,1.365,1574,1.284,1670,1.584,1750,3.916,1751,1.525,1752,1.335,1753,1.335,1756,1.284,1760,1.476,1768,1.476,1775,1.397,1777,1.757,1801,1.584,1819,1.584,1825,1.525,1833,1.658,1834,2.691,1835,4.16,1908,1.908,1909,1.584,1910,1.908,1911,1.908,1912,1.908,1913,1.525,1914,1.908,1915,1.434,1916,1.908,1917,1.908,1918,1.908,1919,1.908,1920,1.908,1921,1.908,1922,1.908,1923,1.908,1924,3.365,1925,1.525,1926,1.908,1927,1.908,1928,1.908,1929,1.908]],["component/30",[273,0.458]],["title/31",[630,31.549,1668,39.206,1750,34.538]],["name/31",[630,0.503,1668,0.625,1750,0.55]],["text/31",[1,2.491,3,2.87,7,2.376,10,1.581,27,1.614,36,2.757,40,1.211,58,1.14,80,1.218,83,2.568,91,1.454,93,1.581,113,1.765,114,1.008,123,3.189,126,1.356,135,1.563,138,1.563,150,4.136,151,1.901,181,1.482,194,1.085,210,1.218,258,3.435,265,1.497,270,2.736,299,2.515,301,1.686,302,2.466,308,1.39,314,1.9,316,1.765,355,1.008,361,1.335,371,1.581,384,1.39,385,1.663,391,1.497,392,1.6,396,1.482,399,2.597,400,1.765,404,1.563,432,1.482,449,1.9,463,2.966,468,1.581,476,2.875,487,1.862,502,1.378,564,1.989,579,3.613,602,4.663,618,1.765,625,3.53,627,1.62,630,6.186,678,1.9,682,1.641,683,1.563,729,1.563,867,1.737,890,1.686,923,1.686,960,2.255,973,4.125,1005,1.147,1355,1.482,1511,1.765,1574,1.827,1668,6.661,1690,1.942,1750,7.1,1752,1.9,1753,1.9,1765,2.36,1775,4.321,1783,4.203,1784,1.795,1785,2.501,1798,1.942,1807,3.648,1832,5.129,1834,2.171,1838,2.171,1842,4.203,1930,4.435,1931,2.255,1932,2.715,1933,2.715]],["component/31",[273,0.458]],["title/32-1",[76,33.969,420,33.969]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32",[7,28.551,318,26.947,1934,33.126]],["name/32",[7,0.656,318,0.619]],["text/32",[7,4.247,151,2.627,188,4.407,252,5.217,288,4.072,302,4.407,326,4.994,435,6.772,474,6.13,476,5.138,486,5.592,726,5.39,1934,7.26,1935,6.444,1936,7.088,1937,6.772]],["component/32",[273,0.458]],["title/33-1",[159,31.196,996,42.414,1934,33.126]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[1189,52.601,1935,40.856]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33-3",[3,17.728,518,25.963,1938,45.523]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["title/33-4",[431,28.807,1189,43.827,1935,34.041]],["name/33-4",[]],["text/33-4",[]],["component/33-4",[]],["title/33-5",[14,37.865,1905,43.489]],["name/33-5",[]],["text/33-5",[]],["component/33-5",[]],["title/33-6",[76,33.969,420,33.969]],["name/33-6",[]],["text/33-6",[]],["component/33-6",[]],["title/33",[302,35.557,1934,39.758]],["name/33",[302,1.221]],["text/33",[1,2.653,3,3.416,7,5.007,8,1.061,12,0.601,13,1.096,14,2.319,23,0.614,27,1.287,30,0.783,36,0.772,38,1.642,40,0.57,41,1.177,52,1.35,58,1.365,69,1.775,70,2.099,73,0.628,77,0.936,84,0.744,92,0.772,93,0.744,96,0.831,107,3.086,108,2.839,110,0.678,115,0.818,116,1.177,117,0.831,122,1.307,128,0.961,131,0.936,133,0.753,143,0.619,151,2.663,157,0.614,159,1.335,164,1.586,170,1.94,176,0.753,181,0.698,188,3.824,194,1.3,204,1.111,217,0.831,219,0.698,221,1.609,242,0.649,244,0.961,247,0.894,258,0.744,263,0.772,265,0.705,267,0.86,270,0.593,271,2.404,288,1.172,290,0.691,298,1.725,307,2.188,311,0.549,312,0.818,313,0.805,318,1.153,323,0.877,324,2.071,326,0.783,342,0.72,369,1.022,371,1.893,373,0.772,374,0.585,375,0.698,399,0.727,402,0.989,424,0.989,431,0.672,443,0.961,447,0.894,457,0.845,459,0.877,462,0.698,473,0.736,484,1.022,548,1.061,552,1.111,581,1.061,584,1.111,602,1.233,612,2.995,617,0.914,639,0.894,645,1.28,654,0.961,655,0.914,656,0.914,682,0.772,683,0.736,697,1.022,700,0.877,724,0.877,749,1.022,771,1.876,790,1.111,793,2.161,872,1.061,882,0.86,900,1.525,954,0.989,973,0.763,982,1.876,996,1.815,1001,1.177,1005,0.54,1012,1.94,1128,0.783,1170,1.061,1189,3.222,1197,0.989,1205,0.763,1287,0.877,1289,1.061,1296,1.022,1299,0.831,1385,1.948,1415,3.722,1439,0.936,1440,0.961,1511,0.831,1739,1.022,1750,0.805,1763,1.022,1854,1.022,1862,1.718,1863,1.177,1905,2.664,1925,1.022,1934,5.617,1935,6.144,1937,1.948,1938,2.701,1939,4.162,1940,1.177,1941,1.177,1942,3.981,1943,1.876,1944,2.039,1945,1.278,1946,1.177,1947,1.278,1948,1.177,1949,1.278,1950,1.278,1951,1.278,1952,1.278,1953,1.278,1954,1.278,1955,1.278,1956,3.471,1957,1.061,1958,1.278,1959,2.161,1960,2.346,1961,1.177,1962,1.278,1963,1.278,1964,1.278,1965,1.177,1966,2.346,1967,1.278,1968,1.278,1969,1.278,1970,3.761,1971,4.029,1972,1.278,1973,1.278,1974,1.278,1975,1.278,1976,1.948,1977,4.029,1978,1.278,1979,1.278,1980,2.346,1981,1.278,1982,1.278,1983,1.278,1984,1.177,1985,1.177,1986,1.278,1987,1.278,1988,1.278,1989,1.278,1990,1.278,1991,1.278,1992,2.346,1993,1.278,1994,1.278,1995,1.177,1996,1.278,1997,1.278,1998,1.022,1999,1.022]],["component/33",[273,0.458]],["title/34-1",[76,33.969,420,33.969]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["title/34",[138,31.549,154,28.061,1956,32.703]],["name/34",[574,0.676,1925,0.698,1935,0.542]],["text/34",[3,2.436,73,1.905,92,2.342,103,1.967,105,3.175,107,3.934,108,4.166,122,2.159,126,1.935,151,3.54,154,3.856,191,1.984,194,2.436,290,3.294,295,2.018,298,3.232,324,1.706,345,2.913,353,2.608,385,2.373,387,4.494,410,2.407,420,3.147,449,2.712,518,1.835,574,4.716,670,2.658,673,2.608,678,2.712,682,5.611,729,3.508,955,2.479,959,4.716,1204,2.53,1251,4.101,1253,4.464,1447,2.838,1784,2.562,1930,2.913,1956,6.711,2000,3.57,2001,8.57,2002,3.098,2003,2.608,2004,3.57,2005,8.57,2006,3.57,2007,3.218,2008,3.369,2009,5.298,2010,3.369]],["component/34",[273,0.458]],["title/35-1",[76,33.969,420,33.969]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["title/35",[1956,39.25,2011,48.183]],["name/35",[1956,0.752,2011,0.923]],["text/35",[40,1.728,73,2.996,81,3.294,83,2.182,84,2.256,93,2.256,107,1.785,108,3.675,123,2.094,138,3.508,151,2.751,176,2.284,187,4.265,288,3.044,298,2.055,301,2.407,387,3.636,399,2.206,432,2.115,682,5.161,696,3.218,769,2.772,846,4.819,881,4.613,998,2.772,1166,2.772,1237,5.069,1254,4.716,1301,2.772,1305,4.101,1332,2.999,1343,3.218,1576,2.407,1663,4.265,1854,6.828,1934,5.611,1956,6.842,2011,7.825,2012,3.57,2013,3.369,2014,3.57,2015,3.57,2016,3.369,2017,3.369,2018,7.093,2019,3.218,2020,5.614,2021,5.298,2022,7.424,2023,3.218,2024,3.57]],["component/35",[273,0.458]],["title/36",[682,33.126,1934,33.126,1956,32.703]],["name/36",[1956,1.348]],["text/36",[1,4.059,3,2.014,6,2.427,7,4.784,20,1.322,27,1.329,30,1.793,32,1.631,38,2.049,40,2.166,57,1.873,58,2.04,80,2.18,82,1.97,83,4.526,103,1.486,104,1.598,105,1.525,107,3.994,108,4.481,110,3.303,114,1.086,123,1.583,140,1.164,141,1.462,142,1.936,151,2.335,180,2.765,194,2.897,210,1.314,242,2.467,261,2.341,263,1.77,274,1.331,290,1.583,299,1.614,301,1.819,324,2.139,355,1.803,468,2.829,476,3.924,518,1.387,606,3.212,678,2.049,682,4.381,706,3.108,729,4.99,865,2.049,973,4.796,1040,2.341,1245,2.432,1253,2.145,1534,5.414,1578,2.049,1663,2.049,1714,2.008,1798,2.094,1934,4.858,1935,3.868,1942,2.201,1956,6.667,1957,4.035,1959,2.697,2025,2.545,2026,2.432,2027,2.266,2028,2.697,2029,2.928,2030,2.266,2031,3.76,2032,2.341,2033,2.697]],["component/36",[273,0.458]],["title/37",[6,27.375,398,36.235,1934,33.126]],["name/37",[6,0.629,398,0.833]],["text/37",[6,5.767,20,2.96,40,2.922,58,2.752,76,3.385,105,4.679,107,4.72,108,4.382,114,3.802,151,2.112,194,2.62,210,2.941,259,4.689,274,2.98,355,3.333,398,6.774,420,3.385,444,4.587,1819,5.444,1934,3.962,1936,5.698,1956,3.911,2034,7.808,2035,7.808]],["component/37",[273,0.458]],["title/38-1",[107,25.25,151,17.659,288,27.375]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[1956,49.075]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38-3",[79,34.338]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["title/38-4",[2036,52.622]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["title/38-5",[111,27.778,2037,36.645]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["title/38-6",[1005,34.731]],["name/38-6",[]],["text/38-6",[]],["component/38-6",[]],["title/38-7",[1204,34.145]],["name/38-7",[]],["text/38-7",[]],["component/38-7",[]],["title/38-8",[140,26.157,141,32.855]],["name/38-8",[]],["text/38-8",[]],["component/38-8",[]],["title/38-9",[140,21.794,151,17.659,347,24.915]],["name/38-9",[]],["text/38-9",[]],["component/38-9",[]],["title/38-10",[2021,71.502]],["name/38-10",[]],["text/38-10",[]],["component/38-10",[]],["title/38-11",[79,34.338]],["name/38-11",[]],["text/38-11",[]],["component/38-11",[]],["title/38-12",[2036,52.622]],["name/38-12",[]],["text/38-12",[]],["component/38-12",[]],["title/38-13",[111,27.778,2037,36.645]],["name/38-13",[]],["text/38-13",[]],["component/38-13",[]],["title/38-14",[1005,34.731]],["name/38-14",[]],["text/38-14",[]],["component/38-14",[]],["title/38-15",[1204,34.145]],["name/38-15",[]],["text/38-15",[]],["component/38-15",[]],["title/38-16",[140,26.157,141,32.855]],["name/38-16",[]],["text/38-16",[]],["component/38-16",[]],["title/38-17",[140,21.794,151,17.659,347,24.915]],["name/38-17",[]],["text/38-17",[]],["component/38-17",[]],["title/38-18",[2022,71.502]],["name/38-18",[]],["text/38-18",[]],["component/38-18",[]],["title/38-19",[79,34.338]],["name/38-19",[]],["text/38-19",[]],["component/38-19",[]],["title/38-20",[2036,52.622]],["name/38-20",[]],["text/38-20",[]],["component/38-20",[]],["title/38-21",[111,27.778,2037,36.645]],["name/38-21",[]],["text/38-21",[]],["component/38-21",[]],["title/38-22",[1005,34.731]],["name/38-22",[]],["text/38-22",[]],["component/38-22",[]],["title/38-23",[1204,34.145]],["name/38-23",[]],["text/38-23",[]],["component/38-23",[]],["title/38-24",[140,26.157,141,32.855]],["name/38-24",[]],["text/38-24",[]],["component/38-24",[]],["title/38-25",[140,21.794,151,17.659,347,24.915]],["name/38-25",[]],["text/38-25",[]],["component/38-25",[]],["title/38-26",[40,36.67]],["name/38-26",[]],["text/38-26",[]],["component/38-26",[]],["title/38-27",[2001,71.502]],["name/38-27",[]],["text/38-27",[]],["component/38-27",[]],["title/38-28",[79,34.338]],["name/38-28",[]],["text/38-28",[]],["component/38-28",[]],["title/38-29",[2036,52.622]],["name/38-29",[]],["text/38-29",[]],["component/38-29",[]],["title/38-30",[111,27.778,2037,36.645]],["name/38-30",[]],["text/38-30",[]],["component/38-30",[]],["title/38-31",[1005,34.731]],["name/38-31",[]],["text/38-31",[]],["component/38-31",[]],["title/38-32",[1204,34.145]],["name/38-32",[]],["text/38-32",[]],["component/38-32",[]],["title/38-33",[140,26.157,141,32.855]],["name/38-33",[]],["text/38-33",[]],["component/38-33",[]],["title/38-34",[140,21.794,151,17.659,347,24.915]],["name/38-34",[]],["text/38-34",[]],["component/38-34",[]],["title/38-35",[2009,71.502]],["name/38-35",[]],["text/38-35",[]],["component/38-35",[]],["title/38-36",[79,34.338]],["name/38-36",[]],["text/38-36",[]],["component/38-36",[]],["title/38-37",[2036,52.622]],["name/38-37",[]],["text/38-37",[]],["component/38-37",[]],["title/38-38",[111,27.778,2037,36.645]],["name/38-38",[]],["text/38-38",[]],["component/38-38",[]],["title/38-39",[1005,34.731]],["name/38-39",[]],["text/38-39",[]],["component/38-39",[]],["title/38-40",[1204,34.145]],["name/38-40",[]],["text/38-40",[]],["component/38-40",[]],["title/38-41",[140,26.157,141,32.855]],["name/38-41",[]],["text/38-41",[]],["component/38-41",[]],["title/38-42",[140,21.794,151,17.659,347,24.915]],["name/38-42",[]],["text/38-42",[]],["component/38-42",[]],["title/38-43",[40,36.67]],["name/38-43",[]],["text/38-43",[]],["component/38-43",[]],["title/38-44",[2010,71.502]],["name/38-44",[]],["text/38-44",[]],["component/38-44",[]],["title/38-45",[79,34.338]],["name/38-45",[]],["text/38-45",[]],["component/38-45",[]],["title/38-46",[2036,52.622]],["name/38-46",[]],["text/38-46",[]],["component/38-46",[]],["title/38-47",[111,27.778,2037,36.645]],["name/38-47",[]],["text/38-47",[]],["component/38-47",[]],["title/38-48",[1005,34.731]],["name/38-48",[]],["text/38-48",[]],["component/38-48",[]],["title/38-49",[1204,34.145]],["name/38-49",[]],["text/38-49",[]],["component/38-49",[]],["title/38-50",[140,26.157,141,32.855]],["name/38-50",[]],["text/38-50",[]],["component/38-50",[]],["title/38-51",[140,21.794,151,17.659,347,24.915]],["name/38-51",[]],["text/38-51",[]],["component/38-51",[]],["title/38-52",[40,36.67]],["name/38-52",[]],["text/38-52",[]],["component/38-52",[]],["title/38-53",[1937,68.313]],["name/38-53",[]],["text/38-53",[]],["component/38-53",[]],["title/38-54",[79,34.338]],["name/38-54",[]],["text/38-54",[]],["component/38-54",[]],["title/38-55",[2036,52.622]],["name/38-55",[]],["text/38-55",[]],["component/38-55",[]],["title/38-56",[111,27.778,2037,36.645]],["name/38-56",[]],["text/38-56",[]],["component/38-56",[]],["title/38-57",[1005,34.731]],["name/38-57",[]],["text/38-57",[]],["component/38-57",[]],["title/38-58",[1204,34.145]],["name/38-58",[]],["text/38-58",[]],["component/38-58",[]],["title/38-59",[140,26.157,141,32.855]],["name/38-59",[]],["text/38-59",[]],["component/38-59",[]],["title/38-60",[140,21.794,151,17.659,347,24.915]],["name/38-60",[]],["text/38-60",[]],["component/38-60",[]],["title/38-61",[2034,71.502]],["name/38-61",[]],["text/38-61",[]],["component/38-61",[]],["title/38-62",[79,34.338]],["name/38-62",[]],["text/38-62",[]],["component/38-62",[]],["title/38-63",[2036,52.622]],["name/38-63",[]],["text/38-63",[]],["component/38-63",[]],["title/38-64",[111,27.778,2037,36.645]],["name/38-64",[]],["text/38-64",[]],["component/38-64",[]],["title/38-65",[1005,34.731]],["name/38-65",[]],["text/38-65",[]],["component/38-65",[]],["title/38-66",[1204,34.145]],["name/38-66",[]],["text/38-66",[]],["component/38-66",[]],["title/38-67",[140,26.157,141,32.855]],["name/38-67",[]],["text/38-67",[]],["component/38-67",[]],["title/38-68",[151,21.194,347,29.903]],["name/38-68",[]],["text/38-68",[]],["component/38-68",[]],["title/38-69",[76,33.969,420,33.969]],["name/38-69",[]],["text/38-69",[]],["component/38-69",[]],["title/38-70",[2035,71.502]],["name/38-70",[]],["text/38-70",[]],["component/38-70",[]],["title/38-71",[79,34.338]],["name/38-71",[]],["text/38-71",[]],["component/38-71",[]],["title/38-72",[2036,52.622]],["name/38-72",[]],["text/38-72",[]],["component/38-72",[]],["title/38-73",[111,27.778,2037,36.645]],["name/38-73",[]],["text/38-73",[]],["component/38-73",[]],["title/38-74",[1005,34.731]],["name/38-74",[]],["text/38-74",[]],["component/38-74",[]],["title/38-75",[1204,34.145]],["name/38-75",[]],["text/38-75",[]],["component/38-75",[]],["title/38-76",[140,26.157,141,32.855]],["name/38-76",[]],["text/38-76",[]],["component/38-76",[]],["title/38-77",[151,21.194,347,29.903]],["name/38-77",[]],["text/38-77",[]],["component/38-77",[]],["title/38-78",[76,33.969,420,33.969]],["name/38-78",[]],["text/38-78",[]],["component/38-78",[]],["title/38-79",[1944,71.502]],["name/38-79",[]],["text/38-79",[]],["component/38-79",[]],["title/38-80",[79,34.338]],["name/38-80",[]],["text/38-80",[]],["component/38-80",[]],["title/38-81",[2036,52.622]],["name/38-81",[]],["text/38-81",[]],["component/38-81",[]],["title/38-82",[111,27.778,2037,36.645]],["name/38-82",[]],["text/38-82",[]],["component/38-82",[]],["title/38-83",[1005,34.731]],["name/38-83",[]],["text/38-83",[]],["component/38-83",[]],["title/38-84",[1204,34.145]],["name/38-84",[]],["text/38-84",[]],["component/38-84",[]],["title/38-85",[140,26.157,141,32.855]],["name/38-85",[]],["text/38-85",[]],["component/38-85",[]],["title/38-86",[151,21.194,347,29.903]],["name/38-86",[]],["text/38-86",[]],["component/38-86",[]],["title/38-87",[2038,75.77]],["name/38-87",[]],["text/38-87",[]],["component/38-87",[]],["title/38-88",[79,34.338]],["name/38-88",[]],["text/38-88",[]],["component/38-88",[]],["title/38-89",[2036,52.622]],["name/38-89",[]],["text/38-89",[]],["component/38-89",[]],["title/38-90",[111,27.778,2037,36.645]],["name/38-90",[]],["text/38-90",[]],["component/38-90",[]],["title/38-91",[1005,34.731]],["name/38-91",[]],["text/38-91",[]],["component/38-91",[]],["title/38-92",[1204,34.145]],["name/38-92",[]],["text/38-92",[]],["component/38-92",[]],["title/38-93",[140,26.157,141,32.855]],["name/38-93",[]],["text/38-93",[]],["component/38-93",[]],["title/38-94",[151,21.194,347,29.903]],["name/38-94",[]],["text/38-94",[]],["component/38-94",[]],["title/38-95",[2039,75.77]],["name/38-95",[]],["text/38-95",[]],["component/38-95",[]],["title/38-96",[79,34.338]],["name/38-96",[]],["text/38-96",[]],["component/38-96",[]],["title/38-97",[2036,52.622]],["name/38-97",[]],["text/38-97",[]],["component/38-97",[]],["title/38-98",[111,27.778,2037,36.645]],["name/38-98",[]],["text/38-98",[]],["component/38-98",[]],["title/38-99",[1005,34.731]],["name/38-99",[]],["text/38-99",[]],["component/38-99",[]],["title/38-100",[1204,34.145]],["name/38-100",[]],["text/38-100",[]],["component/38-100",[]],["title/38-101",[140,26.157,141,32.855]],["name/38-101",[]],["text/38-101",[]],["component/38-101",[]],["title/38-102",[151,21.194,347,29.903]],["name/38-102",[]],["text/38-102",[]],["component/38-102",[]],["title/38-103",[2040,75.77]],["name/38-103",[]],["text/38-103",[]],["component/38-103",[]],["title/38-104",[79,34.338]],["name/38-104",[]],["text/38-104",[]],["component/38-104",[]],["title/38-105",[2036,52.622]],["name/38-105",[]],["text/38-105",[]],["component/38-105",[]],["title/38-106",[111,27.778,2037,36.645]],["name/38-106",[]],["text/38-106",[]],["component/38-106",[]],["title/38-107",[1005,34.731]],["name/38-107",[]],["text/38-107",[]],["component/38-107",[]],["title/38-108",[1204,34.145]],["name/38-108",[]],["text/38-108",[]],["component/38-108",[]],["title/38-109",[140,26.157,141,32.855]],["name/38-109",[]],["text/38-109",[]],["component/38-109",[]],["title/38-110",[151,21.194,347,29.903]],["name/38-110",[]],["text/38-110",[]],["component/38-110",[]],["title/38-111",[310,51.083]],["name/38-111",[]],["text/38-111",[]],["component/38-111",[]],["title/38-112",[79,34.338]],["name/38-112",[]],["text/38-112",[]],["component/38-112",[]],["title/38-113",[2036,52.622]],["name/38-113",[]],["text/38-113",[]],["component/38-113",[]],["title/38-114",[111,27.778,2037,36.645]],["name/38-114",[]],["text/38-114",[]],["component/38-114",[]],["title/38-115",[1005,34.731]],["name/38-115",[]],["text/38-115",[]],["component/38-115",[]],["title/38-116",[1204,34.145]],["name/38-116",[]],["text/38-116",[]],["component/38-116",[]],["title/38-117",[140,26.157,141,32.855]],["name/38-117",[]],["text/38-117",[]],["component/38-117",[]],["title/38-118",[151,21.194,347,29.903]],["name/38-118",[]],["text/38-118",[]],["component/38-118",[]],["title/38-119",[2041,75.77]],["name/38-119",[]],["text/38-119",[]],["component/38-119",[]],["title/38-120",[79,34.338]],["name/38-120",[]],["text/38-120",[]],["component/38-120",[]],["title/38-121",[2036,52.622]],["name/38-121",[]],["text/38-121",[]],["component/38-121",[]],["title/38-122",[111,27.778,2037,36.645]],["name/38-122",[]],["text/38-122",[]],["component/38-122",[]],["title/38-123",[1005,34.731]],["name/38-123",[]],["text/38-123",[]],["component/38-123",[]],["title/38-124",[1204,34.145]],["name/38-124",[]],["text/38-124",[]],["component/38-124",[]],["title/38-125",[140,26.157,141,32.855]],["name/38-125",[]],["text/38-125",[]],["component/38-125",[]],["title/38-126",[151,21.194,347,29.903]],["name/38-126",[]],["text/38-126",[]],["component/38-126",[]],["title/38-127",[1905,54.375]],["name/38-127",[]],["text/38-127",[]],["component/38-127",[]],["title/38-128",[79,34.338]],["name/38-128",[]],["text/38-128",[]],["component/38-128",[]],["title/38-129",[1005,34.731]],["name/38-129",[]],["text/38-129",[]],["component/38-129",[]],["title/38-130",[111,27.778,2037,36.645]],["name/38-130",[]],["text/38-130",[]],["component/38-130",[]],["title/38-131",[1204,34.145]],["name/38-131",[]],["text/38-131",[]],["component/38-131",[]],["title/38-132",[140,26.157,141,32.855]],["name/38-132",[]],["text/38-132",[]],["component/38-132",[]],["title/38-133",[140,21.794,151,17.659,347,24.915]],["name/38-133",[]],["text/38-133",[]],["component/38-133",[]],["title/38-134",[108,26.741,151,17.659,288,27.375]],["name/38-134",[]],["text/38-134",[]],["component/38-134",[]],["title/38-135",[2042,75.77]],["name/38-135",[]],["text/38-135",[]],["component/38-135",[]],["title/38-136",[79,34.338]],["name/38-136",[]],["text/38-136",[]],["component/38-136",[]],["title/38-137",[1005,34.731]],["name/38-137",[]],["text/38-137",[]],["component/38-137",[]],["title/38-138",[1204,34.145]],["name/38-138",[]],["text/38-138",[]],["component/38-138",[]],["title/38-139",[151,21.194,347,29.903]],["name/38-139",[]],["text/38-139",[]],["component/38-139",[]],["title/38-140",[2043,75.77]],["name/38-140",[]],["text/38-140",[]],["component/38-140",[]],["title/38-141",[79,34.338]],["name/38-141",[]],["text/38-141",[]],["component/38-141",[]],["title/38-142",[1005,34.731]],["name/38-142",[]],["text/38-142",[]],["component/38-142",[]],["title/38-143",[1204,34.145]],["name/38-143",[]],["text/38-143",[]],["component/38-143",[]],["title/38-144",[151,21.194,347,29.903]],["name/38-144",[]],["text/38-144",[]],["component/38-144",[]],["title/38-145",[2044,75.77]],["name/38-145",[]],["text/38-145",[]],["component/38-145",[]],["title/38-146",[79,34.338]],["name/38-146",[]],["text/38-146",[]],["component/38-146",[]],["title/38-147",[1005,34.731]],["name/38-147",[]],["text/38-147",[]],["component/38-147",[]],["title/38-148",[1204,34.145]],["name/38-148",[]],["text/38-148",[]],["component/38-148",[]],["title/38-149",[151,21.194,347,29.903]],["name/38-149",[]],["text/38-149",[]],["component/38-149",[]],["title/38-150",[2045,75.77]],["name/38-150",[]],["text/38-150",[]],["component/38-150",[]],["title/38-151",[79,34.338]],["name/38-151",[]],["text/38-151",[]],["component/38-151",[]],["title/38-152",[1005,34.731]],["name/38-152",[]],["text/38-152",[]],["component/38-152",[]],["title/38-153",[1204,34.145]],["name/38-153",[]],["text/38-153",[]],["component/38-153",[]],["title/38-154",[151,21.194,347,29.903]],["name/38-154",[]],["text/38-154",[]],["component/38-154",[]],["title/38-155",[2046,75.77]],["name/38-155",[]],["text/38-155",[]],["component/38-155",[]],["title/38-156",[79,34.338]],["name/38-156",[]],["text/38-156",[]],["component/38-156",[]],["title/38-157",[1005,34.731]],["name/38-157",[]],["text/38-157",[]],["component/38-157",[]],["title/38-158",[1204,34.145]],["name/38-158",[]],["text/38-158",[]],["component/38-158",[]],["title/38-159",[151,21.194,347,29.903]],["name/38-159",[]],["text/38-159",[]],["component/38-159",[]],["title/38-160",[2047,75.77]],["name/38-160",[]],["text/38-160",[]],["component/38-160",[]],["title/38-161",[79,34.338]],["name/38-161",[]],["text/38-161",[]],["component/38-161",[]],["title/38-162",[1005,34.731]],["name/38-162",[]],["text/38-162",[]],["component/38-162",[]],["title/38-163",[1204,34.145]],["name/38-163",[]],["text/38-163",[]],["component/38-163",[]],["title/38-164",[151,21.194,347,29.903]],["name/38-164",[]],["text/38-164",[]],["component/38-164",[]],["title/38-165",[2048,68.313]],["name/38-165",[]],["text/38-165",[]],["component/38-165",[]],["title/38-166",[79,34.338]],["name/38-166",[]],["text/38-166",[]],["component/38-166",[]],["title/38-167",[1005,34.731]],["name/38-167",[]],["text/38-167",[]],["component/38-167",[]],["title/38-168",[1204,34.145]],["name/38-168",[]],["text/38-168",[]],["component/38-168",[]],["title/38-169",[151,21.194,347,29.903]],["name/38-169",[]],["text/38-169",[]],["component/38-169",[]],["title/38-170",[2005,71.502]],["name/38-170",[]],["text/38-170",[]],["component/38-170",[]],["title/38-171",[79,34.338]],["name/38-171",[]],["text/38-171",[]],["component/38-171",[]],["title/38-172",[1005,34.731]],["name/38-172",[]],["text/38-172",[]],["component/38-172",[]],["title/38-173",[1204,34.145]],["name/38-173",[]],["text/38-173",[]],["component/38-173",[]],["title/38-174",[151,21.194,347,29.903]],["name/38-174",[]],["text/38-174",[]],["component/38-174",[]],["title/38",[140,18.678,151,15.134,288,23.461,1934,28.39]],["name/38",[151,0.406,288,0.629]],["text/38",[1,4.523,2,0.252,3,3.18,6,1.452,7,5.141,12,1.243,13,0.971,18,0.265,20,0.178,23,0.369,27,0.795,40,0.5,42,0.235,58,0.746,61,0.183,69,0.795,73,1.164,79,0.165,80,0.503,81,0.96,83,4.274,84,0.447,85,0.289,92,1.073,102,0.207,103,0.39,104,0.969,105,2.694,106,0.217,107,2.854,108,3.568,110,0.209,114,1.583,126,0.56,133,0.232,139,0.227,140,1.92,141,0.197,143,0.372,146,0.232,151,2.675,154,0.746,157,0.19,159,0.638,164,1.29,176,0.859,181,0.215,186,0.47,187,0.785,191,0.746,194,2.067,196,0.606,200,0.289,205,0.282,216,0.217,217,1.54,244,0.297,247,0.276,257,0.261,263,0.464,268,1.024,270,1.226,274,1.077,288,0.383,290,0.788,295,1.377,298,0.407,299,0.618,310,0.477,311,1.136,317,0.297,323,0.527,324,0.782,326,0.47,334,0.265,340,0.315,343,2.391,353,0.98,365,0.271,371,0.653,373,0.464,374,0.667,375,1.135,383,0.245,384,0.202,385,0.687,387,1.413,391,0.217,393,0.577,396,1.293,397,0.297,398,0.963,410,0.245,415,0.249,416,0.343,417,0.755,429,0.276,430,0.411,431,0.589,441,0.249,449,0.276,453,0.594,458,0.39,462,0.215,468,0.23,472,3.309,473,0.227,476,0.249,492,0.289,493,0.363,502,0.2,518,0.187,524,1.818,544,0.261,546,0.256,562,0.297,563,0.305,564,0.289,567,0.661,574,0.594,604,0.96,616,0.363,639,0.276,645,0.969,656,0.549,673,0.265,678,0.537,682,2.455,719,0.305,728,1.127,729,1.363,757,0.209,769,0.282,832,0.249,838,0.363,846,0.491,865,1.85,867,0.252,881,1.619,900,0.256,955,0.717,959,0.868,976,0.614,987,0.265,996,1.609,1005,0.324,1009,2.87,1166,0.282,1170,0.328,1175,0.256,1177,0.256,1204,2.147,1208,3.168,1219,3.665,1226,0.491,1230,0.242,1237,0.755,1251,0.517,1252,1.624,1253,4.538,1254,0.305,1301,0.282,1305,0.265,1415,3.309,1440,0.297,1447,1.067,1511,0.256,1564,0.769,1576,0.245,1652,1.657,1656,0.305,1663,0.537,1690,1.042,1770,0.328,1781,0.363,1784,0.508,1839,0.614,1848,0.315,1854,1.165,1905,2.399,1934,3.896,1935,4.601,1936,1.267,1937,1.475,1939,3.699,1940,3.929,1941,1.033,1942,0.297,1943,0.315,1944,0.667,1946,0.363,1956,5.332,2001,3.531,2004,0.707,2005,3.708,2006,0.707,2008,0.343,2009,2.298,2010,0.975,2011,2.129,2013,0.343,2015,0.363,2016,0.343,2017,0.343,2018,1.21,2020,1.033,2021,2.746,2022,2.059,2024,0.363,2027,0.594,2031,6.314,2033,3.343,2034,0.343,2035,0.343,2038,0.363,2039,0.707,2040,0.707,2041,0.707,2042,1.033,2043,0.707,2044,0.707,2045,0.707,2046,0.707,2047,0.707,2048,0.931,2049,0.394,2050,1.121,2051,0.394,2052,0.768,2053,0.768,2054,0.768,2055,2.368,2056,0.638,2057,0.394,2058,0.638,2059,0.975,2060,5.03,2061,1.776,2062,1.915,2063,0.297,2064,0.394,2065,0.577,2066,0.394,2067,0.394,2068,0.768,2069,1.21,2070,1.121,2071,0.394,2072,0.707,2073,0.394,2074,0.282,2075,0.363,2076,0.707,2077,0.328,2078,0.363,2079,0.802,2080,1.267,2081,0.394,2082,0.868,2083,0.707,2084,0.394,2085,0.297,2086,0.394,2087,0.343,2088,0.305,2089,0.343,2090,0.343,2091,0.363,2092,0.394,2093,0.328,2094,0.394,2095,0.394]],["component/38",[273,0.458]],["title/39-1",[1,27.778,1934,39.758]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["title/39-2",[7,28.551,188,29.626,1934,33.126]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["title/39-3",[261,43.827,729,31.549,1956,32.703]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["title/39-4",[73,17.96,90,19.2,107,16.829,143,17.688,151,11.769,1956,21.796]],["name/39-4",[]],["text/39-4",[]],["component/39-4",[]],["title/39-5",[27,11.244,90,21.601,139,23.657,959,31.804,1956,24.522]],["name/39-5",[]],["text/39-5",[]],["component/39-5",[]],["title/39-6",[80,16.391,90,19.2,324,16.083,344,23.372,729,21.027,1175,23.747]],["name/39-6",[]],["text/39-6",[]],["component/39-6",[]],["title/39-7",[729,31.549,1905,36.235,2096,43.827]],["name/39-7",[]],["text/39-7",[]],["component/39-7",[]],["title/39-8",[90,21.601,108,20.051,143,19.9,299,22.66,1905,27.171]],["name/39-8",[]],["text/39-8",[]],["component/39-8",[]],["title/39-9",[80,14.751,90,17.279,114,12.199,139,18.923,324,14.474,344,21.033,1905,21.734]],["name/39-9",[]],["text/39-9",[]],["component/39-9",[]],["title/39-10",[90,21.601,107,18.934,682,24.839,729,23.657,1175,26.718]],["name/39-10",[]],["text/39-10",[]],["component/39-10",[]],["title/39-11",[76,33.969,420,33.969]],["name/39-11",[]],["text/39-11",[]],["component/39-11",[]],["title/39",[42,32.703,1934,33.126,1935,34.041]],["name/39",[42,1.348]],["text/39",[1,2.987,2,2.253,3,2.288,5,0.783,7,4.493,9,2.698,13,1.195,14,1.473,18,0.946,23,2.085,27,1.82,30,1.567,32,0.783,38,3.037,40,0.627,58,1.074,70,1.333,71,2.051,72,2.129,73,2.478,80,2.261,81,0.76,83,3.18,90,1.345,92,1.546,102,0.739,104,1.397,105,3.684,106,0.775,107,4.356,108,4.084,110,1.357,111,1.832,112,0.818,113,0.914,114,1.61,124,0.767,140,1.017,141,0.702,142,0.929,143,0.68,150,1.268,151,2.4,157,0.675,181,0.767,188,2.724,194,1.408,210,0.631,219,0.767,247,0.984,252,0.899,256,0.929,258,0.818,263,2.129,274,0.639,281,1.546,288,1.759,290,2.345,298,1.357,299,2.392,324,1.551,344,1.637,357,0.76,359,0.849,365,1.755,374,0.643,375,0.767,385,0.861,387,0.839,392,1.508,394,1.056,399,0.8,414,1.167,431,1.345,435,1.167,451,1.005,460,1.37,473,0.809,504,1.056,524,0.809,546,1.663,555,2.469,621,1.589,629,0.849,639,0.984,645,0.767,647,1.005,656,1.005,682,3.046,700,0.964,706,0.899,727,0.849,728,1.087,729,3.559,813,1.029,832,0.886,833,1.98,867,0.899,873,1.923,876,1.295,881,2.157,900,0.914,930,1.124,959,1.087,998,1.005,1119,1.295,1128,2.157,1138,2.046,1142,1.722,1170,1.167,1177,1.663,1193,1.087,1251,0.946,1266,1.222,1268,1.087,1355,1.922,1386,1.124,1415,2.253,1440,1.056,1489,0.984,1511,1.663,1551,1.167,1640,1.167,1663,0.984,1714,0.964,1848,2.046,1905,3.332,1934,5.213,1935,5.759,1938,1.167,1939,2.519,1942,1.056,1943,1.124,1956,5.414,1965,1.295,1970,1.124,2026,1.167,2027,2.725,2048,2.125,2089,1.222,2090,1.222,2097,1.295,2098,1.405,2099,1.295,2100,1.222,2101,2.559,2102,1.167,2103,1.167,2104,1.405,2105,3.522,2106,1.405,2107,1.405,2108,1.222,2109,1.405,2110,1.405]],["component/39",[273,0.458]],["title/40",[682,33.126,1905,36.235,1934,33.126]],["name/40",[1905,1.494]],["text/40",[1,4.102,3,2.482,6,1.158,7,4.725,20,1.047,23,1.114,27,1.922,30,1.42,32,1.292,40,2.34,57,1.483,58,2.204,80,3.443,83,4.32,103,1.177,104,1.266,105,1.208,107,3.535,108,2.561,110,3.307,111,0.979,114,0.86,123,1.253,142,1.533,151,2.472,180,3.998,194,3.067,210,1.04,213,1.926,216,1.278,242,2.025,299,2.894,301,1.44,324,1.021,355,1.48,431,1.219,468,4.469,472,1.483,476,3.308,518,1.889,546,1.507,604,1.253,606,1.533,678,1.623,682,4.246,706,4.495,729,4.994,865,1.623,867,1.483,908,1.59,973,4.192,987,1.56,1040,1.854,1219,1.698,1253,3.845,1357,1.507,1377,3.313,1415,1.483,1534,7.143,1578,1.623,1714,1.59,1798,1.659,1905,6.597,1934,4.966,1935,4.363,1938,5.178,1939,1.659,1942,1.743,1957,3.313,2025,2.016,2027,4.062,2028,2.136,2031,1.794,2048,3.313,2076,2.136,2089,2.016,2090,2.016,2091,2.136,2096,1.854,2111,3.675,2112,2.319,2113,2.319]],["component/40",[273,0.458]],["title/41-1",[2114,82.251]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[318,40.437]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[61,38.15]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[513,40.437]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41-5",[1038,52.601,2115,54.637]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["title/41-6",[2116,75.77]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["title/41-7",[318,32.342,355,24.41]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["title/41-8",[61,30.512,355,24.41]],["name/41-8",[]],["text/41-8",[]],["component/41-8",[]],["title/41-9",[355,24.41,513,32.342]],["name/41-9",[]],["text/41-9",[]],["component/41-9",[]],["title/41-10",[268,23.695,355,20.338,2117,50.493]],["name/41-10",[]],["text/41-10",[]],["component/41-10",[]],["title/41-11",[355,20.338,1038,43.827,2115,45.523]],["name/41-11",[]],["text/41-11",[]],["component/41-11",[]],["title/41-12",[2118,75.77]],["name/41-12",[]],["text/41-12",[]],["component/41-12",[]],["title/41-13",[318,32.342,355,24.41]],["name/41-13",[]],["text/41-13",[]],["component/41-13",[]],["title/41-14",[355,24.41,513,32.342]],["name/41-14",[]],["text/41-14",[]],["component/41-14",[]],["title/41-15",[23,19.753,355,15.25,510,26.295,1179,26.718,1668,29.398]],["name/41-15",[]],["text/41-15",[]],["component/41-15",[]],["title/41-16",[206,38.36,355,20.338,1261,31.916]],["name/41-16",[]],["text/41-16",[]],["component/41-16",[]],["title/41-17",[2119,75.77]],["name/41-17",[]],["text/41-17",[]],["component/41-17",[]],["title/41-18",[318,40.437]],["name/41-18",[]],["text/41-18",[]],["component/41-18",[]],["title/41-19",[2120,71.502]],["name/41-19",[]],["text/41-19",[]],["component/41-19",[]],["title/41-20",[318,40.437]],["name/41-20",[]],["text/41-20",[]],["component/41-20",[]],["title/41-21",[61,38.15]],["name/41-21",[]],["text/41-21",[]],["component/41-21",[]],["title/41-22",[513,40.437]],["name/41-22",[]],["text/41-22",[]],["component/41-22",[]],["title/41-23",[2121,71.502]],["name/41-23",[]],["text/41-23",[]],["component/41-23",[]],["title/41-24",[318,40.437]],["name/41-24",[]],["text/41-24",[]],["component/41-24",[]],["title/41-25",[61,38.15]],["name/41-25",[]],["text/41-25",[]],["component/41-25",[]],["title/41-26",[513,40.437]],["name/41-26",[]],["text/41-26",[]],["component/41-26",[]],["title/41-27",[2122,71.502]],["name/41-27",[]],["text/41-27",[]],["component/41-27",[]],["title/41-28",[318,40.437]],["name/41-28",[]],["text/41-28",[]],["component/41-28",[]],["title/41-29",[61,38.15]],["name/41-29",[]],["text/41-29",[]],["component/41-29",[]],["title/41-30",[2123,75.77]],["name/41-30",[]],["text/41-30",[]],["component/41-30",[]],["title/41-31",[318,40.437]],["name/41-31",[]],["text/41-31",[]],["component/41-31",[]],["title/41-32",[61,38.15]],["name/41-32",[]],["text/41-32",[]],["component/41-32",[]],["title/41-33",[513,40.437]],["name/41-33",[]],["text/41-33",[]],["component/41-33",[]],["title/41-34",[2124,82.251]],["name/41-34",[]],["text/41-34",[]],["component/41-34",[]],["title/41-35",[318,40.437]],["name/41-35",[]],["text/41-35",[]],["component/41-35",[]],["title/41-36",[61,38.15]],["name/41-36",[]],["text/41-36",[]],["component/41-36",[]],["title/41-37",[513,40.437]],["name/41-37",[]],["text/41-37",[]],["component/41-37",[]],["title/41-38",[2125,82.251]],["name/41-38",[]],["text/41-38",[]],["component/41-38",[]],["title/41-39",[513,40.437]],["name/41-39",[]],["text/41-39",[]],["component/41-39",[]],["title/41-40",[2126,82.251]],["name/41-40",[]],["text/41-40",[]],["component/41-40",[]],["title/41-41",[2127,82.251]],["name/41-41",[]],["text/41-41",[]],["component/41-41",[]],["title/41-42",[318,40.437]],["name/41-42",[]],["text/41-42",[]],["component/41-42",[]],["title/41-43",[61,38.15]],["name/41-43",[]],["text/41-43",[]],["component/41-43",[]],["title/41-44",[18,55.352]],["name/41-44",[]],["text/41-44",[]],["component/41-44",[]],["title/41-45",[513,40.437]],["name/41-45",[]],["text/41-45",[]],["component/41-45",[]],["title/41-46",[2128,82.251]],["name/41-46",[]],["text/41-46",[]],["component/41-46",[]],["title/41",[190,35.631,238,40.146,1261,31.916]],["name/41",[13,0.588,238,0.923]],["text/41",[0,0.716,1,0.501,3,0.552,5,0.66,10,0.36,12,0.291,13,2.586,14,0.356,16,1.323,18,1.149,20,0.279,23,2.541,27,1.948,38,0.83,40,0.761,51,0.364,52,0.257,58,0.498,60,0.57,61,1.76,64,0.356,66,1.484,67,0.442,70,0.322,71,0.994,73,0.304,76,1.13,80,1.703,81,0.641,82,0.416,88,0.494,90,0.325,91,0.635,93,1.275,96,0.771,102,0.623,105,0.322,107,0.285,111,1.113,114,0.633,118,0.985,123,0.334,124,0.338,125,0.424,126,0.592,128,0.465,131,0.868,132,0.635,135,0.682,136,0.784,137,0.514,138,2.185,139,0.356,140,0.246,143,0.299,144,0.302,146,0.364,148,0.334,156,0.736,157,0.57,161,0.424,164,1.852,166,0.396,177,0.479,179,1.379,180,0.675,181,0.338,182,0.538,188,3.241,190,3.085,191,0.317,193,0.726,194,0.682,196,0.334,197,1.473,198,1.149,200,0.453,202,0.514,206,1.195,210,0.766,214,1.797,215,1.575,216,0.341,217,1.11,223,0.514,229,0.453,230,0.891,231,0.83,234,0.416,236,0.374,238,2.78,241,4.441,242,0.314,243,1.484,248,0.736,252,0.396,257,1.447,265,0.941,269,0.514,270,2.453,271,0.369,272,0.341,273,0.218,274,0.281,277,1.532,279,1.149,284,0.442,285,1.171,290,0.923,295,2.153,297,1.713,298,0.328,307,0.798,308,0.607,311,1.631,315,0.784,316,1.713,318,0.839,319,0.538,324,1.16,326,0.379,327,0.771,328,0.667,333,0.891,336,0.479,341,0.314,342,0.961,347,0.281,349,0.369,355,0.812,357,0.334,359,0.716,361,0.304,363,0.409,371,0.36,372,0.494,373,2.868,374,0.283,375,0.338,380,1.019,390,0.465,391,0.654,399,0.675,418,0.465,419,3.182,423,0.784,427,0.416,430,0.914,432,0.338,438,0.416,443,0.465,458,0.602,477,0.813,482,1.694,494,0.364,502,0.314,508,0.424,510,0.758,511,0.798,513,1.295,521,0.83,550,0.442,553,0.538,559,1.25,562,0.465,608,0.514,627,2.831,629,0.374,637,0.538,652,0.514,669,0.424,684,0.494,692,0.514,726,0.409,727,0.374,733,0.379,734,1.11,757,0.328,767,0.479,779,0.433,792,0.479,797,0.736,807,0.514,810,0.424,832,1.076,853,0.57,857,0.948,868,3.107,881,2.531,884,0.465,895,0.416,897,0.465,898,0.57,900,2.233,903,0.442,904,0.891,905,0.442,907,1.092,908,2.356,915,0.57,920,0.948,963,0.433,964,0.479,985,0.784,993,0.479,1002,1.411,1004,1.365,1012,0.707,1017,0.442,1029,0.433,1035,0.453,1038,0.948,1116,0.465,1128,0.379,1141,0.424,1142,0.416,1147,3.036,1177,0.402,1179,0.402,1204,0.909,1208,0.379,1215,0.538,1226,1.092,1251,0.416,1252,0.424,1257,1.195,1258,0.494,1261,0.36,1288,0.453,1296,1.75,1297,0.364,1299,0.402,1343,0.514,1355,1.664,1372,0.453,1447,0.453,1492,0.442,1510,0.538,1511,0.771,1547,0.848,1557,0.479,1595,0.453,1609,0.514,1610,1.573,1668,0.442,1670,1.418,1672,0.465,1717,0.494,1739,0.948,1747,0.465,1756,0.416,1763,0.494,1849,0.538,1858,0.514,1862,2.234,1865,0.538,1925,0.494,1930,0.891,1998,0.494,2003,0.416,2011,0.453,2102,0.514,2115,2.189,2117,0.57,2120,1.484,2122,1.484,2129,1.031,2130,1.092,2131,0.618,2132,3.941,2133,1.185,2134,1.573,2135,0.57,2136,0.538,2137,4.098,2138,5.537,2139,1.185,2140,0.618,2141,0.618,2142,2.635,2143,0.57,2144,0.618,2145,0.618,2146,0.618,2147,0.618,2148,1.185,2149,0.618,2150,1.185,2151,0.57,2152,0.618,2153,0.618,2154,0.618,2155,0.618,2156,0.618,2157,0.618,2158,0.618,2159,0.618,2160,0.618,2161,0.618,2162,0.618,2163,0.57,2164,3.807,2165,0.618,2166,0.618,2167,2.635,2168,2.427,2169,0.618,2170,3.496,2171,0.618,2172,0.618,2173,0.618,2174,0.618,2175,0.618,2176,0.618,2177,1.031,2178,1.185,2179,1.185,2180,0.618,2181,0.618,2182,1.185,2183,0.618,2184,0.618,2185,0.618,2186,0.618,2187,0.618,2188,0.618,2189,0.618,2190,0.618,2191,0.618,2192,0.618,2193,0.618,2194,0.57,2195,0.618,2196,0.618,2197,0.618,2198,0.618,2199,0.57,2200,2.016,2201,0.57,2202,1.185,2203,1.185,2204,0.618,2205,0.57,2206,1.75,2207,0.57,2208,0.618,2209,0.618,2210,0.538,2211,0.868,2212,0.618,2213,0.618,2214,0.618,2215,0.618,2216,0.57,2217,0.618,2218,1.031,2219,1.185,2220,1.185,2221,3.807,2222,0.514,2223,1.185,2224,0.57,2225,0.57,2226,1.031,2227,1.484,2228,0.57,2229,0.618,2230,0.618,2231,0.538,2232,0.618,2233,0.618,2234,0.618,2235,0.618,2236,0.514,2237,0.618,2238,0.618,2239,0.917,2240,0.57,2241,0.538,2242,0.618,2243,0.618,2244,0.618,2245,0.618,2246,0.538,2247,0.618,2248,1.185,2249,0.538,2250,0.618,2251,0.538,2252,0.494,2253,0.57,2254,1.185,2255,0.618,2256,0.57,2257,0.514,2258,2.635,2259,1.185,2260,0.514,2261,0.618,2262,0.618,2263,0.618,2264,0.618,2265,0.618,2266,0.618,2267,0.538,2268,0.618,2269,0.618,2270,0.402,2271,0.618,2272,0.618,2273,0.618,2274,0.618,2275,0.618,2276,0.618,2277,0.618,2278,0.57,2279,0.618,2280,0.618,2281,0.618,2282,0.618,2283,0.618,2284,0.618,2285,0.618,2286,0.494,2287,0.618,2288,0.618,2289,0.618,2290,1.185,2291,0.618,2292,0.618,2293,0.618,2294,0.618,2295,1.185,2296,0.57,2297,0.618,2298,0.618,2299,0.494,2300,0.453,2301,0.57,2302,0.618,2303,0.618,2304,0.618,2305,0.618,2306,0.618,2307,0.618,2308,0.57,2309,0.618,2310,0.618,2311,0.57]],["component/41",[273,0.458]],["title/42-1",[22,26.295,130,28.187,209,28.764,2312,41.1,2313,35.729]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[513,40.437]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[209,32.876,2313,61.438,2314,46.976]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[513,40.437]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42-5",[61,38.15]],["name/42-5",[]],["text/42-5",[]],["component/42-5",[]],["title/42-6",[209,32.876,2313,40.836,2315,46.976,2316,39.015]],["name/42-6",[]],["text/42-6",[]],["component/42-6",[]],["title/42-7",[513,40.437]],["name/42-7",[]],["text/42-7",[]],["component/42-7",[]],["title/42-8",[209,32.876,2317,46.976,2318,37.561,2319,39.015]],["name/42-8",[]],["text/42-8",[]],["component/42-8",[]],["title/42-9",[513,40.437]],["name/42-9",[]],["text/42-9",[]],["component/42-9",[]],["title/42-10",[61,38.15]],["name/42-10",[]],["text/42-10",[]],["component/42-10",[]],["title/42-11",[209,32.876,2318,37.561,2319,39.015,2320,46.976]],["name/42-11",[]],["text/42-11",[]],["component/42-11",[]],["title/42-12",[318,40.437]],["name/42-12",[]],["text/42-12",[]],["component/42-12",[]],["title/42-13",[513,40.437]],["name/42-13",[]],["text/42-13",[]],["component/42-13",[]],["title/42-14",[61,38.15]],["name/42-14",[]],["text/42-14",[]],["component/42-14",[]],["title/42-15",[209,32.876,356,36.351,2318,37.561,2321,43.274]],["name/42-15",[]],["text/42-15",[]],["component/42-15",[]],["title/42-16",[513,40.437]],["name/42-16",[]],["text/42-16",[]],["component/42-16",[]],["title/42-17",[209,32.876,1416,40.836,2318,37.561,2322,43.274]],["name/42-17",[]],["text/42-17",[]],["component/42-17",[]],["title/42-18",[513,40.437]],["name/42-18",[]],["text/42-18",[]],["component/42-18",[]],["title/42-19",[61,38.15]],["name/42-19",[]],["text/42-19",[]],["component/42-19",[]],["title/42-20",[209,32.876,2316,39.015,2323,46.976,2324,40.836]],["name/42-20",[]],["text/42-20",[]],["component/42-20",[]],["title/42-21",[318,40.437]],["name/42-21",[]],["text/42-21",[]],["component/42-21",[]],["title/42-22",[209,32.876,356,36.351,2316,39.015,2325,46.976]],["name/42-22",[]],["text/42-22",[]],["component/42-22",[]],["title/42-23",[318,40.437]],["name/42-23",[]],["text/42-23",[]],["component/42-23",[]],["title/42-24",[513,40.437]],["name/42-24",[]],["text/42-24",[]],["component/42-24",[]],["title/42-25",[513,40.437]],["name/42-25",[]],["text/42-25",[]],["component/42-25",[]],["title/42-26",[2326,82.251]],["name/42-26",[]],["text/42-26",[]],["component/42-26",[]],["title/42-27",[318,40.437]],["name/42-27",[]],["text/42-27",[]],["component/42-27",[]],["title/42-28",[513,40.437]],["name/42-28",[]],["text/42-28",[]],["component/42-28",[]],["title/42-29",[2327,82.251]],["name/42-29",[]],["text/42-29",[]],["component/42-29",[]],["title/42-30",[318,40.437]],["name/42-30",[]],["text/42-30",[]],["component/42-30",[]],["title/42-31",[513,40.437]],["name/42-31",[]],["text/42-31",[]],["component/42-31",[]],["title/42-32",[2328,75.77]],["name/42-32",[]],["text/42-32",[]],["component/42-32",[]],["title/42-33",[318,40.437]],["name/42-33",[]],["text/42-33",[]],["component/42-33",[]],["title/42-34",[513,40.437]],["name/42-34",[]],["text/42-34",[]],["component/42-34",[]],["title/42-35",[2119,75.77]],["name/42-35",[]],["text/42-35",[]],["component/42-35",[]],["title/42-36",[513,40.437]],["name/42-36",[]],["text/42-36",[]],["component/42-36",[]],["title/42-37",[2120,71.502]],["name/42-37",[]],["text/42-37",[]],["component/42-37",[]],["title/42-38",[498,65.767]],["name/42-38",[]],["text/42-38",[]],["component/42-38",[]],["title/42-39",[318,40.437]],["name/42-39",[]],["text/42-39",[]],["component/42-39",[]],["title/42-40",[61,38.15]],["name/42-40",[]],["text/42-40",[]],["component/42-40",[]],["title/42-41",[513,40.437]],["name/42-41",[]],["text/42-41",[]],["component/42-41",[]],["title/42-42",[18,55.352]],["name/42-42",[]],["text/42-42",[]],["component/42-42",[]],["title/42-43",[216,36.27,241,37.865]],["name/42-43",[]],["text/42-43",[]],["component/42-43",[]],["title/42-44",[242,33.397,2329,50.906]],["name/42-44",[]],["text/42-44",[]],["component/42-44",[]],["title/42-45",[61,30.512,1372,48.183]],["name/42-45",[]],["text/42-45",[]],["component/42-45",[]],["title/42-46",[2330,82.251]],["name/42-46",[]],["text/42-46",[]],["component/42-46",[]],["title/42-47",[318,40.437]],["name/42-47",[]],["text/42-47",[]],["component/42-47",[]],["title/42-48",[513,40.437]],["name/42-48",[]],["text/42-48",[]],["component/42-48",[]],["title/42-49",[270,30.512,484,52.601]],["name/42-49",[]],["text/42-49",[]],["component/42-49",[]],["title/42-50",[2331,75.77]],["name/42-50",[]],["text/42-50",[]],["component/42-50",[]],["title/42-51",[318,40.437]],["name/42-51",[]],["text/42-51",[]],["component/42-51",[]],["title/42-52",[513,40.437]],["name/42-52",[]],["text/42-52",[]],["component/42-52",[]],["title/42-53",[61,38.15]],["name/42-53",[]],["text/42-53",[]],["component/42-53",[]],["title/42-54",[270,30.512,484,52.601]],["name/42-54",[]],["text/42-54",[]],["component/42-54",[]],["title/42-55",[2332,82.251]],["name/42-55",[]],["text/42-55",[]],["component/42-55",[]],["title/42-56",[513,40.437]],["name/42-56",[]],["text/42-56",[]],["component/42-56",[]],["title/42-57",[61,38.15]],["name/42-57",[]],["text/42-57",[]],["component/42-57",[]],["title/42-58",[2333,82.251]],["name/42-58",[]],["text/42-58",[]],["component/42-58",[]],["title/42-59",[318,40.437]],["name/42-59",[]],["text/42-59",[]],["component/42-59",[]],["title/42-60",[513,40.437]],["name/42-60",[]],["text/42-60",[]],["component/42-60",[]],["title/42-61",[2121,71.502]],["name/42-61",[]],["text/42-61",[]],["component/42-61",[]],["title/42-62",[498,65.767]],["name/42-62",[]],["text/42-62",[]],["component/42-62",[]],["title/42-63",[15,32.301,257,36.235,1372,40.146]],["name/42-63",[]],["text/42-63",[]],["component/42-63",[]],["title/42-64",[124,35.907,890,40.856]],["name/42-64",[]],["text/42-64",[]],["component/42-64",[]],["title/42-65",[231,46.039,1040,52.601]],["name/42-65",[]],["text/42-65",[]],["component/42-65",[]],["title/42-66",[72,39.758,1372,48.183]],["name/42-66",[]],["text/42-66",[]],["component/42-66",[]],["title/42-67",[61,38.15]],["name/42-67",[]],["text/42-67",[]],["component/42-67",[]],["title/42-68",[513,40.437]],["name/42-68",[]],["text/42-68",[]],["component/42-68",[]],["title/42-69",[318,40.437]],["name/42-69",[]],["text/42-69",[]],["component/42-69",[]],["title/42-70",[190,35.631,2122,47.648,2239,42.414]],["name/42-70",[]],["text/42-70",[]],["component/42-70",[]],["title/42-71",[13,21.939,61,21.788,241,27.038,1299,30.537]],["name/42-71",[]],["text/42-71",[]],["component/42-71",[]],["title/42-72",[27,14.995,188,29.626,2334,47.648]],["name/42-72",[]],["text/42-72",[]],["component/42-72",[]],["title/42",[190,35.631,237,39.206,1261,31.916]],["name/42",[13,0.588,237,0.901]],["text/42",[1,0.336,3,0.132,5,0.839,6,1.361,9,0.806,11,2.515,12,1.644,13,1.847,14,0.668,15,2.199,16,0.701,18,1.234,19,1.174,22,0.742,23,1.562,27,1.766,30,0.923,40,0.182,50,0.754,51,1.265,52,1.131,57,0.964,58,0.487,61,2.295,64,0.235,67,0.293,70,0.213,71,1.422,72,0.701,73,0.391,80,1.871,81,0.627,82,0.535,85,2.561,91,0.621,100,0.535,101,0.327,102,0.215,103,0.404,105,0.785,106,1.183,107,1.719,108,0.388,110,0.422,111,0.775,113,0.266,114,2.395,115,0.262,118,0.66,120,0.219,122,1.518,123,0.43,124,2.159,126,0.397,127,0.526,131,0.3,132,0.806,138,0.668,140,0.461,141,0.58,144,1.461,145,0.27,150,0.203,151,0.256,157,0.197,159,0.233,164,1.82,166,0.262,176,0.241,178,0.356,179,0.258,184,0.225,187,0.812,188,3.745,189,0.463,190,3.217,191,0.209,193,1.496,194,2.475,196,0.221,197,0.535,198,1.444,200,0.85,206,0.556,210,0.676,214,0.469,215,1.546,216,1.011,221,0.28,223,0.34,226,0.924,228,0.327,230,0.872,231,3.463,234,1.014,236,0.701,237,4.126,241,4.229,242,1.24,244,0.307,247,0.286,248,1.692,256,0.767,257,2.615,260,0.34,262,0.66,264,0.742,265,0.438,266,0.91,267,1.014,269,0.964,270,1.508,272,0.225,273,0.281,277,1.709,285,0.28,290,0.221,295,0.414,297,1.395,298,0.422,303,0.34,305,0.293,307,0.275,308,0.594,310,0.494,311,0.647,315,0.996,316,0.266,318,0.57,324,1.075,325,0.545,341,0.765,342,0.23,355,1.206,357,0.221,359,0.701,363,0.27,364,0.28,371,0.238,373,0.701,374,0.531,375,0.633,380,0.474,381,0.66,382,0.28,383,0.254,384,0.209,385,1.314,387,0.474,388,0.254,389,0.692,391,1.011,392,0.469,398,1.615,399,1.044,404,0.668,408,0.275,410,0.721,415,0.258,418,0.598,419,1.747,420,0.411,427,0.535,430,1.459,431,0.215,432,0.223,437,0.262,442,0.307,447,1.907,450,0.293,455,0.238,456,0.377,458,0.589,460,0.621,467,0.28,470,0.526,477,0.28,483,0.34,486,0.28,496,0.66,502,0.404,508,0.545,510,0.509,511,0.275,513,1.055,521,0.286,524,0.668,532,0.286,540,0.767,544,0.27,553,0.691,557,0.732,562,0.598,565,2.628,567,0.241,568,0.598,578,0.327,583,0.34,588,0.307,596,0.356,604,0.627,618,0.266,621,0.494,623,0.316,627,0.692,629,1.297,633,0.356,637,0.356,676,0.66,706,0.509,718,0.377,726,0.27,733,0.487,740,0.3,748,0.83,751,0.327,757,0.422,774,0.307,775,0.262,776,0.34,777,1.388,778,0.356,779,0.286,791,2.179,792,0.615,794,0.377,795,0.356,797,0.254,810,0.28,819,2.141,828,0.356,846,0.262,865,0.286,866,0.307,868,1.132,873,0.307,880,0.327,881,0.487,885,0.25,890,0.254,895,0.275,897,0.598,904,0.598,905,1.077,918,0.377,927,0.327,935,0.615,943,0.545,955,0.262,963,1.284,970,0.636,978,0.286,993,0.316,1002,0.219,1008,1.009,1027,2.51,1030,0.356,1035,0.3,1039,0.377,1040,0.327,1116,2.251,1147,0.262,1153,0.66,1155,0.327,1177,0.754,1179,0.517,1190,0.316,1204,1.014,1205,0.244,1208,0.25,1209,0.228,1216,0.25,1226,0.262,1231,0.598,1237,0.275,1239,1.467,1249,0.327,1251,2.015,1257,0.286,1261,0.238,1267,0.872,1268,0.316,1291,0.356,1299,1.192,1301,0.293,1308,0.27,1321,0.316,1322,0.293,1352,0.615,1355,1.333,1372,3.055,1427,0.636,1436,0.377,1438,0.66,1447,0.3,1489,0.286,1496,0.286,1511,0.517,1547,0.293,1557,0.316,1583,0.327,1595,1.344,1609,0.34,1613,0.356,1614,1.595,1624,0.615,1648,0.66,1666,0.356,1669,0.721,1672,0.872,1696,0.34,1747,0.307,1750,0.501,1756,0.275,1766,0.34,1770,0.34,1790,0.316,1796,0.356,1820,0.327,1839,0.327,1862,1.103,1907,0.691,1913,0.327,1915,1.379,1930,0.307,1998,0.928,2023,0.66,2074,0.293,2082,0.615,2115,0.34,2121,2.369,2123,0.377,2130,0.377,2132,0.34,2136,0.356,2143,1.069,2164,3.221,2168,1.069,2177,0.356,2194,0.377,2199,1.069,2206,0.928,2216,1.069,2218,0.356,2221,1.069,2222,0.34,2228,0.377,2231,0.691,2236,1.524,2239,1.166,2240,1.69,2241,3.243,2246,1.009,2252,0.327,2260,0.34,2267,1.009,2278,1.388,2311,0.377,2328,0.377,2329,1.419,2331,0.377,2334,1.309,2335,0.66,2336,0.409,2337,1.16,2338,0.409,2339,0.732,2340,0.356,2341,0.409,2342,0.356,2343,0.409,2344,1.16,2345,0.409,2346,0.377,2347,0.409,2348,0.377,2349,0.377,2350,0.795,2351,0.691,2352,0.409,2353,0.409,2354,0.356,2355,0.409,2356,0.409,2357,0.377,2358,0.409,2359,0.409,2360,0.409,2361,0.409,2362,0.34,2363,0.409,2364,0.409,2365,1.069,2366,0.293,2367,0.409,2368,0.409,2369,0.409,2370,2.442,2371,3.251,2372,0.377,2373,0.409,2374,0.409,2375,0.732,2376,0.409,2377,0.409,2378,0.409,2379,0.409,2380,0.409,2381,0.409,2382,0.409,2383,0.409,2384,0.409,2385,0.409,2386,0.409,2387,0.409,2388,1.16,2389,0.569,2390,0.795,2391,0.409,2392,1.069,2393,0.691,2394,1.009,2395,0.409,2396,0.409,2397,0.377,2398,0.409,2399,0.409,2400,0.409,2401,0.409,2402,0.377,2403,0.409,2404,0.409,2405,0.409,2406,0.795,2407,0.409,2408,0.409,2409,0.409,2410,0.377,2411,0.409,2412,0.377,2413,1.069,2414,0.795,2415,0.795,2416,0.409,2417,0.409,2418,0.409,2419,1.069,2420,0.356,2421,1.506,2422,0.409,2423,3.955,2424,0.732,2425,0.409,2426,1.834,2427,1.16,2428,1.16,2429,0.795,2430,0.795,2431,0.795,2432,0.377,2433,0.316,2434,0.409,2435,0.377,2436,0.409,2437,0.409,2438,0.3,2439,0.409,2440,1.506,2441,0.409,2442,0.409,2443,1.16,2444,2.146,2445,1.16,2446,0.732,2447,0.409,2448,0.409,2449,0.409,2450,0.795,2451,0.409,2452,0.409,2453,0.409,2454,0.377,2455,0.377,2456,0.409,2457,0.409,2458,0.377,2459,0.34,2460,0.356,2461,1.16,2462,0.409,2463,0.377,2464,0.409,2465,0.409,2466,0.409,2467,0.356,2468,0.409,2469,0.409,2470,0.409,2471,0.377,2472,0.377,2473,0.27,2474,0.795,2475,0.409,2476,0.795,2477,0.795,2478,0.409,2479,0.356,2480,0.34,2481,0.409,2482,0.795,2483,0.409,2484,0.409,2485,0.409,2486,0.409,2487,0.34,2488,0.409,2489,0.409,2490,0.356,2491,0.409,2492,0.377,2493,0.409,2494,0.409,2495,0.377,2496,0.409,2497,0.409,2498,0.377,2499,0.409,2500,0.409]],["component/42",[273,0.458]],["title/43-1",[13,25.599,23,26.343,2501,43.827]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43",[13,25.599,27,14.995,904,41.204]],["name/43",[13,0.588,904,0.947]],["text/43",[12,3.885,13,5.362,20,3.73,22,5.285,23,5.028,24,6.86,25,7.181,26,7.181,27,3.141,40,3.683,190,5.37,355,3.065,1261,4.81,2501,6.605]],["component/43",[273,0.458]],["title/44-1",[27,12.851,190,30.537,1308,31.055,2502,46.976]],["name/44-1",[]],["text/44-1",[]],["component/44-1",[]],["title/44-2",[2498,60.601,2503,60.601]],["name/44-2",[]],["text/44-2",[]],["component/44-2",[]],["title/44-3",[23,31.616,241,37.865]],["name/44-3",[]],["text/44-3",[]],["component/44-3",[]],["title/44-4",[23,19.753,216,22.66,355,15.25,441,25.898,727,24.839]],["name/44-4",[]],["text/44-4",[]],["component/44-4",[]],["title/44-5",[13,19.195,114,15.25,904,30.897,1283,32.863,2074,29.398]],["name/44-5",[]],["text/44-5",[]],["component/44-5",[]],["title/44-6",[76,33.969,420,33.969]],["name/44-6",[]],["text/44-6",[]],["component/44-6",[]],["title/44-7",[27,11.244,207,35.729,1415,26.295,2085,30.897,2504,37.862]],["name/44-7",[]],["text/44-7",[]],["component/44-7",[]],["title/44-8",[76,33.969,420,33.969]],["name/44-8",[]],["text/44-8",[]],["component/44-8",[]],["title/44-9",[27,11.244,2085,30.897,2505,35.729,2506,41.1,2507,37.862]],["name/44-9",[]],["text/44-9",[]],["component/44-9",[]],["title/44-10",[16,33.126,270,25.423,908,37.591]],["name/44-10",[]],["text/44-10",[]],["component/44-10",[]],["title/44-11",[61,30.512,216,36.27]],["name/44-11",[]],["text/44-11",[]],["component/44-11",[]],["title/44-12",[230,49.454,231,46.039]],["name/44-12",[]],["text/44-12",[]],["component/44-12",[]],["title/44-13",[71,38.306,241,37.865]],["name/44-13",[]],["text/44-13",[]],["component/44-13",[]],["title/44-14",[52,34.145]],["name/44-14",[]],["text/44-14",[]],["component/44-14",[]],["title/44-15",[1849,71.502]],["name/44-15",[]],["text/44-15",[]],["component/44-15",[]],["title/44-16",[76,33.969,420,33.969]],["name/44-16",[]],["text/44-16",[]],["component/44-16",[]],["title/44-17",[27,11.244,203,35.729,249,34.135,2085,30.897,2508,41.1]],["name/44-17",[]],["text/44-17",[]],["component/44-17",[]],["title/44-18",[27,11.244,707,35.729,2085,30.897,2509,35.729,2510,41.1]],["name/44-18",[]],["text/44-18",[]],["component/44-18",[]],["title/44-19",[16,33.126,270,25.423,908,37.591]],["name/44-19",[]],["text/44-19",[]],["component/44-19",[]],["title/44-20",[23,26.343,80,24.593,2511,45.523]],["name/44-20",[]],["text/44-20",[]],["component/44-20",[]],["title/44-21",[71,31.916,216,30.22,241,31.549]],["name/44-21",[]],["text/44-21",[]],["component/44-21",[]],["title/44-22",[27,11.244,71,23.932,216,22.66,241,23.657,2322,37.862]],["name/44-22",[]],["text/44-22",[]],["component/44-22",[]],["title/44-23",[27,11.244,71,23.932,216,22.66,241,23.657,2512,35.729]],["name/44-23",[]],["text/44-23",[]],["component/44-23",[]],["title/44-24",[61,30.512,2389,47.055]],["name/44-24",[]],["text/44-24",[]],["component/44-24",[]],["title/44-25",[120,44.035]],["name/44-25",[]],["text/44-25",[]],["component/44-25",[]],["title/44-26",[184,36.27,186,40.292]],["name/44-26",[]],["text/44-26",[]],["component/44-26",[]],["title/44-27",[164,32.094,226,33.122]],["name/44-27",[]],["text/44-27",[]],["component/44-27",[]],["title/44-28",[140,32.704]],["name/44-28",[]],["text/44-28",[]],["component/44-28",[]],["title/44-29",[23,31.616,2513,60.601]],["name/44-29",[]],["text/44-29",[]],["component/44-29",[]],["title/44-30",[76,33.969,420,33.969]],["name/44-30",[]],["text/44-30",[]],["component/44-30",[]],["title/44-31",[27,11.244,65,35.729,130,28.187,2085,30.897,2514,37.862]],["name/44-31",[]],["text/44-31",[]],["component/44-31",[]],["title/44-32",[27,11.244,250,37.862,2129,35.729,2515,37.862,2516,30.897]],["name/44-32",[]],["text/44-32",[]],["component/44-32",[]],["title/44-33",[52,27.31,196,35.557]],["name/44-33",[]],["text/44-33",[]],["component/44-33",[]],["title/44-34",[27,11.244,2226,35.729,2516,30.897,2517,41.1,2518,41.1]],["name/44-34",[]],["text/44-34",[]],["component/44-34",[]],["title/44-35",[27,11.244,1888,37.862,2227,35.729,2516,30.897,2519,41.1]],["name/44-35",[]],["text/44-35",[]],["component/44-35",[]],["title/44-36",[27,11.244,2252,32.863,2516,30.897,2520,37.862,2521,35.729]],["name/44-36",[]],["text/44-36",[]],["component/44-36",[]],["title/44-37",[27,12.851,2260,39.015,2516,35.314,2522,43.274]],["name/44-37",[]],["text/44-37",[]],["component/44-37",[]],["title/44-38",[27,12.851,2394,40.836,2516,53.129]],["name/44-38",[]],["text/44-38",[]],["component/44-38",[]],["title/44-39",[27,11.244,197,27.658,2319,34.135,2516,30.897,2523,41.1]],["name/44-39",[]],["text/44-39",[]],["component/44-39",[]],["title/44-40",[27,11.244,269,34.135,2521,35.729,2524,41.1,2525,31.804]],["name/44-40",[]],["text/44-40",[]],["component/44-40",[]],["title/44-41",[27,11.244,2319,34.135,2334,35.729,2515,37.862,2525,31.804]],["name/44-41",[]],["text/44-41",[]],["component/44-41",[]],["title/44-42",[27,11.244,2324,35.729,2525,31.804,2526,37.862,2527,41.1]],["name/44-42",[]],["text/44-42",[]],["component/44-42",[]],["title/44-43",[27,11.244,2316,34.135,2525,31.804,2528,41.1,2529,41.1]],["name/44-43",[]],["text/44-43",[]],["component/44-43",[]],["title/44-44",[27,11.244,1415,26.295,2520,37.862,2525,31.804,2530,41.1]],["name/44-44",[]],["text/44-44",[]],["component/44-44",[]],["title/44-45",[27,11.244,2318,32.863,2525,31.804,2531,41.1,2532,41.1]],["name/44-45",[]],["text/44-45",[]],["component/44-45",[]],["title/44",[190,42.764,1261,38.306]],["name/44",[13,0.588,1261,0.733]],["text/44",[0,0.181,1,0.584,2,0.376,3,2.103,5,0.327,6,1.906,9,0.998,10,0.342,12,0.651,13,3.037,14,0.497,15,0.346,16,0.522,18,1.096,20,0.945,22,0.192,23,0.665,24,0.249,25,0.261,26,0.261,27,2.113,28,0.249,29,0.261,30,1.415,32,0.167,36,0.355,40,0.831,51,0.96,52,2.661,55,0.261,57,0.376,58,1.532,61,3.016,62,0.226,63,0.261,64,0.173,65,0.261,66,0.261,67,0.42,69,0.321,70,0.721,71,0.657,72,0.522,73,0.801,76,0.841,78,0.24,80,2.655,81,0.61,82,0.202,85,1.997,90,0.856,91,0.462,95,0.22,99,0.455,100,1.408,103,0.152,104,0.471,105,0.306,106,0.165,107,1.162,109,0.226,110,0.159,111,1.234,112,0.175,114,2.413,115,0.192,117,0.382,119,0.206,120,1.46,122,1.837,126,1.46,130,0.774,131,0.43,132,0.462,133,0.346,134,0.321,137,0.249,138,0.796,140,0.234,141,0.15,143,0.903,144,1.609,145,1.668,146,0.509,148,0.162,149,0.751,150,0.807,151,0.942,152,0.873,153,0.181,154,0.154,155,0.206,156,0.365,157,0.896,164,1.862,171,0.215,176,0.177,177,1.26,180,0.171,181,0.164,184,1.028,185,0.455,186,1.545,187,0.604,188,2.474,189,0.342,190,0.899,191,0.301,192,0.633,193,1.142,194,2.279,196,0.88,197,0.581,198,1.255,199,2.18,200,0.633,202,0.249,205,1.165,206,0.604,210,1.132,215,0.155,216,1.717,219,0.164,220,0.195,221,0.206,224,0.249,226,1.921,229,0.22,230,0.649,231,1.14,233,0.47,234,0.202,235,0.249,236,0.181,241,0.796,242,0.298,245,0.206,252,1.193,253,1.443,254,1.402,259,0.42,262,0.171,264,0.553,265,0.324,266,0.682,268,1.503,270,2.54,271,0.351,272,0.763,273,0.207,274,1.147,275,0.21,276,1.804,277,0.21,278,0.226,279,0.202,281,0.355,282,0.331,283,0.746,284,1.496,285,0.592,288,0.15,290,0.162,293,0.177,295,0.45,297,0.195,298,0.159,299,0.165,305,0.215,306,0.488,307,0.202,308,0.154,310,0.186,311,1.494,315,0.388,316,0.561,318,0.425,323,0.206,324,1.952,326,0.184,341,1.281,342,0.635,343,0.365,345,0.226,346,0.691,347,0.267,348,0.411,349,0.515,351,0.24,354,0.261,355,2.631,356,0.455,357,0.162,359,0.181,361,0.147,364,0.206,371,0.342,373,2.404,374,0.517,375,0.321,380,0.673,382,0.206,383,0.701,384,0.578,385,0.184,388,0.186,389,0.179,392,0.177,398,0.915,400,0.195,401,0.276,403,0.455,405,0.177,406,0.442,407,0.198,408,0.581,409,0.717,410,0.186,413,0.668,415,0.711,418,0.226,419,1.165,420,0.841,423,0.198,427,0.581,428,0.442,429,0.411,430,0.315,431,0.309,432,1.142,437,0.192,438,0.581,441,0.189,444,2.554,445,0.206,448,0.198,450,0.215,451,0.215,453,0.232,455,0.175,457,0.198,458,0.702,459,0.403,460,0.741,461,0.561,462,0.755,463,0.195,470,0.198,478,0.561,482,0.455,492,0.633,502,0.298,504,0.226,507,0.21,508,0.206,510,0.553,512,0.249,513,0.425,518,0.535,524,0.497,532,0.21,544,0.746,555,0.171,559,0.22,564,0.22,568,0.226,580,0.544,585,0.411,597,0.276,598,0.47,599,0.206,604,1.249,606,0.388,609,0.232,611,0.232,615,0.249,618,1.36,621,0.186,623,0.232,627,0.515,636,0.189,642,0.226,645,0.164,648,0.215,655,0.215,658,0.198,668,0.22,669,0.206,670,0.774,673,0.202,676,0.249,681,0.249,682,0.181,702,0.511,703,0.541,707,0.261,725,0.261,726,0.198,727,0.355,729,0.173,733,0.691,734,0.382,749,0.47,757,0.312,767,0.232,775,0.722,781,0.261,791,0.24,797,0.365,807,0.249,834,0.249,836,0.873,845,0.22,846,0.553,857,0.24,858,0.215,862,0.24,863,0.232,865,0.21,868,0.849,882,0.581,891,0.261,895,0.395,900,0.195,903,0.618,904,0.226,905,0.807,913,0.873,920,0.903,923,0.186,943,0.206,944,0.24,950,0.24,955,0.553,963,0.411,965,0.541,971,0.276,977,0.232,978,0.21,989,0.226,994,0.226,1002,1.766,1009,0.395,1010,0.276,1012,0.179,1014,0.276,1017,0.215,1018,0.36,1116,1.04,1117,0.276,1124,0.668,1125,0.249,1134,0.198,1142,0.202,1147,0.553,1153,0.249,1158,0.455,1160,0.43,1166,0.215,1175,0.195,1177,0.561,1179,0.561,1180,0.43,1183,0.261,1197,0.232,1204,1.369,1205,0.673,1207,0.226,1208,0.691,1209,0.167,1216,0.36,1226,0.192,1230,0.529,1231,1.402,1235,0.276,1257,0.968,1259,0.249,1260,0.541,1261,0.657,1267,0.226,1268,0.232,1274,0.261,1283,0.24,1289,0.249,1290,0.232,1296,0.24,1297,0.177,1299,0.382,1308,0.388,1313,0.261,1342,0.701,1352,0.232,1355,2.34,1357,0.734,1370,0.198,1415,0.192,1416,0.261,1423,0.232,1427,0.24,1437,0.849,1439,0.43,1452,0.633,1511,0.195,1532,0.261,1542,0.388,1557,0.232,1573,0.276,1576,0.365,1656,0.232,1658,0.47,1659,0.249,1660,0.261,1669,0.536,1679,0.511,1714,0.206,1747,0.442,1768,0.455,1840,0.261,1856,0.261,1862,0.22,1873,0.249,1915,0.442,1930,0.649,1939,0.215,1943,0.24,1976,0.249,1999,0.24,2002,0.24,2003,1.096,2007,0.249,2016,0.261,2017,0.511,2019,0.249,2074,0.42,2082,0.232,2085,0.442,2118,0.796,2129,0.261,2134,0.276,2137,0.276,2177,0.511,2218,0.261,2226,0.261,2227,0.261,2239,0.668,2249,0.261,2252,0.24,2253,1.04,2260,0.249,2270,0.195,2299,0.24,2324,0.511,2335,0.249,2342,0.261,2348,0.276,2365,0.276,2375,0.541,2389,0.618,2392,0.276,2394,0.261,2432,0.276,2433,0.232,2458,0.276,2459,0.249,2480,0.488,2501,0.691,2504,0.541,2505,1.203,2507,0.796,2509,0.751,2511,0.937,2512,0.261,2533,0.3,2534,0.276,2535,0.261,2536,0.3,2537,1.26,2538,0.3,2539,0.276,2540,0.276,2541,0.276,2542,0.864,2543,0.3,2544,0.24,2545,0.3,2546,0.3,2547,0.3,2548,0.3,2549,0.3,2550,0.3,2551,0.3,2552,0.864,2553,0.47,2554,0.588,2555,0.488,2556,0.3,2557,0.3,2558,0.3,2559,0.3,2560,0.588,2561,0.3,2562,0.3,2563,0.3,2564,0.511,2565,0.588,2566,0.3,2567,0.3,2568,0.3,2569,0.3,2570,0.3,2571,0.3,2572,0.21,2573,0.3,2574,1.04,2575,0.588,2576,0.588,2577,0.3,2578,0.588,2579,0.3,2580,0.3,2581,0.588,2582,0.3,2583,0.249,2584,0.864,2585,2.096,2586,0.24,2587,0.3,2588,0.3,2589,0.261,2590,0.3,2591,0.3,2592,0.3,2593,0.261,2594,0.24,2595,0.796,2596,0.3,2597,0.276,2598,0.249,2599,0.3,2600,0.3,2601,0.3,2602,0.232,2603,0.864,2604,0.903,2605,1.927,2606,0.588,2607,0.541,2608,0.276,2609,0.864,2610,1.071,2611,1.149,2612,0.3,2613,0.42,2614,0.232,2615,0.24,2616,0.24,2617,0.488,2618,0.249,2619,0.751,2620,0.442,2621,0.541,2622,0.588,2623,0.588,2624,0.276,2625,0.588,2626,0.588,2627,0.3,2628,0.276,2629,0.3,2630,0.588,2631,0.588,2632,0.3,2633,0.3,2634,0.588,2635,0.3,2636,0.3,2637,0.588,2638,0.276,2639,0.3,2640,0.442,2641,0.3,2642,0.276,2643,0.276,2644,0.541,2645,0.3,2646,0.198,2647,0.276,2648,0.588,2649,0.3,2650,0.276,2651,0.261,2652,0.202,2653,0.511,2654,0.3,2655,0.3,2656,0.3,2657,0.276,2658,0.588,2659,0.276,2660,0.3,2661,0.3,2662,0.588,2663,0.691,2664,1.129,2665,0.24,2666,0.226,2667,0.3,2668,0.47,2669,0.261,2670,0.3,2671,0.3,2672,0.864,2673,0.215,2674,0.3,2675,0.3,2676,0.276,2677,0.588,2678,0.215,2679,0.276,2680,0.3,2681,0.981,2682,0.3,2683,0.249,2684,0.3,2685,0.276,2686,0.232,2687,0.261,2688,0.3,2689,0.249,2690,0.3,2691,0.3,2692,0.588,2693,0.3,2694,0.3,2695,0.261,2696,0.3,2697,0.3,2698,0.3,2699,0.3,2700,0.3,2701,0.3,2702,0.261,2703,0.232,2704,0.455,2705,0.3,2706,0.796,2707,0.3,2708,0.276,2709,0.3,2710,0.864,2711,0.691,2712,0.981,2713,1.129,2714,0.3,2715,0.3,2716,0.3,2717,0.3,2718,0.3,2719,0.3,2720,0.3,2721,0.3,2722,0.261,2723,0.3,2724,0.276,2725,0.276,2726,0.3,2727,0.3,2728,0.24,2729,0.3,2730,0.3,2731,0.261,2732,0.3,2733,0.276,2734,0.3,2735,0.3,2736,0.3,2737,0.3,2738,0.276,2739,0.3,2740,0.3,2741,0.276,2742,0.3]],["component/44",[273,0.458]],["title/45",[214,27.683,215,24.256,216,25.899,217,30.537]],["name/45",[216,0.695,217,0.819]],["text/45",[13,3.385,20,2.194,27,2.63,40,1.305,64,1.685,71,4.681,79,1.222,92,1.77,139,1.685,143,1.418,188,2.626,191,1.499,194,2.897,210,1.314,214,4.271,215,4.963,216,5.946,237,2.094,238,3.559,240,2.545,241,4.99,293,1.726,304,4.792,305,2.094,306,2.432,307,1.97,355,1.086,375,4.388,380,1.747,395,2.201,431,1.539,546,3.158,639,2.049,674,2.341,706,1.873,773,3.332,796,2.094,810,2.008,868,4.681,894,2.545,895,4.191,897,3.653,983,2.545,1128,2.976,1239,2.341,1324,5.414,1768,2.266,1813,4.476,2438,2.145,2454,2.697,2455,5.737,2743,2.928,2744,4.859,2745,2.928,2746,2.928,2747,2.928,2748,2.928,2749,2.928,2750,2.928,2751,2.928,2752,2.928,2753,2.928,2754,2.928,2755,2.928,2756,6.227,2757,6.227,2758,5.737,2759,2.928,2760,2.928,2761,2.928,2762,2.928,2763,2.928,2764,2.928,2765,2.928,2766,2.928,2767,2.928,2768,2.928,2769,2.928,2770,2.928,2771,2.928,2772,2.928,2773,2.928,2774,2.928,2775,2.928,2776,2.928,2777,2.928]],["component/45",[273,0.458]],["title/46",[375,35.907,2778,57.187]],["name/46",[2778,1.965]],["text/46",[3,3.037,11,4.315,19,3.568,27,2.568,143,2.7,166,3.568,170,4.784,191,2.855,217,3.625,375,4.376,431,4.214,476,3.514,654,4.192,658,3.686,773,3.824,897,4.192,923,3.463,1000,3.824,1128,3.415,2003,3.753,2778,8.161,2779,9.388,2780,5.576,2781,5.576,2782,5.576,2783,5.576,2784,5.576,2785,5.576,2786,5.576,2787,5.576,2788,5.576,2789,5.576,2790,5.576,2791,4.631,2792,5.576,2793,5.576,2794,5.576,2795,5.576,2796,5.576,2797,5.576,2798,5.576,2799,5.576,2800,5.576,2801,5.576,2802,5.576]],["component/46",[273,0.458]],["title/47",[1,23.144,7,28.551,1935,34.041]],["name/47",[7,0.656,1935,0.782]],["text/47",[1,4.8,3,3.191,7,5.728,12,4.208,27,2.448,30,3.14,32,2.856,57,3.28,58,3.166,70,2.67,71,2.985,72,3.098,91,2.744,107,4.122,108,4.365,191,3.861,194,2.049,290,2.771,324,2.257,407,3.389,431,2.694,1005,2.165,1193,3.967,1415,4.825,1820,6.03,1935,6.53,1939,5.395,2078,4.722,2083,4.722,2803,5.126,2804,5.126,2805,6.556,2806,5.126,2807,5.126]],["component/47",[273,0.458]],["title/48-1",[42,49.075]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48-2",[13,30.724,27,17.997]],["name/48-2",[]],["text/48-2",[]],["component/48-2",[]],["title/48-3",[27,17.997,216,36.27]],["name/48-3",[]],["text/48-3",[]],["component/48-3",[]],["title/48-4",[52,34.145]],["name/48-4",[]],["text/48-4",[]],["component/48-4",[]],["title/48",[27,14.995,900,35.631,1128,33.571]],["name/48",[900,1.469]],["text/48",[3,1.724,12,0.871,13,5.337,16,1.119,20,0.836,22,3.411,23,2.562,27,2.958,42,1.105,51,2.599,52,3.545,54,1.706,58,2.238,70,1.708,96,1.204,106,1.021,188,2.882,193,1.134,194,0.74,195,2.702,210,1.471,214,1.091,215,0.956,216,3.715,218,1.325,219,1.011,220,3.466,226,2.684,236,1.119,237,3.155,238,3.231,241,2.539,247,1.296,268,2.305,304,3.525,309,1.325,313,1.167,341,0.94,355,4.012,357,1.001,371,1.078,375,1.011,391,2.432,458,0.94,470,1.224,473,1.066,524,2.539,546,1.204,683,1.887,810,3.025,843,4.82,900,1.204,927,1.481,932,1.481,1029,1.296,1128,3.265,1173,1.481,1197,1.433,1316,2.621,1317,2.294,1544,1.357,1556,3.087,1582,2.916,2321,1.706,2393,1.61,2479,1.61,2512,1.61,2604,1.481,2651,1.61,2659,1.706,2808,1.852,2809,1.706,2810,4.411,2811,3.278,2812,3.278,2813,3.278,2814,1.852,2815,1.852,2816,1.852,2817,6.207,2818,4.411,2819,1.852,2820,1.852,2821,1.852,2822,3.278,2823,1.852,2824,3.02,2825,1.852,2826,3.278,2827,3.527,2828,1.706,2829,3.02,2830,3.02,2831,5.331,2832,3.278,2833,1.852,2834,4.411,2835,1.852,2836,3.278,2837,3.278,2838,1.852,2839,1.852,2840,3.278,2841,1.852,2842,4.411,2843,3.278,2844,1.852,2845,1.852,2846,1.852,2847,1.852,2848,3.278,2849,3.278]],["component/48",[273,0.458]],["title/49",[206,32.876,267,31.613,1970,56.51]],["name/49",[7,0.455,206,0.611,1970,0.698]],["text/49",[3,1.957,7,4.425,12,1.322,14,2.704,16,2.839,22,1.799,27,2.15,52,1.167,58,2.54,81,1.52,84,1.637,103,2.385,106,1.55,107,2.164,108,1.372,154,1.439,188,1.52,191,1.439,194,3.604,206,1.968,211,2.444,217,1.828,236,1.699,244,2.113,262,2.673,267,5.717,270,4.182,288,1.404,297,1.828,301,1.746,304,3.105,308,1.439,355,1.043,371,1.637,384,2.405,403,2.176,450,2.011,460,1.505,462,1.535,516,2.59,572,2.59,599,1.928,639,3.287,649,2.335,683,1.618,722,2.59,734,1.828,900,3.053,943,1.928,985,1.859,1116,3.531,1216,1.722,1289,2.335,1386,3.756,1439,2.059,1554,2.176,1862,2.059,1905,3.999,1934,5.449,1935,4.389,1942,2.113,1948,2.59,1956,3.609,1970,9.552,2025,2.444,2074,3.36,2472,6.51,2480,2.335,2514,2.59,2805,2.444,2850,4.697,2851,4.697,2852,4.697,2853,4.697,2854,2.811,2855,2.811,2856,2.811,2857,2.444,2858,2.811,2859,2.811,2860,2.811,2861,2.811,2862,2.811,2863,2.811,2864,2.811,2865,2.811]],["component/49",[273,0.458]],["title/50",[144,32.094,472,42.087]],["name/50",[144,0.615,472,0.806]],["text/50",[11,5.722,20,3.339,27,2.979,67,5.289,143,3.58,144,5.647,176,4.358,191,3.786,217,4.807,264,4.731,472,7.405,604,3.997,1029,5.175,1128,4.529,1495,5.559,1544,5.416,1698,6.428,2056,6.141,2866,7.394,2867,7.394]],["component/50",[273,0.458]],["title/51",[2868,71.502]],["name/51",[2868,1.965]],["text/51",[3,2.077,20,2.9,27,2.423,81,3.471,124,3.505,143,3.11,144,3.133,154,3.288,166,4.109,176,3.785,248,3.989,288,3.208,298,3.406,325,4.405,363,4.246,486,6.074,507,4.495,581,5.334,779,4.495,797,3.989,832,4.047,1128,3.934,1909,5.334,2056,5.334,2868,9.499,2869,5.583,2870,6.422,2871,6.422,2872,6.422,2873,6.422,2874,6.422,2875,6.422,2876,6.422,2877,6.422,2878,6.422,2879,6.422]],["component/51",[273,0.458]],["title/52",[80,29.517,468,38.306]],["name/52",[80,0.392,468,0.508,1331,0.676]],["text/52",[20,4.085,27,1.812,30,4.057,32,3.689,40,2.953,58,2.781,80,4.059,114,2.458,191,3.391,298,3.513,363,5.98,375,3.615,468,6.966,1377,5.501,2111,6.101,2132,5.501,2880,6.623,2881,6.623,2882,6.623,2883,6.623,2884,6.623,2885,6.623,2886,8.556,2887,6.623,2888,6.623,2889,6.623,2890,6.101,2891,6.623]],["component/52",[273,0.458]],["title/53-1",[814,49.454,1128,40.292]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53",[27,17.997,847,47.055]],["name/53",[27,0.345,847,0.901]],["text/53",[2,2.675,3,1.352,9,2.238,10,2.435,16,2.527,27,3.291,42,2.495,52,3.283,64,2.407,79,1.746,139,2.407,143,2.025,154,2.141,171,2.991,198,2.814,215,2.159,219,3.53,220,4.204,242,2.123,248,2.597,274,2.94,275,4.526,281,2.527,302,3.495,312,2.675,361,2.056,384,2.141,391,3.565,415,2.635,429,2.926,447,2.926,468,2.435,474,7.234,486,2.868,561,5.004,565,3.143,599,2.868,604,2.26,683,2.407,697,5.171,779,2.926,832,2.635,847,5.656,884,3.143,1175,2.718,1245,3.473,1437,3.143,1542,2.764,1549,3.062,1839,3.343,2102,3.473,2467,3.635,2598,3.473,2702,3.635,2892,4.181,2893,4.181,2894,10.174,2895,4.181,2896,4.181,2897,4.181,2898,4.181]],["component/53",[273,0.458]],["title/54-1",[42,49.075]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[14,37.865,150,32.595]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54-3",[114,24.41,978,46.039]],["name/54-3",[]],["text/54-3",[]],["component/54-3",[]],["title/54-4",[114,24.41,417,44.27]],["name/54-4",[]],["text/54-4",[]],["component/54-4",[]],["title/54-5",[288,32.855,295,34.267]],["name/54-5",[]],["text/54-5",[]],["component/54-5",[]],["title/54",[151,15.134,274,21.353,288,23.461,396,25.641]],["name/54",[151,0.406,274,0.573]],["text/54",[1,0.411,3,2.337,6,1.615,9,3.574,13,0.852,14,2.508,15,0.574,20,1.161,23,0.468,27,0.499,40,1.706,52,0.757,58,2.031,59,0.809,61,0.452,69,1.403,70,0.507,73,3.13,76,0.503,80,1.451,81,1.39,82,0.656,83,0.548,84,0.567,90,1.7,91,1.731,92,1.102,99,1.411,103,0.926,104,0.995,110,0.517,114,3.638,120,0.522,126,1.911,127,1.7,132,0.976,133,1.075,138,0.561,139,0.561,143,1.852,144,0.475,148,0.527,150,4.201,151,2.973,155,0.668,156,0.605,164,1.578,178,1.585,181,1.403,184,2.109,186,1.981,187,1.276,188,0.527,191,0.499,194,1.028,196,0.986,201,0.697,210,0.818,217,0.633,226,1.295,229,0.714,236,0.589,242,2.456,245,0.668,259,0.697,263,0.589,266,1.554,267,1.73,268,1.398,271,0.581,274,3.854,275,0.682,291,1.305,293,0.574,295,1.685,308,0.934,311,0.784,312,0.623,315,0.644,323,0.668,324,1.424,326,0.597,342,0.548,343,1.133,349,0.581,355,0.954,357,0.986,360,0.847,364,0.668,371,0.567,374,0.446,380,0.581,383,0.605,384,1.959,385,2.343,387,1.088,391,1.418,396,1.403,399,0.554,404,1.05,410,1.597,413,0.754,417,1.227,423,0.644,432,0.532,438,0.656,454,0.754,458,1.305,460,0.522,461,2.487,462,0.995,463,1.186,473,1.48,476,0.614,518,0.864,532,0.682,540,0.644,544,0.644,583,0.809,604,0.527,606,1.206,617,1.305,619,0.714,623,0.754,629,0.589,636,1.149,668,0.714,671,1.458,682,0.589,742,0.732,747,0.779,757,0.517,769,4.315,783,1.251,786,0.714,792,0.754,796,0.697,813,0.714,833,0.754,839,0.897,845,1.883,903,0.697,905,0.697,912,0.847,923,0.605,955,0.623,976,0.779,978,3.049,991,1.458,998,0.697,1002,0.522,1003,0.847,1009,1.227,1012,0.581,1018,3.473,1128,1.117,1158,1.99,1177,1.186,1204,0.757,1207,0.732,1209,2.427,1216,1.117,1223,0.697,1252,0.668,1254,0.754,1259,2.136,1264,0.779,1267,0.732,1270,1.411,1299,0.633,1322,0.697,1440,1.933,1511,0.633,1533,0.897,1553,0.754,1570,2.503,1578,1.276,1656,0.754,1658,0.779,1690,1.305,1717,0.779,1734,3.191,1784,1.206,1864,0.809,1866,0.809,1868,0.779,2007,0.809,2087,0.847,2103,0.809,2270,0.633,2372,1.68,2460,0.847,2471,0.897,2572,0.682,2585,2.176,2586,0.779,2613,4.055,2614,3.743,2615,2.586,2616,0.779,2617,1.515,2618,0.809,2640,1.933,2653,0.847,2663,1.458,2665,0.779,2666,0.732,2668,0.779,2669,0.847,2678,0.697,2695,0.847,2899,4.379,2900,0.974,2901,0.974,2902,1.933,2903,0.847,2904,0.974,2905,1.68,2906,1.515,2907,0.974,2908,0.897,2909,0.974,2910,0.974,2911,0.897,2912,1.824,2913,0.974,2914,0.897,2915,0.897,2916,0.754,2917,0.974,2918,1.371,2919,0.974,2920,0.847,2921,0.897,2922,0.847,2923,0.974,2924,0.847,2925,0.974,2926,0.847,2927,0.974,2928,0.974,2929,0.974,2930,0.974,2931,0.974,2932,0.974,2933,0.974,2934,0.974]],["component/54",[273,0.458]],["title/55-1",[151,21.194,274,29.903]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[2916,50.906,2935,49.454]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55",[274,24.915,396,29.918,555,31.196]],["name/55",[954,1.749]],["text/55",[0,2.787,2,1.76,3,3.149,12,1.294,20,2.083,27,2.298,40,2.056,62,2.068,69,1.501,86,2.391,110,4.118,114,2.586,126,2.303,150,1.363,151,1.486,154,3.049,156,2.864,159,1.565,184,1.516,189,1.602,193,1.685,194,1.843,210,2.672,212,2.015,219,2.517,252,1.76,256,1.818,268,1.189,274,5.069,275,3.228,288,2.303,290,1.487,291,1.967,293,2.718,311,1.182,312,1.76,323,1.886,324,2.03,343,1.708,355,1.021,375,1.501,384,1.408,396,2.517,413,2.128,415,1.733,417,1.851,423,1.818,430,1.473,437,1.76,438,1.851,458,1.396,462,1.501,477,1.886,521,1.925,555,1.565,565,2.068,580,3.752,603,1.708,609,2.128,627,1.641,636,1.733,645,1.501,654,2.068,655,1.967,673,1.851,724,1.886,727,1.662,742,2.068,747,2.199,775,1.76,848,2.068,862,2.199,884,2.068,912,2.391,923,1.708,924,2.068,953,2.391,955,1.76,1009,1.851,1208,6.477,1236,2.284,1323,3.83,1538,2.068,1839,2.199,2224,2.534,2535,4.009,2586,2.199,2610,2.128,2703,3.569,2706,2.534,2916,2.128,2935,3.467,2936,2.391,2937,2.534,2938,2.534,2939,2.751,2940,4.946,2941,2.284,2942,2.534,2943,2.391,2944,2.751,2945,2.534,2946,2.391]],["component/55",[273,0.458]],["title/56-1",[195,28.772,268,20.307,270,21.788,274,21.353]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56-2",[461,35.631,1018,33.571,2663,43.827]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["title/56-3",[76,33.969,420,33.969]],["name/56-3",[]],["text/56-3",[]],["component/56-3",[]],["title/56",[268,23.695,270,25.423,274,24.915]],["name/56",[268,0.377,270,0.405,274,0.397]],["text/56",[1,2.446,3,2.836,6,2.893,9,3.101,14,1.524,20,2.017,27,1.222,40,1.991,52,1.854,58,3.459,90,1.391,104,2.438,106,1.46,114,4.029,126,2.893,138,1.524,143,1.282,150,1.312,151,1.866,194,3.504,195,4.166,196,2.414,210,1.188,242,2.94,266,4.591,268,4.285,270,3.155,274,5.016,297,2.903,308,1.355,355,0.982,357,1.431,371,1.542,374,1.211,384,1.355,387,1.58,404,1.524,415,1.668,438,1.782,449,1.853,458,2.94,461,5.355,478,1.721,510,1.694,611,3.456,645,3.161,693,3.271,727,2.699,797,2.774,843,1.894,847,3.194,863,2.049,1018,2.735,1204,1.099,1208,1.621,1209,1.475,1230,1.621,1592,6.591,1687,2.439,2058,3.709,2585,3.898,2613,1.894,2614,2.049,2646,1.75,2652,1.782,2663,3.571,2665,3.571,2666,1.99,2668,2.117,2669,2.301,2678,1.894,2902,1.99,2947,2.647,2948,2.301]],["component/56",[273,0.458]],["title/57-1",[110,29.072,274,24.915,580,34.538]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["title/57-2",[274,29.903,275,46.039]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["title/57-3",[151,15.134,274,21.353,447,32.876,518,22.251]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["title/57",[274,37.389]],["name/57",[1542,1.494]],["text/57",[1,1.402,3,2.376,6,2.229,7,1.73,12,0.884,14,1.082,27,0.909,40,0.838,58,0.789,61,0.872,69,1.026,73,0.924,84,1.094,89,2.196,92,1.136,102,0.988,103,0.954,104,2.941,110,3.606,112,1.094,114,3.055,123,1.016,124,1.813,148,2.912,150,0.931,151,1.736,153,2.007,154,2.285,157,0.903,159,1.89,170,1.121,176,1.108,181,1.026,184,3.393,189,1.094,194,1.784,210,0.843,242,0.954,252,1.202,253,1.454,258,1.094,274,5.04,275,6.624,290,2.412,291,2.376,293,1.108,294,1.731,298,1.762,299,1.831,313,1.184,324,0.827,331,1.561,333,4.05,336,1.454,355,0.697,361,2.194,363,1.243,372,1.503,373,1.136,380,1.121,382,1.289,397,1.413,399,1.07,404,1.912,418,1.413,432,1.813,437,3.447,447,1.315,462,1.813,478,1.222,480,1.377,502,0.954,513,0.924,517,1.731,518,2.114,558,1.634,560,2.887,567,1.108,585,1.315,588,1.413,598,1.503,603,2.063,606,1.243,609,2.57,619,1.377,627,1.121,629,2.697,648,2.376,673,1.265,698,1.634,727,2.697,733,1.151,734,2.159,758,1.561,771,1.503,780,1.561,796,1.344,797,1.167,798,3.355,799,1.561,801,1.731,873,1.413,884,1.413,890,1.167,920,2.656,923,2.771,924,3.355,943,1.289,978,1.315,982,1.503,998,1.344,1009,1.265,1208,2.733,1248,1.503,1267,1.413,1322,1.344,1355,1.026,1370,1.243,1415,1.202,1489,1.315,1576,1.167,1651,1.731,1699,1.634,1763,1.503,1784,1.243,1939,1.344,2026,2.759,2207,1.731,2544,1.503,2610,1.454,2702,1.634,2703,1.454,2890,1.731,2902,2.497,2916,1.454,2924,1.634,2935,1.413,2937,1.731,2938,6.262,2943,1.634,2949,1.503,2950,1.731,2951,1.88,2952,1.88,2953,1.88,2954,1.731,2955,1.88,2956,1.731,2957,3.321,2958,3.321,2959,1.88,2960,1.88,2961,1.88,2962,1.88,2963,1.88,2964,1.88]],["component/57",[273,0.458]],["title/58-1",[112,38.306,2653,57.187]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["title/58",[114,20.338,334,36.886,2948,47.648]],["name/58",[114,0.324,334,0.588,2948,0.759]],["text/58",[6,5.19,9,5.882,38,4.008,40,2.553,73,4.018,80,4.662,92,3.461,100,3.854,104,3.126,114,4.461,120,3.066,148,3.096,150,2.838,151,2.633,210,2.57,265,3.158,281,3.461,324,3.598,357,3.096,387,3.417,391,3.158,783,3.928,845,4.195,890,3.557,980,4.432,1204,2.378,1357,3.723,1690,4.097,2613,4.097,2678,4.097,2899,6.788,2965,5.727]],["component/58",[273,0.458]],["title/59-1",[1,27.778,1592,49.454]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[396,44.895]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[3,17.728,268,23.695,1592,41.204]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59-4",[268,28.438,458,33.397]],["name/59-4",[]],["text/59-4",[]],["component/59-4",[]],["title/59-5",[610,48.183,775,42.087]],["name/59-5",[]],["text/59-5",[]],["component/59-5",[]],["title/59-6",[610,48.183,804,54.637]],["name/59-6",[]],["text/59-6",[]],["component/59-6",[]],["title/59-7",[268,28.438,1592,49.454]],["name/59-7",[]],["text/59-7",[]],["component/59-7",[]],["title/59-8",[216,36.27,430,35.219]],["name/59-8",[]],["text/59-8",[]],["component/59-8",[]],["title/59-9",[297,42.764,2966,60.601]],["name/59-9",[]],["text/59-9",[]],["component/59-9",[]],["title/59-10",[140,26.157,2967,60.601]],["name/59-10",[]],["text/59-10",[]],["component/59-10",[]],["title/59",[3,15.194,268,20.307,693,34.407,1592,35.314]],["name/59",[268,0.545,693,0.923]],["text/59",[1,4.104,3,3.143,13,0.644,20,1.135,27,1.169,30,0.844,32,0.768,40,1.545,50,0.896,52,1.043,57,0.882,58,0.579,61,0.639,73,1.703,93,0.802,97,1.269,103,0.7,114,1.285,115,0.882,123,0.745,124,1.372,127,0.911,134,0.752,140,0.548,141,1.255,146,0.812,151,0.81,154,1.287,164,0.672,181,1.372,186,3.414,189,0.802,191,0.705,193,0.844,194,0.551,206,0.964,210,1.128,218,0.986,219,0.752,226,2.152,234,0.927,242,0.7,248,0.856,265,0.76,268,4.836,271,1.499,272,0.76,274,1.575,290,0.745,295,1.309,298,0.731,301,0.856,308,1.287,311,1.08,312,4.715,323,3.408,324,0.607,328,0.776,342,0.776,353,1.691,355,3.967,380,0.822,396,1.372,437,0.882,442,1.036,449,0.964,455,0.802,458,3.1,462,0.752,478,0.896,518,0.653,552,1.198,563,1.066,567,1.481,599,0.945,603,1.561,609,1.945,610,4.817,619,1.841,645,1.372,673,0.927,681,1.144,693,3.64,744,1.269,775,2.216,804,3.549,931,1.144,940,1.269,986,1.144,1005,1.061,1018,2.122,1162,1.269,1166,0.986,1204,1.043,1209,1.4,1210,0.986,1213,1.144,1223,5.272,1230,0.844,1237,1.691,1326,1.102,1327,2.009,1329,3.212,1331,1.066,1332,1.066,1333,1.102,1342,0.856,1381,1.198,1385,1.144,1447,2.537,1564,3.408,1576,0.856,1582,0.911,1592,4.944,1633,1.269,1726,1.269,1961,1.269,1998,1.102,2063,1.036,2077,4.63,2079,3.987,2093,3.549,2362,1.144,2410,1.269,2487,1.144,2585,1.691,2598,1.144,2725,1.269,2902,1.036,2903,2.185,2926,1.198,2949,1.102,2966,4.578,2967,2.315,2968,1.378,2969,1.378,2970,1.378,2971,2.513,2972,2.513,2973,4.191,2974,3.549,2975,1.378,2976,1.378,2977,1.378,2978,1.269,2979,1.378,2980,1.378,2981,1.198,2982,1.378,2983,3.464,2984,1.269,2985,1.378,2986,1.378,2987,1.378,2988,1.269,2989,2.513,2990,1.378,2991,2.513,2992,2.513,2993,1.378,2994,2.315,2995,1.378,2996,1.198,2997,1.198]],["component/59",[273,0.458]],["title/60-1",[325,45.116,1155,52.601]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60-2",[27,17.997,2673,47.055]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["title/60-3",[311,28.269,327,42.764]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["title/60-4",[347,37.389]],["name/60-4",[]],["text/60-4",[]],["component/60-4",[]],["title/60-5",[311,28.269,1141,45.116]],["name/60-5",[]],["text/60-5",[]],["component/60-5",[]],["title/60-6",[146,38.767,311,28.269]],["name/60-6",[]],["text/60-6",[]],["component/60-6",[]],["title/60-7",[327,53.468]],["name/60-7",[]],["text/60-7",[]],["component/60-7",[]],["title/60-8",[1141,56.409]],["name/60-8",[]],["text/60-8",[]],["component/60-8",[]],["title/60",[151,21.194,311,28.269]],["name/60",[151,0.406,311,0.541]],["text/60",[10,1.631,13,0.725,20,0.701,27,1.047,40,1.706,52,1.163,58,1.176,68,1.087,69,3.293,76,0.802,91,0.832,96,1.821,103,1.422,111,0.656,125,1.065,139,2.202,143,1.356,146,1.651,151,1.233,155,2.624,171,1.111,176,0.915,181,0.848,194,1.872,196,2.924,210,0.697,272,0.856,282,2.154,288,0.776,295,1.993,307,1.045,311,3.21,327,2.487,344,0.994,349,0.927,355,4.638,374,0.711,388,0.965,410,1.74,420,0.802,430,0.832,440,1.29,445,1.921,460,1.5,473,0.894,494,4.155,502,0.788,555,2.178,636,1.765,734,1.01,887,1.242,923,0.965,977,1.202,1002,2.048,1005,1.183,1017,1.111,1124,4.669,1125,2.327,1133,1.35,1134,1.852,1141,4.138,1142,1.045,1173,1.242,1230,2.343,1239,1.242,1271,4.934,1321,2.168,1553,1.202,1576,0.965,1663,1.087,1756,1.045,1868,1.242,1873,1.29,1931,3.178,2003,2.575,2082,1.202,2211,1.138,2239,1.202,2329,1.202,2459,1.29,2572,1.96,2586,1.242,2595,1.431,2597,1.431,2673,2.004,2686,1.202,2711,1.242,2998,4.314,2999,1.553,3000,1.553,3001,2.581,3002,1.553,3003,1.553,3004,1.553,3005,2.801,3006,1.553,3007,4.702,3008,1.553,3009,2.581,3010,1.553,3011,1.553,3012,2.581,3013,1.553,3014,1.431,3015,2.435,3016,1.553,3017,2.801,3018,2.801,3019,2.801,3020,2.801,3021,1.553,3022,1.553,3023,3.889,3024,2.801,3025,1.553,3026,1.553,3027,1.553,3028,1.553,3029,1.553,3030,1.553,3031,1.553,3032,1.553,3033,1.553,3034,1.553,3035,1.553,3036,2.581,3037,4.314,3038,1.553,3039,2.801,3040,2.801,3041,1.553,3042,1.553,3043,1.553,3044,1.553,3045,1.553,3046,6.576,3047,5.409,3048,2.961,3049,1.553,3050,1.553,3051,1.553,3052,1.553,3053,2.801,3054,4.683,3055,1.431,3056,1.553,3057,1.553,3058,1.553,3059,2.801,3060,1.553,3061,3.525,3062,1.431,3063,2.801,3064,1.553,3065,1.553,3066,1.553,3067,1.553,3068,1.431,3069,1.553,3070,1.431,3071,1.431]],["component/60",[273,0.458]],["title/61",[282,37.036,1002,35.219]],["name/61",[374,0.576,2211,0.923]],["text/61",[52,3.865,58,2.902,91,3.7,143,3.347,145,4.569,194,2.763,277,4.837,282,5.242,288,4.65,328,3.891,355,4.364,458,3.509,494,5.487,1002,6.296,1275,6.008,1295,6.367,1564,4.74,2211,6.82,2998,6.367,3072,5.74,3073,6.367]],["component/61",[273,0.458]],["title/62",[282,37.036,1134,43.489]],["name/62",[282,0.709,1134,0.833]],["text/62",[3,1.788,27,1.512,58,2.321,69,3.017,134,3.017,143,3.858,154,2.83,194,3.185,282,4.486,293,3.258,329,4.42,349,3.298,355,4.676,795,4.805,1124,4.278,1133,4.805,1134,6.176,1192,6.926,1879,4.805,1887,4.805,2211,4.049,2534,5.092,2544,4.42,3012,7.34,3014,5.092,3023,6.617,3072,4.591,3074,5.528,3075,5.528,3076,5.528,3077,5.528,3078,5.528,3079,5.528,3080,5.528,3081,5.528,3082,5.528,3083,5.528,3084,4.278]],["component/62",[273,0.458]],["title/63-1",[80,29.517,311,28.269]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["title/63-2",[111,23.144,284,39.206,427,36.886]],["name/63-2",[]],["text/63-2",[]],["component/63-2",[]],["title/63-3",[114,17.43,140,18.678,427,31.613,1257,32.876]],["name/63-3",[]],["text/63-3",[]],["component/63-3",[]],["title/63-4",[140,26.157,311,28.269]],["name/63-4",[]],["text/63-4",[]],["component/63-4",[]],["title/63-5",[311,28.269,1257,46.039]],["name/63-5",[]],["text/63-5",[]],["component/63-5",[]],["title/63",[80,29.517,580,41.453]],["name/63",[80,0.565,580,0.794]],["text/63",[1,1.434,3,1.099,6,1.228,9,1.317,13,0.629,23,1.182,27,1.336,40,1.514,58,0.565,69,2.666,79,0.562,80,4.174,81,0.727,83,0.758,89,2.245,91,1.818,100,1.655,105,1.769,107,1.565,111,1.772,112,1.432,114,2.7,122,0.75,132,0.72,140,2.392,141,1.228,143,3.688,144,0.657,148,0.727,151,1.574,164,0.657,166,0.861,184,0.742,186,1.506,189,0.784,191,0.689,194,1.677,196,2.268,210,1.104,226,0.678,235,1.118,263,0.813,265,1.356,268,0.582,270,0.624,273,0.475,278,1.849,284,3.001,288,0.672,293,0.793,295,0.701,307,0.906,311,3.405,324,2.415,343,0.836,355,3.632,374,1.125,407,0.89,427,4.645,431,0.707,458,0.683,463,1.599,472,0.861,502,1.249,645,1.342,700,0.923,702,2.138,772,3.865,775,0.861,1002,0.72,1035,0.986,1141,3.35,1142,1.655,1207,1.849,1208,0.824,1226,1.574,1256,2.043,1257,3.84,1271,6.51,1336,3.247,1564,3.763,1727,1.17,1756,0.906,1872,1.118,1890,1.17,1915,1.012,1976,1.118,2003,0.906,2069,2.043,2079,0.963,2210,1.17,2299,1.076,2351,2.138,2354,1.17,2357,1.24,2389,3.924,2511,1.118,2537,2.628,2553,1.076,2594,2.716,2616,1.967,2619,4.247,2621,1.24,2624,1.24,2646,1.626,2665,1.967,3048,1.903,3085,1.118,3086,2.46,3087,2.46,3088,1.346,3089,1.24,3090,4.196,3091,1.346,3092,4.196,3093,2.46,3094,2.46,3095,2.46,3096,2.46,3097,1.346,3098,1.346,3099,3.396,3100,1.346,3101,1.346,3102,1.346,3103,1.346,3104,1.24,3105,1.346,3106,1.346,3107,1.346,3108,1.346,3109,1.346,3110,1.346,3111,1.346,3112,1.346,3113,1.346,3114,1.346,3115,1.346,3116,1.346,3117,1.346,3118,1.346,3119,1.346,3120,2.46,3121,2.46,3122,1.346,3123,2.46,3124,2.46,3125,2.46,3126,1.24,3127,1.346,3128,1.346,3129,1.346,3130,1.346,3131,1.24,3132,2.46,3133,4.196,3134,4.885,3135,1.118,3136,1.24,3137,3.396,3138,2.46,3139,2.46,3140,1.24,3141,1.118,3142,1.346,3143,1.346,3144,1.346,3145,1.346,3146,2.46,3147,2.46,3148,3.396,3149,2.46,3150,2.46,3151,3.396,3152,2.46]],["component/63",[273,0.458]],["title/64-1",[1542,54.375]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["title/64-2",[27,8.994,144,16.039,541,26.287,604,17.77,2604,26.287,2610,25.44,2611,27.305]],["name/64-2",[]],["text/64-2",[]],["component/64-2",[]],["title/64-3",[144,22.918,197,31.613,541,37.561,604,25.391]],["name/64-3",[]],["text/64-3",[]],["component/64-3",[]],["title/64-4",[197,44.27,305,47.055]],["name/64-4",[]],["text/64-4",[]],["component/64-4",[]],["title/64-5",[144,22.918,197,31.613,518,22.251,648,33.601]],["name/64-5",[]],["text/64-5",[]],["component/64-5",[]],["title/64-6",[144,22.918,197,31.613,604,25.391,1308,31.055]],["name/64-6",[]],["text/64-6",[]],["component/64-6",[]],["title/64-7",[197,36.886,305,39.206,1308,36.235]],["name/64-7",[]],["text/64-7",[]],["component/64-7",[]],["title/64-8",[197,36.886,518,25.963,1308,36.235]],["name/64-8",[]],["text/64-8",[]],["component/64-8",[]],["title/64-9",[110,34.892,3153,60.601]],["name/64-9",[]],["text/64-9",[]],["component/64-9",[]],["title/64",[144,32.094,604,35.557]],["name/64",[144,0.615,604,0.681]],["text/64",[1,1.963,3,2.878,9,1.311,10,0.537,12,0.434,13,0.809,20,2.782,22,0.59,23,4.404,27,1.496,40,0.411,52,0.383,58,3.048,61,1.136,64,0.531,70,2.645,76,0.476,80,0.777,91,2.928,95,0.675,103,0.879,104,0.503,106,0.508,107,1.926,108,0.45,110,2.217,111,3.565,114,1.359,115,0.59,117,3.023,122,0.965,132,4.43,133,1.443,138,0.531,139,2.406,140,0.367,143,2.982,144,2.668,146,1.82,147,0.849,148,1.98,150,0.858,157,0.443,164,3.293,171,2.209,174,1.212,182,2.685,186,2.56,194,0.692,196,0.936,205,1.239,210,0.414,214,0.543,215,0.476,226,1.844,237,0.659,245,1.188,252,0.59,253,0.713,258,0.537,265,0.508,268,2.364,270,2.355,279,0.62,284,3.632,286,1.958,295,0.48,297,0.599,305,2.209,308,1.254,311,1.998,324,1.84,341,0.879,343,1.918,344,0.59,355,1.725,374,2.667,384,1.254,389,1.033,399,0.525,404,2.108,415,0.581,420,1.891,436,0.693,452,0.737,455,1.008,457,1.619,459,0.632,460,0.927,462,0.945,463,3.023,472,1.108,490,0.801,494,1.82,502,1.859,518,1.16,520,0.849,532,2.162,555,1.394,578,3.342,599,0.632,603,0.573,604,0.936,610,0.675,636,1.543,648,1.752,658,1.145,673,1.165,719,0.713,724,0.632,757,1.299,775,0.59,807,0.766,811,0.693,828,0.801,850,0.766,866,0.693,905,0.659,934,2.565,943,0.632,963,0.645,980,0.713,987,0.62,993,0.713,1005,0.389,1136,1.505,1175,1.592,1208,2.243,1210,2.209,1216,1.5,1287,0.632,1299,0.599,1355,0.503,1357,2.008,1370,1.145,1423,0.713,1428,0.766,1495,0.693,1496,1.212,1511,0.599,1576,1.076,1583,1.385,1624,0.713,1668,0.659,1669,0.573,1679,0.801,1747,1.841,1748,0.766,1848,0.737,2003,2.465,2008,0.801,2031,1.34,2257,0.766,2270,3.301,2329,0.713,2389,0.659,2420,1.505,2537,2.834,2555,0.766,2564,0.801,2604,0.737,2610,0.713,2611,0.766,2628,0.849,2676,0.849,2758,0.849,2817,0.849,2905,0.849,2940,2.034,3153,2.845,3154,0.922,3155,0.922,3156,0.849,3157,0.922,3158,0.849,3159,1.732,3160,1.732,3161,0.922,3162,0.922,3163,0.922,3164,0.849,3165,0.922,3166,0.849,3167,0.922,3168,0.922,3169,0.922,3170,1.732,3171,1.732,3172,1.732,3173,1.732,3174,1.732,3175,2.449,3176,3.089,3177,1.732,3178,1.732,3179,0.922,3180,0.922,3181,0.849,3182,0.693,3183,1.732,3184,0.922,3185,0.922,3186,0.849,3187,2.449,3188,1.732,3189,1.732,3190,0.922,3191,0.922,3192,0.922,3193,0.922,3194,0.922,3195,0.922,3196,0.922,3197,0.922,3198,0.922,3199,0.922,3200,0.922,3201,0.922,3202,0.922,3203,0.922,3204,0.922,3205,0.922,3206,0.737]],["component/64",[273,0.458]],["title/65-1",[2389,58.833]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["title/65-2",[6,32.855,2678,47.055]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["title/65-3",[6,32.855,317,49.454]],["name/65-3",[]],["text/65-3",[]],["component/65-3",[]],["title/65-4",[6,27.375,14,31.549,114,20.338]],["name/65-4",[]],["text/65-4",[]],["component/65-4",[]],["title/65-5",[114,24.41,2652,44.27]],["name/65-5",[]],["text/65-5",[]],["component/65-5",[]],["title/65-6",[13,19.195,15,24.22,114,15.25,355,15.25,1175,26.718]],["name/65-6",[]],["text/65-6",[]],["component/65-6",[]],["title/65-7",[6,32.855,398,43.489]],["name/65-7",[]],["text/65-7",[]],["component/65-7",[]],["title/65-8",[6,32.855,328,37.036]],["name/65-8",[]],["text/65-8",[]],["component/65-8",[]],["title/65-9",[161,56.409]],["name/65-9",[]],["text/65-9",[]],["component/65-9",[]],["title/65-10",[186,33.571,2537,42.414,3207,45.523]],["name/65-10",[]],["text/65-10",[]],["component/65-10",[]],["title/65-11",[6,27.375,161,37.591,2537,42.414]],["name/65-11",[]],["text/65-11",[]],["component/65-11",[]],["title/65-12",[6,27.375,161,37.591,186,33.571]],["name/65-12",[]],["text/65-12",[]],["component/65-12",[]],["title/65-13",[100,55.352]],["name/65-13",[]],["text/65-13",[]],["component/65-13",[]],["title/65-14",[120,44.035]],["name/65-14",[]],["text/65-14",[]],["component/65-14",[]],["title/65-15",[262,37.442,276,47.055]],["name/65-15",[]],["text/65-15",[]],["component/65-15",[]],["title/65-16",[276,58.833]],["name/65-16",[]],["text/65-16",[]],["component/65-16",[]],["title/65-17",[161,56.409]],["name/65-17",[]],["text/65-17",[]],["component/65-17",[]],["title/65-18",[144,32.094,648,47.055]],["name/65-18",[]],["text/65-18",[]],["component/65-18",[]],["title/65-19",[23,31.616,132,35.219]],["name/65-19",[]],["text/65-19",[]],["component/65-19",[]],["title/65-20",[105,34.267,2096,52.601]],["name/65-20",[]],["text/65-20",[]],["component/65-20",[]],["title/65-21",[3,21.278,268,28.438]],["name/65-21",[]],["text/65-21",[]],["component/65-21",[]],["title/65-22",[108,32.094,2065,49.454]],["name/65-22",[]],["text/65-22",[]],["component/65-22",[]],["title/65",[6,32.855,112,38.306]],["name/65",[6,0.629,112,0.733]],["text/65",[0,0.21,1,0.669,2,0.636,3,1.773,5,0.554,6,3.219,7,0.518,9,1.402,10,0.579,13,0.74,14,0.746,20,1.388,23,3.198,27,1.256,36,0.41,38,0.243,40,1.559,51,0.4,52,1.366,58,1.632,61,0.461,64,0.391,67,0.485,68,0.696,69,0.19,70,1.713,71,0.202,73,0.171,76,1.352,80,1.279,81,0.537,82,0.234,83,0.56,84,0.579,86,0.302,89,0.23,90,1.249,91,2.458,93,0.202,95,0.497,98,0.302,99,4.027,100,5.132,102,0.183,103,0.505,104,0.19,105,2.025,106,0.374,107,2.647,108,1.897,109,0.261,110,0.527,111,1.105,112,0.202,113,0.226,114,2.741,115,0.829,117,0.226,118,0.564,119,0.465,120,0.995,121,0.795,122,0.554,123,0.188,126,1.186,127,0.23,130,0.682,131,1.74,132,2.18,133,0.764,134,0.37,139,1.507,140,1.134,141,0.339,142,0.449,143,1.972,144,2.394,145,0.23,146,0.205,148,0.7,152,1.003,153,0.21,157,0.326,160,0.51,161,0.465,164,1.5,171,0.485,174,2.721,176,0.4,180,0.566,184,0.374,185,0.525,186,1.883,189,0.579,194,0.849,196,0.188,198,0.234,210,1.279,214,0.205,216,0.374,224,0.289,226,1.196,235,1.076,241,0.2,242,0.505,245,0.682,248,0.216,252,0.222,253,0.269,254,0.748,257,0.23,258,0.922,259,0.485,262,0.386,263,0.41,265,0.548,266,0.21,268,0.918,270,0.735,274,0.589,276,2.039,281,0.41,282,0.196,283,0.449,284,1.133,285,1.796,286,1.036,288,0.174,290,0.367,295,0.181,298,0.184,308,0.347,311,1.414,312,0.829,313,0.219,318,0.171,321,0.278,324,1.354,325,0.682,326,0.609,327,1.544,328,0.382,329,0.278,338,0.269,341,0.345,342,0.56,343,2.043,344,0.434,348,0.475,354,0.59,355,4.147,359,0.21,365,0.238,371,0.395,373,0.601,374,0.971,379,0.302,380,0.593,384,0.178,387,0.207,389,1.701,391,0.192,392,0.764,394,0.261,398,1.403,403,0.269,404,0.746,408,0.457,409,0.289,415,0.219,420,1.096,423,0.449,426,0.302,430,0.363,431,0.357,434,0.32,438,1.066,444,3.54,451,0.249,454,1.003,457,1.047,458,0.505,460,0.363,461,0.226,462,1.429,463,1.029,470,0.23,473,0.912,494,0.933,502,0.176,504,0.261,506,0.51,513,0.171,518,0.75,521,0.696,524,0.572,527,0.278,532,0.475,540,0.449,546,0.646,555,0.386,556,0.289,559,0.255,568,0.261,578,0.278,585,0.243,596,0.302,598,0.278,601,0.32,603,0.618,604,0.856,606,0.23,611,1.643,620,1.076,621,0.216,627,0.207,636,0.998,640,0.289,648,0.711,652,0.289,670,0.889,671,0.795,700,0.238,706,0.222,719,0.525,724,0.465,726,0.23,729,0.2,734,0.646,757,0.36,767,0.525,775,0.434,792,0.269,811,0.974,834,0.564,846,0.222,858,0.249,866,0.261,867,1.358,872,0.289,882,0.234,930,0.278,932,0.795,934,3.531,964,0.269,970,0.795,977,0.269,987,0.669,991,0.278,998,0.485,1002,0.694,1005,0.147,1012,0.945,1018,0.213,1029,0.243,1037,0.32,1128,0.416,1141,0.238,1142,0.457,1153,0.826,1173,0.278,1191,0.261,1205,0.593,1208,0.609,1216,1.746,1219,0.255,1230,0.213,1231,0.261,1252,0.465,1287,0.238,1322,0.249,1343,0.826,1409,0.864,1415,1.52,1423,0.769,1452,0.497,1458,0.302,1496,0.696,1553,0.269,1557,0.525,1570,0.269,1576,0.216,1578,0.696,1655,0.32,1669,0.422,1714,0.238,1734,0.497,1747,0.261,1768,0.269,1790,0.269,1793,2.065,1795,0.32,1838,0.543,1857,0.302,1864,0.289,1868,0.278,1869,1.713,1879,0.864,1887,0.864,1939,0.249,2002,0.795,2018,0.289,2030,0.269,2058,0.826,2065,1.596,2069,0.289,2096,1.697,2103,0.289,2116,0.32,2132,0.289,2163,0.625,2206,0.278,2210,0.59,2241,0.59,2270,0.226,2340,1.377,2389,2.501,2393,0.302,2397,0.625,2420,1.845,2509,0.59,2511,0.289,2521,0.302,2537,1.003,2540,1.956,2541,0.32,2572,0.475,2583,0.564,2585,0.669,2589,0.302,2602,0.269,2604,0.278,2605,1.459,2607,0.32,2608,0.32,2610,0.269,2611,0.289,2619,0.302,2640,1.596,2642,0.32,2643,0.32,2644,0.625,2647,0.32,2651,0.302,2652,0.669,2673,0.249,2678,1.518,2679,0.625,2687,0.302,2689,0.289,2724,0.625,2728,0.543,2911,0.32,2921,0.625,2922,0.302,2940,0.289,2942,0.32,2945,0.32,2946,0.302,2949,1.697,3007,0.59,3023,1.763,3048,2.206,3062,0.625,3084,0.269,3126,0.32,3166,0.32,3206,0.278,3208,0.32,3209,1.459,3210,0.348,3211,0.348,3212,0.348,3213,0.59,3214,0.302,3215,1.296,3216,0.348,3217,0.679,3218,0.679,3219,0.994,3220,0.679,3221,0.994,3222,0.679,3223,0.994,3224,1.584,3225,1.584,3226,0.679,3227,0.679,3228,0.679,3229,1.194,3230,0.679,3231,0.348,3232,1.296,3233,0.679,3234,1.584,3235,0.994,3236,0.679,3237,0.679,3238,0.679,3239,0.348,3240,0.348,3241,0.679,3242,1.296,3243,1.296,3244,0.679,3245,0.679,3246,0.348,3247,0.348,3248,0.348,3249,0.348,3250,0.679,3251,1.296,3252,0.348,3253,1.296,3254,0.679,3255,0.994,3256,0.679,3257,0.994,3258,0.994,3259,0.32,3260,0.348,3261,0.348,3262,0.278,3263,0.348,3264,0.348,3265,0.348,3266,0.348,3267,0.348,3268,0.348,3269,0.302,3270,0.994,3271,0.348,3272,0.32,3273,0.348,3274,0.679,3275,0.348,3276,0.348,3277,0.302,3278,0.348,3279,0.348,3280,0.348,3281,0.32,3282,0.348,3283,0.348,3284,0.994,3285,0.348,3286,0.348,3287,0.348,3288,0.348,3289,0.348,3290,0.679,3291,2.123,3292,0.348,3293,0.679,3294,0.348,3295,0.32,3296,0.348,3297,0.289,3298,0.348,3299,0.348,3300,0.348,3301,0.348,3302,0.348,3303,0.348,3304,0.348,3305,0.348,3306,0.348,3307,0.348,3308,0.348,3309,0.32,3310,0.302,3311,0.348,3312,0.348,3313,0.348,3314,0.348,3315,0.348,3316,0.348,3317,0.348,3318,0.348,3319,0.32,3320,0.59,3321,0.679,3322,0.302]],["component/65",[273,0.458]],["title/66-1",[105,24.469,107,21.64,108,22.918,355,17.43]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["title/66-2",[105,21.409,107,18.934,108,20.051,355,15.25,580,25.898]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["title/66-3",[105,21.409,107,18.934,108,20.051,311,17.662,355,15.25]],["name/66-3",[]],["text/66-3",[]],["component/66-3",[]],["title/66-4",[105,24.469,107,21.64,108,22.918,355,17.43]],["name/66-4",[]],["text/66-4",[]],["component/66-4",[]],["title/66-5",[105,21.409,107,18.934,108,20.051,355,15.25,2011,30.103]],["name/66-5",[]],["text/66-5",[]],["component/66-5",[]],["title/66-6",[6,20.527,105,21.409,107,18.934,108,20.051,355,15.25]],["name/66-6",[]],["text/66-6",[]],["component/66-6",[]],["title/66-7",[107,21.64,108,22.918,355,17.43,580,29.601]],["name/66-7",[]],["text/66-7",[]],["component/66-7",[]],["title/66-8",[107,21.64,108,22.918,311,20.186,355,17.43]],["name/66-8",[]],["text/66-8",[]],["component/66-8",[]],["title/66-9",[107,25.25,114,20.338,1251,36.886]],["name/66-9",[]],["text/66-9",[]],["component/66-9",[]],["title/66-10",[76,33.969,420,33.969]],["name/66-10",[]],["text/66-10",[]],["component/66-10",[]],["title/66",[105,24.469,107,21.64,108,22.918,112,27.354]],["name/66",[105,0.656,112,0.733]],["text/66",[1,1.661,2,4.081,3,2.851,5,0.361,6,1.965,7,0.928,9,2.29,12,0.583,13,1.998,15,0.382,17,0.502,20,1.238,23,1.318,24,0.538,27,2.039,38,0.454,40,1.222,52,0.947,58,1.931,62,0.932,67,0.464,68,0.868,71,0.377,73,2.103,78,0.518,80,0.8,81,0.35,84,1.038,90,0.652,92,0.749,96,1.159,99,0.959,100,0.834,103,0.629,104,2.511,105,5.676,106,0.357,107,4.68,108,4.394,109,1.34,110,1.21,111,0.963,112,1.845,114,2.766,117,0.421,120,1.221,122,0.691,124,0.354,126,0.619,127,0.428,128,0.487,132,0.954,134,0.354,136,0.428,138,0.373,139,0.714,140,0.493,141,0.619,142,0.428,143,0.863,144,0.316,146,1.344,151,1.914,153,0.392,157,0.596,174,0.454,186,1.397,188,0.67,192,0.475,194,1.71,196,0.963,210,1.422,213,0.538,214,0.382,216,0.357,226,0.326,236,1.077,241,0.373,260,0.538,261,3.145,263,1.657,264,0.415,265,0.357,266,1.077,267,0.436,274,0.81,279,0.834,281,0.392,290,0.963,293,1.344,298,0.344,299,1.258,304,0.428,311,2.343,318,0.319,324,1.569,327,0.421,328,0.365,334,1.199,342,1.003,343,2.857,344,0.415,349,0.387,355,2.581,359,0.749,361,1.348,365,0.444,373,0.392,374,0.297,380,0.387,384,0.635,387,1.063,389,0.387,391,0.357,398,0.428,399,0.369,404,0.714,410,0.403,415,0.408,418,0.487,430,0.347,431,0.652,441,0.408,444,0.868,448,0.428,449,0.868,455,0.722,457,1.178,458,0.329,460,0.664,476,0.408,492,0.908,494,0.731,502,0.329,513,0.61,518,0.587,524,0.373,546,0.421,548,0.538,555,0.369,560,1.078,564,0.475,569,0.563,580,1.728,585,0.454,599,0.444,606,0.428,611,0.502,621,0.403,625,1.379,645,0.354,647,0.464,653,0.597,695,0.538,715,0.538,724,1.222,729,0.373,733,0.397,757,0.344,769,0.464,783,0.85,791,1.425,792,0.502,797,0.403,813,0.475,818,0.563,846,0.793,847,0.464,855,0.502,873,0.487,929,0.518,935,0.502,938,0.563,955,0.415,959,0.502,978,0.454,987,1.199,1005,1.661,1017,0.464,1121,0.959,1128,0.759,1147,0.793,1197,0.502,1204,0.269,1208,2.183,1210,0.464,1216,1.397,1248,0.518,1249,0.518,1250,1.48,1251,2.647,1252,0.85,1253,1.305,1261,0.377,1271,0.454,1305,0.834,1323,0.538,1355,0.677,1370,0.428,1415,0.415,1439,0.908,1487,0.597,1489,0.868,1511,0.421,1538,0.487,1564,0.444,1576,0.403,1578,0.454,1640,1.03,1669,0.77,1714,0.444,1724,0.538,1734,0.475,1750,0.781,1784,0.428,1826,0.563,1834,0.518,1854,0.991,1858,0.538,1866,0.538,1925,0.518,1935,1.417,1956,0.387,1985,0.597,1999,0.518,2000,0.597,2011,2.008,2012,0.597,2018,1.03,2023,0.538,2027,0.502,2031,0.959,2058,1.03,2059,1.078,2062,0.597,2063,0.487,2065,2.957,2079,0.464,2080,1.078,2096,1.824,2108,1.078,2206,0.518,2257,0.538,2270,0.421,2346,0.597,2366,0.464,2433,0.502,2459,0.538,2585,1.199,2640,0.932,2678,0.887,2704,1.765,2741,0.597,2886,1.03,2903,0.563,2916,0.502,2918,0.487,2978,0.597,2981,0.563,3009,1.142,3206,0.518,3208,1.642,3209,1.142,3297,0.538,3310,1.078,3320,0.563,3322,1.983,3323,1.24,3324,0.648,3325,2.102,3326,1.24,3327,0.648,3328,0.648,3329,0.597,3330,0.648,3331,0.597,3332,0.648,3333,0.648,3334,0.597,3335,0.648,3336,0.648,3337,0.648,3338,1.078,3339,0.597,3340,0.502,3341,1.24,3342,1.642,3343,1.642,3344,1.24,3345,1.549,3346,0.563,3347,0.597,3348,2.281,3349,0.648,3350,0.648,3351,1.24,3352,0.648,3353,0.648,3354,0.648,3355,0.648,3356,0.563,3357,0.563,3358,0.648,3359,3.284,3360,0.648,3361,1.24,3362,0.538,3363,1.078,3364,0.648,3365,0.648,3366,0.538,3367,0.597]],["component/66",[273,0.458]],["title/67-1",[107,25.25,151,17.659,288,27.375]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[3357,71.502]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67-3",[79,34.338]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["title/67-4",[111,27.778,2037,36.645]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["title/67-5",[1005,34.731]],["name/67-5",[]],["text/67-5",[]],["component/67-5",[]],["title/67-6",[1204,34.145]],["name/67-6",[]],["text/67-6",[]],["component/67-6",[]],["title/67-7",[140,26.157,141,32.855]],["name/67-7",[]],["text/67-7",[]],["component/67-7",[]],["title/67-8",[151,21.194,347,29.903]],["name/67-8",[]],["text/67-8",[]],["component/67-8",[]],["title/67-9",[3338,71.502]],["name/67-9",[]],["text/67-9",[]],["component/67-9",[]],["title/67-10",[79,34.338]],["name/67-10",[]],["text/67-10",[]],["component/67-10",[]],["title/67-11",[111,27.778,2037,36.645]],["name/67-11",[]],["text/67-11",[]],["component/67-11",[]],["title/67-12",[1005,34.731]],["name/67-12",[]],["text/67-12",[]],["component/67-12",[]],["title/67-13",[1204,34.145]],["name/67-13",[]],["text/67-13",[]],["component/67-13",[]],["title/67-14",[140,26.157,141,32.855]],["name/67-14",[]],["text/67-14",[]],["component/67-14",[]],["title/67-15",[151,21.194,347,29.903]],["name/67-15",[]],["text/67-15",[]],["component/67-15",[]],["title/67-16",[3368,75.77]],["name/67-16",[]],["text/67-16",[]],["component/67-16",[]],["title/67-17",[79,34.338]],["name/67-17",[]],["text/67-17",[]],["component/67-17",[]],["title/67-18",[111,27.778,2037,36.645]],["name/67-18",[]],["text/67-18",[]],["component/67-18",[]],["title/67-19",[1005,34.731]],["name/67-19",[]],["text/67-19",[]],["component/67-19",[]],["title/67-20",[1204,34.145]],["name/67-20",[]],["text/67-20",[]],["component/67-20",[]],["title/67-21",[151,21.194,347,29.903]],["name/67-21",[]],["text/67-21",[]],["component/67-21",[]],["title/67-22",[3369,75.77]],["name/67-22",[]],["text/67-22",[]],["component/67-22",[]],["title/67-23",[79,34.338]],["name/67-23",[]],["text/67-23",[]],["component/67-23",[]],["title/67-24",[111,27.778,2037,36.645]],["name/67-24",[]],["text/67-24",[]],["component/67-24",[]],["title/67-25",[1005,34.731]],["name/67-25",[]],["text/67-25",[]],["component/67-25",[]],["title/67-26",[1204,34.145]],["name/67-26",[]],["text/67-26",[]],["component/67-26",[]],["title/67-27",[151,21.194,347,29.903]],["name/67-27",[]],["text/67-27",[]],["component/67-27",[]],["title/67-28",[3370,75.77]],["name/67-28",[]],["text/67-28",[]],["component/67-28",[]],["title/67-29",[79,34.338]],["name/67-29",[]],["text/67-29",[]],["component/67-29",[]],["title/67-30",[111,27.778,2037,36.645]],["name/67-30",[]],["text/67-30",[]],["component/67-30",[]],["title/67-31",[1005,34.731]],["name/67-31",[]],["text/67-31",[]],["component/67-31",[]],["title/67-32",[1204,34.145]],["name/67-32",[]],["text/67-32",[]],["component/67-32",[]],["title/67-33",[151,21.194,347,29.903]],["name/67-33",[]],["text/67-33",[]],["component/67-33",[]],["title/67-34",[3371,75.77]],["name/67-34",[]],["text/67-34",[]],["component/67-34",[]],["title/67-35",[79,34.338]],["name/67-35",[]],["text/67-35",[]],["component/67-35",[]],["title/67-36",[111,27.778,2037,36.645]],["name/67-36",[]],["text/67-36",[]],["component/67-36",[]],["title/67-37",[1005,34.731]],["name/67-37",[]],["text/67-37",[]],["component/67-37",[]],["title/67-38",[1204,34.145]],["name/67-38",[]],["text/67-38",[]],["component/67-38",[]],["title/67-39",[151,21.194,347,29.903]],["name/67-39",[]],["text/67-39",[]],["component/67-39",[]],["title/67-40",[3372,75.77]],["name/67-40",[]],["text/67-40",[]],["component/67-40",[]],["title/67-41",[79,34.338]],["name/67-41",[]],["text/67-41",[]],["component/67-41",[]],["title/67-42",[111,27.778,2037,36.645]],["name/67-42",[]],["text/67-42",[]],["component/67-42",[]],["title/67-43",[1005,34.731]],["name/67-43",[]],["text/67-43",[]],["component/67-43",[]],["title/67-44",[1204,34.145]],["name/67-44",[]],["text/67-44",[]],["component/67-44",[]],["title/67-45",[151,21.194,347,29.903]],["name/67-45",[]],["text/67-45",[]],["component/67-45",[]],["title/67-46",[3373,75.77]],["name/67-46",[]],["text/67-46",[]],["component/67-46",[]],["title/67-47",[79,34.338]],["name/67-47",[]],["text/67-47",[]],["component/67-47",[]],["title/67-48",[111,27.778,2037,36.645]],["name/67-48",[]],["text/67-48",[]],["component/67-48",[]],["title/67-49",[1005,34.731]],["name/67-49",[]],["text/67-49",[]],["component/67-49",[]],["title/67-50",[1204,34.145]],["name/67-50",[]],["text/67-50",[]],["component/67-50",[]],["title/67-51",[151,21.194,347,29.903]],["name/67-51",[]],["text/67-51",[]],["component/67-51",[]],["title/67-52",[3345,71.502]],["name/67-52",[]],["text/67-52",[]],["component/67-52",[]],["title/67-53",[79,34.338]],["name/67-53",[]],["text/67-53",[]],["component/67-53",[]],["title/67-54",[111,27.778,2037,36.645]],["name/67-54",[]],["text/67-54",[]],["component/67-54",[]],["title/67-55",[1005,34.731]],["name/67-55",[]],["text/67-55",[]],["component/67-55",[]],["title/67-56",[1204,34.145]],["name/67-56",[]],["text/67-56",[]],["component/67-56",[]],["title/67-57",[140,26.157,141,32.855]],["name/67-57",[]],["text/67-57",[]],["component/67-57",[]],["title/67-58",[151,21.194,347,29.903]],["name/67-58",[]],["text/67-58",[]],["component/67-58",[]],["title/67-59",[3356,71.502]],["name/67-59",[]],["text/67-59",[]],["component/67-59",[]],["title/67-60",[79,34.338]],["name/67-60",[]],["text/67-60",[]],["component/67-60",[]],["title/67-61",[111,27.778,2037,36.645]],["name/67-61",[]],["text/67-61",[]],["component/67-61",[]],["title/67-62",[1005,34.731]],["name/67-62",[]],["text/67-62",[]],["component/67-62",[]],["title/67-63",[1204,34.145]],["name/67-63",[]],["text/67-63",[]],["component/67-63",[]],["title/67-64",[140,26.157,141,32.855]],["name/67-64",[]],["text/67-64",[]],["component/67-64",[]],["title/67-65",[151,21.194,347,29.903]],["name/67-65",[]],["text/67-65",[]],["component/67-65",[]],["title/67-66",[107,25.25,140,21.794,288,27.375]],["name/67-66",[]],["text/67-66",[]],["component/67-66",[]],["title/67-67",[3374,75.77]],["name/67-67",[]],["text/67-67",[]],["component/67-67",[]],["title/67-68",[79,34.338]],["name/67-68",[]],["text/67-68",[]],["component/67-68",[]],["title/67-69",[140,26.157,1652,46.039]],["name/67-69",[]],["text/67-69",[]],["component/67-69",[]],["title/67-70",[140,26.157,347,29.903]],["name/67-70",[]],["text/67-70",[]],["component/67-70",[]],["title/67-71",[3375,75.77]],["name/67-71",[]],["text/67-71",[]],["component/67-71",[]],["title/67-72",[79,34.338]],["name/67-72",[]],["text/67-72",[]],["component/67-72",[]],["title/67-73",[140,26.157,1652,46.039]],["name/67-73",[]],["text/67-73",[]],["component/67-73",[]],["title/67-74",[140,26.157,347,29.903]],["name/67-74",[]],["text/67-74",[]],["component/67-74",[]],["title/67-75",[3376,75.77]],["name/67-75",[]],["text/67-75",[]],["component/67-75",[]],["title/67-76",[79,34.338]],["name/67-76",[]],["text/67-76",[]],["component/67-76",[]],["title/67-77",[140,26.157,1652,46.039]],["name/67-77",[]],["text/67-77",[]],["component/67-77",[]],["title/67-78",[140,26.157,347,29.903]],["name/67-78",[]],["text/67-78",[]],["component/67-78",[]],["title/67-79",[3377,75.77]],["name/67-79",[]],["text/67-79",[]],["component/67-79",[]],["title/67-80",[79,34.338]],["name/67-80",[]],["text/67-80",[]],["component/67-80",[]],["title/67-81",[140,26.157,1652,46.039]],["name/67-81",[]],["text/67-81",[]],["component/67-81",[]],["title/67-82",[140,26.157,347,29.903]],["name/67-82",[]],["text/67-82",[]],["component/67-82",[]],["title/67",[105,24.469,140,18.678,151,15.134,288,23.461]],["name/67",[105,0.656,288,0.629]],["text/67",[1,3.217,3,3.298,6,2.38,12,0.449,20,0.431,27,0.69,40,0.425,58,1.06,64,1.453,69,1.734,73,3.632,79,0.746,80,0.802,81,2.034,82,1.203,83,0.537,85,3.141,89,1.182,91,1.351,103,0.484,104,1.734,105,6.099,106,0.986,107,3.169,108,4.466,109,2.389,110,0.506,112,1.041,114,0.354,126,0.476,133,1.054,140,2.735,141,1.587,143,0.866,151,3.311,154,1.292,176,1.054,186,1.946,196,0.966,229,0.699,242,0.484,258,2.497,295,0.497,308,0.488,311,2.702,315,1.668,321,0.763,324,0.42,342,2.414,343,1.973,355,0.663,374,0.818,384,0.488,387,1.896,396,0.521,417,0.642,431,0.94,444,0.667,462,0.521,468,0.555,472,4.022,492,1.31,567,0.562,604,1.364,813,0.699,865,2.633,881,0.584,1005,1.066,1204,2.321,1208,4.525,1230,1.095,1237,0.642,1252,2.941,1253,3.141,1357,1.162,1799,0.763,1907,1.554,1909,0.792,1915,1.344,1957,0.792,2011,5.232,2019,1.485,2031,7.891,2056,1.485,2059,0.829,2060,3.728,2065,5.727,2069,1.485,2075,0.879,2236,0.792,2704,3.318,3048,1.383,3309,0.879,3320,0.829,3338,2.194,3339,5.792,3342,3.466,3343,4.389,3345,2.194,3356,3.271,3357,2.762,3368,1.647,3369,1.647,3370,1.647,3371,1.647,3372,1.647,3373,3.466,3374,2.325,3375,2.325,3376,2.325,3377,2.325,3378,0.954,3379,0.954,3380,0.954,3381,0.954,3382,4.764,3383,6.287,3384,0.954,3385,0.954,3386,3.177]],["component/67",[273,0.458]],["title/68-1",[3387,65.767]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68-2",[391,36.27,3387,52.601]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["title/68-3",[42,32.703,156,34.041,445,37.591]],["name/68-3",[]],["text/68-3",[]],["component/68-3",[]],["title/68-4",[112,38.306,2585,44.27]],["name/68-4",[]],["text/68-4",[]],["component/68-4",[]],["title/68-5",[2,30.054,3,15.194,27,12.851,3387,37.561]],["name/68-5",[]],["text/68-5",[]],["component/68-5",[]],["title/68-6",[295,42.844]],["name/68-6",[]],["text/68-6",[]],["component/68-6",[]],["title/68",[27,12.851,102,24.689,272,25.899,3387,37.561]],["name/68",[283,1.494]],["text/68",[0,0.462,2,2.592,3,2.659,5,2.875,9,2.58,10,0.446,12,1.482,13,1.231,14,0.44,15,0.856,16,0.462,20,0.346,23,2.48,27,1.915,40,1.175,52,1.848,58,0.61,61,0.355,64,0.44,70,1.373,73,2.839,80,3.141,81,0.414,84,0.846,89,0.506,90,0.402,91,0.41,96,0.944,102,0.402,103,2.057,105,0.399,106,0.801,108,0.373,110,1.671,111,3.042,112,0.446,114,1.504,115,0.929,126,4.106,132,1.11,133,0.451,134,0.418,136,0.96,144,0.373,146,0.856,148,0.414,150,2.388,151,1.166,153,4.354,157,1.947,164,0.373,176,0.856,179,1.306,180,0.436,188,0.414,189,0.846,193,0.89,194,0.829,200,1.064,210,1.818,214,0.451,215,0.395,242,1.338,258,0.846,259,1.483,261,0.612,262,0.436,263,0.878,265,1.454,266,1.253,270,1.223,272,0.801,274,0.66,277,0.536,281,0.462,283,0.506,284,1.483,293,0.451,295,1.641,299,0.801,302,0.414,303,0.636,307,1.395,311,1.741,318,0.714,324,1.387,325,0.996,333,0.575,336,0.592,338,0.592,340,1.161,342,0.431,343,0.475,344,0.929,346,0.612,348,1.017,349,0.457,351,0.612,355,2.744,357,1.957,359,0.878,361,0.376,365,0.525,371,0.446,374,0.665,383,0.475,384,1.613,388,1.956,389,2.418,391,0.801,392,0.451,393,1.092,394,1.092,399,0.827,403,1.124,404,0.836,410,2.248,427,1.395,429,0.536,430,0.41,431,0.402,436,0.575,438,0.515,443,0.575,450,0.547,451,0.547,452,0.612,453,0.592,454,1.124,455,0.446,460,1.412,462,0.793,463,0.944,467,0.525,473,0.44,478,1.714,494,0.451,502,0.737,511,0.515,518,0.982,521,1.017,540,0.506,541,0.612,555,2.06,567,1.222,603,0.475,604,1.121,620,0.636,621,1.637,623,0.592,629,0.462,657,0.612,668,1.519,670,2.16,671,0.612,696,0.636,706,0.929,726,0.506,734,0.497,740,0.56,749,0.612,757,1.92,758,0.636,769,0.547,771,0.612,791,0.612,797,1.637,818,1.263,819,0.547,832,0.482,836,1.124,855,0.592,862,0.612,881,0.469,882,2.995,885,0.469,895,0.977,903,0.547,913,0.592,925,0.705,943,2.16,944,1.658,962,0.665,963,0.536,976,0.612,985,0.506,987,0.515,988,0.636,994,0.575,998,0.547,1012,0.457,1032,0.636,1033,0.665,1035,0.56,1122,1.338,1142,0.515,1147,0.49,1158,0.592,1166,1.483,1204,0.603,1210,0.547,1224,0.592,1230,1.27,1231,1.092,1237,0.515,1239,1.161,1254,1.124,1261,0.446,1277,0.665,1290,2.438,1293,0.705,1301,0.547,1355,0.418,1452,0.56,1538,0.575,1550,0.665,1553,1.124,1570,0.592,1578,0.536,1669,0.475,1670,1.722,1672,0.575,1690,0.547,1694,0.665,1696,1.206,1697,0.665,1700,0.705,1714,0.525,1734,0.56,1756,1.774,1784,0.506,1790,2.04,1797,1.338,1808,0.665,1853,1.206,1857,0.665,1872,1.206,1984,0.705,1995,0.705,1999,0.612,2013,0.665,2063,0.575,2074,0.547,2082,1.124,2211,0.56,2231,0.665,2239,0.592,2246,0.665,2270,0.497,2329,1.124,2412,0.705,2438,0.56,2490,0.665,2492,0.705,2495,0.705,2503,0.705,2505,0.665,2513,0.705,2539,1.91,2553,1.161,2564,0.665,2585,2.12,2602,0.592,2613,0.547,2663,1.658,2666,0.575,2703,0.592,2809,0.705,2899,0.636,2906,0.636,2916,1.124,2918,0.575,2973,0.575,2996,0.665,3015,2.738,3084,0.592,3297,0.636,3387,6.573,3388,0.705,3389,0.765,3390,0.765,3391,0.765,3392,0.765,3393,0.765,3394,1.453,3395,0.765,3396,0.765,3397,0.765,3398,4.45,3399,1.91,3400,2.637,3401,0.765,3402,0.765,3403,0.765,3404,0.765,3405,0.765,3406,0.765,3407,0.765,3408,0.705,3409,0.765,3410,0.765,3411,0.765,3412,0.765,3413,0.765,3414,0.765,3415,0.765,3416,1.453,3417,0.765,3418,0.765,3419,0.765]],["component/68",[273,0.458]],["title/69-1",[114,24.41,334,44.27]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[111,27.778,555,37.442]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69-3",[9,44.035]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["title/69-4",[281,49.71]],["name/69-4",[]],["text/69-4",[]],["component/69-4",[]],["title/69-5",[9,19.557,281,22.078,316,23.747,405,21.528,3420,36.531,3421,36.531]],["name/69-5",[]],["text/69-5",[]],["component/69-5",[]],["title/69-6",[215,42.471]],["name/69-6",[]],["text/69-6",[]],["component/69-6",[]],["title/69-7",[114,20.338,215,28.302,2935,41.204]],["name/69-7",[]],["text/69-7",[]],["component/69-7",[]],["title/69-8",[108,22.918,215,24.256,367,36.351,740,34.407]],["name/69-8",[]],["text/69-8",[]],["component/69-8",[]],["title/69-9",[107,18.934,150,20.364,215,21.222,326,25.173,389,24.522]],["name/69-9",[]],["text/69-9",[]],["component/69-9",[]],["title/69",[27,14.995,42,32.703,302,29.626]],["name/69",[27,0.239,42,0.521,302,0.472]],["text/69",[3,0.419,5,0.722,9,4.582,10,0.755,12,1.342,20,0.307,22,0.435,23,1.582,27,1.607,40,0.303,52,0.772,58,0.544,69,0.371,70,1.486,71,0.755,76,0.351,78,1.037,79,0.284,80,2.941,81,1.285,84,1.083,89,0.857,90,0.357,93,1.083,94,0.543,102,1.73,103,0.658,104,0.371,106,0.375,107,1.516,108,0.908,110,3.362,111,2.767,112,0.755,113,0.843,114,3.557,120,0.694,122,0.378,123,3.756,124,4.164,125,1.63,126,2.211,127,0.449,132,0.364,133,0.764,134,2.416,135,0.391,136,2.176,138,0.746,143,0.628,144,0.331,150,3.247,151,0.219,153,0.784,154,0.664,159,0.387,168,0.975,169,1.545,170,1.964,176,1.096,181,0.708,188,0.367,189,0.396,193,0.416,194,1.478,198,0.457,201,0.486,210,1.28,212,0.498,215,4.017,216,0.715,221,0.466,229,0.95,230,0.511,231,1.664,234,0.457,241,0.746,242,1.671,252,0.435,256,0.449,262,0.387,264,0.435,270,0.601,272,1.311,273,0.24,277,0.475,279,0.873,281,3.961,282,0.73,285,0.466,289,1.077,290,0.367,293,0.4,295,0.354,296,2.208,297,1.21,298,0.987,299,0.375,302,1.006,308,0.664,315,0.857,316,0.442,323,0.466,324,0.299,326,0.416,328,0.73,331,0.564,334,0.457,335,0.543,337,0.591,338,2.208,342,0.382,343,1.477,344,0.435,349,0.405,357,0.701,361,0.334,363,0.449,365,0.889,366,0.564,367,1.44,368,0.591,373,0.411,375,1.016,378,0.564,380,1.964,381,0.564,383,0.805,384,0.664,387,2.207,389,4.458,390,0.511,391,1.311,392,0.764,400,0.442,402,0.526,404,0.391,405,0.4,412,0.564,423,1.23,426,1.617,428,0.511,429,0.908,430,0.996,432,1.298,436,3.064,437,1.19,440,0.564,448,0.449,458,0.658,460,0.364,462,0.371,470,0.449,473,0.391,478,0.442,482,0.526,547,1.003,550,1.331,555,1.624,564,0.498,565,1.399,567,0.4,570,1.195,576,1.714,584,0.591,589,0.626,590,1.003,592,0.591,602,0.682,604,0.367,607,0.591,608,0.564,617,0.486,621,0.805,624,0.543,630,0.391,639,0.475,645,0.708,649,1.077,671,0.543,674,2.281,683,0.391,725,0.591,733,0.416,736,0.591,740,1.741,747,0.543,748,0.486,757,1.746,762,0.526,780,1.077,781,0.591,783,0.466,797,0.422,819,0.486,837,0.591,845,0.498,848,2.78,856,0.626,857,0.543,858,0.928,866,1.787,878,0.626,880,0.543,892,0.564,896,0.626,902,0.626,903,0.928,908,0.466,913,0.526,920,1.901,923,0.422,924,0.511,943,0.889,944,0.543,949,1.488,954,0.526,955,0.83,964,1.003,967,0.543,979,0.564,985,0.449,987,0.457,993,0.526,998,0.928,1012,1.11,1021,0.626,1030,0.591,1035,0.498,1147,1.19,1160,1.741,1167,0.626,1179,0.442,1193,1.44,1216,0.416,1230,0.416,1248,0.543,1261,0.396,1268,0.526,1270,0.526,1301,1.701,1322,0.486,1355,0.371,1438,1.077,1452,0.95,1458,0.591,1576,0.422,1609,0.564,1648,1.077,1659,0.564,1663,0.475,1666,0.591,1669,0.422,1672,1.399,1766,1.545,1790,1.003,1837,1.127,1840,0.591,1848,0.543,1853,2.734,1858,0.564,1862,0.95,1865,0.591,1909,0.564,1913,0.543,1930,0.511,1931,0.564,1999,0.543,2023,0.564,2030,0.526,2063,0.511,2074,0.486,2102,0.564,2225,0.626,2251,0.591,2402,0.626,2467,3.215,2480,0.564,2487,0.564,2501,0.543,2572,0.475,2602,1.003,2681,0.591,2685,0.626,2703,0.526,2708,0.626,2924,2.067,2935,1.399,2941,1.077,2943,0.591,2954,0.626,3325,1.195,3408,0.626,3422,0.679,3423,0.679,3424,1.297,3425,1.297,3426,0.679,3427,0.679,3428,0.679,3429,3.698,3430,0.679,3431,0.679,3432,0.679,3433,0.679,3434,0.679,3435,0.679,3436,0.679,3437,0.679,3438,0.679,3439,0.679,3440,1.297,3441,2.377,3442,0.679,3443,0.679,3444,0.679,3445,0.679,3446,0.679,3447,0.679,3448,0.679,3449,0.679,3450,0.679,3451,0.679,3452,0.679,3453,0.679,3454,0.679,3455,1.297,3456,0.679,3457,1.297,3458,0.679,3459,0.679,3460,0.679,3461,0.626,3462,0.679,3463,0.679,3464,0.679,3465,0.626,3466,0.679,3467,0.679,3468,0.626,3469,1.195,3470,0.679,3471,0.679,3472,0.679,3473,0.679,3474,0.679,3475,0.679,3476,0.679,3477,0.679,3478,0.679]],["component/69",[273,0.458]],["title/70-1",[111,23.144,270,25.423,450,39.206]],["name/70-1",[]],["text/70-1",[]],["component/70-1",[]],["title/70-2",[111,27.778,427,44.27]],["name/70-2",[]],["text/70-2",[]],["component/70-2",[]],["title/70-3",[3,21.278,2300,48.183]],["name/70-3",[]],["text/70-3",[]],["component/70-3",[]],["title/70-4",[164,32.094,2300,48.183]],["name/70-4",[]],["text/70-4",[]],["component/70-4",[]],["title/70-5",[1035,40.146,2299,43.827,2300,40.146]],["name/70-5",[]],["text/70-5",[]],["component/70-5",[]],["title/70-6",[215,42.471]],["name/70-6",[]],["text/70-6",[]],["component/70-6",[]],["title/70-7",[1142,44.27,2300,48.183]],["name/70-7",[]],["text/70-7",[]],["component/70-7",[]],["title/70-8",[215,24.256,332,40.836,347,21.353,2300,34.407]],["name/70-8",[]],["text/70-8",[]],["component/70-8",[]],["title/70-9",[518,31.16,2300,48.183]],["name/70-9",[]],["text/70-9",[]],["component/70-9",[]],["title/70-10",[1,27.778,296,50.906]],["name/70-10",[]],["text/70-10",[]],["component/70-10",[]],["title/70-11",[1,27.778,3366,54.637]],["name/70-11",[]],["text/70-11",[]],["component/70-11",[]],["title/70-12",[1,27.778,3479,60.601]],["name/70-12",[]],["text/70-12",[]],["component/70-12",[]],["title/70",[27,17.997,111,27.778]],["name/70",[27,0.345,111,0.532]],["text/70",[1,2.35,3,2.413,10,0.363,12,0.562,13,0.291,15,0.367,20,1.386,23,0.574,27,0.47,40,0.278,51,1.809,52,1.274,58,1.603,62,0.898,64,0.359,68,0.836,69,1.203,70,0.896,73,0.587,79,0.26,80,2.007,84,0.695,91,1.643,96,1.118,102,0.328,103,0.316,104,0.34,106,1.215,107,0.287,110,0.331,111,2.876,114,1.542,119,0.427,120,0.334,121,0.498,122,0.665,125,0.427,126,0.859,127,0.412,130,0.427,132,2.225,133,0.367,139,2.198,143,2.917,144,0.583,148,0.646,151,1.23,156,1.369,157,0.3,164,3.488,176,0.367,185,3.692,188,0.337,189,0.363,194,1.06,196,4.795,210,0.28,215,3.22,218,0.446,226,0.866,245,0.427,263,1.855,266,0.377,268,0.743,270,0.554,271,0.372,272,0.659,273,1.684,274,0.283,281,0.377,282,0.672,283,0.412,289,0.518,296,0.924,302,0.337,308,0.88,310,0.387,311,3.206,312,1.1,313,1.934,323,0.427,324,0.526,325,0.427,327,0.776,336,0.482,340,0.955,341,3.058,342,0.968,343,0.387,344,0.399,347,0.782,348,0.436,349,0.372,355,4.301,359,0.722,361,0.306,370,0.542,371,0.363,374,2.853,375,0.652,382,0.427,384,0.319,388,0.387,389,0.713,391,0.344,397,0.469,406,0.469,407,0.79,408,2.326,427,2.797,430,0.921,438,0.419,445,0.427,450,0.446,455,1.283,457,0.412,460,1.42,462,1.675,463,2.702,467,0.427,476,0.393,492,0.875,494,1.563,496,0.992,511,4.583,513,0.587,518,0.295,521,1.203,524,1.527,555,0.979,568,0.469,580,1.084,603,0.387,605,0.498,621,0.387,625,0.482,629,0.722,636,0.393,640,2.549,668,0.457,681,0.518,692,0.992,715,0.518,742,0.469,757,0.633,814,0.469,843,1.23,879,0.574,950,0.498,980,0.482,994,0.469,1002,1.851,1003,1.038,1009,0.419,1017,2.472,1018,0.382,1035,3.277,1141,0.819,1142,1.157,1160,0.875,1208,1.35,1209,0.347,1213,0.518,1216,0.382,1219,0.457,1226,0.764,1228,1.1,1230,1.053,1251,0.419,1264,2.454,1271,2.672,1287,0.427,1299,0.776,1379,1.584,1409,2.668,1511,0.405,1624,0.924,1659,0.518,1691,0.542,1714,0.427,1724,0.518,1727,0.542,1784,0.79,1872,2.871,1976,1.428,2003,1.483,2032,0.498,2100,2.306,2151,0.574,2249,0.542,2270,1.433,2299,3.323,2300,5.116,2340,0.542,2351,1.495,2354,1.038,2366,0.854,2433,0.924,2479,0.542,2544,0.498,2572,1.857,2593,0.542,2668,0.498,2686,1.331,2906,0.518,2950,0.574,2973,0.898,2994,0.574,3007,0.542,3048,1.331,3055,1.1,3061,2.03,3068,1.1,3135,1.831,3136,2.827,3206,0.498,3269,1.916,3272,0.574,3340,0.482,3366,1.428,3479,1.584,3480,2.204,3481,2.653,3482,0.623,3483,0.574,3484,0.623,3485,0.623,3486,2.204,3487,1.194,3488,1.194,3489,1.194,3490,1.194,3491,0.623,3492,2.204,3493,1.194,3494,1.194,3495,1.1,3496,2.204,3497,1.72,3498,0.623,3499,0.623,3500,0.623,3501,0.623,3502,1.194,3503,0.623,3504,0.623,3505,0.623,3506,1.194,3507,1.194,3508,0.574,3509,1.194,3510,1.194,3511,1.194,3512,1.194,3513,1.194,3514,1.194,3515,0.623,3516,0.623,3517,0.623,3518,0.623,3519,0.574,3520,0.623,3521,0.623,3522,0.623,3523,0.623,3524,0.623,3525,0.623,3526,0.574,3527,0.574,3528,0.623,3529,0.623]],["component/70",[273,0.458]],["title/71-1",[114,24.41,334,44.27]],["name/71-1",[]],["text/71-1",[]],["component/71-1",[]],["title/71-2",[114,24.41,1177,42.764]],["name/71-2",[]],["text/71-2",[]],["component/71-2",[]],["title/71-3",[111,19.836,114,17.43,167,40.836,417,31.613]],["name/71-3",[]],["text/71-3",[]],["component/71-3",[]],["title/71-4",[114,24.41,1257,46.039]],["name/71-4",[]],["text/71-4",[]],["component/71-4",[]],["title/71",[114,24.41,1270,50.906]],["name/71",[114,0.324,2650,0.804,3530,0.873]],["text/71",[5,1.603,6,2.643,9,3.293,12,0.968,14,0.638,23,0.533,27,0.303,52,0.46,58,2.011,61,0.954,70,0.577,71,0.645,76,1.857,80,2.577,82,0.746,84,0.645,90,1.081,91,0.593,93,1.676,102,1.081,103,1.044,104,1.123,105,1.499,107,2.207,108,0.541,109,1.546,110,0.588,111,1.518,114,4.324,120,0.593,122,0.618,126,4.293,134,0.605,138,1.184,140,2.104,141,1.796,142,3.498,143,0.537,144,1.404,148,1.556,150,3.946,151,0.927,156,0.688,161,0.76,167,0.964,184,0.611,185,0.858,186,0.679,187,1.44,194,1.15,210,0.497,212,0.812,226,1.036,231,0.776,241,0.638,266,1.739,270,0.514,272,0.611,274,1.308,276,0.793,281,0.67,284,0.793,290,1.112,297,0.721,311,1.237,315,0.733,324,2.872,326,0.679,328,0.624,334,0.746,342,0.624,343,0.688,349,1.717,355,3.861,357,1.556,359,0.67,374,1.645,384,0.568,385,2.59,387,2.145,389,1.717,390,0.833,392,0.653,399,0.631,416,1.788,417,4.14,423,0.733,431,0.583,437,0.709,445,0.76,451,1.471,458,1.825,461,1.337,462,0.605,473,1.184,490,0.964,518,0.525,527,0.886,540,0.733,606,0.733,611,0.858,621,1.278,645,0.605,658,0.733,676,0.921,700,0.76,729,0.638,733,0.679,746,1.021,783,3.629,823,1.021,845,4.207,867,1.316,872,1.709,883,1.021,935,0.858,951,0.921,973,0.661,977,0.858,978,1.44,980,1.592,1002,0.593,1171,1.021,1177,4.24,1206,1.895,1207,1.546,1208,1.26,1216,1.26,1231,0.833,1237,1.937,1249,2.875,1250,0.921,1256,1.709,1257,2.014,1265,1.021,1266,0.964,1267,2.703,1268,1.592,1269,1.021,1270,0.858,1308,0.733,1355,0.605,1590,1.895,1595,0.812,1690,1.471,1717,2.301,1734,0.812,1784,0.733,1856,0.964,1913,1.645,1942,0.833,2019,1.709,2030,0.858,2065,0.833,2251,2.502,2308,1.021,2446,1.021,2574,1.021,2585,0.746,2613,0.793,2614,1.592,2615,1.645,2652,2.42,2678,2.572,2703,1.592,2728,2.301,2902,0.833,3023,0.921,3140,1.895,3158,1.895,3340,0.858,3366,3.978,3461,1.021,3519,1.021,3531,2.878,3532,0.964,3533,1.021,3534,1.109,3535,1.109,3536,1.109,3537,2.057,3538,2.057,3539,2.057,3540,1.109,3541,2.057,3542,1.109,3543,1.109,3544,2.878,3545,2.878,3546,2.057,3547,2.057,3548,2.057,3549,1.109,3550,1.109,3551,1.109,3552,1.109]],["component/71",[273,0.458]],["title/72-1",[13,30.724,114,24.41]],["name/72-1",[]],["text/72-1",[]],["component/72-1",[]],["title/72-2",[114,24.41,266,39.758]],["name/72-2",[]],["text/72-2",[]],["component/72-2",[]],["title/72-3",[114,20.338,1002,29.344,2652,36.886]],["name/72-3",[]],["text/72-3",[]],["component/72-3",[]],["title/72-4",[311,23.554,328,30.858,2652,36.886]],["name/72-4",[]],["text/72-4",[]],["component/72-4",[]],["title/72-5",[15,27.683,114,17.43,1002,25.149,2646,31.055]],["name/72-5",[]],["text/72-5",[]],["component/72-5",[]],["title/72-6",[15,27.683,311,20.186,328,26.447,2646,31.055]],["name/72-6",[]],["text/72-6",[]],["component/72-6",[]],["title/72-7",[15,27.683,267,31.613,311,20.186,328,26.447]],["name/72-7",[]],["text/72-7",[]],["component/72-7",[]],["title/72-8",[114,24.41,226,33.122]],["name/72-8",[]],["text/72-8",[]],["component/72-8",[]],["title/72-9",[114,20.338,1002,29.344,2652,36.886]],["name/72-9",[]],["text/72-9",[]],["component/72-9",[]],["title/72-10",[311,23.554,328,30.858,2652,36.886]],["name/72-10",[]],["text/72-10",[]],["component/72-10",[]],["title/72-11",[15,27.683,114,17.43,1002,25.149,3182,35.314]],["name/72-11",[]],["text/72-11",[]],["component/72-11",[]],["title/72-12",[15,27.683,311,20.186,328,26.447,3182,35.314]],["name/72-12",[]],["text/72-12",[]],["component/72-12",[]],["title/72-13",[15,27.683,114,17.43,1002,25.149,2646,31.055]],["name/72-13",[]],["text/72-13",[]],["component/72-13",[]],["title/72-14",[15,27.683,311,20.186,328,26.447,2646,31.055]],["name/72-14",[]],["text/72-14",[]],["component/72-14",[]],["title/72-15",[17,36.351,267,31.613,311,20.186,328,26.447]],["name/72-15",[]],["text/72-15",[]],["component/72-15",[]],["title/72-16",[114,24.41,461,42.764]],["name/72-16",[]],["text/72-16",[]],["component/72-16",[]],["title/72-17",[114,20.338,1002,29.344,2652,36.886]],["name/72-17",[]],["text/72-17",[]],["component/72-17",[]],["title/72-18",[311,23.554,328,30.858,2652,36.886]],["name/72-18",[]],["text/72-18",[]],["component/72-18",[]],["title/72-19",[15,27.683,114,17.43,1002,25.149,2646,31.055]],["name/72-19",[]],["text/72-19",[]],["component/72-19",[]],["title/72-20",[15,27.683,311,20.186,328,26.447,2646,31.055]],["name/72-20",[]],["text/72-20",[]],["component/72-20",[]],["title/72-21",[17,31.804,114,15.25,268,17.767,311,17.662,328,23.139]],["name/72-21",[]],["text/72-21",[]],["component/72-21",[]],["title/72-22",[184,45.348]],["name/72-22",[]],["text/72-22",[]],["component/72-22",[]],["title/72-23",[19,42.087,1595,48.183]],["name/72-23",[]],["text/72-23",[]],["component/72-23",[]],["title/72",[114,24.41,458,33.397]],["name/72",[114,0.839]],["text/72",[1,1.331,3,1.43,5,0.183,6,1.133,12,1.923,13,3.506,15,0.557,17,0.498,18,1.684,19,2.389,20,2.565,27,1.209,28,0.274,29,0.286,32,0.526,36,0.571,40,2.967,52,0.512,57,0.788,58,2.109,61,0.939,68,3.204,69,0.18,70,0.172,73,0.162,76,2.198,79,0.845,80,0.148,82,1.835,83,0.998,84,0.192,91,0.176,100,0.636,102,0.173,104,0.351,105,0.172,107,0.816,108,0.601,111,0.139,114,3.93,117,0.214,120,2.279,122,0.686,123,0.178,124,1.489,125,0.226,126,0.885,130,0.648,134,0.516,139,0.371,142,0.624,143,0.981,145,1.654,150,1.562,151,0.652,154,0.33,157,0.309,158,1.682,164,2.887,171,0.236,184,1.38,186,0.923,187,0.231,188,1.095,189,2.174,190,0.214,191,1.161,194,2.84,196,2.301,198,0.222,199,0.263,202,0.785,205,0.461,210,1.984,216,0.521,226,2.226,263,0.199,264,0.412,265,1.117,266,2.573,267,1.015,268,1.363,270,1.645,271,0.564,274,1.935,278,1.332,282,0.185,288,0.165,290,0.511,291,0.236,293,0.194,295,0.172,298,0.8,299,0.831,304,0.218,306,0.274,309,0.236,311,3.544,313,0.208,317,0.71,324,0.284,327,1.152,328,1.277,329,0.515,341,0.899,343,2.203,347,0.15,355,2.469,356,0.731,362,0.286,371,1.588,374,2.76,389,0.197,392,0.194,397,0.248,399,0.187,404,0.868,407,0.624,420,1.831,429,0.231,430,0.807,431,2.149,432,0.516,438,1.015,448,0.218,457,0.426,458,2.756,460,0.176,461,1.914,494,0.379,502,0.167,506,0.248,518,0.447,524,2.149,540,0.815,555,0.366,559,0.692,567,0.194,580,1.855,603,0.765,604,0.178,606,1.946,634,0.248,636,0.208,673,0.222,682,0.199,684,1.206,719,0.255,727,0.199,733,1.24,734,0.419,757,0.175,783,0.442,796,0.236,813,0.241,843,0.236,846,0.211,887,0.263,923,0.205,931,0.274,950,0.263,994,0.248,1002,3.106,1008,0.286,1017,0.676,1018,0.755,1029,0.231,1128,1.085,1134,0.218,1138,0.263,1141,1.034,1142,1.192,1147,0.412,1160,0.241,1161,0.286,1175,1.317,1208,2.898,1209,0.686,1210,1.267,1219,0.472,1222,0.87,1223,0.461,1225,0.535,1226,2.145,1230,1.67,1237,0.433,1251,0.433,1252,2.162,1264,1.206,1271,4.657,1297,0.194,1308,0.218,1342,0.587,1355,0.18,1437,0.248,1595,2.735,1596,0.303,1734,1.833,1894,0.87,1935,0.205,2003,3.74,2030,1.567,2270,1.773,2329,0.255,2366,1.951,2389,0.676,2433,1.755,2526,0.303,2535,2.559,2544,0.263,2555,2.445,2613,0.461,2638,1.632,2640,2.666,2646,1.339,2652,2.752,2673,0.236,2728,2.181,2733,0.87,2886,1.023,2899,0.535,2902,0.248,2914,1.389,2946,0.821,2973,2.666,3048,1.371,3104,0.87,3131,1.389,3141,0.535,3182,0.926,3214,0.821,3340,0.255,3359,6.546,3362,0.274,3363,4.488,3367,0.303,3399,0.87,3495,1.632,3553,0.303,3554,1.135,3555,1.632,3556,1.632,3557,1.632,3558,0.945,3559,1.54,3560,1.772,3561,0.87,3562,0.87,3563,2.944,3564,1.632,3565,0.329,3566,1.772,3567,1.772,3568,1.772,3569,0.945,3570,1.772,3571,1.772,3572,0.945,3573,0.945,3574,0.945,3575,0.945,3576,0.329,3577,0.329,3578,0.329,3579,0.56,3580,0.329,3581,0.329,3582,0.329,3583,1.135,3584,0.329,3585,0.329,3586,0.329,3587,0.329,3588,0.329,3589,0.329,3590,0.329,3591,0.329,3592,0.329,3593,0.303,3594,0.329,3595,0.329,3596,0.329,3597,0.329]],["component/72",[273,0.458]],["title/73-1",[408,44.27,757,34.892]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["title/73-2",[51,38.767,757,34.892]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["title/73-3",[114,13.555,417,24.584,769,26.13,2918,27.462,3598,36.531,3599,36.531]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["title/73-4",[408,44.27,2335,54.637]],["name/73-4",[]],["text/73-4",[]],["component/73-4",[]],["title/73-5",[52,22.754,199,43.827,1290,42.414]],["name/73-5",[]],["text/73-5",[]],["component/73-5",[]],["title/73",[51,38.767,52,27.31]],["name/73",[51,0.742,52,0.523]],["text/73",[0,0.552,1,0.386,3,1.633,5,1.354,6,0.456,9,2.702,12,0.43,14,0.989,27,1.381,51,3.204,52,3.558,58,0.384,64,0.526,69,0.938,73,1.195,80,1.376,90,0.48,92,0.552,93,0.532,100,2.063,101,0.731,103,1.847,104,0.938,106,1.34,108,0.446,110,0.485,114,1.873,120,0.489,122,1.708,126,3.06,134,1.674,143,0.443,145,1.136,146,2.723,148,0.928,150,1.519,151,0.783,153,0.552,154,1.244,157,2.426,164,1.496,180,1.745,181,2.267,189,0.532,193,1.052,194,1.226,196,2.498,197,0.615,199,3.321,201,0.654,205,0.654,210,0.41,219,1.327,226,0.46,233,0.731,236,2.198,242,0.872,244,0.687,245,0.627,256,0.604,258,0.532,259,0.654,262,0.52,270,0.424,272,0.504,279,1.635,281,1.469,282,1.368,283,0.604,288,1.214,290,3.133,297,0.594,302,0.494,304,0.604,315,0.604,319,0.794,324,1.35,334,2.448,341,3.41,342,1.726,344,1.099,345,3.122,349,0.545,351,0.731,353,0.615,355,3.237,357,0.494,371,0.532,372,0.731,373,1.038,374,0.418,384,0.468,385,1.878,388,0.568,389,0.545,391,0.947,392,0.539,394,0.687,399,0.978,404,0.989,405,0.539,406,1.291,407,1.136,408,5.967,409,1.427,410,1.067,412,3.449,414,0.759,417,0.615,420,0.472,432,0.938,436,1.291,439,0.794,442,0.687,448,0.604,451,2.193,452,3.321,460,0.92,464,2.239,465,0.842,466,2.113,472,2.327,473,0.526,478,1.58,482,0.707,488,0.759,494,3.204,511,0.615,518,1.452,521,0.64,540,0.604,544,0.604,550,0.654,555,0.52,561,1.329,567,0.539,585,0.64,603,0.568,604,0.494,629,1.038,636,2.912,649,0.759,657,0.731,658,0.604,706,1.099,724,1.178,734,0.594,747,1.373,757,1.289,758,0.759,769,0.654,813,0.669,827,0.842,836,2.373,855,0.707,862,0.731,881,1.052,885,1.052,887,0.731,903,0.654,923,0.568,924,0.687,943,1.667,955,1.099,962,0.794,987,1.156,998,1.738,1012,0.545,1147,0.585,1148,2.239,1158,0.707,1166,0.654,1179,0.594,1180,0.669,1192,0.794,1204,0.379,1215,0.794,1216,0.56,1230,0.56,1261,0.532,1290,4.485,1297,0.539,1321,0.707,1322,0.654,1357,0.594,1370,0.604,1440,1.291,1495,0.687,1537,0.842,1538,0.687,1551,0.759,1554,0.707,1570,2.373,1576,0.568,1672,0.687,1690,0.654,1697,0.794,1714,1.178,1717,1.373,1723,0.794,1748,1.427,1790,1.329,1868,1.373,2026,0.759,2063,0.687,2099,0.842,2100,0.794,2108,0.794,2136,0.794,2296,0.842,2335,3.449,2460,0.794,2501,0.731,2602,0.707,2640,0.687,2678,1.229,2686,1.329,2687,1.493,2695,0.794,2712,0.794,2869,0.794,2918,1.291,2920,0.794,2996,0.794,3070,0.842,3084,0.707,3213,0.794,3277,1.493,3388,0.842,3465,2.825,3468,0.842,3579,0.794,3593,2.239,3600,0.914,3601,0.914,3602,0.914,3603,0.914,3604,0.914,3605,0.914,3606,0.914,3607,1.718,3608,1.718,3609,0.914,3610,0.914,3611,0.914,3612,0.914,3613,0.842,3614,0.914,3615,0.914,3616,0.914,3617,1.718,3618,1.718,3619,1.718,3620,0.914,3621,1.718,3622,1.718,3623,0.914,3624,2.43,3625,0.914,3626,0.914,3627,0.914,3628,0.914,3629,0.914,3630,0.914,3631,0.914,3632,0.842,3633,0.914,3634,0.914,3635,0.914,3636,0.914,3637,1.718,3638,3.066,3639,0.914,3640,0.914,3641,0.914,3642,0.914,3643,0.914,3644,0.914,3645,0.914,3646,0.914]],["component/73",[273,0.458]],["title/74",[52,27.31,276,47.055]],["name/74",[52,0.523,276,0.901]],["text/74",[5,1.273,20,2.345,40,2.752,52,4.308,69,1.247,79,0.954,101,3.15,102,3.245,103,1.16,120,3.728,125,1.567,126,1.968,138,4.008,143,1.907,145,1.511,150,1.132,151,2.453,153,1.381,155,1.567,156,3.225,157,2.967,176,1.347,180,2.242,184,2.863,191,1.17,194,4.063,196,1.235,210,2.77,213,1.898,227,3.629,262,1.301,276,6.694,277,3.634,282,2.218,285,1.567,286,1.827,288,1.141,296,1.768,298,1.212,307,1.538,311,2.653,316,3.375,317,1.718,321,3.15,322,2.105,323,1.567,325,4.234,326,3.781,327,2.561,329,4.936,349,1.364,355,1.927,385,1.4,415,1.44,423,2.604,431,1.201,445,2.702,458,1.16,462,2.15,494,3.06,654,1.718,734,2.561,757,1.212,832,1.44,908,1.567,949,1.827,978,1.599,994,5.723,1002,2.109,1029,1.599,1128,1.4,1134,2.604,1141,2.702,1231,1.718,1539,1.987,1554,1.768,1576,1.419,1756,1.538,1803,2.105,2032,1.827,2572,1.599,2589,4.514,2593,1.987,2673,4.981,2738,2.105,2918,1.718,2941,1.898,3036,2.105,3037,3.629,3071,2.105,3295,3.629,3319,2.105,3508,2.105,3647,2.285,3648,2.285,3649,2.105,3650,2.285,3651,5.192,3652,2.105,3653,2.105,3654,2.105,3655,2.285,3656,2.105,3657,2.285,3658,2.285]],["component/74",[273,0.458]],["title/75-1",[52,19.501,164,22.918,347,21.353,1012,28.028]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["title/75-2",[52,19.501,120,25.149,164,22.918,311,20.186]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["title/75",[164,32.094,311,28.269]],["name/75",[164,0.615,311,0.541]],["text/75",[3,1.552,9,1.104,12,2.257,13,2.687,19,2.306,20,0.931,27,1.313,40,2.14,51,5.072,52,3.209,58,0.866,69,1.967,71,1.201,106,1.137,107,0.95,114,1.337,120,1.93,126,1.03,134,2.62,146,4.233,151,2.105,152,1.596,153,2.178,157,3.452,164,5.08,174,1.444,188,1.948,191,1.056,210,0.925,226,2.417,258,2.099,259,1.475,262,1.174,265,1.137,270,0.957,283,3.173,290,1.115,295,1.074,304,1.364,310,1.281,311,4.212,313,3.024,341,3.646,342,1.161,345,1.551,348,4.573,349,3.898,353,1.388,355,3.325,366,1.713,382,1.415,384,1.056,406,1.551,407,1.364,408,2.425,432,1.126,455,1.201,459,1.415,460,1.104,472,2.306,494,1.216,507,1.444,544,1.364,556,1.713,567,1.216,585,1.444,588,1.551,615,1.713,629,1.247,636,1.3,742,1.551,774,1.551,982,1.649,1002,1.104,1009,1.388,1012,2.864,1018,2.207,1141,2.472,1155,1.649,1205,4.893,1226,3.681,1230,2.207,1251,1.388,1271,2.522,1370,1.364,1437,2.709,1853,1.713,2270,2.343,2301,3.32,2366,2.578,2473,1.364,2553,1.649,2555,1.713,2686,1.596,2704,4.453,2973,1.551,3181,1.9,3206,1.649,3483,1.9,3659,3.604,3660,3.604,3661,3.604,3662,2.063,3663,2.063,3664,2.063,3665,2.063,3666,2.063,3667,2.063,3668,2.063,3669,2.063,3670,2.063,3671,3.604,3672,2.063,3673,2.063,3674,2.063,3675,2.063,3676,2.063,3677,2.063]],["component/75",[273,0.458]],["title/76-1",[467,45.116,605,52.601]],["name/76-1",[]],["text/76-1",[]],["component/76-1",[]],["title/76-2",[559,60.244]],["name/76-2",[]],["text/76-2",[]],["component/76-2",[]],["title/76",[164,26.741,311,23.554,341,27.826]],["name/76",[164,0.426,311,0.375,341,0.443]],["text/76",[0,1.038,3,2.411,5,1.707,13,0.802,20,1.384,23,1.473,27,2.039,51,4.393,52,2.405,58,0.721,69,0.937,70,2.162,80,2.264,84,1,93,3.374,102,0.902,103,0.872,106,0.947,111,3.619,113,1.116,114,2.386,120,0.919,122,0.956,123,3.132,124,2.266,125,3.974,126,0.857,136,1.135,138,1.764,151,0.553,157,0.825,159,0.977,164,5.384,168,1.291,176,1.012,194,2.57,218,2.192,219,1.673,226,3.963,242,0.872,248,3.994,263,1.038,268,1.325,270,1.422,281,1.852,283,1.135,298,0.911,299,0.947,302,0.928,310,1.066,311,4.207,312,4.465,316,1.992,324,2.551,341,5.652,342,1.725,352,1.373,355,0.637,359,1.038,374,0.786,375,0.937,383,1.066,388,1.903,389,1.024,391,0.947,393,1.291,406,2.304,407,2.026,408,5.297,415,1.082,423,1.135,427,5.767,430,0.919,432,0.937,446,1.373,458,0.872,460,2.222,470,1.135,480,1.258,494,1.012,555,1.744,561,1.329,629,1.038,631,2.372,673,1.155,697,1.373,736,1.493,742,3.121,757,1.626,832,1.082,848,1.291,850,1.426,855,1.329,891,3.609,908,1.177,1012,1.829,1013,1.493,1121,2.372,1160,1.258,1216,1.052,1694,1.493,2072,1.582,2135,1.582,2438,1.258,2686,1.329,3213,1.493,3553,1.582,3579,1.493,3678,3.065,3679,1.717,3680,1.717,3681,1.717,3682,1.717,3683,1.717,3684,1.717,3685,1.582,3686,1.717]],["component/76",[273,0.458]],["title/77-1",[1542,54.375]],["name/77-1",[]],["text/77-1",[]],["component/77-1",[]],["title/77-2",[3,17.728,518,25.963,1205,32.703]],["name/77-2",[]],["text/77-2",[]],["component/77-2",[]],["title/77-3",[52,22.754,61,25.423,3687,50.493]],["name/77-3",[]],["text/77-3",[]],["component/77-3",[]],["title/77-4",[140,26.157,3688,57.187]],["name/77-4",[]],["text/77-4",[]],["component/77-4",[]],["title/77-5",[191,24.049,404,27.038,458,23.848,1711,35.314]],["name/77-5",[]],["text/77-5",[]],["component/77-5",[]],["title/77-6",[140,18.678,1370,31.055,1711,35.314,2620,35.314]],["name/77-6",[]],["text/77-6",[]],["component/77-6",[]],["title/77-7",[1711,41.204,2620,41.204,3689,54.811]],["name/77-7",[]],["text/77-7",[]],["component/77-7",[]],["title/77-8",[52,22.754,61,25.423,228,43.827]],["name/77-8",[]],["text/77-8",[]],["component/77-8",[]],["title/77-9",[348,32.876,396,25.641,1205,28.028,1345,36.351]],["name/77-9",[]],["text/77-9",[]],["component/77-9",[]],["title/77-10",[140,32.704]],["name/77-10",[]],["text/77-10",[]],["component/77-10",[]],["title/77-11",[430,44.035]],["name/77-11",[]],["text/77-11",[]],["component/77-11",[]],["title/77",[3,21.278,1205,39.25]],["name/77",[3,0.407,1205,0.752]],["text/77",[3,1.125,10,0.424,12,0.932,13,0.647,14,0.215,16,0.226,20,0.329,27,0.379,52,0.702,55,0.325,58,1.269,61,0.494,62,0.281,69,0.581,70,0.194,71,0.424,72,0.226,83,2.897,103,0.858,106,0.206,107,0.172,117,0.692,128,0.547,132,0.39,133,0.429,134,0.397,140,3.332,141,1.388,144,2.093,146,0.429,148,2.418,151,1.553,156,1.05,157,0.812,180,1.127,188,0.202,191,5.061,194,0.553,198,0.251,200,0.273,210,0.168,214,0.22,228,0.851,236,0.226,241,0.215,245,0.499,256,0.247,258,0.217,259,0.267,263,0.226,264,0.239,267,0.716,274,0.17,295,0.88,304,0.247,305,0.267,310,0.232,318,0.358,341,0.369,342,0.41,348,2.585,349,0.223,355,4.78,357,0.202,373,0.643,374,0.333,384,0.545,388,2.545,396,0.756,399,0.606,407,0.247,410,2.888,420,0.193,430,0.2,431,0.196,432,1.233,437,0.239,445,1.159,450,0.267,455,0.424,457,0.247,458,5.219,460,0.2,462,0.581,463,0.243,476,0.459,478,0.243,494,0.22,502,0.19,518,1.75,524,0.215,528,0.325,540,0.915,546,0.243,580,0.235,588,0.281,599,0.256,621,0.232,629,0.837,634,0.547,636,0.235,655,2.932,657,0.299,668,0.273,724,0.499,726,0.247,729,0.613,734,0.243,748,0.267,762,0.289,773,0.256,775,0.239,822,6.808,835,0.344,846,1.081,865,1.581,887,0.299,900,0.243,903,0.267,913,0.563,924,0.547,943,0.95,980,0.563,987,0.49,1002,0.2,1009,2.341,1012,0.635,1018,1.035,1121,0.563,1138,0.299,1147,0.239,1163,0.344,1191,0.281,1193,0.289,1205,3.071,1210,0.267,1216,1.035,1230,0.446,1241,0.31,1248,0.299,1251,0.251,1252,0.256,1253,0.78,1287,0.73,1302,1.469,1305,0.251,1326,0.582,1327,1.351,1329,1.898,1330,0.884,1331,1.308,1332,2.15,1333,1.107,1335,0.884,1336,3.018,1337,0.31,1338,0.31,1342,2.995,1345,1.748,1348,1.15,1355,0.922,1357,0.243,1370,0.481,1415,0.239,1495,0.547,1500,0.67,1502,2.325,1503,3.776,1511,0.243,1528,0.325,1542,0.247,1557,0.289,1564,0.256,1576,0.232,1578,0.261,1652,0.509,1669,0.452,1684,0.325,1698,0.325,1711,4.787,1748,0.31,1756,0.251,1763,0.299,1768,0.289,1784,0.247,1818,1.557,1838,0.299,1866,0.31,1939,0.267,1943,0.299,2079,0.267,2082,0.289,2200,0.344,2222,0.31,2256,0.344,2362,3.068,2473,2.442,2490,0.325,2583,0.31,2620,4.411,2640,0.281,2646,0.247,2683,0.604,2704,0.289,2857,0.325,2906,0.31,2918,0.281,2949,2.953,2974,0.31,2988,0.67,2997,3.563,3141,2.097,3164,0.344,3182,0.547,3322,0.325,3340,0.289,3346,0.633,3533,0.344,3632,0.344,3687,1.557,3688,4.192,3690,0.373,3691,1.276,3692,1.064,3693,0.981,3694,1.064,3695,1.064,3696,3.776,3697,0.728,3698,0.728,3699,0.373,3700,3.593,3701,2.784,3702,0.373,3703,1.385,3704,0.373,3705,0.373,3706,0.728,3707,0.373,3708,2.998,3709,0.373,3710,0.373,3711,0.373,3712,0.373,3713,0.373,3714,0.373,3715,0.373,3716,0.373,3717,0.981,3718,0.373,3719,1.064,3720,0.373,3721,0.373,3722,1.69,3723,1.385,3724,2.778,3725,1.385,3726,4.822,3727,3.694,3728,3.022,3729,3.402,3730,0.981,3731,2.081,3732,0.373,3733,0.373,3734,1.064,3735,1.064,3736,0.373,3737,1.064,3738,1.385,3739,1.385,3740,0.373,3741,0.373,3742,0.373,3743,0.373,3744,0.373,3745,0.373,3746,0.344,3747,0.67,3748,0.373,3749,0.373,3750,0.373,3751,0.981,3752,0.373,3753,0.373,3754,0.67,3755,1.064,3756,0.344,3757,0.981,3758,0.373,3759,0.325,3760,0.373,3761,0.31]],["component/77",[273,0.458]],["title/78",[1,27.778,3,21.278]],["name/78",[1,0.532,3,0.407]],["text/78",[1,3.853,3,3.412,19,2.392,20,3.323,27,1.023,40,3.28,52,1.552,58,3.089,68,2.616,73,4.115,76,1.93,93,2.177,114,2.73,120,3.171,127,2.471,146,2.203,154,1.914,157,1.797,164,2.89,196,2.021,210,1.677,268,4.397,272,4.057,310,2.322,311,3.597,312,4.707,327,2.43,355,1.387,374,2.711,375,2.04,384,1.914,410,2.322,420,1.93,461,2.43,477,2.564,603,2.322,629,3.58,769,2.674,976,2.989,1005,2.501,1018,2.29,1210,2.674,1223,5.988,1225,3.105,1226,2.392,1237,2.516,1252,4.063,1756,2.516,1784,2.471,2270,2.43,2366,2.674,2433,2.893,2585,2.516,2722,5.15,2935,2.81,2973,4.453,3762,5.924,3763,5.924,3764,5.924,3765,3.738,3766,3.738,3767,3.738,3768,3.738]],["component/78",[273,0.458]],["title/79-1",[3,21.278,164,32.094]],["name/79-1",[]],["text/79-1",[]],["component/79-1",[]],["title/79-2",[3,21.278,271,39.25]],["name/79-2",[]],["text/79-2",[]],["component/79-2",[]],["title/79-3",[164,32.094,391,36.27]],["name/79-3",[]],["text/79-3",[]],["component/79-3",[]],["title/79-4",[76,33.969,420,33.969]],["name/79-4",[]],["text/79-4",[]],["component/79-4",[]],["title/79",[3,17.728,164,26.741,271,32.703]],["name/79",[3,0.407,164,0.615]],["text/79",[1,1.236,3,3.667,20,1.322,27,1.704,52,1.216,69,1.598,70,1.525,73,3.952,91,1.568,104,1.598,106,1.614,111,1.236,114,3.566,132,1.568,143,2.353,151,1.565,153,2.936,157,2.335,164,5.531,174,2.049,191,2.487,194,3.465,196,1.583,198,1.97,212,2.145,226,3.649,242,1.486,256,1.936,262,2.765,263,1.77,268,4.445,270,2.888,271,6.135,272,3.996,274,2.831,295,1.525,298,1.553,310,1.819,311,2.088,312,1.873,318,1.44,324,1.289,347,1.331,348,2.049,349,1.747,350,2.697,351,2.341,352,2.341,353,1.97,371,1.705,374,1.34,448,1.936,461,3.158,518,1.387,544,1.936,555,1.667,610,2.145,837,4.224,935,2.266,1208,3.814,1290,2.266,1357,1.903,1437,3.653,1539,2.545,2731,4.224,3084,2.266,3259,2.697,3526,2.697,3532,2.545,3769,4.859,3770,2.928]],["component/79",[273,0.458]],["title/80-1",[132,35.219,1007,54.637]],["name/80-1",[]],["text/80-1",[]],["component/80-1",[]],["title/80-2",[132,25.149,151,15.134,155,32.217,156,29.174]],["name/80-2",[]],["text/80-2",[]],["component/80-2",[]],["title/80-3",[132,35.219,508,45.116]],["name/80-3",[]],["text/80-3",[]],["component/80-3",[]],["title/80",[3,21.278,132,35.219]],["name/80",[3,0.407,132,0.674]],["text/80",[0,1.192,1,3.965,3,1.121,12,0.928,14,1.136,27,0.54,52,0.819,58,1.946,64,1.136,69,1.892,70,1.028,73,1.704,96,1.283,119,1.353,120,1.056,132,6.16,133,2.043,134,1.892,144,0.963,145,3.065,148,3.015,151,2.046,157,0.948,160,4.774,179,2.184,180,3.174,191,3.251,194,2.229,196,1.066,226,0.993,272,1.088,299,1.088,311,0.848,318,0.97,327,2.253,328,1.111,341,1.76,349,1.177,355,3.128,359,1.192,361,0.97,374,4.611,380,1.177,389,1.177,405,1.163,432,1.077,454,2.682,455,2.018,460,1.856,478,1.283,480,2.539,494,2.043,502,1.002,508,6.027,518,0.935,567,1.163,603,1.225,621,1.225,624,1.578,636,2.184,645,1.892,658,2.292,748,1.411,814,1.483,843,1.411,867,1.262,911,1.817,937,1.817,970,1.578,1002,1.056,1017,4.543,1033,1.715,1158,1.527,1179,1.283,1191,1.483,1204,1.439,1209,1.931,1213,1.639,1261,2.018,1271,3.903,1324,1.715,1342,4.346,1370,1.304,1439,1.445,1478,5.138,1511,1.283,1564,2.377,1652,2.426,1669,1.225,1820,1.578,1864,1.639,2002,2.772,2088,1.527,2270,1.283,2366,1.411,2438,2.539,2673,1.411,2711,2.772,2805,1.715,3072,2.879,3141,2.879,3688,1.715,3771,3.466,3772,1.817,3773,1.817,3774,3.193,3775,4.636,3776,1.817,3777,1.973,3778,1.973,3779,1.817,3780,1.817,3781,3.466,3782,4.636,3783,3.466,3784,3.466,3785,1.973,3786,1.973,3787,1.817,3788,1.973,3789,3.466]],["component/80",[273,0.458]],["title/81",[3,11.816,52,24.146,206,25.566,2646,24.15,3182,27.462]],["name/81",[3,0.407,1180,0.923]],["text/81",[3,2.224,12,0.971,13,0.52,20,0.502,22,0.712,27,0.304,40,0.496,52,3.721,58,0.866,61,0.957,70,0.579,73,0.547,83,4.847,92,0.672,111,0.871,132,3.301,134,1.968,140,2.599,141,1.031,143,0.539,151,1.986,157,0.535,181,0.607,184,0.613,190,0.723,191,0.569,194,0.445,205,0.796,210,0.926,228,0.889,242,0.565,252,0.712,253,0.861,254,0.836,263,0.672,267,1.389,295,1.075,301,0.691,304,0.735,313,1.3,318,1.015,341,1.466,355,4.701,373,2.562,396,0.607,420,0.574,455,1.681,458,1.466,459,1.415,518,2.92,567,0.656,599,1.98,629,0.672,655,0.796,692,0.924,757,0.59,797,1.282,865,3.361,927,1.65,986,0.924,1005,0.871,1009,4.626,1180,2.114,1191,0.836,1205,1.231,1209,2.675,1305,1.389,1326,3.39,1327,5.226,1329,6.86,1330,4.406,1331,4.771,1332,6.172,1333,5.226,1335,3.521,1336,7.29,1337,2.995,1338,3.988,1342,3.294,1345,2.234,1348,4.406,1578,0.779,1652,2.02,1711,0.836,1798,0.796,1913,0.889,2063,0.836,2362,2.398,2620,1.551,2646,4.076,2922,0.967,2949,2.883,2974,1.714,2997,2.51,3182,4.327,3229,2.659,3346,2.51,3691,4.887,3693,3.905,3700,3.322,3701,2.659,3717,1.901,3730,1.025,3731,1.025,3746,1.901,3747,1.901,3751,1.901,3754,1.901,3756,1.025,3757,1.025,3790,1.112,3791,1.025,3792,1.112,3793,1.112,3794,1.112,3795,1.112,3796,2.064,3797,1.112,3798,1.112]],["component/81",[273,0.458]],["title/82-1",[1342,40.856,3799,57.187]],["name/82-1",[]],["text/82-1",[]],["component/82-1",[]],["title/82-2",[1342,40.856,3800,60.601]],["name/82-2",[]],["text/82-2",[]],["component/82-2",[]],["title/82-3",[20,21.214,114,17.43,1342,29.174,3801,43.274]],["name/82-3",[]],["text/82-3",[]],["component/82-3",[]],["title/82-4",[1342,40.856,3559,57.187]],["name/82-4",[]],["text/82-4",[]],["component/82-4",[]],["title/82",[20,29.708,126,32.855]],["name/82",[21,1.16,126,0.629]],["text/82",[1,2.753,3,2.496,6,1.027,9,1.101,10,1.197,12,2.252,13,1.678,19,1.315,20,2.945,27,0.562,30,1.259,40,2.56,57,1.315,58,1.509,61,0.954,73,1.767,76,2.964,80,2.926,81,1.943,82,2.419,83,1.157,89,2.376,91,1.101,104,1.122,114,3.541,122,3.198,126,2.867,127,1.359,142,1.359,144,3.181,151,1.542,164,1.003,184,1.981,186,1.259,191,1.053,194,0.822,236,1.243,242,1.044,247,1.439,265,2.64,266,1.243,268,0.889,274,3.259,283,2.376,290,1.111,299,1.134,310,1.277,311,1.544,317,1.546,324,1.582,355,0.763,374,1.645,380,1.227,382,1.41,432,1.962,455,2.093,473,1.183,513,1.011,524,1.183,532,1.439,559,1.506,604,1.943,606,2.376,610,1.506,846,1.315,863,1.591,867,1.315,943,1.41,970,1.644,978,1.439,1002,3.074,1018,1.259,1031,3.124,1175,1.337,1207,1.546,1208,2.932,1210,1.471,1223,1.471,1256,1.708,1287,1.41,1336,3.705,1342,4.049,1564,4.917,1656,1.591,1658,3.828,1734,1.506,1890,1.787,1915,1.546,2030,1.591,2074,1.471,2079,4.107,2087,1.787,2093,5.415,2389,1.471,2585,3.222,2594,2.874,2613,2.571,2614,2.781,2615,2.874,2616,1.644,2617,3.976,2618,3.976,2665,1.644,2666,3.599,2728,2.874,2935,1.546,2956,4.41,3085,3.976,3089,1.894,3214,1.787,3269,1.787,3297,1.708,3362,1.708,3363,1.787,3527,1.894,3554,1.894,3555,1.894,3556,1.894,3557,1.894,3559,3.124,3561,1.894,3562,1.894,3564,3.311,3652,1.894,3799,1.787,3800,1.894,3801,1.894,3802,1.894,3803,3.594,3804,2.056,3805,2.056,3806,2.056,3807,2.056,3808,2.056]],["component/82",[273,0.458]],["title/83-1",[144,20.051,458,20.865,858,29.398,2003,27.658,3809,35.729]],["name/83-1",[]],["text/83-1",[]],["component/83-1",[]],["title/83-2",[144,20.051,458,20.865,960,34.135,2003,27.658,3809,35.729]],["name/83-2",[]],["text/83-2",[]],["component/83-2",[]],["title/83-3",[2032,43.827,2473,36.235,3810,50.493]],["name/83-3",[]],["text/83-3",[]],["component/83-3",[]],["title/83-4",[374,25.081,2088,42.414,2473,36.235]],["name/83-4",[]],["text/83-4",[]],["component/83-4",[]],["title/83-5",[374,25.081,2473,36.235,3811,50.493]],["name/83-5",[]],["text/83-5",[]],["component/83-5",[]],["title/83-6",[146,38.767,2473,43.489]],["name/83-6",[]],["text/83-6",[]],["component/83-6",[]],["title/83-7",[2473,43.489,2620,49.454]],["name/83-7",[]],["text/83-7",[]],["component/83-7",[]],["title/83-8",[1342,40.856,2473,43.489]],["name/83-8",[]],["text/83-8",[]],["component/83-8",[]],["title/83-9",[146,32.301,174,38.36,2473,36.235]],["name/83-9",[]],["text/83-9",[]],["component/83-9",[]],["title/83-10",[76,33.969,420,33.969]],["name/83-10",[]],["text/83-10",[]],["component/83-10",[]],["title/83",[52,22.754,458,27.826,2473,36.235]],["name/83",[52,0.362,458,0.443,2473,0.577]],["text/83",[3,0.454,10,0.817,20,0.634,40,0.894,52,2.09,58,3.124,70,1.331,79,0.837,81,0.399,85,2.576,88,0.59,89,0.488,91,1.368,95,0.54,96,0.48,103,0.712,114,0.744,117,3.668,122,1.959,130,0.506,132,1.074,133,0.827,139,3.95,143,3.108,144,1.246,145,0.927,146,4.487,153,0.446,155,1.752,156,0.458,157,0.355,174,5.329,176,0.827,185,1.086,186,1.565,191,0.718,196,3.469,200,0.54,210,0.629,214,0.435,218,1.827,219,0.403,271,0.837,277,0.516,282,0.415,288,0.701,313,2.73,317,1.92,340,1.122,342,0.79,347,1.161,355,3.539,359,0.446,361,0.69,374,3.827,382,0.506,384,1.027,407,1.326,431,1.054,445,2.096,448,0.488,451,1.003,454,0.571,458,3.949,459,0.962,460,1.636,462,1.919,463,1.66,492,0.54,494,0.435,502,0.712,508,1.375,518,2.224,521,0.982,524,0.807,554,1.219,561,1.977,568,1.055,603,0.458,605,1.122,610,1.469,636,1.264,655,2.819,658,0.927,696,0.613,724,2.971,751,0.59,757,1.064,846,0.472,858,0.528,931,0.613,934,4.181,951,1.666,955,0.472,968,0.68,1002,0.751,1007,1.165,1124,1.086,1128,2.154,1138,2.042,1142,0.944,1147,0.472,1173,1.122,1175,3.272,1209,0.411,1216,0.452,1226,2.521,1254,0.571,1261,0.43,1264,0.59,1297,0.435,1299,1.304,1301,0.528,1316,0.59,1336,1.552,1342,3.126,1355,0.766,1415,1.283,1545,0.528,1554,1.086,1564,4.235,1576,0.458,1652,0.516,1660,0.641,1669,0.458,1672,1.055,1711,3.53,1820,1.604,1873,2.538,2003,4.755,2032,2.812,2077,0.613,2079,0.528,2080,0.641,2088,5.892,2103,0.613,2211,1.871,2270,1.66,2339,0.68,2342,1.219,2366,0.528,2419,1.292,2435,0.68,2473,6.188,2522,4.927,2572,0.516,2594,0.59,2620,3.53,2681,1.743,2711,0.59,2940,2.122,3015,3.057,3072,0.613,3073,0.68,3084,0.571,3085,0.613,3135,1.666,3186,1.292,3277,1.743,3653,1.292,3654,1.848,3729,2.815,3787,0.68,3809,3.057,3810,1.292,3811,1.848,3812,0.738,3813,0.68,3814,0.738,3815,1.403,3816,0.738,3817,0.738,3818,0.738,3819,0.738,3820,0.738,3821,0.738,3822,0.738,3823,1.403,3824,1.403,3825,3.517,3826,2.006,3827,0.738,3828,0.738,3829,1.403,3830,0.738,3831,0.738,3832,0.738,3833,1.403,3834,0.738,3835,0.738,3836,0.738,3837,0.738,3838,0.738,3839,0.738,3840,0.738,3841,0.738,3842,0.738,3843,0.738,3844,2.554,3845,0.738,3846,2.006,3847,0.738,3848,2.006,3849,1.403,3850,0.738,3851,3.056,3852,0.738,3853,0.738,3854,3.056,3855,0.738,3856,0.738,3857,0.738,3858,0.738,3859,0.738,3860,1.403,3861,1.403,3862,1.403,3863,0.738,3864,1.403,3865,1.403,3866,1.403]],["component/83",[273,0.458]],["title/84-1",[140,26.157,141,32.855]],["name/84-1",[]],["text/84-1",[]],["component/84-1",[]],["title/84-2",[140,21.794,347,24.915,1205,32.703]],["name/84-2",[]],["text/84-2",[]],["component/84-2",[]],["title/84-3",[140,26.157,311,28.269]],["name/84-3",[]],["text/84-3",[]],["component/84-3",[]],["title/84-4",[76,33.969,420,33.969]],["name/84-4",[]],["text/84-4",[]],["component/84-4",[]],["title/84",[140,32.704]],["name/84",[27,0.345,140,0.501]],["text/84",[1,0.712,3,1.323,20,1.847,40,1.344,58,1.265,69,2.716,70,1.57,73,0.828,80,1.352,114,1.118,119,1.156,122,2.278,126,0.842,133,0.993,139,2.864,140,4.234,141,3.894,143,1.98,144,3.6,145,3.782,146,0.993,148,4.753,151,1.603,155,1.156,156,1.872,157,0.81,160,1.267,171,1.205,191,3.254,194,2.54,196,0.911,210,1.352,229,1.234,264,1.078,272,0.929,302,0.911,310,2.539,311,2.731,324,0.742,327,1.959,341,0.855,347,0.766,349,2.44,355,4.362,373,1.018,374,2.618,383,1.046,384,0.863,410,1.046,431,3.878,433,1.552,447,2.109,455,0.981,458,3.227,460,0.902,462,1.645,472,1.928,494,2.41,518,2.357,540,1.114,544,1.114,580,1.062,624,1.347,636,1.899,652,1.399,655,2.156,658,1.114,673,1.134,729,2.354,843,1.205,846,1.078,982,1.347,1002,3.403,1124,1.304,1125,1.399,1137,1.552,1175,3.235,1180,1.234,1205,2.44,1226,1.078,1230,1.846,1249,1.347,1257,2.109,1261,0.981,1271,4.004,1329,1.267,1342,1.046,1370,1.114,1439,1.234,1452,2.208,1553,1.304,1570,2.332,1807,1.347,1956,1.798,2079,2.156,2088,1.304,2206,1.347,2211,2.995,2270,1.095,2366,1.205,2572,1.179,2683,2.503,2712,1.465,2926,1.465,3001,2.776,3340,1.304,3347,1.552,3696,2.776,3708,1.552,3867,1.685,3868,1.685,3869,3.014,3870,3.014,3871,1.552,3872,1.685,3873,1.552,3874,1.552,3875,1.552,3876,1.552,3877,1.685,3878,1.685,3879,1.685,3880,1.685,3881,1.685,3882,1.685,3883,1.685,3884,1.685,3885,3.014,3886,3.014,3887,3.014,3888,1.685,3889,1.685]],["component/84",[273,0.458]],["title/85-1",[2668,65.767]],["name/85-1",[]],["text/85-1",[]],["component/85-1",[]],["title/85-2",[151,21.194,184,36.27]],["name/85-2",[]],["text/85-2",[]],["component/85-2",[]],["title/85-3",[79,34.338]],["name/85-3",[]],["text/85-3",[]],["component/85-3",[]],["title/85-4",[1209,45.818]],["name/85-4",[]],["text/85-4",[]],["component/85-4",[]],["title/85-5",[374,30.102,1204,27.31]],["name/85-5",[]],["text/85-5",[]],["component/85-5",[]],["title/85-6",[405,38.767,1297,38.767]],["name/85-6",[]],["text/85-6",[]],["component/85-6",[]],["title/85-7",[105,34.267,419,47.055]],["name/85-7",[]],["text/85-7",[]],["component/85-7",[]],["title/85-8",[2666,61.832]],["name/85-8",[]],["text/85-8",[]],["component/85-8",[]],["title/85-9",[151,21.194,184,36.27]],["name/85-9",[]],["text/85-9",[]],["component/85-9",[]],["title/85-10",[79,34.338]],["name/85-10",[]],["text/85-10",[]],["component/85-10",[]],["title/85-11",[1209,45.818]],["name/85-11",[]],["text/85-11",[]],["component/85-11",[]],["title/85-12",[374,30.102,1204,27.31]],["name/85-12",[]],["text/85-12",[]],["component/85-12",[]],["title/85-13",[405,38.767,1297,38.767]],["name/85-13",[]],["text/85-13",[]],["component/85-13",[]],["title/85-14",[518,38.96]],["name/85-14",[]],["text/85-14",[]],["component/85-14",[]],["title/85-15",[3890,75.77]],["name/85-15",[]],["text/85-15",[]],["component/85-15",[]],["title/85-16",[151,21.194,184,36.27]],["name/85-16",[]],["text/85-16",[]],["component/85-16",[]],["title/85-17",[79,34.338]],["name/85-17",[]],["text/85-17",[]],["component/85-17",[]],["title/85-18",[1209,45.818]],["name/85-18",[]],["text/85-18",[]],["component/85-18",[]],["title/85-19",[374,30.102,1204,27.31]],["name/85-19",[]],["text/85-19",[]],["component/85-19",[]],["title/85-20",[405,38.767,1297,38.767]],["name/85-20",[]],["text/85-20",[]],["component/85-20",[]],["title/85-21",[268,35.557]],["name/85-21",[]],["text/85-21",[]],["component/85-21",[]],["title/85-22",[151,21.194,184,36.27]],["name/85-22",[]],["text/85-22",[]],["component/85-22",[]],["title/85-23",[79,34.338]],["name/85-23",[]],["text/85-23",[]],["component/85-23",[]],["title/85-24",[1209,45.818]],["name/85-24",[]],["text/85-24",[]],["component/85-24",[]],["title/85-25",[374,30.102,1204,27.31]],["name/85-25",[]],["text/85-25",[]],["component/85-25",[]],["title/85-26",[405,38.767,1297,38.767]],["name/85-26",[]],["text/85-26",[]],["component/85-26",[]],["title/85-27",[3871,75.77]],["name/85-27",[]],["text/85-27",[]],["component/85-27",[]],["title/85-28",[151,21.194,184,36.27]],["name/85-28",[]],["text/85-28",[]],["component/85-28",[]],["title/85-29",[79,34.338]],["name/85-29",[]],["text/85-29",[]],["component/85-29",[]],["title/85-30",[1209,45.818]],["name/85-30",[]],["text/85-30",[]],["component/85-30",[]],["title/85-31",[374,30.102,1204,27.31]],["name/85-31",[]],["text/85-31",[]],["component/85-31",[]],["title/85-32",[405,38.767,1297,38.767]],["name/85-32",[]],["text/85-32",[]],["component/85-32",[]],["title/85-33",[518,38.96]],["name/85-33",[]],["text/85-33",[]],["component/85-33",[]],["title/85-34",[2731,71.502]],["name/85-34",[]],["text/85-34",[]],["component/85-34",[]],["title/85-35",[151,21.194,184,36.27]],["name/85-35",[]],["text/85-35",[]],["component/85-35",[]],["title/85-36",[79,34.338]],["name/85-36",[]],["text/85-36",[]],["component/85-36",[]],["title/85-37",[1209,45.818]],["name/85-37",[]],["text/85-37",[]],["component/85-37",[]],["title/85-38",[374,30.102,1204,27.31]],["name/85-38",[]],["text/85-38",[]],["component/85-38",[]],["title/85-39",[405,38.767,1297,38.767]],["name/85-39",[]],["text/85-39",[]],["component/85-39",[]],["title/85-40",[3310,71.502]],["name/85-40",[]],["text/85-40",[]],["component/85-40",[]],["title/85-41",[151,21.194,184,36.27]],["name/85-41",[]],["text/85-41",[]],["component/85-41",[]],["title/85-42",[79,34.338]],["name/85-42",[]],["text/85-42",[]],["component/85-42",[]],["title/85-43",[1209,45.818]],["name/85-43",[]],["text/85-43",[]],["component/85-43",[]],["title/85-44",[374,30.102,1204,27.31]],["name/85-44",[]],["text/85-44",[]],["component/85-44",[]],["title/85-45",[405,38.767,1297,38.767]],["name/85-45",[]],["text/85-45",[]],["component/85-45",[]],["title/85-46",[518,38.96]],["name/85-46",[]],["text/85-46",[]],["component/85-46",[]],["title/85-47",[2689,68.313]],["name/85-47",[]],["text/85-47",[]],["component/85-47",[]],["title/85-48",[151,21.194,184,36.27]],["name/85-48",[]],["text/85-48",[]],["component/85-48",[]],["title/85-49",[79,34.338]],["name/85-49",[]],["text/85-49",[]],["component/85-49",[]],["title/85-50",[1209,45.818]],["name/85-50",[]],["text/85-50",[]],["component/85-50",[]],["title/85-51",[374,30.102,1204,27.31]],["name/85-51",[]],["text/85-51",[]],["component/85-51",[]],["title/85-52",[405,38.767,1297,38.767]],["name/85-52",[]],["text/85-52",[]],["component/85-52",[]],["title/85-53",[3774,75.77]],["name/85-53",[]],["text/85-53",[]],["component/85-53",[]],["title/85-54",[151,21.194,184,36.27]],["name/85-54",[]],["text/85-54",[]],["component/85-54",[]],["title/85-55",[79,34.338]],["name/85-55",[]],["text/85-55",[]],["component/85-55",[]],["title/85-56",[1209,45.818]],["name/85-56",[]],["text/85-56",[]],["component/85-56",[]],["title/85-57",[374,30.102,1204,27.31]],["name/85-57",[]],["text/85-57",[]],["component/85-57",[]],["title/85-58",[405,38.767,1297,38.767]],["name/85-58",[]],["text/85-58",[]],["component/85-58",[]],["title/85-59",[518,38.96]],["name/85-59",[]],["text/85-59",[]],["component/85-59",[]],["title/85-60",[3776,75.77]],["name/85-60",[]],["text/85-60",[]],["component/85-60",[]],["title/85-61",[151,21.194,184,36.27]],["name/85-61",[]],["text/85-61",[]],["component/85-61",[]],["title/85-62",[79,34.338]],["name/85-62",[]],["text/85-62",[]],["component/85-62",[]],["title/85-63",[1209,45.818]],["name/85-63",[]],["text/85-63",[]],["component/85-63",[]],["title/85-64",[374,30.102,1204,27.31]],["name/85-64",[]],["text/85-64",[]],["component/85-64",[]],["title/85-65",[2673,58.833]],["name/85-65",[]],["text/85-65",[]],["component/85-65",[]],["title/85-66",[151,21.194,184,36.27]],["name/85-66",[]],["text/85-66",[]],["component/85-66",[]],["title/85-67",[79,34.338]],["name/85-67",[]],["text/85-67",[]],["component/85-67",[]],["title/85-68",[1209,45.818]],["name/85-68",[]],["text/85-68",[]],["component/85-68",[]],["title/85-69",[374,30.102,1204,27.31]],["name/85-69",[]],["text/85-69",[]],["component/85-69",[]],["title/85-70",[405,38.767,1297,38.767]],["name/85-70",[]],["text/85-70",[]],["component/85-70",[]],["title/85-71",[518,38.96]],["name/85-71",[]],["text/85-71",[]],["component/85-71",[]],["title/85",[73,32.342,272,36.27]],["name/85",[73,0.429,272,0.481,3891,0.873]],["text/85",[0,0.372,1,2.928,2,0.393,3,2.444,9,0.329,12,1.233,20,2,23,0.816,27,1.126,40,1.169,58,0.914,69,0.643,73,4.03,79,0.257,80,2.246,81,0.332,84,1.268,89,0.406,91,1.625,92,0.372,102,0.62,103,0.312,104,0.643,105,1.366,106,1.201,107,1.741,110,1.155,111,0.498,112,0.358,113,0.4,114,1.269,115,0.393,120,1.404,122,0.946,126,1.31,130,0.808,132,3.079,133,0.362,139,1.253,140,1.043,141,0.848,143,0.822,144,2.915,145,0.406,146,1.545,148,3.343,151,1.612,153,0.372,154,0.315,156,0.732,157,0.295,164,2.306,170,0.703,179,0.387,180,0.966,186,2.52,188,0.918,189,0.686,193,0.377,194,3.075,196,1.417,198,0.793,201,0.44,205,1.558,210,0.977,212,0.45,217,0.4,226,0.594,229,0.45,236,0.372,242,0.862,254,0.886,256,0.779,258,0.358,268,0.941,270,0.788,271,0.367,272,3.823,283,0.779,291,0.44,295,0.32,297,0.4,298,0.901,308,1.342,311,2.264,313,0.387,324,0.519,325,0.808,342,0.346,353,0.414,355,3.341,357,0.332,361,0.302,364,0.422,374,2.163,375,1.431,380,0.367,383,0.732,384,0.315,385,0.377,387,0.367,388,0.382,390,0.462,396,0.643,404,1.968,405,0.362,410,1.352,413,0.912,415,0.387,417,0.414,430,0.329,437,0.393,444,0.825,448,0.406,455,1.268,458,1.331,459,0.422,460,0.329,462,0.336,463,1.704,476,1.372,492,0.863,494,1.283,502,0.598,504,0.886,506,0.462,508,2.345,518,1.032,524,0.354,532,0.43,540,0.779,544,1.44,555,0.35,585,0.43,599,0.422,603,0.382,604,1.417,619,0.863,629,0.372,630,0.354,645,0.927,648,0.843,683,0.354,706,0.754,724,0.422,726,0.406,775,0.393,796,0.843,797,1.628,810,1.165,814,0.462,832,0.387,846,0.393,858,0.44,881,1.04,882,1.143,885,0.377,900,0.4,905,0.44,960,0.511,967,0.492,994,0.462,1002,0.329,1005,0.498,1009,3.18,1018,0.377,1031,2.638,1147,0.754,1155,2.427,1161,0.534,1175,0.766,1180,1.244,1191,0.462,1204,1.089,1207,2.281,1209,0.657,1216,0.377,1223,0.44,1226,0.393,1230,1.04,1250,0.979,1252,0.422,1258,0.943,1259,0.979,1261,0.358,1287,0.422,1291,0.534,1297,0.362,1329,3.553,1342,0.732,1357,0.4,1385,0.511,1447,0.45,1526,0.566,1528,0.534,1564,3.038,1616,0.566,1656,0.912,1658,0.943,1696,0.979,1747,0.462,1784,0.406,1799,0.492,1956,0.703,1998,0.492,2002,1.741,2007,0.511,2027,0.476,2060,2.279,2065,1.971,2074,0.44,2077,2.521,2079,1.215,2088,0.476,2093,4.777,2170,0.566,2252,0.492,2267,0.534,2349,1.086,2438,1.244,2463,0.566,2553,0.492,2572,0.43,2583,0.511,2585,1.466,2586,0.492,2594,1.741,2598,0.511,2613,0.44,2614,0.476,2615,0.492,2616,0.943,2617,0.979,2618,0.979,2666,0.886,2673,1.876,2683,0.979,2689,0.979,2704,1.314,2711,0.492,2722,1.025,2902,0.462,2908,0.566,2915,0.566,2920,1.025,2941,0.979,2973,2.281,2974,0.979,2981,0.534,2984,0.566,3085,0.979,3329,1.086,3331,1.086,3334,1.086,3362,0.979,3469,1.086,3532,0.534,3583,1.086,3656,1.086,3685,0.566,3759,0.534,3772,0.566,3773,2.006,3779,0.566,3780,0.566,3799,1.025,3802,0.566,3813,2.006,3873,0.566,3874,0.566,3875,1.086,3876,1.564,3890,0.566,3892,0.615,3893,0.615,3894,0.615,3895,0.615,3896,5.751,3897,4.726,3898,4.726,3899,4.726,3900,0.615,3901,4.726,3902,0.615,3903,0.615,3904,0.615,3905,0.615,3906,1.179,3907,0.615,3908,0.615,3909,0.615,3910,0.615,3911,1.179,3912,0.615,3913,0.615,3914,0.615,3915,0.615,3916,0.615,3917,1.179,3918,0.615,3919,1.179,3920,0.615,3921,0.615,3922,0.615,3923,0.615,3924,0.615,3925,0.615,3926,1.179,3927,0.615,3928,0.615,3929,0.615,3930,0.615]],["component/85",[273,0.458]],["title/86-1",[282,37.036,3931,54.637]],["name/86-1",[]],["text/86-1",[]],["component/86-1",[]],["title/86-2",[27,17.997,3931,54.637]],["name/86-2",[]],["text/86-2",[]],["component/86-2",[]],["title/86-3",[27,17.997,1306,50.906]],["name/86-3",[]],["text/86-3",[]],["component/86-3",[]],["title/86-4",[27,22.501]],["name/86-4",[]],["text/86-4",[]],["component/86-4",[]],["title/86-5",[3932,71.502]],["name/86-5",[]],["text/86-5",[]],["component/86-5",[]],["title/86",[27,12.851,166,30.054,441,29.601,3933,34.407]],["name/86",[166,0.806,441,0.794]],["text/86",[3,1.361,27,3.333,94,3.365,135,3.741,154,2.155,166,4.158,181,2.297,194,3.174,219,4.334,247,2.946,268,1.819,282,2.37,298,2.232,309,4.649,324,1.853,335,3.365,361,2.069,441,2.652,473,2.423,550,4.649,645,2.297,670,4.458,727,4.799,773,2.887,774,3.164,819,5.68,923,2.614,1297,2.48,1306,6.91,1316,6.349,1317,2.946,1353,3.877,1354,3.365,1375,3.365,1386,3.365,1395,3.659,1556,2.946,1930,3.164,1935,2.614,2857,3.659,2936,3.659,3613,3.877,3931,5.398,3932,3.659,3934,4.209,3935,4.209,3936,3.877,3937,3.877,3938,4.209,3939,4.209,3940,4.209,3941,4.209,3942,4.209,3943,4.209,3944,4.209,3945,4.209,3946,4.209,3947,4.209,3948,4.209,3949,4.209,3950,3.877]],["component/86",[273,0.458]],["title/87-1",[1317,57.564]],["name/87-1",[]],["text/87-1",[]],["component/87-1",[]],["title/87-2",[52,19.501,157,22.577,1352,36.351,3207,39.015]],["name/87-2",[]],["text/87-2",[]],["component/87-2",[]],["title/87-3",[51,32.301,341,27.826,693,40.146]],["name/87-3",[]],["text/87-3",[]],["component/87-3",[]],["title/87-4",[52,27.31,2286,52.601]],["name/87-4",[]],["text/87-4",[]],["component/87-4",[]],["title/87-5",[52,27.31,3761,54.637]],["name/87-5",[]],["text/87-5",[]],["component/87-5",[]],["title/87-6",[51,38.767,3262,52.601]],["name/87-6",[]],["text/87-6",[]],["component/87-6",[]],["title/87-7",[52,27.31,3951,57.187]],["name/87-7",[]],["text/87-7",[]],["component/87-7",[]],["title/87-8",[282,37.036,779,46.039]],["name/87-8",[]],["text/87-8",[]],["component/87-8",[]],["title/87",[52,22.754,157,26.343,3933,40.146]],["name/87",[52,0.523,157,0.605]],["text/87",[3,1.243,13,1.037,18,1.495,20,1.003,27,2.05,51,4.737,52,4.658,72,3.071,92,1.343,103,1.128,126,1.92,133,1.309,134,1.212,135,1.279,136,1.469,145,1.469,154,1.968,157,3.289,159,1.264,166,1.421,170,1.325,180,1.264,194,2.735,210,1.725,214,1.309,219,2.774,220,3.937,221,2.636,248,2.387,262,1.264,268,0.96,270,1.03,282,1.251,285,1.523,299,1.225,305,1.589,318,1.092,324,2.237,333,1.67,334,1.495,335,1.776,337,1.931,338,1.719,339,1.776,341,3.804,357,1.201,374,1.016,375,1.212,381,3.193,391,1.225,405,1.309,408,1.495,410,1.38,419,1.589,432,1.212,443,1.67,448,1.469,455,1.293,469,2.046,477,1.523,478,1.444,498,1.776,513,1.89,544,2.541,615,1.845,618,1.444,627,1.325,629,1.343,645,1.212,670,1.523,683,1.279,693,2.816,695,1.845,717,3.541,757,2.039,775,1.421,779,3.556,810,1.523,880,1.776,884,1.67,895,1.495,989,2.89,996,1.719,1000,3.485,1132,1.931,1146,1.931,1226,1.421,1282,4.378,1287,1.523,1297,1.309,1317,4.789,1322,1.589,1352,2.975,1492,1.589,1556,4.789,1595,1.627,1667,1.931,1669,2.387,1684,1.931,1692,1.931,1693,1.776,1724,1.845,1739,1.776,1746,2.046,1837,1.931,2097,2.046,2205,2.046,2286,4.063,2487,1.845,2602,2.975,2936,1.931,3135,1.845,3207,3.193,3262,4.063,3759,1.931,3761,1.845,3791,2.046,3937,2.046,3951,3.342,3952,2.221,3953,2.046,3954,2.221,3955,2.221,3956,2.046,3957,2.046,3958,2.046,3959,2.221,3960,2.221,3961,2.221,3962,2.221,3963,2.221,3964,2.221,3965,2.221,3966,2.046,3967,2.221,3968,2.221,3969,2.221,3970,2.221]],["component/87",[273,0.458]],["title/88-1",[195,50.378]],["name/88-1",[]],["text/88-1",[]],["component/88-1",[]],["title/88-2",[1674,65.767]],["name/88-2",[]],["text/88-2",[]],["component/88-2",[]],["title/88-3",[27,17.997,218,47.055]],["name/88-3",[]],["text/88-3",[]],["component/88-3",[]],["title/88-4",[3971,71.502]],["name/88-4",[]],["text/88-4",[]],["component/88-4",[]],["title/88-5",[27,12.851,241,27.038,739,39.015,881,28.772]],["name/88-5",[]],["text/88-5",[]],["component/88-5",[]],["title/88-6",[3972,71.502]],["name/88-6",[]],["text/88-6",[]],["component/88-6",[]],["title/88",[27,14.995,361,26.947,3933,40.146]],["name/88",[27,0.345,361,0.619]],["text/88",[3,1.712,22,1.5,23,1.127,27,3.22,30,1.436,32,1.306,61,1.087,71,1.365,73,1.153,90,2.116,114,3.066,124,1.28,134,1.28,135,1.349,136,1.55,140,0.932,144,1.965,157,1.127,160,1.762,164,1.144,166,1.5,188,3.823,191,1.2,194,1.61,195,1.436,216,1.293,218,5.059,219,2.889,220,1.524,223,1.947,234,1.578,241,3.047,245,1.608,248,1.456,268,1.013,274,1.066,275,1.641,285,1.608,295,1.221,307,5.56,324,2.33,339,5.022,361,3.088,363,1.55,396,2.198,430,1.255,448,1.55,460,1.255,471,7.611,480,1.717,510,2.576,518,1.11,706,1.5,739,1.947,757,1.243,779,1.641,832,1.477,847,1.677,881,1.436,895,1.578,897,1.762,989,1.762,1000,1.608,1146,2.038,1179,2.618,1205,1.399,1224,1.814,1297,1.382,1316,5.655,1359,2.038,1492,1.677,1541,2.16,1556,2.818,1561,2.16,1583,1.875,1674,1.875,1693,1.875,2257,3.344,2413,3.71,2438,1.717,2657,2.16,2824,6.515,2827,5.655,2828,5.786,2829,5.786,2830,4.876,2886,5.216,3262,1.875,3950,2.16,3953,4.876,3966,2.16,3971,2.038,3972,2.038,3973,4.027,3974,4.027,3975,2.16,3976,2.16,3977,2.344,3978,2.344,3979,6.281,3980,2.344,3981,7.072,3982,2.344,3983,2.16,3984,4.027,3985,2.344]],["component/88",[273,0.458]],["title/89-1",[1542,54.375]],["name/89-1",[]],["text/89-1",[]],["component/89-1",[]],["title/89-2",[431,34.574,3933,48.183]],["name/89-2",[]],["text/89-2",[]],["component/89-2",[]],["title/89",[27,17.997,3933,48.183]],["name/89",[42,1.348]],["text/89",[3,1.839,23,1.706,27,3.283,51,3.35,52,3.693,123,1.919,124,1.938,154,1.817,157,2.732,166,2.271,180,2.021,188,1.919,194,2.272,195,2.174,218,2.539,219,4.855,220,4.622,241,2.043,252,2.271,282,1.999,302,1.919,312,2.271,341,1.802,355,2.109,361,1.745,431,1.866,441,2.237,443,2.669,550,2.539,633,3.086,639,2.485,683,2.043,693,2.6,724,2.435,739,2.949,748,2.539,773,3.899,881,2.174,953,3.086,1000,2.435,1006,3.086,1016,3.086,1029,2.485,1306,2.747,1317,2.485,1352,2.747,1386,2.839,1427,2.839,1496,2.485,1556,2.485,1582,4.701,1671,2.949,1674,2.839,1862,2.6,1931,2.949,2014,3.27,2201,3.27,2236,2.949,2286,2.839,2424,3.27,2791,2.949,2827,2.839,3207,2.949,3262,2.839,3761,2.949,3931,4.722,3932,3.086,3933,7.3,3951,3.086,3971,3.086,3972,3.086,3975,3.27,3986,3.55,3987,3.55,3988,3.55,3989,3.55,3990,3.55,3991,3.086,3992,3.086,3993,3.086,3994,3.086]],["component/89",[273,0.458]],["title/90-1",[27,14.995,1582,36.235,2827,43.827]],["name/90-1",[]],["text/90-1",[]],["component/90-1",[]],["title/90-2",[27,14.995,1582,36.235,3993,47.648]],["name/90-2",[]],["text/90-2",[]],["component/90-2",[]],["title/90-3",[3994,71.502]],["name/90-3",[]],["text/90-3",[]],["component/90-3",[]],["title/90",[27,12.851,357,25.391,1582,31.055,3933,34.407]],["name/90",[357,0.681,1582,0.833]],["text/90",[12,2.135,16,2.744,19,2.905,27,2.732,30,2.781,57,2.905,80,2.037,111,1.917,134,2.478,180,2.584,181,2.478,188,2.454,189,2.644,194,1.815,215,2.344,216,2.503,219,5.07,221,3.114,252,4.406,268,1.963,274,3.131,275,3.177,295,2.365,324,3.032,355,3.705,357,2.454,361,2.232,430,2.431,467,3.114,669,4.724,682,2.744,833,3.513,885,4.218,895,3.055,923,2.82,944,3.63,989,3.413,1011,4.182,1308,4.553,1452,5.045,1582,6.601,1583,3.63,2827,3.63,2869,3.947,3156,4.182,3936,4.182,3956,4.182,3957,4.182,3958,4.182,3976,4.182,3983,4.182,3993,3.947,3994,3.947,3995,4.182,3996,4.54,3997,4.54,3998,4.54,3999,6.887,4000,4.54]],["component/90",[273,0.458]],["title/91-1",[27,17.997,1556,46.039]],["name/91-1",[]],["text/91-1",[]],["component/91-1",[]],["title/91-2",[27,14.995,1671,45.523,3991,47.648]],["name/91-2",[]],["text/91-2",[]],["component/91-2",[]],["title/91-3",[3,15.194,773,32.217,2791,39.015,3992,40.836]],["name/91-3",[]],["text/91-3",[]],["component/91-3",[]],["title/91",[3,13.294,27,11.244,154,21.041,180,23.392,3933,30.103]],["name/91",[3,0.282,154,0.447,180,0.497]],["text/91",[1,1.491,3,3.343,10,2.056,16,2.134,19,2.259,27,2.827,50,2.295,52,1.466,76,1.823,80,2.539,91,1.89,100,2.376,103,1.792,110,1.872,135,2.032,154,4.541,194,2.832,210,2.539,219,3.089,220,2.295,226,1.778,248,4.4,262,2.009,268,2.447,274,1.605,298,3.002,308,1.807,324,2.492,361,2.783,396,3.089,430,1.89,474,5.326,510,3.621,518,1.672,645,1.927,669,3.882,698,3.069,706,2.259,773,3.882,790,3.069,814,2.654,832,3.566,884,2.654,1000,2.421,1179,3.679,1282,2.259,1297,2.08,1351,4.92,1495,2.654,1532,3.069,1556,3.961,1575,2.932,1584,2.823,1595,2.586,1650,3.252,1671,4.701,1673,3.252,1674,2.823,1693,2.823,1756,2.376,1758,2.932,1766,2.932,1770,2.932,1799,2.823,1915,2.654,2222,2.932,2286,2.823,2438,2.586,2791,4.701,3281,3.252,3649,3.252,3991,6.158,3992,3.069,3995,3.252,4001,3.53,4002,3.53,4003,3.53,4004,3.53,4005,3.53]],["component/91",[273,0.458]]],"invertedIndex":[["",{"_index":355,"title":{"41-7":{},"41-8":{},"41-9":{},"41-10":{},"41-11":{},"41-13":{},"41-14":{},"41-15":{},"41-16":{},"44-4":{},"65-6":{},"66-1":{},"66-2":{},"66-3":{},"66-4":{},"66-5":{},"66-6":{},"66-7":{},"66-8":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"37":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"48":{},"49":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"89":{},"90":{}},"component":{}}],["0",{"_index":196,"title":{"44-33":{}},"name":{},"text":{"1":{},"4":{},"9":{},"13":{},"15":{},"25":{},"38":{},"41":{},"42":{},"44":{},"54":{},"56":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"70":{},"72":{},"73":{},"74":{},"78":{},"79":{},"80":{},"83":{},"84":{},"85":{}},"component":{}}],["0'",{"_index":2667,"title":{},"name":{},"text":{"44":{}},"component":{}}],["0.0.2",{"_index":2838,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.000615910614837578",{"_index":1716,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0.001358626332416775",{"_index":1718,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0.0025",{"_index":2642,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["0.032",{"_index":2608,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["0.04",{"_index":3292,"title":{},"name":{},"text":{"65":{}},"component":{}}],["0.08",{"_index":3290,"title":{},"name":{},"text":{"65":{}},"component":{}}],["0.1",{"_index":2442,"title":{},"name":{},"text":{"42":{}},"component":{}}],["0.1.0",{"_index":3660,"title":{},"name":{},"text":{"75":{}},"component":{}}],["0.1.2",{"_index":2837,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.10.0",{"_index":2818,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.10.2",{"_index":2835,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.10.3",{"_index":2470,"title":{},"name":{},"text":{"42":{}},"component":{}}],["0.11.0",{"_index":2817,"title":{},"name":{},"text":{"48":{},"64":{}},"component":{}}],["0.11.0.2",{"_index":2407,"title":{},"name":{},"text":{"42":{}},"component":{}}],["0.11.1",{"_index":2842,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.11.1.1",{"_index":2387,"title":{},"name":{},"text":{"42":{}},"component":{}}],["0.11.2a0",{"_index":2376,"title":{},"name":{},"text":{"42":{}},"component":{}}],["0.12.0",{"_index":2819,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.12.0a0",{"_index":2360,"title":{},"name":{},"text":{"42":{}},"component":{}}],["0.12.1",{"_index":2233,"title":{},"name":{},"text":{"41":{}},"component":{}}],["0.12.2",{"_index":2161,"title":{},"name":{},"text":{"41":{}},"component":{}}],["0.128",{"_index":2644,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["0.13.0",{"_index":2651,"title":{},"name":{},"text":{"44":{},"48":{},"65":{}},"component":{}}],["0.13.1",{"_index":2604,"title":{"64-2":{}},"name":{},"text":{"44":{},"48":{},"64":{},"65":{}},"component":{}}],["0.13.1.1",{"_index":2603,"title":{},"name":{},"text":{"44":{}},"component":{}}],["0.13.2",{"_index":2809,"title":{},"name":{},"text":{"48":{},"68":{}},"component":{}}],["0.13.3",{"_index":53,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0.14.1",{"_index":2816,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.16",{"_index":3294,"title":{},"name":{},"text":{"65":{}},"component":{}}],["0.19.0",{"_index":2841,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.2.0",{"_index":2834,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.20.0",{"_index":2826,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.21.0",{"_index":2825,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.24.1",{"_index":2840,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.25",{"_index":3285,"title":{},"name":{},"text":{"65":{}},"component":{}}],["0.256",{"_index":2647,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["0.27.0",{"_index":2836,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.28.0",{"_index":2848,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.3.0",{"_index":2833,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.3.3",{"_index":2844,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.3.4",{"_index":2843,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.4.0",{"_index":2174,"title":{},"name":{},"text":{"41":{}},"component":{}}],["0.5.0",{"_index":2175,"title":{},"name":{},"text":{"41":{}},"component":{}}],["0.5.5",{"_index":2325,"title":{"42-22":{}},"name":{},"text":{},"component":{}}],["0.5.6",{"_index":2323,"title":{"42-20":{}},"name":{},"text":{},"component":{}}],["0.6",{"_index":2811,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.6.0",{"_index":2322,"title":{"42-17":{},"44-22":{}},"name":{},"text":{},"component":{}}],["0.6.1",{"_index":2321,"title":{"42-15":{}},"name":{},"text":{"48":{}},"component":{}}],["0.6.2",{"_index":2320,"title":{"42-11":{}},"name":{},"text":{},"component":{}}],["0.6.3",{"_index":2317,"title":{"42-8":{}},"name":{},"text":{},"component":{}}],["0.6.4",{"_index":2315,"title":{"42-6":{}},"name":{},"text":{},"component":{}}],["0.6.5",{"_index":2314,"title":{"42-3":{}},"name":{},"text":{},"component":{}}],["0.6.6",{"_index":2312,"title":{"42-1":{}},"name":{},"text":{},"component":{}}],["0.64",{"_index":701,"title":{},"name":{},"text":{"5":{}},"component":{}}],["0.7",{"_index":2810,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.7.0",{"_index":2512,"title":{"44-23":{}},"name":{},"text":{"44":{},"48":{}},"component":{}}],["0.8",{"_index":2820,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.8.0",{"_index":2832,"title":{},"name":{},"text":{"48":{}},"component":{}}],["0.875",{"_index":2606,"title":{},"name":{},"text":{"44":{}},"component":{}}],["0.9.0",{"_index":2831,"title":{},"name":{},"text":{"48":{}},"component":{}}],["000",{"_index":99,"title":{},"name":{},"text":{"1":{},"29":{},"44":{},"54":{},"65":{},"66":{}},"component":{}}],["000/10",{"_index":3276,"title":{},"name":{},"text":{"65":{}},"component":{}}],["000/20",{"_index":3286,"title":{},"name":{},"text":{"65":{}},"component":{}}],["000/500",{"_index":3274,"title":{},"name":{},"text":{"65":{}},"component":{}}],["001",{"_index":3279,"title":{},"name":{},"text":{"65":{}},"component":{}}],["00:00",{"_index":2086,"title":{},"name":{},"text":{"38":{}},"component":{}}],["01",{"_index":3524,"title":{},"name":{},"text":{"70":{}},"component":{}}],["04",{"_index":2518,"title":{"44-34":{}},"name":{},"text":{},"component":{}}],["05",{"_index":2316,"title":{"42-6":{},"42-20":{},"42-22":{},"44-43":{}},"name":{},"text":{},"component":{}}],["06",{"_index":2318,"title":{"42-8":{},"42-11":{},"42-15":{},"42-17":{},"44-45":{}},"name":{},"text":{},"component":{}}],["07",{"_index":2313,"title":{"42-1":{},"42-3":{},"42-6":{}},"name":{},"text":{},"component":{}}],["089",{"_index":172,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0=1",{"_index":3614,"title":{},"name":{},"text":{"73":{}},"component":{}}],["0n",{"_index":1490,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0x",{"_index":2432,"title":{},"name":{},"text":{"42":{},"44":{}},"component":{}}],["0x0",{"_index":3366,"title":{"70-11":{}},"name":{},"text":{"66":{},"70":{},"71":{}},"component":{}}],["0x0000000000000000000000000000000000000000000000000000000000000000",{"_index":1634,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x000000000000000000000000000000000000000000000000000000000000002a",{"_index":1644,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x0000000000000000000000000000000000000000000000000000000000000042",{"_index":1737,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x000000000000000000000000000000000e1406455b7d66b1690803be066cbe5",{"_index":1603,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x0000000000000000000000000000000071d7bb07b9a64f6f78ac4c816aff4da9",{"_index":1600,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x007a1bb2744a7dd29bffd44341dbd78008adb4bc11733601e7eddff322ada9cb",{"_index":1604,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x009035556d1ee136e7722ae4e78f92828553a45eed3bc9b2aba90788ec2ca112",{"_index":1899,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0x00a3b109389575a420cd0c5ccbd14e9bf2f5b56d50f6085d08202d15ee2b3222",{"_index":1631,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x00ca1702e64c81d9a07b86bd2c540188d92a2c73cf5cc0e508d949015e7e84a7",{"_index":1903,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0x00ca1705e74233131dbcdee7f1b8d2926bf262168c7df339004b3f46015b6984",{"_index":1901,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0x00ed474ec67f690901bcc56ee69491163c4203ededf473198e08c24fe2ab0a29",{"_index":1730,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x01cf4d57ba01109f018dec3ea079a38fc08b789e03de4df937ddb9e8a0ff853a",{"_index":1712,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x02ceb6da76e2b2b80f2a23ff2910edf1dcc12e1b9d6a27d1da43d7db943e568c",{"_index":1635,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x02ebbebb8ceb2e07f30a5088f5849afd4f908f04f3f9c97c694e5d83d2a7cc61",{"_index":1900,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0x0351c67dc2d4653cbe457be59a035f80ff1e6f6939118dad1b7a94317a51a454",{"_index":1902,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0x035c332b8de00874e702b4831c84b22281fb3246f714475496d74e644f35d492",{"_index":46,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0x03745ab04a431fc02871a139be6b93d9260b0ff3e779ad9c8b377183b23109f1",{"_index":1821,"title":{},"name":{},"text":{"25":{},"29":{}},"component":{}}],["0x039d9e6ce352ad4530a0ef5d5a18fd3303c3606a7fa6ac5b620020ad681cc33b",{"_index":1601,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x03dfdb739fbd3ddab0f851bf1131079e31ca266c7af94f05cef4d9481f837509",{"_index":1708,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x03fa911dfca026d9c8edb508851b390accf912e8",{"_index":1111,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x041a78e741e5af2fec34b695679bc6891742439f7afb8484ecd7766661ad02bf",{"_index":2971,"title":{},"name":{},"text":{"59":{}},"component":{}}],["0x046ded64ae2dead6448e247234bab192a9c483644395b66f2155f2614e5804b0",{"_index":1591,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d",{"_index":37,"title":{},"name":{},"text":{"1":{},"16":{},"25":{}},"component":{}}],["0x0498dd3035e000f91c4f02af54e564a99e87e6a765525d92a4c112b0bc44cfc7",{"_index":1632,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",{"_index":39,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0x053c91253bc9682c04929ca02ed00b3e423f6710d2ee7e0d5ebb06f3ecf368a8",{"_index":1953,"title":{},"name":{},"text":{"33":{}},"component":{}}],["0x05be8823fc9b0c8605374d54f23f38badbd1b8ab4cbb680512cfde3f5662947b",{"_index":1639,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x05cd48fccbfd8aa2773fe22c217e808319ffcc1c5a6a463f7d8fa2da48218196",{"_index":1955,"title":{},"name":{},"text":{"33":{}},"component":{}}],["0x063b85d93491e678fe051952c39575c80ea397fa1be4076fe28616356d673595",{"_index":1733,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x064b48806902a367c8598f4f95c305e8c1a1acba5f082d294a43793113115691",{"_index":1599,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x066ccbbbdd2c3967620a039d7579bf5e03a5c15c77819d53a8b21dbdee705f8d",{"_index":1731,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x068b5b84d03fd725433e93e406abdccc577fb49a7a7fa7c9013493c1d5ad9811",{"_index":1636,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x06a9a08208084ac376f10657c745a3020362fa65e7730b13e08ec03d0cd7e59d",{"_index":1721,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x07154f9d7e9602d3d3dd0034168be00f044ba15caf80b6fe09f6fef8f2568f57",{"_index":1729,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x0782f0ddca11d9950bc3220e35ac82cf868778edb67a5e58b39838544bc4cd0f",{"_index":45,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c",{"_index":1629,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["0x078662e7352d062084b0010068b99288486c2d8b914f6e2a55ce945f8792c8b1",{"_index":1602,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x07ec0d28e50322eb0c159b9090ecf3aea8346df",{"_index":35,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0x0c099caf7a87e4eb28bcd8d0608063f8a69bb434",{"_index":1086,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x0efe6a8b",{"_index":1959,"title":{},"name":{},"text":{"33":{},"36":{}},"component":{}}],["0x1",{"_index":3479,"title":{"70-12":{}},"name":{},"text":{"70":{}},"component":{}}],["0x100000000000000000000000000000000",{"_index":3834,"title":{},"name":{},"text":{"83":{}},"component":{}}],["0x1176a1bd84444c89232ec27754698e5d2e7e1a7f1539f12027f28b23ec9f3d8",{"_index":3550,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x181de8b0cd32999a5cc962c5f724bc0f6a322f02957b80e1d5fef49a87588b7",{"_index":3544,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x194fc63c49b0f07c8e7a78476844837255213824bd6cb81e0ccfb949921aad1",{"_index":3549,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x217750c27be9147f9e358d9ff26a8224f8acc214",{"_index":1058,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x221db5dbf6db",{"_index":3541,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x297951a67d1bf7795500c3802d21a8c846d9c962",{"_index":1080,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x301fc0d09c5810600af7bb9610be10596ad6f4e6d28a60d397dd148f0962a88",{"_index":3542,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x3405f644f9390c3478f42fd205ce6920ccaf3280",{"_index":1060,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x363d42397f536706e7b2a9883ec8d4db739f062ac6aab8ade02b7db8cede731",{"_index":1509,"title":{},"name":{},"text":{"14":{}},"component":{}}],["0x37070fd8051f63e5a6d7e87026e086cc19db1ab",{"_index":1100,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x3e6118da317f7a433031f03bb71ab870d87dd2dd",{"_index":1046,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x41a78e741e5af2fec34b695679bc6891742439f7afb8484ecd7766661ad02bf",{"_index":1593,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x43a1c0bba540e1c98d4b413f876250bdcfd0b9e0",{"_index":1090,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x47312450b3ac8b5b8e247a6bb6d523e7605bdb60",{"_index":34,"title":{},"name":{},"text":{"1":{},"9":{}},"component":{}}],["0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7",{"_index":1590,"title":{},"name":{},"text":{"16":{},"71":{}},"component":{}}],["0x4bf82e627d57cb3f455e740bcda25848cdbd2ff7",{"_index":1084,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x4c6f6e6720737472696e672c206d6f7265207468616e203331206368617261",{"_index":3865,"title":{},"name":{},"text":{"83":{}},"component":{}}],["0x4cf5c11321d54b83bdae84bbbd018c26621d2950",{"_index":1068,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x4d0e80ab34ee2b19295f2cac3101d03452d874b8",{"_index":1109,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x4fb05b7cc348c5a72c59a3f307baf66e3ca1f835",{"_index":1105,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x519da5f74503da351ebbed889111377d33096002",{"_index":1052,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x52314e0b25b024c34480ac3c75cfe98c2ed6aa4a",{"_index":1072,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x534e5f5345504f4c4941",{"_index":1597,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x5899efea757e0dbd6d114b3375c23d7540f65fa4",{"_index":1045,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x593a71dc43e9b67fe009d7c76b6efa925fb329b1",{"_index":1054,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x5d07affafc8721ef3dee4d11a2d1484cbf6a9ddf",{"_index":1048,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x630a97901ac29590df83f4a64b8d490d54caf239",{"_index":1064,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x63746572732e",{"_index":3866,"title":{},"name":{},"text":{"83":{}},"component":{}}],["0x648d1b35a932f5189e7ff97b2f795e03734de4c",{"_index":1898,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0x68293272fea2d6e74572bc18ffad11f21344e090",{"_index":1096,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x68656c6c6f",{"_index":3864,"title":{},"name":{},"text":{"83":{}},"component":{}}],["0x691ca565b7416b681e4f9fb56a1283ae8b34e55",{"_index":1092,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x69328dec",{"_index":2113,"title":{},"name":{},"text":{"40":{}},"component":{}}],["0x6cb3ee90c50a38a0e4662bb7e7e6e40b91361bf6",{"_index":1043,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x73314940630fd6dcda0d772d4c972c4e0a9946bef9dabf4ef84eda8ef542b82",{"_index":3548,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x764da020183e28a48ee38a9474f84e7e5ff13194",{"_index":3547,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x78af2bfb12db15d35f7de8dd77f29c299c78c590",{"_index":1088,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x7b3e05f48f0c69e4a65ce5e076a66271a527aff2c34ce1083ec6e1526997a69",{"_index":1594,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0x812c2ad2161d099724a99c8114c539b9e5b449cd",{"_index":1107,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x8488e8f4e26eba40fae229ab653d98e341cbe57b",{"_index":1070,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x8518f459a698038b4cced66c042c48c6bb5b17f",{"_index":1066,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x89b7a7276cbc8cb35ec11fae9da83b20db3edf20",{"_index":1115,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x9184e72a000",{"_index":3545,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x943248da0ffd5834da56c5ad5308e2e2991378eb",{"_index":1062,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",{"_index":3546,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0x9e614a417f8309575fc11b175a51599661f2bd21",{"_index":1076,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",{"_index":1952,"title":{},"name":{},"text":{"33":{}},"component":{}}],["0xae0ee0a63a2ce6baeeffe56e7714fb4efe48d419",{"_index":2028,"title":{},"name":{},"text":{"36":{},"40":{}},"component":{}}],["0xb4711a4614368516529d6118c97905ab4b28e267",{"_index":1102,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xbe8bd7a41ba7dc7b995a53368e7ffe30fd2bc447",{"_index":1074,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xc3511006c04ef1d78af4c8e0e74ec18a6e64ff9",{"_index":3551,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0xc4f21318937017b8abe5fdc0d48f58dbc1d18940",{"_index":1050,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xc662c410c0ecf747543f5ba90660f6abebd9c8c4",{"_index":31,"title":{},"name":{},"text":{"1":{},"2":{}},"component":{}}],["0xc879af7d5ed80e4676c203fd300e640c297f31e3",{"_index":1082,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xc9e067af5d00eb4aa2e73843ac36aff83c5ceed3",{"_index":1113,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xca1406d57ed09947e68de121316c87113fbe9ff5",{"_index":1895,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0xca14076a3cec95448bad179cc19b351a4204b88b",{"_index":1897,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0xca59f6fd499fff50c78ffb420a9bcd0d273abf29",{"_index":1056,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xd0aadeca2d25aefde0da214d27b04b6ea20d7418",{"_index":1098,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xd4c4044aca68ebbcb81b13cc2699e1bca2d3f458",{"_index":1042,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xdeadbeef",{"_index":3552,"title":{},"name":{},"text":{"71":{}},"component":{}}],["0xe2bb56ee936fd6433dc0f6e7e3b8365c906aa057",{"_index":33,"title":{},"name":{},"text":{"1":{}},"component":{}}],["0xe2bbb158",{"_index":1960,"title":{},"name":{},"text":{"33":{}},"component":{}}],["0xe58d25681b9d290d60e4d7f379a05d5bfd973ffb",{"_index":1896,"title":{},"name":{},"text":{"29":{}},"component":{}}],["0xe9664d230490d5a515ef7ef30033d8075a8d0e24",{"_index":1094,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xed219933b58e9c00e66682356588d42c7932ee8",{"_index":1078,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0xf6080d9fbeebcd44d89affbfd42f098cbff92816",{"_index":1954,"title":{},"name":{},"text":{"33":{}},"component":{}}],["0xf6080d9fbeebcd44d89affbfd42f098cbff92816#writeproxycontract",{"_index":1958,"title":{},"name":{},"text":{"33":{}},"component":{}}],["0xfd14567eaf9ba941cb8c8a94eec14831ca7fd1b4",{"_index":1044,"title":{},"name":{},"text":{"9":{}},"component":{}}],["0}_{\\textit{serialized_member_0",{"_index":3838,"title":{},"name":{},"text":{"83":{}},"component":{}}],["0}_{\\textit{serialized_member_1",{"_index":3840,"title":{},"name":{},"text":{"83":{}},"component":{}}],["1",{"_index":143,"title":{"2-12":{},"39-4":{},"39-8":{}},"name":{},"text":{"1":{},"2":{},"5":{},"9":{},"16":{},"22":{},"25":{},"29":{},"33":{},"38":{},"39":{},"41":{},"44":{},"45":{},"46":{},"50":{},"51":{},"53":{},"54":{},"56":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"79":{},"81":{},"83":{},"84":{},"85":{}},"component":{}}],["1.0",{"_index":199,"title":{"73-5":{}},"name":{},"text":{"1":{},"44":{},"72":{},"73":{}},"component":{}}],["1.0.0",{"_index":2391,"title":{},"name":{},"text":{"42":{}},"component":{}}],["1.1k",{"_index":2588,"title":{},"name":{},"text":{"44":{}},"component":{}}],["1.27",{"_index":710,"title":{},"name":{},"text":{"5":{}},"component":{}}],["1.2b",{"_index":3306,"title":{},"name":{},"text":{"65":{}},"component":{}}],["1.4.0",{"_index":2815,"title":{},"name":{},"text":{"48":{}},"component":{}}],["1.5.0",{"_index":2814,"title":{},"name":{},"text":{"48":{}},"component":{}}],["1.6",{"_index":1875,"title":{},"name":{},"text":{"29":{}},"component":{}}],["1.6.0",{"_index":54,"title":{},"name":{},"text":{"1":{},"48":{}},"component":{}}],["1/40",{"_index":3275,"title":{},"name":{},"text":{"65":{}},"component":{}}],["1/sierra",{"_index":2284,"title":{},"name":{},"text":{"41":{}},"component":{}}],["10",{"_index":130,"title":{"42-1":{},"44-31":{}},"name":{},"text":{"1":{},"2":{},"14":{},"44":{},"65":{},"70":{},"72":{},"83":{},"85":{}},"component":{}}],["10.00",{"_index":679,"title":{},"name":{},"text":{"5":{}},"component":{}}],["10.76",{"_index":661,"title":{},"name":{},"text":{"5":{}},"component":{}}],["100",{"_index":532,"title":{},"name":{},"text":{"4":{},"25":{},"28":{},"42":{},"44":{},"54":{},"64":{},"65":{},"82":{},"85":{}},"component":{}}],["10000",{"_index":1827,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["1000000000000000000",{"_index":1828,"title":{},"name":{},"text":{"25":{}},"component":{}}],["101",{"_index":3521,"title":{},"name":{},"text":{"70":{}},"component":{}}],["102",{"_index":3189,"title":{},"name":{},"text":{"64":{}},"component":{}}],["1024",{"_index":2406,"title":{},"name":{},"text":{"42":{}},"component":{}}],["1110",{"_index":3198,"title":{},"name":{},"text":{"64":{}},"component":{}}],["1124",{"_index":3241,"title":{},"name":{},"text":{"65":{}},"component":{}}],["12",{"_index":2521,"title":{"44-36":{},"44-40":{}},"name":{},"text":{"65":{}},"component":{}}],["12.93",{"_index":663,"title":{},"name":{},"text":{"5":{}},"component":{}}],["12345",{"_index":3869,"title":{},"name":{},"text":{"84":{}},"component":{}}],["1234567879",{"_index":2980,"title":{},"name":{},"text":{"59":{}},"component":{}}],["127",{"_index":711,"title":{},"name":{},"text":{"5":{}},"component":{}}],["128",{"_index":3825,"title":{},"name":{},"text":{"83":{}},"component":{}}],["13",{"_index":2510,"title":{"44-18":{}},"name":{},"text":{},"component":{}}],["1336043477925910602175429627555369551262229712266217887481529642650907574765",{"_index":3188,"title":{},"name":{},"text":{"64":{}},"component":{}}],["1351148242645005540004162531550805076995747746087542030095186557536641755046",{"_index":3177,"title":{},"name":{},"text":{"64":{}},"component":{}}],["1352",{"_index":2147,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1359",{"_index":2149,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1373",{"_index":2144,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1378",{"_index":2141,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1387",{"_index":2166,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1394",{"_index":2153,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1395",{"_index":2155,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1396",{"_index":2154,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1397",{"_index":2159,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14",{"_index":1416,"title":{"42-17":{}},"name":{},"text":{"13":{},"44":{}},"component":{}}],["1400",{"_index":2169,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1401",{"_index":2139,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1405",{"_index":2162,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1471584055184889701471507129567376607666785522455476394130774434754411633091",{"_index":3192,"title":{},"name":{},"text":{"64":{}},"component":{}}],["15",{"_index":249,"title":{"44-17":{}},"name":{},"text":{"1":{},"5":{},"9":{}},"component":{}}],["152666792071518830868575557812948353041420400780739481342941381225525861407",{"_index":3082,"title":{},"name":{},"text":{"62":{}},"component":{}}],["15th",{"_index":208,"title":{},"name":{},"text":{"1":{},"5":{}},"component":{}}],["16",{"_index":2536,"title":{},"name":{},"text":{"44":{}},"component":{}}],["1637",{"_index":3244,"title":{},"name":{},"text":{"65":{}},"component":{}}],["17",{"_index":2534,"title":{},"name":{},"text":{"44":{},"62":{}},"component":{}}],["17*2^{192",{"_index":3073,"title":{},"name":{},"text":{"61":{},"83":{}},"component":{}}],["17/11",{"_index":2499,"title":{},"name":{},"text":{"42":{}},"component":{}}],["18",{"_index":356,"title":{"42-15":{},"42-22":{}},"name":{},"text":{"2":{},"25":{},"44":{},"72":{}},"component":{}}],["18.17",{"_index":659,"title":{},"name":{},"text":{"5":{}},"component":{}}],["18.3.1",{"_index":1361,"title":{},"name":{},"text":{"13":{}},"component":{}}],["180",{"_index":2590,"title":{},"name":{},"text":{"44":{}},"component":{}}],["18446744073709551617",{"_index":3176,"title":{},"name":{},"text":{"64":{}},"component":{}}],["19",{"_index":250,"title":{"44-32":{}},"name":{},"text":{"1":{}},"component":{}}],["1_felt252.try_into",{"_index":3330,"title":{},"name":{},"text":{"66":{}},"component":{}}],["1_u256",{"_index":3927,"title":{},"name":{},"text":{"85":{}},"component":{}}],["1_u32",{"_index":2910,"title":{},"name":{},"text":{"54":{}},"component":{}}],["1}_{\\textit{serialized_member_2",{"_index":3842,"title":{},"name":{},"text":{"83":{}},"component":{}}],["1’",{"_index":2288,"title":{},"name":{},"text":{"41":{}},"component":{}}],["2",{"_index":139,"title":{"2-13":{},"39-5":{},"39-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"13":{},"22":{},"38":{},"41":{},"45":{},"53":{},"54":{},"60":{},"64":{},"65":{},"66":{},"70":{},"72":{},"83":{},"84":{},"85":{}},"component":{}}],["2.0",{"_index":1942,"title":{},"name":{},"text":{"33":{},"36":{},"38":{},"39":{},"40":{},"49":{},"71":{}},"component":{}}],["2.0.0",{"_index":55,"title":{},"name":{},"text":{"1":{},"44":{},"77":{}},"component":{}}],["2.00",{"_index":689,"title":{},"name":{},"text":{"5":{}},"component":{}}],["2.4.0",{"_index":2659,"title":{},"name":{},"text":{"44":{},"48":{}},"component":{}}],["2.56",{"_index":3296,"title":{},"name":{},"text":{"65":{}},"component":{}}],["2.6.0",{"_index":2813,"title":{},"name":{},"text":{"48":{}},"component":{}}],["2.6.5",{"_index":2847,"title":{},"name":{},"text":{"48":{}},"component":{}}],["2.7.0",{"_index":2839,"title":{},"name":{},"text":{"48":{}},"component":{}}],["2.7.1",{"_index":2846,"title":{},"name":{},"text":{"48":{}},"component":{}}],["2.8.0",{"_index":2812,"title":{},"name":{},"text":{"48":{}},"component":{}}],["2.8.1",{"_index":2845,"title":{},"name":{},"text":{"48":{}},"component":{}}],["2.8.2",{"_index":56,"title":{},"name":{},"text":{"1":{}},"component":{}}],["2.9.1",{"_index":1630,"title":{},"name":{},"text":{"16":{}},"component":{}}],["20",{"_index":1415,"title":{"44-7":{},"44-44":{}},"name":{},"text":{"13":{},"29":{},"33":{},"38":{},"39":{},"40":{},"44":{},"47":{},"57":{},"65":{},"66":{},"77":{},"83":{}},"component":{}}],["20.04",{"_index":650,"title":{},"name":{},"text":{"5":{}},"component":{}}],["200",{"_index":182,"title":{},"name":{},"text":{"1":{},"41":{},"64":{}},"component":{}}],["2019172390095051323869047481075102003731246132997057518965927979101413600827",{"_index":3175,"title":{},"name":{},"text":{"64":{}},"component":{}}],["2022",{"_index":646,"title":{},"name":{},"text":{"5":{}},"component":{}}],["2023",{"_index":209,"title":{"42-1":{},"42-3":{},"42-6":{},"42-8":{},"42-11":{},"42-15":{},"42-17":{},"42-20":{},"42-22":{}},"name":{},"text":{"1":{}},"component":{}}],["2024",{"_index":204,"title":{},"name":{},"text":{"1":{},"5":{},"33":{}},"component":{}}],["2025",{"_index":626,"title":{},"name":{},"text":{"5":{}},"component":{}}],["2027",{"_index":712,"title":{},"name":{},"text":{"5":{}},"component":{}}],["20\\cdot4+12\\cdot16",{"_index":3307,"title":{},"name":{},"text":{"65":{}},"component":{}}],["20k",{"_index":1904,"title":{},"name":{},"text":{"29":{}},"component":{}}],["20px",{"_index":1426,"title":{},"name":{},"text":{"13":{}},"component":{}}],["21",{"_index":1888,"title":{"44-35":{}},"name":{},"text":{"29":{}},"component":{}}],["2111158214429736260101797453815341265658516118421387314850625535905115418634",{"_index":3190,"title":{},"name":{},"text":{"64":{}},"component":{}}],["2128",{"_index":3653,"title":{},"name":{},"text":{"74":{},"83":{}},"component":{}}],["2129+2128+20",{"_index":3829,"title":{},"name":{},"text":{"83":{}},"component":{}}],["22",{"_index":2525,"title":{"44-40":{},"44-41":{},"44-42":{},"44-43":{},"44-44":{},"44-45":{}},"name":{},"text":{},"component":{}}],["221246409693049874911156614478125967098431447433028390043893900771521609973",{"_index":3202,"title":{},"name":{},"text":{"64":{}},"component":{}}],["23",{"_index":2516,"title":{"44-32":{},"44-34":{},"44-35":{},"44-36":{},"44-37":{},"44-38":{},"44-39":{}},"name":{},"text":{},"component":{}}],["24",{"_index":2085,"title":{"44-7":{},"44-9":{},"44-17":{},"44-18":{},"44-31":{}},"name":{},"text":{"38":{},"44":{}},"component":{}}],["24/11",{"_index":2500,"title":{},"name":{},"text":{"42":{}},"component":{}}],["240",{"_index":3251,"title":{},"name":{},"text":{"65":{}},"component":{}}],["240\\right",{"_index":3301,"title":{},"name":{},"text":{"65":{}},"component":{}}],["2439272289032330041885427773916021390926903450917097317807468082958581062272",{"_index":3196,"title":{},"name":{},"text":{"64":{}},"component":{}}],["2472939307328371039455977650994226407024607754063562993856224077254594995194",{"_index":3187,"title":{},"name":{},"text":{"64":{}},"component":{}}],["248",{"_index":3021,"title":{},"name":{},"text":{"60":{}},"component":{}}],["24kb",{"_index":1145,"title":{},"name":{},"text":{"9":{}},"component":{}}],["24px",{"_index":1419,"title":{},"name":{},"text":{"13":{}},"component":{}}],["25",{"_index":2324,"title":{"42-20":{},"44-42":{}},"name":{},"text":{"44":{}},"component":{}}],["250",{"_index":3008,"title":{},"name":{},"text":{"60":{}},"component":{}}],["251",{"_index":3480,"title":{},"name":{},"text":{"70":{}},"component":{}}],["252",{"_index":3809,"title":{"83-1":{},"83-2":{}},"name":{},"text":{"83":{}},"component":{}}],["256",{"_index":2002,"title":{},"name":{},"text":{"34":{},"44":{},"65":{},"80":{},"85":{}},"component":{}}],["25th",{"_index":2852,"title":{},"name":{},"text":{"49":{}},"component":{}}],["264+1",{"_index":3179,"title":{},"name":{},"text":{"64":{}},"component":{}}],["28",{"_index":2507,"title":{"44-9":{}},"name":{},"text":{"44":{}},"component":{}}],["29",{"_index":2319,"title":{"42-8":{},"42-11":{},"44-39":{},"44-41":{}},"name":{},"text":{},"component":{}}],["290",{"_index":163,"title":{},"name":{},"text":{"1":{}},"component":{}}],["2^{192",{"_index":3079,"title":{},"name":{},"text":{"62":{}},"component":{}}],["2^{192}+1",{"_index":3000,"title":{},"name":{},"text":{"60":{}},"component":{}}],["2^{251",{"_index":3072,"title":{},"name":{},"text":{"61":{},"62":{},"80":{},"83":{}},"component":{}}],["2^{64}+1",{"_index":3205,"title":{},"name":{},"text":{"64":{}},"component":{}}],["2^{\\ell_r",{"_index":3517,"title":{},"name":{},"text":{"70":{}},"component":{}}],["2^{length",{"_index":3499,"title":{},"name":{},"text":{"70":{}},"component":{}}],["2_u256",{"_index":3928,"title":{},"name":{},"text":{"85":{}},"component":{}}],["2a16",{"_index":1643,"title":{},"name":{},"text":{"16":{}},"component":{}}],["2column6",{"_index":1104,"title":{},"name":{},"text":{"9":{}},"component":{}}],["2d",{"_index":3233,"title":{},"name":{},"text":{"65":{}},"component":{}}],["2k",{"_index":2591,"title":{},"name":{},"text":{"44":{}},"component":{}}],["2n",{"_index":3303,"title":{},"name":{},"text":{"65":{}},"component":{}}],["3",{"_index":1175,"title":{"39-6":{},"39-10":{},"65-6":{}},"name":{},"text":{"9":{},"14":{},"38":{},"44":{},"53":{},"64":{},"72":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["3+\\text{payload_size}\\right",{"_index":3315,"title":{},"name":{},"text":{"65":{}},"component":{}}],["3.048",{"_index":714,"title":{},"name":{},"text":{"5":{}},"component":{}}],["3.10",{"_index":2427,"title":{},"name":{},"text":{"42":{}},"component":{}}],["3.8",{"_index":2428,"title":{},"name":{},"text":{"42":{}},"component":{}}],["3.9",{"_index":2426,"title":{},"name":{},"text":{"42":{}},"component":{}}],["30",{"_index":88,"title":{},"name":{},"text":{"1":{},"5":{},"29":{},"41":{},"83":{}},"component":{}}],["30.48",{"_index":713,"title":{},"name":{},"text":{"5":{}},"component":{}}],["300",{"_index":147,"title":{},"name":{},"text":{"1":{},"64":{}},"component":{}}],["30_000",{"_index":1482,"title":{},"name":{},"text":{"14":{}},"component":{}}],["31",{"_index":2522,"title":{"44-37":{}},"name":{},"text":{"83":{}},"component":{}}],["312",{"_index":3257,"title":{},"name":{},"text":{"65":{}},"component":{}}],["3141592653589793238462643383279502884197169399375105820974944592307816406665",{"_index":3014,"title":{},"name":{},"text":{"60":{},"62":{}},"component":{}}],["32",{"_index":2420,"title":{},"name":{},"text":{"42":{},"64":{},"65":{}},"component":{}}],["32\\cdot16",{"_index":3304,"title":{},"name":{},"text":{"65":{}},"component":{}}],["3423542542364363",{"_index":3913,"title":{},"name":{},"text":{"85":{}},"component":{}}],["3429319713503054399243751728532349500489096444181867640228809233993992987070",{"_index":3197,"title":{},"name":{},"text":{"64":{}},"component":{}}],["3476138891838001128614704553731964710634238587541803499001822322602421164873",{"_index":3199,"title":{},"name":{},"text":{"64":{}},"component":{}}],["3534535754756246375475423547453",{"_index":3921,"title":{},"name":{},"text":{"85":{}},"component":{}}],["3618502788666131213697322783095070105623107215331596699973092056135872020481",{"_index":3078,"title":{},"name":{},"text":{"62":{}},"component":{}}],["375+2\\cdot",{"_index":3321,"title":{},"name":{},"text":{"65":{}},"component":{}}],["3t",{"_index":3223,"title":{},"name":{},"text":{"65":{}},"component":{}}],["4",{"_index":171,"title":{},"name":{},"text":{"1":{},"13":{},"44":{},"53":{},"60":{},"64":{},"65":{},"72":{},"84":{}},"component":{}}],["40",{"_index":98,"title":{},"name":{},"text":{"1":{},"9":{},"65":{}},"component":{}}],["400",{"_index":2676,"title":{},"name":{},"text":{"44":{},"64":{}},"component":{}}],["42",{"_index":1638,"title":{},"name":{},"text":{"16":{}},"component":{}}],["4210",{"_index":1642,"title":{},"name":{},"text":{"16":{}},"component":{}}],["4216",{"_index":1736,"title":{},"name":{},"text":{"20":{}},"component":{}}],["4337",{"_index":2937,"title":{},"name":{},"text":{"55":{},"57":{}},"component":{}}],["446",{"_index":173,"title":{},"name":{},"text":{"1":{}},"component":{}}],["4844",{"_index":2611,"title":{"64-2":{}},"name":{},"text":{"44":{},"64":{},"65":{}},"component":{}}],["5",{"_index":117,"title":{},"name":{},"text":{"1":{},"9":{},"14":{},"25":{},"28":{},"29":{},"33":{},"44":{},"64":{},"65":{},"66":{},"72":{},"77":{},"83":{}},"component":{}}],["5.12",{"_index":3293,"title":{},"name":{},"text":{"65":{}},"component":{}}],["5.14.0",{"_index":2823,"title":{},"name":{},"text":{"48":{}},"component":{}}],["50",{"_index":149,"title":{},"name":{},"text":{"1":{},"2":{},"44":{}},"component":{}}],["500",{"_index":1423,"title":{},"name":{},"text":{"13":{},"25":{},"28":{},"44":{},"64":{},"65":{}},"component":{}}],["512",{"_index":3255,"title":{},"name":{},"text":{"65":{}},"component":{}}],["541081937647750334353499719661793404023294520617957763260656728924567461866",{"_index":3194,"title":{},"name":{},"text":{"64":{}},"component":{}}],["551",{"_index":3254,"title":{},"name":{},"text":{"65":{}},"component":{}}],["558404273560404778508455254030458021013656352466216690688595011803280448030",{"_index":3203,"title":{},"name":{},"text":{"64":{}},"component":{}}],["558404273560404778508455254030458021013656352466216690688595011803280448031",{"_index":3204,"title":{},"name":{},"text":{"64":{}},"component":{}}],["558404273560404778508455254030458021013656352466216690688595011803280448032",{"_index":3178,"title":{},"name":{},"text":{"64":{}},"component":{}}],["59664015286291125586727181187045849528930298741728639958614076589374875456",{"_index":3200,"title":{},"name":{},"text":{"64":{}},"component":{}}],["5_000",{"_index":1520,"title":{},"name":{},"text":{"14":{}},"component":{}}],["5m",{"_index":3283,"title":{},"name":{},"text":{"65":{}},"component":{}}],["5x",{"_index":2538,"title":{},"name":{},"text":{"44":{}},"component":{}}],["6",{"_index":2940,"title":{},"name":{},"text":{"55":{},"64":{},"65":{},"83":{}},"component":{}}],["6.11.0",{"_index":2822,"title":{},"name":{},"text":{"48":{}},"component":{}}],["60",{"_index":3258,"title":{},"name":{},"text":{"65":{}},"component":{}}],["600",{"_index":3201,"title":{},"name":{},"text":{"64":{}},"component":{}}],["612",{"_index":3318,"title":{},"name":{},"text":{"65":{}},"component":{}}],["619473939880410191267127038055308002651079521370507951329266275707625062498",{"_index":3191,"title":{},"name":{},"text":{"64":{}},"component":{}}],["619473939880410191267127038055308002651079521370507951329266275707625062499",{"_index":3193,"title":{},"name":{},"text":{"64":{}},"component":{}}],["64",{"_index":702,"title":{},"name":{},"text":{"5":{},"44":{},"63":{}},"component":{}}],["66",{"_index":1732,"title":{},"name":{},"text":{"20":{}},"component":{}}],["6610",{"_index":1735,"title":{},"name":{},"text":{"20":{}},"component":{}}],["6\\cdot16+26\\cdot4",{"_index":3305,"title":{},"name":{},"text":{"65":{}},"component":{}}],["7",{"_index":1136,"title":{},"name":{},"text":{"9":{},"13":{},"64":{}},"component":{}}],["7.68",{"_index":708,"title":{},"name":{},"text":{"5":{}},"component":{}}],["726",{"_index":2469,"title":{},"name":{},"text":{"42":{}},"component":{}}],["75",{"_index":1417,"title":{},"name":{},"text":{"13":{}},"component":{}}],["768",{"_index":709,"title":{},"name":{},"text":{"5":{}},"component":{}}],["799",{"_index":2457,"title":{},"name":{},"text":{"42":{}},"component":{}}],["8",{"_index":2555,"title":{},"name":{},"text":{"44":{},"64":{},"72":{},"75":{}},"component":{}}],["8.10",{"_index":687,"title":{},"name":{},"text":{"5":{}},"component":{}}],["81",{"_index":162,"title":{},"name":{},"text":{"1":{}},"component":{}}],["874739451078007766457464989774322083649278607533249481151382481072868806602",{"_index":3081,"title":{},"name":{},"text":{"62":{}},"component":{}}],["895",{"_index":2234,"title":{},"name":{},"text":{"41":{}},"component":{}}],["9.00",{"_index":672,"title":{},"name":{},"text":{"5":{}},"component":{}}],["900",{"_index":2235,"title":{},"name":{},"text":{"41":{}},"component":{}}],["906096",{"_index":3543,"title":{},"name":{},"text":{"71":{}},"component":{}}],["907",{"_index":2232,"title":{},"name":{},"text":{"41":{}},"component":{}}],["908",{"_index":2238,"title":{},"name":{},"text":{"41":{}},"component":{}}],["95220",{"_index":2425,"title":{},"name":{},"text":{"42":{}},"component":{}}],["955723665991825982403667749532843665052270105995360175183368988948217233556",{"_index":3195,"title":{},"name":{},"text":{"64":{}},"component":{}}],["_",{"_index":1528,"title":{},"name":{},"text":{"14":{},"77":{},"85":{}},"component":{}}],["__default__",{"_index":1233,"title":{},"name":{},"text":{"10":{}},"component":{}}],["__execute__",{"_index":2899,"title":{},"name":{},"text":{"54":{},"58":{},"68":{},"72":{}},"component":{}}],["__validate__",{"_index":2613,"title":{},"name":{},"text":{"44":{},"54":{},"56":{},"58":{},"68":{},"71":{},"72":{},"82":{},"85":{}},"component":{}}],["__validate_declare__",{"_index":2615,"title":{},"name":{},"text":{"44":{},"54":{},"71":{},"82":{},"85":{}},"component":{}}],["__validate_deploy__",{"_index":2614,"title":{},"name":{},"text":{"44":{},"54":{},"56":{},"71":{},"82":{},"85":{}},"component":{}}],["_h_",{"_index":3361,"title":{},"name":{},"text":{"66":{}},"component":{}}],["_{\\text{64",{"_index":2548,"title":{},"name":{},"text":{"44":{}},"component":{}}],["_{\\text{contract",{"_index":3299,"title":{},"name":{},"text":{"65":{}},"component":{}}],["_{\\text{storag",{"_index":3302,"title":{},"name":{},"text":{"65":{}},"component":{}}],["_{i=1}^n",{"_index":3672,"title":{},"name":{},"text":{"75":{}},"component":{}}],["a=index",{"_index":3627,"title":{},"name":{},"text":{"73":{}},"component":{}}],["a_1",{"_index":3046,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_2",{"_index":3049,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_3",{"_index":3057,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_n",{"_index":3047,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_n;0",{"_index":3051,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_n;\\text{had",{"_index":3058,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_n;s_1",{"_index":3052,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_{high",{"_index":3018,"title":{},"name":{},"text":{"60":{}},"component":{}}],["a_{low",{"_index":3017,"title":{},"name":{},"text":{"60":{}},"component":{}}],["abdk",{"_index":2780,"title":{},"name":{},"text":{"46":{}},"component":{}}],["abi",{"_index":1205,"title":{"77":{},"11-8":{},"77-2":{},"77-9":{},"84-2":{}},"name":{"77":{}},"text":{"10":{},"11":{},"12":{},"14":{},"15":{},"33":{},"42":{},"44":{},"65":{},"75":{},"77":{},"81":{},"84":{},"88":{}},"component":{}}],["abi.encodepack",{"_index":3341,"title":{},"name":{},"text":{"66":{}},"component":{}}],["abi.t",{"_index":1498,"title":{},"name":{},"text":{"14":{}},"component":{}}],["abi_hash",{"_index":3670,"title":{},"name":{},"text":{"75":{}},"component":{}}],["abil",{"_index":260,"title":{},"name":{},"text":{"1":{},"8":{},"42":{},"66":{}},"component":{}}],["abort",{"_index":386,"title":{},"name":{},"text":{"2":{}},"component":{}}],["abov",{"_index":636,"title":{},"name":{},"text":{"5":{},"20":{},"44":{},"54":{},"55":{},"60":{},"64":{},"65":{},"70":{},"72":{},"73":{},"75":{},"77":{},"80":{},"83":{},"84":{}},"component":{}}],["abraham",{"_index":1653,"title":{},"name":{},"text":{"17":{}},"component":{}}],["absenc",{"_index":2900,"title":{},"name":{},"text":{"54":{}},"component":{}}],["abstract",{"_index":275,"title":{"2-1":{},"57-2":{}},"name":{},"text":{"2":{},"44":{},"53":{},"54":{},"55":{},"57":{},"88":{},"90":{}},"component":{}}],["abus",{"_index":3631,"title":{},"name":{},"text":{"73":{}},"component":{}}],["acceler",{"_index":2675,"title":{},"name":{},"text":{"44":{}},"component":{}}],["accept",{"_index":315,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"13":{},"20":{},"41":{},"42":{},"44":{},"54":{},"67":{},"69":{},"71":{},"73":{}},"component":{}}],["accepted_on_l1",{"_index":1269,"title":{},"name":{},"text":{"10":{},"71":{}},"component":{}}],["accepted_on_l2",{"_index":1268,"title":{},"name":{},"text":{"10":{},"39":{},"42":{},"44":{},"69":{},"71":{}},"component":{}}],["access",{"_index":797,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"14":{},"22":{},"41":{},"42":{},"44":{},"51":{},"56":{},"57":{},"66":{},"68":{},"69":{},"81":{},"85":{}},"component":{}}],["accident",{"_index":2409,"title":{},"name":{},"text":{"42":{}},"component":{}}],["accommod",{"_index":2249,"title":{},"name":{},"text":{"41":{},"44":{},"70":{}},"component":{}}],["accompani",{"_index":3415,"title":{},"name":{},"text":{"68":{}},"component":{}}],["accord",{"_index":245,"title":{},"name":{},"text":{"1":{},"5":{},"22":{},"44":{},"54":{},"64":{},"65":{},"70":{},"73":{},"77":{},"88":{}},"component":{}}],["accordingli",{"_index":1010,"title":{},"name":{},"text":{"8":{},"44":{}},"component":{}}],["account",{"_index":274,"title":{"54":{},"55":{},"56":{},"57":{},"2-1":{},"2-2":{},"16-3":{},"20-2":{},"21-6":{},"55-1":{},"56-1":{},"57-1":{},"57-2":{},"57-3":{}},"name":{"54":{},"56":{}},"text":{"2":{},"3":{},"10":{},"11":{},"12":{},"13":{},"16":{},"20":{},"21":{},"25":{},"26":{},"36":{},"37":{},"38":{},"39":{},"41":{},"44":{},"53":{},"54":{},"55":{},"56":{},"57":{},"59":{},"65":{},"66":{},"68":{},"70":{},"71":{},"72":{},"77":{},"79":{},"82":{},"88":{},"90":{},"91":{}},"component":{}}],["account.json",{"_index":1615,"title":{},"name":{},"text":{"16":{},"20":{},"21":{}},"component":{}}],["account1",{"_index":3127,"title":{},"name":{},"text":{"63":{}},"component":{}}],["account_contract",{"_index":1273,"title":{"11-10":{}},"name":{},"text":{"11":{}},"component":{}}],["account_contract_address",{"_index":3805,"title":{},"name":{},"text":{"82":{}},"component":{}}],["account_deployment_data",{"_index":3554,"title":{},"name":{},"text":{"72":{},"82":{}},"component":{}}],["account_nam",{"_index":1232,"title":{},"name":{},"text":{"10":{}},"component":{}}],["accountk",{"_index":3129,"title":{},"name":{},"text":{"63":{}},"component":{}}],["account’",{"_index":2902,"title":{},"name":{},"text":{"54":{},"56":{},"57":{},"59":{},"71":{},"72":{},"85":{}},"component":{}}],["accru",{"_index":830,"title":{},"name":{},"text":{"5":{}},"component":{}}],["accumul",{"_index":1797,"title":{},"name":{},"text":{"23":{},"68":{}},"component":{}}],["accur",{"_index":1766,"title":{},"name":{},"text":{"22":{},"42":{},"69":{},"91":{}},"component":{}}],["achiev",{"_index":442,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"8":{},"42":{},"59":{},"73":{}},"component":{}}],["act",{"_index":352,"title":{},"name":{},"text":{"2":{},"7":{},"9":{},"76":{},"79":{}},"component":{}}],["action",{"_index":574,"title":{},"name":{"34":{}},"text":{"5":{},"26":{},"30":{},"34":{},"38":{}},"component":{}}],["activ",{"_index":564,"title":{},"name":{},"text":{"5":{},"7":{},"28":{},"31":{},"38":{},"44":{},"66":{},"69":{}},"component":{}}],["actor",{"_index":570,"title":{},"name":{},"text":{"5":{},"69":{}},"component":{}}],["actors—sequenc",{"_index":3449,"title":{},"name":{},"text":{"69":{}},"component":{}}],["actual",{"_index":451,"title":{},"name":{},"text":{"2":{},"5":{},"39":{},"44":{},"65":{},"68":{},"71":{},"73":{},"83":{}},"component":{}}],["actual_fe",{"_index":3140,"title":{},"name":{},"text":{"63":{},"71":{}},"component":{}}],["ad",{"_index":318,"title":{"32":{},"41-2":{},"41-7":{},"41-13":{},"41-18":{},"41-20":{},"41-24":{},"41-28":{},"41-31":{},"41-35":{},"41-42":{},"42-12":{},"42-21":{},"42-23":{},"42-27":{},"42-30":{},"42-33":{},"42-39":{},"42-47":{},"42-51":{},"42-59":{},"42-69":{}},"name":{"32":{}},"text":{"2":{},"4":{},"7":{},"10":{},"24":{},"33":{},"41":{},"42":{},"44":{},"65":{},"66":{},"68":{},"77":{},"79":{},"80":{},"81":{},"87":{}},"component":{}}],["adapt",{"_index":1510,"title":{},"name":{},"text":{"14":{},"29":{},"41":{}},"component":{}}],["add",{"_index":373,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"17":{},"21":{},"27":{},"33":{},"38":{},"41":{},"42":{},"44":{},"57":{},"65":{},"66":{},"69":{},"73":{},"77":{},"81":{},"84":{}},"component":{}}],["add_mod",{"_index":2575,"title":{},"name":{},"text":{"44":{}},"component":{}}],["add_to_delegation_pool",{"_index":1776,"title":{},"name":{},"text":{"22":{},"27":{}},"component":{}}],["added_valu",{"_index":3716,"title":{},"name":{},"text":{"77":{}},"component":{}}],["addit",{"_index":420,"title":{"26-3":{},"28-7":{},"32-1":{},"33-6":{},"34-1":{},"35-1":{},"38-69":{},"38-78":{},"39-11":{},"44-6":{},"44-8":{},"44-16":{},"44-30":{},"56-3":{},"66-10":{},"79-4":{},"83-10":{},"84-4":{}},"name":{},"text":{"2":{},"5":{},"8":{},"29":{},"34":{},"37":{},"42":{},"44":{},"60":{},"64":{},"65":{},"72":{},"73":{},"77":{},"78":{},"81":{}},"component":{}}],["addition",{"_index":950,"title":{},"name":{},"text":{"8":{},"26":{},"44":{},"70":{},"72":{}},"component":{}}],["addition/multipl",{"_index":3266,"title":{},"name":{},"text":{"65":{}},"component":{}}],["address",{"_index":1,"title":{"47":{},"78":{},"1-1":{},"28-4":{},"28-5":{},"28-6":{},"29-10":{},"29-11":{},"29-14":{},"39-1":{},"59-1":{},"70-10":{},"70-11":{},"70-12":{}},"name":{"78":{}},"text":{"1":{},"2":{},"5":{},"9":{},"10":{},"12":{},"13":{},"14":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"47":{},"54":{},"56":{},"57":{},"59":{},"63":{},"64":{},"65":{},"66":{},"67":{},"70":{},"72":{},"73":{},"78":{},"79":{},"80":{},"82":{},"84":{},"85":{},"91":{}},"component":{}}],["address?.slic",{"_index":1451,"title":{},"name":{},"text":{"13":{}},"component":{}}],["address_domain",{"_index":3773,"title":{},"name":{},"text":{"80":{},"85":{}},"component":{}}],["addrtestcontract",{"_index":1467,"title":{},"name":{},"text":{"14":{}},"component":{}}],["adher",{"_index":912,"title":{},"name":{},"text":{"7":{},"54":{},"55":{}},"component":{}}],["adjust",{"_index":1004,"title":{},"name":{},"text":{"8":{},"9":{},"22":{},"29":{},"41":{}},"component":{}}],["admin",{"_index":1991,"title":{},"name":{},"text":{"33":{}},"component":{}}],["administ",{"_index":3679,"title":{},"name":{},"text":{"76":{}},"component":{}}],["administr",{"_index":1947,"title":{},"name":{},"text":{"33":{}},"component":{}}],["adopt",{"_index":743,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["advantag",{"_index":1803,"title":{},"name":{},"text":{"24":{},"74":{}},"component":{}}],["advic",{"_index":821,"title":{},"name":{},"text":{"5":{}},"component":{}}],["affect",{"_index":459,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"22":{},"33":{},"44":{},"64":{},"75":{},"81":{},"83":{},"85":{}},"component":{}}],["afford",{"_index":921,"title":{},"name":{},"text":{"8":{}},"component":{}}],["again",{"_index":1641,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["against",{"_index":2016,"title":{},"name":{},"text":{"35":{},"38":{},"44":{}},"component":{}}],["agent",{"_index":1987,"title":{},"name":{},"text":{"33":{}},"component":{}}],["aggreg",{"_index":403,"title":{},"name":{},"text":{"2":{},"8":{},"44":{},"49":{},"65":{},"68":{}},"component":{}}],["aggregatorprogramhash",{"_index":3418,"title":{},"name":{},"text":{"68":{}},"component":{}}],["aggregator’",{"_index":3416,"title":{},"name":{},"text":{"68":{}},"component":{}}],["agre",{"_index":3413,"title":{},"name":{},"text":{"68":{}},"component":{}}],["aid",{"_index":869,"title":{},"name":{},"text":{"7":{}},"component":{}}],["aim",{"_index":443,"title":{},"name":{},"text":{"2":{},"3":{},"33":{},"41":{},"68":{},"87":{},"89":{}},"component":{}}],["air",{"_index":3599,"title":{"73-3":{}},"name":{},"text":{},"component":{}}],["aka",{"_index":665,"title":{},"name":{},"text":{"5":{}},"component":{}}],["alchemi",{"_index":2743,"title":{},"name":{},"text":{"45":{}},"component":{}}],["algebra",{"_index":2597,"title":{},"name":{},"text":{"44":{},"60":{}},"component":{}}],["algorithm",{"_index":1008,"title":{},"name":{},"text":{"8":{},"42":{},"72":{}},"component":{}}],["alic",{"_index":3351,"title":{},"name":{},"text":{"66":{}},"component":{}}],["align",{"_index":684,"title":{},"name":{},"text":{"5":{},"7":{},"13":{},"41":{},"72":{}},"component":{}}],["allianc",{"_index":1814,"title":{},"name":{},"text":{"25":{}},"component":{}}],["alliance/madara",{"_index":2772,"title":{},"name":{},"text":{"45":{}},"component":{}}],["alloc",{"_index":652,"title":{},"name":{},"text":{"5":{},"41":{},"65":{},"84":{}},"component":{}}],["alloc_loc",{"_index":3625,"title":{},"name":{},"text":{"73":{}},"component":{}}],["allot",{"_index":721,"title":{},"name":{},"text":{"5":{}},"component":{}}],["allow",{"_index":432,"title":{},"name":{},"text":{"2":{},"5":{},"9":{},"10":{},"15":{},"16":{},"17":{},"22":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"41":{},"42":{},"44":{},"54":{},"57":{},"69":{},"72":{},"73":{},"75":{},"76":{},"77":{},"80":{},"82":{},"87":{}},"component":{}}],["alon",{"_index":2545,"title":{},"name":{},"text":{"44":{}},"component":{}}],["along",{"_index":1624,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"42":{},"64":{},"70":{}},"component":{}}],["alongsid",{"_index":2564,"title":{},"name":{},"text":{"44":{},"64":{},"68":{}},"component":{}}],["alpha",{"_index":1192,"title":{},"name":{},"text":{"10":{},"62":{},"73":{}},"component":{}}],["alpha=1",{"_index":3013,"title":{},"name":{},"text":{"60":{}},"component":{}}],["alphabet",{"_index":2056,"title":{},"name":{},"text":{"38":{},"50":{},"51":{},"67":{}},"component":{}}],["alreadi",{"_index":1166,"title":{},"name":{},"text":{"9":{},"19":{},"20":{},"35":{},"38":{},"44":{},"59":{},"68":{},"73":{}},"component":{}}],["altern",{"_index":2449,"title":{},"name":{},"text":{"42":{}},"component":{}}],["although",{"_index":3424,"title":{},"name":{},"text":{"69":{}},"component":{}}],["altogeth",{"_index":2855,"title":{},"name":{},"text":{"49":{}},"component":{}}],["alway",{"_index":2640,"title":{},"name":{},"text":{"44":{},"54":{},"65":{},"66":{},"72":{},"73":{},"77":{}},"component":{}}],["aminsato",{"_index":2165,"title":{},"name":{},"text":{"41":{}},"component":{}}],["amongst",{"_index":3474,"title":{},"name":{},"text":{"69":{}},"component":{}}],["amort",{"_index":942,"title":{},"name":{},"text":{"8":{}},"component":{}}],["amount",{"_index":83,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"15":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"35":{},"36":{},"38":{},"39":{},"40":{},"54":{},"63":{},"65":{},"67":{},"72":{},"77":{},"81":{},"82":{}},"component":{}}],["analog",{"_index":3532,"title":{},"name":{},"text":{"71":{},"79":{},"85":{}},"component":{}}],["analysi",{"_index":3966,"title":{},"name":{},"text":{"87":{},"88":{}},"component":{}}],["analyz",{"_index":3262,"title":{"87-6":{}},"name":{},"text":{"65":{},"87":{},"88":{},"89":{}},"component":{}}],["and/or",{"_index":754,"title":{},"name":{},"text":{"5":{}},"component":{}}],["annot",{"_index":3346,"title":{},"name":{},"text":{"66":{},"77":{},"81":{}},"component":{}}],["announc",{"_index":211,"title":{},"name":{},"text":{"1":{},"5":{},"49":{}},"component":{}}],["annual",{"_index":1792,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["anoth",{"_index":1784,"title":{},"name":{},"text":{"22":{},"31":{},"34":{},"38":{},"54":{},"57":{},"66":{},"68":{},"70":{},"71":{},"77":{},"78":{},"85":{}},"component":{}}],["anotherenum",{"_index":3738,"title":{},"name":{},"text":{"77":{}},"component":{}}],["anotherenum::var2",{"_index":3740,"title":{},"name":{},"text":{"77":{}},"component":{}}],["anyon",{"_index":1848,"title":{},"name":{},"text":{"29":{},"38":{},"39":{},"64":{},"69":{}},"component":{}}],["anyone’",{"_index":756,"title":{},"name":{},"text":{"5":{}},"component":{}}],["anyth",{"_index":3649,"title":{},"name":{},"text":{"74":{},"91":{}},"component":{}}],["anywher",{"_index":3743,"title":{},"name":{},"text":{"77":{}},"component":{}}],["ap",{"_index":2710,"title":{},"name":{},"text":{"44":{}},"component":{}}],["api",{"_index":216,"title":{"45":{},"2-3":{},"42-43":{},"44-4":{},"44-11":{},"44-21":{},"44-22":{},"44-23":{},"48-3":{},"59-8":{}},"name":{"45":{}},"text":{"1":{},"2":{},"7":{},"38":{},"40":{},"41":{},"42":{},"44":{},"45":{},"48":{},"65":{},"66":{},"69":{},"72":{},"88":{},"90":{}},"component":{}}],["api/starknet",{"_index":2746,"title":{},"name":{},"text":{"45":{}},"component":{}}],["apibara",{"_index":3943,"title":{},"name":{},"text":{"86":{}},"component":{}}],["app",{"_index":1386,"title":{},"name":{},"text":{"13":{},"39":{},"49":{},"86":{},"89":{}},"component":{}}],["app/utils/const",{"_index":1469,"title":{},"name":{},"text":{"14":{}},"component":{}}],["app@latest",{"_index":1358,"title":{},"name":{},"text":{"13":{}},"component":{}}],["appchain",{"_index":3985,"title":{},"name":{},"text":{"88":{}},"component":{}}],["appear",{"_index":846,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"35":{},"38":{},"42":{},"44":{},"65":{},"66":{},"72":{},"77":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["append",{"_index":3365,"title":{},"name":{},"text":{"66":{}},"component":{}}],["appli",{"_index":1231,"title":{},"name":{},"text":{"10":{},"42":{},"44":{},"65":{},"68":{},"71":{},"74":{}},"component":{}}],["applic",{"_index":670,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"10":{},"30":{},"34":{},"44":{},"65":{},"68":{},"86":{},"87":{}},"component":{}}],["approach",{"_index":954,"title":{},"name":{"55":{}},"text":{"8":{},"24":{},"29":{},"33":{},"69":{}},"component":{}}],["appropri",{"_index":991,"title":{},"name":{},"text":{"8":{},"23":{},"28":{},"54":{},"65":{}},"component":{}}],["approv",{"_index":634,"title":{},"name":{},"text":{"5":{},"14":{},"24":{},"25":{},"27":{},"72":{},"77":{}},"component":{}}],["approxim",{"_index":2017,"title":{},"name":{},"text":{"35":{},"38":{},"44":{}},"component":{}}],["april",{"_index":203,"title":{"44-17":{}},"name":{},"text":{"1":{},"5":{}},"component":{}}],["arbit",{"_index":3394,"title":{},"name":{},"text":{"68":{}},"component":{}}],["arbitrari",{"_index":2586,"title":{},"name":{},"text":{"44":{},"54":{},"55":{},"60":{},"85":{}},"component":{}}],["architectur",{"_index":302,"title":{"6":{},"22":{},"33":{},"69":{},"3-3":{},"8-3":{},"9-1":{},"22-1":{}},"name":{"22":{},"33":{},"69":{}},"text":{"2":{},"3":{},"8":{},"18":{},"22":{},"25":{},"26":{},"28":{},"31":{},"32":{},"53":{},"68":{},"69":{},"70":{},"73":{},"76":{},"84":{},"89":{}},"component":{}}],["area",{"_index":888,"title":{},"name":{},"text":{"7":{}},"component":{}}],["aren’t",{"_index":3462,"title":{},"name":{},"text":{"69":{}},"component":{}}],["arg",{"_index":1478,"title":{},"name":{},"text":{"14":{},"80":{}},"component":{}}],["argent",{"_index":1375,"title":{},"name":{},"text":{"13":{},"20":{},"21":{},"25":{},"86":{}},"component":{}}],["argentx",{"_index":1353,"title":{},"name":{},"text":{"13":{},"86":{}},"component":{}}],["argument",{"_index":1209,"title":{"11-4":{},"11-6":{},"85-4":{},"85-11":{},"85-18":{},"85-24":{},"85-30":{},"85-37":{},"85-43":{},"85-50":{},"85-56":{},"85-63":{},"85-68":{}},"name":{},"text":{"10":{},"11":{},"42":{},"44":{},"54":{},"56":{},"59":{},"70":{},"72":{},"80":{},"81":{},"83":{},"85":{}},"component":{}}],["aris",{"_index":1863,"title":{},"name":{},"text":{"29":{},"33":{}},"component":{}}],["arithmet",{"_index":3508,"title":{},"name":{},"text":{"70":{},"74":{}},"component":{}}],["around",{"_index":2708,"title":{},"name":{},"text":{"44":{},"69":{}},"component":{}}],["arr",{"_index":3879,"title":{},"name":{},"text":{"84":{}},"component":{}}],["arr_len",{"_index":3878,"title":{},"name":{},"text":{"84":{}},"component":{}}],["array",{"_index":146,"title":{"60-6":{},"83-6":{},"83-9":{}},"name":{},"text":{"1":{},"14":{},"38":{},"41":{},"44":{},"59":{},"60":{},"64":{},"65":{},"66":{},"68":{},"73":{},"75":{},"77":{},"78":{},"83":{},"84":{},"85":{}},"component":{}}],["array!['key",{"_index":3873,"title":{},"name":{},"text":{"84":{},"85":{}},"component":{}}],["array![1",{"_index":3874,"title":{},"name":{},"text":{"84":{},"85":{}},"component":{}}],["array![10",{"_index":3835,"title":{},"name":{},"text":{"83":{}},"component":{}}],["array::arraytrait",{"_index":3924,"title":{},"name":{},"text":{"85":{}},"component":{}}],["array_ptr",{"_index":3621,"title":{},"name":{},"text":{"73":{}},"component":{}}],["arraytrait::new",{"_index":3329,"title":{},"name":{},"text":{"66":{},"85":{}},"component":{}}],["ascii",{"_index":2366,"title":{},"name":{},"text":{"42":{},"66":{},"70":{},"72":{},"75":{},"78":{},"80":{},"83":{},"84":{}},"component":{}}],["asdf",{"_index":1667,"title":{},"name":{},"text":{"17":{},"21":{},"87":{}},"component":{}}],["aspect",{"_index":1758,"title":{},"name":{},"text":{"22":{},"24":{},"28":{},"91":{}},"component":{}}],["assembl",{"_index":2686,"title":{},"name":{},"text":{"44":{},"60":{},"70":{},"73":{},"75":{},"76":{}},"component":{}}],["assert",{"_index":1570,"title":{},"name":{},"text":{"15":{},"54":{},"65":{},"68":{},"73":{},"84":{}},"component":{}}],["assert_nn_l",{"_index":3626,"title":{},"name":{},"text":{"73":{}},"component":{}}],["asset",{"_index":560,"title":{},"name":{},"text":{"5":{},"57":{},"66":{}},"component":{}}],["assign",{"_index":1761,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["assist",{"_index":1132,"title":{},"name":{},"text":{"9":{},"14":{},"87":{}},"component":{}}],["associ",{"_index":258,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"9":{},"10":{},"22":{},"23":{},"24":{},"25":{},"28":{},"31":{},"33":{},"39":{},"57":{},"64":{},"65":{},"67":{},"68":{},"73":{},"75":{},"77":{},"85":{}},"component":{}}],["assum",{"_index":2911,"title":{},"name":{},"text":{"54":{},"65":{}},"component":{}}],["assumpt",{"_index":426,"title":{},"name":{},"text":{"2":{},"65":{},"69":{}},"component":{}}],["assur",{"_index":746,"title":{},"name":{},"text":{"5":{},"71":{}},"component":{}}],["asymmetr",{"_index":3326,"title":{},"name":{},"text":{"66":{}},"component":{}}],["async",{"_index":1408,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["asynchron",{"_index":3325,"title":{},"name":{},"text":{"66":{},"69":{}},"component":{}}],["atom",{"_index":3210,"title":{},"name":{},"text":{"65":{}},"component":{}}],["attach",{"_index":2062,"title":{},"name":{},"text":{"38":{},"66":{}},"component":{}}],["attack",{"_index":769,"title":{"73-3":{}},"name":{},"text":{"5":{},"35":{},"38":{},"54":{},"66":{},"68":{},"73":{},"78":{}},"component":{}}],["attacker’",{"_index":2929,"title":{},"name":{},"text":{"54":{}},"component":{}}],["attempt",{"_index":1842,"title":{},"name":{},"text":{"27":{},"31":{}},"component":{}}],["attent",{"_index":500,"title":{},"name":{},"text":{"4":{}},"component":{}}],["attest",{"_index":1032,"title":{},"name":{},"text":{"9":{},"25":{},"29":{},"68":{}},"component":{}}],["attract",{"_index":761,"title":{},"name":{},"text":{"5":{}},"component":{}}],["attribut",{"_index":1652,"title":{"67-69":{},"67-73":{},"67-77":{},"67-81":{}},"name":{},"text":{"17":{},"38":{},"77":{},"80":{},"81":{},"83":{}},"component":{}}],["audit",{"_index":2778,"title":{"46":{}},"name":{"46":{}},"text":{"46":{}},"component":{}}],["auditor",{"_index":3459,"title":{},"name":{},"text":{"69":{}},"component":{}}],["aug",{"_index":2519,"title":{"44-35":{}},"name":{},"text":{},"component":{}}],["auger",{"_index":2385,"title":{},"name":{},"text":{"42":{}},"component":{}}],["augment",{"_index":3010,"title":{},"name":{},"text":{"60":{}},"component":{}}],["august",{"_index":2506,"title":{"44-9":{}},"name":{},"text":{},"component":{}}],["authent",{"_index":2671,"title":{},"name":{},"text":{"44":{}},"component":{}}],["author",{"_index":1796,"title":{},"name":{},"text":{"22":{},"23":{},"42":{}},"component":{}}],["autoformatt",{"_index":2690,"title":{},"name":{},"text":{"44":{}},"component":{}}],["autom",{"_index":1925,"title":{},"name":{"34":{}},"text":{"30":{},"33":{},"41":{},"66":{}},"component":{}}],["automat",{"_index":1439,"title":{},"name":{},"text":{"13":{},"26":{},"33":{},"44":{},"49":{},"66":{},"80":{},"84":{}},"component":{}}],["auxiliari",{"_index":1144,"title":{},"name":{},"text":{"9":{}},"component":{}}],["avail",{"_index":604,"title":{"64":{},"64-2":{},"64-3":{},"64-6":{}},"name":{"64":{}},"text":{"5":{},"8":{},"9":{},"13":{},"20":{},"22":{},"28":{},"30":{},"38":{},"40":{},"42":{},"44":{},"50":{},"53":{},"54":{},"64":{},"65":{},"67":{},"68":{},"69":{},"72":{},"73":{},"82":{},"85":{}},"component":{}}],["averag",{"_index":2679,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["avnu",{"_index":2860,"title":{},"name":{},"text":{"49":{}},"component":{}}],["avoid",{"_index":1121,"title":{},"name":{},"text":{"9":{},"16":{},"20":{},"66":{},"76":{},"77":{}},"component":{}}],["aw",{"_index":2773,"title":{},"name":{},"text":{"45":{}},"component":{}}],["await",{"_index":1487,"title":{},"name":{},"text":{"14":{},"66":{}},"component":{}}],["awar",{"_index":813,"title":{},"name":{},"text":{"5":{},"8":{},"39":{},"54":{},"66":{},"67":{},"72":{},"73":{}},"component":{}}],["away",{"_index":3642,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ax",{"_index":1662,"title":{},"name":{},"text":{"17":{}},"component":{}}],["b",{"_index":3015,"title":{},"name":{},"text":{"60":{},"68":{},"83":{}},"component":{}}],["b=n_elm",{"_index":3628,"title":{},"name":{},"text":{"73":{}},"component":{}}],["b_{high",{"_index":3020,"title":{},"name":{},"text":{"60":{}},"component":{}}],["b_{low",{"_index":3019,"title":{},"name":{},"text":{"60":{}},"component":{}}],["back",{"_index":930,"title":{},"name":{},"text":{"8":{},"9":{},"26":{},"39":{},"65":{}},"component":{}}],["backbon",{"_index":3431,"title":{},"name":{},"text":{"69":{}},"component":{}}],["backend",{"_index":914,"title":{"8-3":{}},"name":{},"text":{"8":{}},"component":{}}],["backup",{"_index":1243,"title":{},"name":{},"text":{"10":{}},"component":{}}],["backward",{"_index":1943,"title":{},"name":{},"text":{"33":{},"38":{},"39":{},"44":{},"77":{}},"component":{}}],["balanc",{"_index":867,"title":{},"name":{},"text":{"7":{},"15":{},"22":{},"25":{},"27":{},"29":{},"30":{},"31":{},"38":{},"39":{},"40":{},"65":{},"71":{},"80":{},"82":{}},"component":{}}],["balance_of",{"_index":3713,"title":{},"name":{},"text":{"77":{}},"component":{}}],["banner",{"_index":1307,"title":{},"name":{},"text":{"12":{}},"component":{}}],["bar",{"_index":537,"title":{},"name":{},"text":{"4":{}},"component":{}}],["base",{"_index":10,"title":{"1-6":{}},"name":{},"text":{"2":{},"5":{},"22":{},"25":{},"26":{},"29":{},"30":{},"31":{},"41":{},"44":{},"53":{},"60":{},"64":{},"65":{},"68":{},"69":{},"70":{},"77":{},"82":{},"83":{},"91":{}},"component":{}}],["bash",{"_index":1741,"title":{},"name":{},"text":{"21":{}},"component":{}}],["bashrc",{"_index":1745,"title":{},"name":{},"text":{"21":{}},"component":{}}],["basi",{"_index":63,"title":{},"name":{},"text":{"1":{},"5":{},"44":{}},"component":{}}],["basic",{"_index":480,"title":{"10-1":{}},"name":{},"text":{"3":{},"12":{},"15":{},"57":{},"76":{},"80":{},"88":{}},"component":{}}],["batch",{"_index":3441,"title":{},"name":{},"text":{"69":{}},"component":{}}],["be",{"_index":236,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"9":{},"10":{},"16":{},"20":{},"41":{},"42":{},"44":{},"48":{},"49":{},"54":{},"66":{},"73":{},"77":{},"82":{},"85":{}},"component":{}}],["beauti",{"_index":1701,"title":{},"name":{},"text":{"19":{}},"component":{}}],["becom",{"_index":1160,"title":{"25":{}},"name":{},"text":{"9":{},"13":{},"44":{},"69":{},"70":{},"72":{},"76":{}},"component":{}}],["befor",{"_index":399,"title":{},"name":{},"text":{"2":{},"5":{},"10":{},"13":{},"15":{},"20":{},"22":{},"26":{},"27":{},"31":{},"33":{},"35":{},"39":{},"41":{},"42":{},"54":{},"57":{},"64":{},"66":{},"68":{},"71":{},"72":{},"73":{},"77":{}},"component":{}}],["began",{"_index":3088,"title":{},"name":{},"text":{"63":{}},"component":{}}],["begin",{"_index":1663,"title":{},"name":{},"text":{"17":{},"19":{},"24":{},"25":{},"35":{},"36":{},"38":{},"39":{},"60":{},"69":{}},"component":{}}],["begin{align",{"_index":1879,"title":{},"name":{},"text":{"29":{},"62":{},"65":{}},"component":{}}],["begin{cas",{"_index":3055,"title":{},"name":{},"text":{"60":{},"70":{}},"component":{}}],["begin{split}g",{"_index":3080,"title":{},"name":{},"text":{"62":{}},"component":{}}],["behav",{"_index":2920,"title":{},"name":{},"text":{"54":{},"73":{},"85":{}},"component":{}}],["behavior",{"_index":336,"title":{},"name":{},"text":{"2":{},"20":{},"41":{},"57":{},"68":{},"70":{}},"component":{}}],["below",{"_index":658,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"16":{},"44":{},"46":{},"64":{},"71":{},"73":{},"80":{},"83":{},"84":{}},"component":{}}],["benefit",{"_index":936,"title":{},"name":{},"text":{"8":{}},"component":{}}],["beosin",{"_index":2782,"title":{},"name":{},"text":{"46":{}},"component":{}}],["beosin.com",{"_index":2783,"title":{},"name":{},"text":{"46":{}},"component":{}}],["besid",{"_index":1949,"title":{},"name":{},"text":{"33":{}},"component":{}}],["best",{"_index":1746,"title":{},"name":{},"text":{"21":{},"87":{}},"component":{}}],["beta",{"_index":3012,"title":{},"name":{},"text":{"60":{},"62":{}},"component":{}}],["better",{"_index":482,"title":{},"name":{},"text":{"3":{},"8":{},"41":{},"44":{},"69":{},"73":{}},"component":{}}],["between",{"_index":106,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"7":{},"9":{},"17":{},"29":{},"38":{},"39":{},"42":{},"44":{},"48":{},"49":{},"56":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"77":{},"79":{},"85":{}},"component":{}}],["beyond",{"_index":3525,"title":{},"name":{},"text":{"70":{}},"component":{}}],["big",{"_index":2459,"title":{},"name":{},"text":{"42":{},"44":{},"60":{},"66":{}},"component":{}}],["bigg",{"_index":3217,"title":{},"name":{},"text":{"65":{}},"component":{}}],["bigint",{"_index":1363,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["billion",{"_index":644,"title":{},"name":{},"text":{"5":{}},"component":{}}],["bin",{"_index":3690,"title":{},"name":{},"text":{"77":{}},"component":{}}],["binari",{"_index":3135,"title":{},"name":{},"text":{"63":{},"70":{},"83":{},"87":{}},"component":{}}],["bit",{"_index":2003,"title":{"83-1":{},"83-2":{}},"name":{},"text":{"34":{},"41":{},"44":{},"46":{},"60":{},"63":{},"64":{},"70":{},"72":{},"83":{}},"component":{}}],["bitcoin",{"_index":3429,"title":{},"name":{},"text":{"69":{}},"component":{}}],["bits}}}_{\\text{lsb",{"_index":3174,"title":{},"name":{},"text":{"64":{}},"component":{}}],["bitwis",{"_index":2589,"title":{},"name":{},"text":{"44":{},"65":{},"74":{}},"component":{}}],["blake2s.cairo",{"_index":2740,"title":{},"name":{},"text":{"44":{}},"component":{}}],["blast",{"_index":2744,"title":{},"name":{},"text":{"45":{}},"component":{}}],["blend",{"_index":1996,"title":{},"name":{},"text":{"33":{}},"component":{}}],["blob",{"_index":2537,"title":{"65-10":{},"65-11":{}},"name":{},"text":{"44":{},"63":{},"64":{},"65":{}},"component":{}}],["blobdata",{"_index":2628,"title":{},"name":{},"text":{"44":{},"64":{}},"component":{}}],["block",{"_index":80,"title":{"52":{},"63":{},"2-4":{},"39-6":{},"39-9":{},"44-20":{},"63-1":{}},"name":{"52":{},"63":{}},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"10":{},"14":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"52":{},"54":{},"58":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"76":{},"82":{},"84":{},"85":{},"90":{},"91":{}},"component":{}}],["block_download",{"_index":2356,"title":{},"name":{},"text":{"42":{}},"component":{}}],["block_hash",{"_index":1206,"title":{},"name":{},"text":{"10":{},"71":{}},"component":{}}],["block_hash_calculator.r",{"_index":3105,"title":{},"name":{},"text":{"63":{}},"component":{}}],["block_head",{"_index":2627,"title":{},"name":{},"text":{"44":{}},"component":{}}],["block_info",{"_index":3802,"title":{},"name":{},"text":{"82":{},"85":{}},"component":{}}],["block_info.block_numb",{"_index":3905,"title":{},"name":{},"text":{"85":{}},"component":{}}],["block_lat",{"_index":2355,"title":{},"name":{},"text":{"42":{}},"component":{}}],["block_numb",{"_index":1207,"title":{},"name":{},"text":{"10":{},"44":{},"54":{},"63":{},"71":{},"82":{},"85":{}},"component":{}}],["block_process",{"_index":2358,"title":{},"name":{},"text":{"42":{}},"component":{}}],["block_tim",{"_index":2353,"title":{},"name":{},"text":{"42":{}},"component":{}}],["block_timestamp",{"_index":2616,"title":{},"name":{},"text":{"44":{},"54":{},"63":{},"82":{},"85":{}},"component":{}}],["blockchain",{"_index":363,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"14":{},"41":{},"42":{},"51":{},"52":{},"57":{},"69":{},"88":{}},"component":{}}],["blockhash",{"_index":2684,"title":{},"name":{},"text":{"44":{}},"component":{}}],["blockifi",{"_index":66,"title":{},"name":{},"text":{"1":{},"41":{},"44":{}},"component":{}}],["blockifier’",{"_index":75,"title":{},"name":{},"text":{"1":{}},"component":{}}],["blockinfo",{"_index":3800,"title":{"82-2":{}},"name":{},"text":{"82":{}},"component":{}}],["blockpack",{"_index":2561,"title":{},"name":{},"text":{"44":{}},"component":{}}],["blockpi",{"_index":2747,"title":{},"name":{},"text":{"45":{}},"component":{}}],["block’",{"_index":2357,"title":{},"name":{},"text":{"42":{},"63":{}},"component":{}}],["bmod",{"_index":3786,"title":{},"name":{},"text":{"80":{}},"component":{}}],["board",{"_index":320,"title":{},"name":{},"text":{"2":{}},"component":{}}],["boast",{"_index":3986,"title":{},"name":{},"text":{"89":{}},"component":{}}],["bodi",{"_index":3793,"title":{},"name":{},"text":{"81":{}},"component":{}}],["bold",{"_index":491,"title":{},"name":{},"text":{"4":{}},"component":{}}],["book",{"_index":847,"title":{"53":{}},"name":{"53":{}},"text":{"7":{},"8":{},"9":{},"53":{},"56":{},"66":{},"88":{}},"component":{}}],["bool",{"_index":2974,"title":{},"name":{},"text":{"59":{},"77":{},"81":{},"85":{}},"component":{}}],["boolean",{"_index":2725,"title":{},"name":{},"text":{"44":{},"59":{}},"component":{}}],["boost",{"_index":906,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["bootload",{"_index":1122,"title":{},"name":{},"text":{"9":{},"68":{}},"component":{}}],["both",{"_index":1669,"title":{},"name":{},"text":{"17":{},"18":{},"25":{},"26":{},"28":{},"29":{},"42":{},"44":{},"64":{},"65":{},"66":{},"68":{},"69":{},"77":{},"80":{},"83":{},"87":{}},"component":{}}],["bottleneck",{"_index":3455,"title":{},"name":{},"text":{"69":{}},"component":{}}],["bound",{"_index":2946,"title":{},"name":{},"text":{"55":{},"65":{},"72":{}},"component":{}}],["box",{"_index":3803,"title":{},"name":{},"text":{"82":{}},"component":{}}],["braavo",{"_index":1354,"title":{},"name":{},"text":{"13":{},"20":{},"21":{},"25":{},"86":{}},"component":{}}],["bracket",{"_index":530,"title":{},"name":{},"text":{"4":{}},"component":{}}],["break",{"_index":2239,"title":{"42-70":{}},"name":{},"text":{"41":{},"42":{},"44":{},"60":{},"68":{}},"component":{}}],["breviti",{"_index":3632,"title":{},"name":{},"text":{"73":{},"77":{}},"component":{}}],["bridg",{"_index":1935,"title":{"39":{},"47":{},"33-2":{},"33-4":{}},"name":{"34":{},"47":{}},"text":{"32":{},"33":{},"36":{},"38":{},"39":{},"40":{},"47":{},"49":{},"66":{},"72":{},"86":{}},"component":{}}],["bridged_token",{"_index":1983,"title":{},"name":{},"text":{"33":{}},"component":{}}],["bridge’",{"_index":2064,"title":{},"name":{},"text":{"38":{}},"component":{}}],["bring",{"_index":1699,"title":{},"name":{},"text":{"18":{},"29":{},"57":{}},"component":{}}],["broad",{"_index":1995,"title":{},"name":{},"text":{"33":{},"68":{}},"component":{}}],["broadcast",{"_index":362,"title":{},"name":{},"text":{"2":{},"7":{},"72":{}},"component":{}}],["broader",{"_index":3892,"title":{},"name":{},"text":{"85":{}},"component":{}}],["browser",{"_index":1351,"title":{},"name":{},"text":{"13":{},"14":{},"91":{}},"component":{}}],["btc",{"_index":1964,"title":{},"name":{},"text":{"33":{}},"component":{}}],["bug",{"_index":791,"title":{},"name":{},"text":{"5":{},"42":{},"44":{},"66":{},"68":{}},"component":{}}],["bugfix",{"_index":2422,"title":{},"name":{},"text":{"42":{}},"component":{}}],["build",{"_index":166,"title":{"86":{}},"name":{"86":{}},"text":{"1":{},"2":{},"15":{},"17":{},"41":{},"42":{},"46":{},"51":{},"63":{},"86":{},"87":{},"88":{},"89":{}},"component":{}}],["builder",{"_index":739,"title":{"88-5":{}},"name":{},"text":{"5":{},"88":{},"89":{}},"component":{}}],["built",{"_index":309,"title":{},"name":{},"text":{"2":{},"3":{},"9":{},"10":{},"14":{},"15":{},"48":{},"72":{},"86":{}},"component":{}}],["builtin",{"_index":276,"title":{"74":{},"2-5":{},"65-15":{},"65-16":{}},"name":{"74":{}},"text":{"44":{},"65":{},"71":{},"74":{}},"component":{}}],["builtin_instance_count",{"_index":2573,"title":{},"name":{},"text":{"44":{}},"component":{}}],["bulk",{"_index":2412,"title":{},"name":{},"text":{"42":{},"68":{}},"component":{}}],["bundl",{"_index":381,"title":{},"name":{},"text":{"2":{},"42":{},"69":{},"87":{}},"component":{}}],["burn",{"_index":2089,"title":{},"name":{},"text":{"38":{},"39":{},"40":{}},"component":{}}],["button",{"_index":495,"title":{},"name":{},"text":{"4":{},"14":{}},"component":{}}],["buy",{"_index":817,"title":{},"name":{},"text":{"5":{}},"component":{}}],["byte",{"_index":174,"title":{"83-9":{}},"name":{},"text":{"1":{},"2":{},"10":{},"64":{},"65":{},"66":{},"75":{},"79":{},"83":{}},"component":{}}],["bytearray",{"_index":3824,"title":{},"name":{},"text":{"83":{}},"component":{}}],["bytecod",{"_index":152,"title":{},"name":{},"text":{"1":{},"10":{},"11":{},"44":{},"65":{},"75":{}},"component":{}}],["byteorder=\"big",{"_index":3595,"title":{},"name":{},"text":{"72":{}},"component":{}}],["bytes31",{"_index":3816,"title":{},"name":{},"text":{"83":{}},"component":{}}],["bytes32",{"_index":3382,"title":{},"name":{},"text":{"67":{}},"component":{}}],["c",{"_index":1873,"title":{},"name":{},"text":{"29":{},"44":{},"60":{},"83":{}},"component":{}}],["c1",{"_index":3119,"title":{},"name":{},"text":{"63":{}},"component":{}}],["cach",{"_index":2130,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["cairo",{"_index":52,"title":{"73":{},"74":{},"81":{},"83":{},"87":{},"2-6":{},"2-7":{},"44-14":{},"44-33":{},"48-4":{},"73-5":{},"75-1":{},"75-2":{},"77-3":{},"77-8":{},"87-2":{},"87-4":{},"87-5":{},"87-7":{}},"name":{"73":{},"74":{},"83":{},"87":{}},"text":{"1":{},"2":{},"3":{},"7":{},"8":{},"9":{},"10":{},"11":{},"16":{},"17":{},"33":{},"41":{},"42":{},"44":{},"48":{},"49":{},"53":{},"54":{},"56":{},"59":{},"60":{},"61":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"83":{},"87":{},"89":{},"91":{}},"component":{}}],["cairo0",{"_index":2854,"title":{},"name":{},"text":{"49":{}},"component":{}}],["cairo1",{"_index":3891,"title":{},"name":{"85":{}},"text":{},"component":{}}],["cairo1.0",{"_index":2707,"title":{},"name":{},"text":{"44":{}},"component":{}}],["cairo_depend",{"_index":1280,"title":{"11-19":{}},"name":{},"text":{"11":{}},"component":{}}],["cairo_path",{"_index":1276,"title":{"11-14":{}},"name":{},"text":{"11":{}},"component":{}}],["cairobootloaderprogram",{"_index":1047,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cairoresourcefeeweight",{"_index":3235,"title":{},"name":{},"text":{"65":{}},"component":{}}],["cairoresourceusag",{"_index":3282,"title":{},"name":{},"text":{"65":{}},"component":{}}],["cairozero",{"_index":227,"title":{},"name":{},"text":{"1":{},"74":{}},"component":{}}],["cairo’",{"_index":3264,"title":{},"name":{},"text":{"65":{}},"component":{}}],["calcul",{"_index":328,"title":{"65-8":{},"72-4":{},"72-6":{},"72-7":{},"72-10":{},"72-12":{},"72-14":{},"72-15":{},"72-18":{},"72-20":{},"72-21":{}},"name":{},"text":{"2":{},"9":{},"22":{},"29":{},"30":{},"41":{},"59":{},"61":{},"65":{},"66":{},"69":{},"71":{},"72":{},"80":{}},"component":{}}],["calculate_staking_reward",{"_index":1789,"title":{},"name":{},"text":{"22":{}},"component":{}}],["call",{"_index":73,"title":{"85":{},"10-4":{},"39-4":{}},"name":{"85":{}},"text":{"1":{},"2":{},"9":{},"10":{},"14":{},"16":{},"20":{},"27":{},"28":{},"33":{},"34":{},"35":{},"38":{},"39":{},"41":{},"42":{},"44":{},"54":{},"57":{},"58":{},"59":{},"65":{},"66":{},"67":{},"68":{},"70":{},"72":{},"73":{},"78":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"88":{}},"component":{}}],["call_contract",{"_index":3890,"title":{"85-15":{}},"name":{},"text":{"85":{}},"component":{}}],["call_contract_syscal",{"_index":3906,"title":{},"name":{},"text":{"85":{}},"component":{}}],["callabl",{"_index":3662,"title":{},"name":{},"text":{"75":{}},"component":{}}],["callback",{"_index":2004,"title":{},"name":{},"text":{"34":{},"38":{}},"component":{}}],["calldata",{"_index":186,"title":{"44-26":{},"65-10":{},"65-12":{}},"name":{},"text":{"1":{},"38":{},"44":{},"54":{},"59":{},"63":{},"64":{},"65":{},"66":{},"67":{},"71":{},"72":{},"82":{},"83":{},"85":{}},"component":{}}],["calldata.span",{"_index":2983,"title":{},"name":{},"text":{"59":{}},"component":{}}],["caller",{"_index":1799,"title":{},"name":{},"text":{"23":{},"27":{},"67":{},"85":{},"91":{}},"component":{}}],["caller_address",{"_index":3527,"title":{},"name":{},"text":{"70":{},"82":{}},"component":{}}],["caller’",{"_index":2057,"title":{},"name":{},"text":{"38":{}},"component":{}}],["callproxi",{"_index":1041,"title":{},"name":{},"text":{"9":{}},"component":{}}],["came",{"_index":2106,"title":{},"name":{},"text":{"39":{}},"component":{}}],["cancel",{"_index":2011,"title":{"35":{},"66-5":{}},"name":{"35":{}},"text":{"35":{},"38":{},"41":{},"66":{},"67":{}},"component":{}}],["cancell1tol2messag",{"_index":3357,"title":{"67-2":{}},"name":{},"text":{"66":{},"67":{}},"component":{}}],["canon",{"_index":3616,"title":{},"name":{},"text":{"73":{}},"component":{}}],["can’t",{"_index":1696,"title":{},"name":{},"text":{"18":{},"42":{},"68":{},"85":{}},"component":{}}],["cap",{"_index":1906,"title":{},"name":{},"text":{"29":{}},"component":{}}],["capabl",{"_index":289,"title":{},"name":{},"text":{"2":{},"5":{},"69":{},"70":{}},"component":{}}],["capac",{"_index":3440,"title":{},"name":{},"text":{"69":{}},"component":{}}],["capit",{"_index":1804,"title":{},"name":{},"text":{"24":{}},"component":{}}],["car",{"_index":956,"title":{},"name":{},"text":{"8":{}},"component":{}}],["care",{"_index":3812,"title":{},"name":{},"text":{"83":{}},"component":{}}],["carefulli",{"_index":1860,"title":{},"name":{},"text":{"29":{}},"component":{}}],["cargo",{"_index":1684,"title":{},"name":{},"text":{"17":{},"77":{},"87":{}},"component":{}}],["carri",{"_index":752,"title":{},"name":{},"text":{"5":{}},"component":{}}],["cartridg",{"_index":4000,"title":{},"name":{},"text":{"90":{}},"component":{}}],["case",{"_index":987,"title":{},"name":{},"text":{"8":{},"10":{},"21":{},"38":{},"40":{},"64":{},"65":{},"66":{},"68":{},"69":{},"73":{},"77":{}},"component":{}}],["casm",{"_index":408,"title":{"73-1":{},"73-4":{}},"name":{},"text":{"2":{},"16":{},"42":{},"44":{},"65":{},"70":{},"73":{},"75":{},"76":{},"87":{}},"component":{}}],["catcher",{"_index":992,"title":{},"name":{},"text":{"8":{}},"component":{}}],["categor",{"_index":854,"title":{},"name":{},"text":{"7":{}},"component":{}}],["cater",{"_index":2892,"title":{},"name":{},"text":{"53":{}},"component":{}}],["caught",{"_index":3907,"title":{},"name":{},"text":{"85":{}},"component":{}}],["caus",{"_index":792,"title":{},"name":{},"text":{"5":{},"41":{},"42":{},"54":{},"65":{},"66":{}},"component":{}}],["caution",{"_index":1505,"title":{},"name":{},"text":{"14":{}},"component":{}}],["caveat",{"_index":2492,"title":{},"name":{},"text":{"42":{},"68":{}},"component":{}}],["cdot",{"_index":3023,"title":{},"name":{},"text":{"60":{},"62":{},"65":{},"71":{}},"component":{}}],["cdot\\sum\\limits_{i=1}^t",{"_index":3252,"title":{},"name":{},"text":{"65":{}},"component":{}}],["cdot]_j",{"_index":3042,"title":{},"name":{},"text":{"60":{}},"component":{}}],["cell",{"_index":286,"title":{"2-27":{}},"name":{},"text":{"2":{},"64":{},"65":{},"74":{}},"component":{}}],["cementifi",{"_index":1867,"title":{},"name":{},"text":{"29":{}},"component":{}}],["censorship",{"_index":593,"title":{},"name":{},"text":{"5":{}},"component":{}}],["center",{"_index":1410,"title":{},"name":{},"text":{"13":{}},"component":{}}],["central",{"_index":1759,"title":{},"name":{},"text":{"22":{}},"component":{}}],["certain",{"_index":101,"title":{},"name":{},"text":{"1":{},"5":{},"42":{},"73":{},"74":{}},"component":{}}],["chain",{"_index":19,"title":{"1":{},"72-23":{}},"name":{"1":{}},"text":{"2":{},"5":{},"13":{},"16":{},"42":{},"46":{},"72":{},"75":{},"78":{},"82":{},"90":{},"91":{}},"component":{}}],["chain.id",{"_index":1434,"title":{},"name":{},"text":{"13":{}},"component":{}}],["chain_id",{"_index":3363,"title":{},"name":{},"text":{"66":{},"72":{},"82":{}},"component":{}}],["chainbas",{"_index":2749,"title":{},"name":{},"text":{"45":{}},"component":{}}],["chainlink",{"_index":2871,"title":{},"name":{},"text":{"51":{}},"component":{}}],["chainsecurity.com",{"_index":2784,"title":{},"name":{},"text":{"46":{}},"component":{}}],["chainstack",{"_index":2750,"title":{},"name":{},"text":{"45":{}},"component":{}}],["challeng",{"_index":916,"title":{"8-5":{}},"name":{},"text":{"8":{}},"component":{}}],["chang",{"_index":61,"title":{"28-5":{},"28-6":{},"41-3":{},"41-8":{},"41-21":{},"41-25":{},"41-29":{},"41-32":{},"41-36":{},"41-43":{},"42-5":{},"42-10":{},"42-14":{},"42-19":{},"42-40":{},"42-45":{},"42-53":{},"42-57":{},"42-67":{},"42-71":{},"44-11":{},"44-24":{},"77-3":{},"77-8":{}},"name":{},"text":{"1":{},"5":{},"13":{},"16":{},"20":{},"22":{},"28":{},"30":{},"38":{},"41":{},"42":{},"44":{},"54":{},"57":{},"59":{},"64":{},"65":{},"68":{},"71":{},"72":{},"77":{},"81":{},"82":{},"88":{}},"component":{}}],["change_operational_address",{"_index":1845,"title":{},"name":{},"text":{"28":{}},"component":{}}],["change_reward_address",{"_index":1847,"title":{},"name":{},"text":{"28":{}},"component":{}}],["changelog",{"_index":2258,"title":{},"name":{},"text":{"41":{}},"component":{}}],["channel",{"_index":3977,"title":{},"name":{},"text":{"88":{}},"component":{}}],["chapter",{"_index":2894,"title":{},"name":{},"text":{"53":{}},"component":{}}],["charact",{"_index":2342,"title":{},"name":{},"text":{"42":{},"44":{},"83":{}},"component":{}}],["character",{"_index":879,"title":{},"name":{},"text":{"7":{},"70":{}},"component":{}}],["characterist",{"_index":910,"title":{},"name":{},"text":{"7":{}},"component":{}}],["charg",{"_index":2678,"title":{"65-2":{}},"name":{},"text":{"44":{},"54":{},"56":{},"58":{},"65":{},"66":{},"71":{},"73":{}},"component":{}}],["cheaper",{"_index":965,"title":{},"name":{},"text":{"8":{},"44":{}},"component":{}}],["cheatcod",{"_index":4001,"title":{},"name":{},"text":{"91":{}},"component":{}}],["check",{"_index":326,"title":{"69-9":{}},"name":{},"text":{"2":{},"8":{},"13":{},"16":{},"17":{},"20":{},"30":{},"32":{},"33":{},"38":{},"41":{},"44":{},"54":{},"65":{},"69":{},"71":{},"74":{}},"component":{}}],["child",{"_index":3502,"title":{},"name":{},"text":{"70":{}},"component":{}}],["children",{"_index":1379,"title":{},"name":{},"text":{"13":{},"70":{}},"component":{}}],["choic",{"_index":538,"title":{},"name":{},"text":{"4":{},"7":{}},"component":{}}],["choos",{"_index":1224,"title":{},"name":{},"text":{"10":{},"16":{},"25":{},"29":{},"68":{},"88":{}},"component":{}}],["chop",{"_index":1657,"title":{},"name":{},"text":{"17":{}},"component":{}}],["chore",{"_index":3434,"title":{},"name":{},"text":{"69":{}},"component":{}}],["chose",{"_index":3604,"title":{},"name":{},"text":{"73":{}},"component":{}}],["chunk",{"_index":3861,"title":{},"name":{},"text":{"83":{}},"component":{}}],["ci",{"_index":3132,"title":{},"name":{},"text":{"63":{}},"component":{}}],["ci/cd",{"_index":2117,"title":{"41-10":{}},"name":{},"text":{"41":{}},"component":{}}],["circuit",{"_index":2595,"title":{},"name":{},"text":{"44":{},"60":{}},"component":{}}],["circuit_test.cairo",{"_index":2599,"title":{},"name":{},"text":{"44":{}},"component":{}}],["circul",{"_index":716,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["claim",{"_index":642,"title":{"23":{}},"name":{"23":{}},"text":{"5":{},"22":{},"23":{},"30":{},"44":{}},"component":{}}],["claim_reward",{"_index":1773,"title":{},"name":{},"text":{"22":{},"23":{}},"component":{}}],["clarif",{"_index":3391,"title":{},"name":{},"text":{"68":{}},"component":{}}],["clariti",{"_index":1168,"title":{},"name":{},"text":{"9":{}},"component":{}}],["class",{"_index":164,"title":{"75":{},"76":{},"79":{},"2-8":{},"44-27":{},"70-4":{},"75-1":{},"75-2":{},"79-1":{},"79-3":{}},"name":{"75":{},"76":{},"79":{}},"text":{"1":{},"2":{},"10":{},"11":{},"16":{},"20":{},"21":{},"33":{},"38":{},"41":{},"42":{},"44":{},"54":{},"59":{},"63":{},"64":{},"65":{},"68":{},"70":{},"72":{},"73":{},"75":{},"76":{},"78":{},"79":{},"82":{},"85":{},"88":{}},"component":{}}],["class/inst",{"_index":2726,"title":{},"name":{},"text":{"44":{}},"component":{}}],["class_hash",{"_index":2973,"title":{},"name":{},"text":{"59":{},"68":{},"70":{},"72":{},"75":{},"78":{},"85":{}},"component":{}}],["class_hash_",{"_index":3916,"title":{},"name":{},"text":{"85":{}},"component":{}}],["class_hash_const",{"_index":2979,"title":{},"name":{},"text":{"59":{}},"component":{}}],["class_trie_root",{"_index":3489,"title":{},"name":{},"text":{"70":{}},"component":{}}],["classhash",{"_index":2077,"title":{},"name":{},"text":{"38":{},"59":{},"83":{},"85":{}},"component":{}}],["class’",{"_index":3483,"title":{},"name":{},"text":{"70":{},"75":{}},"component":{}}],["cleaner",{"_index":2187,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cleanup",{"_index":2181,"title":{},"name":{},"text":{"41":{}},"component":{}}],["clear",{"_index":2108,"title":{},"name":{},"text":{"39":{},"66":{},"73":{}},"component":{}}],["clearer",{"_index":2209,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cli",{"_index":192,"title":{"10":{},"11":{}},"name":{},"text":{"1":{},"10":{},"25":{},"26":{},"44":{},"66":{}},"component":{}}],["click",{"_index":1534,"title":{},"name":{},"text":{"14":{},"36":{},"40":{}},"component":{}}],["client",{"_index":395,"title":{"7-3":{},"7-5":{}},"name":{},"text":{"2":{},"7":{},"13":{},"14":{},"45":{}},"component":{}}],["close",{"_index":86,"title":{},"name":{},"text":{"1":{},"55":{},"65":{}},"component":{}}],["closer",{"_index":2497,"title":{},"name":{},"text":{"42":{}},"component":{}}],["cloud",{"_index":966,"title":{},"name":{},"text":{"8":{}},"component":{}}],["cmake",{"_index":1303,"title":{},"name":{},"text":{"11":{}},"component":{}}],["cn",{"_index":3122,"title":{},"name":{},"text":{"63":{}},"component":{}}],["code",{"_index":157,"title":{"87":{},"87-2":{}},"name":{"87":{}},"text":{"1":{},"2":{},"4":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"20":{},"33":{},"38":{},"39":{},"41":{},"42":{},"44":{},"57":{},"64":{},"65":{},"66":{},"68":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"83":{},"84":{},"85":{},"87":{},"88":{},"89":{}},"component":{}}],["codebas",{"_index":3419,"title":{},"name":{},"text":{"68":{}},"component":{}}],["code’",{"_index":3327,"title":{},"name":{},"text":{"66":{}},"component":{}}],["coin",{"_index":1967,"title":{},"name":{},"text":{"33":{}},"component":{}}],["collabor",{"_index":953,"title":{},"name":{},"text":{"8":{},"55":{},"89":{}},"component":{}}],["collect",{"_index":335,"title":{},"name":{},"text":{"2":{},"26":{},"69":{},"86":{},"87":{}},"component":{}}],["collis",{"_index":3349,"title":{},"name":{},"text":{"66":{}},"component":{}}],["color",{"_index":1413,"title":{},"name":{},"text":{"13":{}},"component":{}}],["column",{"_index":1126,"title":{},"name":{},"text":{"9":{}},"component":{}}],["combin",{"_index":568,"title":{},"name":{},"text":{"5":{},"9":{},"42":{},"44":{},"65":{},"70":{},"83":{}},"component":{}}],["come",{"_index":2602,"title":{},"name":{},"text":{"44":{},"65":{},"68":{},"69":{},"73":{},"87":{}},"component":{}}],["comfort",{"_index":4002,"title":{},"name":{},"text":{"91":{}},"component":{}}],["comm",{"_index":2189,"title":{},"name":{},"text":{"41":{}},"component":{}}],["command",{"_index":510,"title":{"10-1":{},"41-15":{}},"name":{},"text":{"4":{},"10":{},"11":{},"13":{},"16":{},"17":{},"20":{},"41":{},"42":{},"44":{},"56":{},"88":{},"91":{}},"component":{}}],["comment",{"_index":1573,"title":{},"name":{},"text":{"15":{},"44":{}},"component":{}}],["commiss",{"_index":1825,"title":{"28-3":{}},"name":{},"text":{"25":{},"28":{},"29":{},"30":{}},"component":{}}],["commissionchang",{"_index":1920,"title":{},"name":{},"text":{"30":{}},"component":{}}],["commit",{"_index":427,"title":{"63-2":{},"63-3":{},"70-2":{}},"name":{},"text":{"2":{},"5":{},"41":{},"42":{},"44":{},"63":{},"68":{},"70":{},"76":{}},"component":{}}],["common",{"_index":405,"title":{"69-5":{},"85-6":{},"85-13":{},"85-20":{},"85-26":{},"85-32":{},"85-39":{},"85-45":{},"85-52":{},"85-58":{},"85-70":{}},"name":{},"text":{"2":{},"5":{},"8":{},"13":{},"44":{},"69":{},"73":{},"80":{},"85":{},"87":{}},"component":{}}],["common_receipt_properti",{"_index":2636,"title":{},"name":{},"text":{"44":{}},"component":{}}],["commonli",{"_index":795,"title":{},"name":{},"text":{"5":{},"42":{},"62":{}},"component":{}}],["commun",{"_index":252,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"32":{},"39":{},"41":{},"44":{},"55":{},"57":{},"64":{},"65":{},"69":{},"81":{},"89":{},"90":{}},"component":{}}],["community’",{"_index":1994,"title":{},"name":{},"text":{"33":{}},"component":{}}],["compact",{"_index":3442,"title":{},"name":{},"text":{"69":{}},"component":{}}],["compani",{"_index":2779,"title":{},"name":{},"text":{"46":{}},"component":{}}],["companion",{"_index":2896,"title":{},"name":{},"text":{"53":{}},"component":{}}],["compar",{"_index":1539,"title":{},"name":{},"text":{"14":{},"74":{},"79":{}},"component":{}}],["comparison",{"_index":2593,"title":{},"name":{},"text":{"44":{},"70":{},"74":{}},"component":{}}],["compat",{"_index":900,"title":{"48":{}},"name":{"48":{}},"text":{"7":{},"25":{},"26":{},"33":{},"38":{},"39":{},"41":{},"44":{},"48":{},"49":{},"77":{},"85":{}},"component":{}}],["compens",{"_index":3605,"title":{},"name":{},"text":{"73":{}},"component":{}}],["competit",{"_index":1893,"title":{},"name":{},"text":{"29":{}},"component":{}}],["compil",{"_index":341,"title":{"11":{},"15":{},"76":{},"15-3":{},"21-4":{},"87-3":{}},"name":{"11":{},"15":{},"76":{}},"text":{"2":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"41":{},"42":{},"44":{},"48":{},"64":{},"65":{},"70":{},"72":{},"73":{},"75":{},"76":{},"77":{},"80":{},"81":{},"84":{},"87":{},"89":{}},"component":{}}],["compiled_class_hash",{"_index":3495,"title":{},"name":{},"text":{"70":{},"72":{}},"component":{}}],["complet",{"_index":92,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"9":{},"17":{},"30":{},"33":{},"34":{},"38":{},"39":{},"45":{},"54":{},"57":{},"58":{},"66":{},"73":{},"81":{},"85":{},"87":{}},"component":{}}],["complex",{"_index":160,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"65":{},"80":{},"84":{},"88":{}},"component":{}}],["compli",{"_index":860,"title":{},"name":{},"text":{"7":{}},"component":{}}],["compliant",{"_index":2276,"title":{},"name":{},"text":{"41":{}},"component":{}}],["complic",{"_index":3388,"title":{},"name":{},"text":{"68":{},"73":{}},"component":{}}],["compon",{"_index":1012,"title":{"22-1":{},"75-1":{}},"name":{},"text":{"8":{},"9":{},"13":{},"14":{},"15":{},"22":{},"29":{},"33":{},"41":{},"44":{},"54":{},"65":{},"68":{},"69":{},"73":{},"75":{},"76":{},"77":{}},"component":{}}],["componentev",{"_index":3722,"title":{},"name":{},"text":{"77":{}},"component":{}}],["components/displayconnect",{"_index":1405,"title":{},"name":{},"text":{"13":{}},"component":{}}],["components/lowerbann",{"_index":1407,"title":{},"name":{},"text":{"13":{}},"component":{}}],["components/starknet",{"_index":1388,"title":{},"name":{},"text":{"13":{}},"component":{}}],["component—sequenc",{"_index":3422,"title":{},"name":{},"text":{"69":{}},"component":{}}],["compos",{"_index":379,"title":{},"name":{},"text":{"2":{},"3":{},"65":{}},"component":{}}],["comprehens",{"_index":2102,"title":{},"name":{},"text":{"39":{},"41":{},"53":{},"69":{}},"component":{}}],["compress",{"_index":2542,"title":{},"name":{},"text":{"44":{}},"component":{}}],["compris",{"_index":158,"title":{},"name":{},"text":{"1":{},"5":{},"9":{},"72":{}},"component":{}}],["compromis",{"_index":378,"title":{},"name":{},"text":{"2":{},"3":{},"9":{},"69":{}},"component":{}}],["comput",{"_index":120,"title":{"44-25":{},"65-14":{},"75-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"16":{},"22":{},"42":{},"44":{},"54":{},"58":{},"65":{},"66":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"78":{},"80":{},"85":{}},"component":{}}],["computation",{"_index":3446,"title":{},"name":{},"text":{"69":{}},"component":{}}],["concaten",{"_index":3104,"title":{},"name":{},"text":{"63":{},"72":{}},"component":{}}],["concept",{"_index":781,"title":{},"name":{},"text":{"5":{},"44":{},"69":{}},"component":{}}],["concepts:cryptography/hash",{"_index":3888,"title":{},"name":{},"text":{"84":{}},"component":{}}],["concern",{"_index":1247,"title":{},"name":{},"text":{"10":{}},"component":{}}],["conclud",{"_index":3609,"title":{},"name":{},"text":{"73":{}},"component":{}}],["conclus",{"_index":917,"title":{"8-6":{}},"name":{},"text":{"8":{}},"component":{}}],["concret",{"_index":2932,"title":{},"name":{},"text":{"54":{}},"component":{}}],["concurr",{"_index":2140,"title":{},"name":{},"text":{"41":{}},"component":{}}],["condit",{"_index":807,"title":{},"name":{},"text":{"5":{},"41":{},"44":{},"64":{}},"component":{}}],["config",{"_index":1614,"title":{},"name":{},"text":{"16":{},"20":{},"42":{}},"component":{}}],["configur",{"_index":1372,"title":{"42-45":{},"42-63":{},"42-66":{}},"name":{},"text":{"13":{},"16":{},"17":{},"41":{},"42":{}},"component":{}}],["confirm",{"_index":873,"title":{},"name":{},"text":{"7":{},"8":{},"20":{},"39":{},"42":{},"57":{},"66":{}},"component":{}}],["conflict",{"_index":3765,"title":{},"name":{},"text":{"78":{}},"component":{}}],["confus",{"_index":2435,"title":{},"name":{},"text":{"42":{},"83":{}},"component":{}}],["congest",{"_index":129,"title":{},"name":{},"text":{"1":{},"7":{},"8":{}},"component":{}}],["connect",{"_index":819,"title":{"13-1":{}},"name":{},"text":{"5":{},"13":{},"14":{},"20":{},"42":{},"68":{},"69":{},"86":{}},"component":{}}],["connector",{"_index":1382,"title":{},"name":{},"text":{"13":{}},"component":{}}],["connector.nam",{"_index":1457,"title":{},"name":{},"text":{"13":{}},"component":{}}],["connectors.map",{"_index":1455,"title":{},"name":{},"text":{"13":{}},"component":{}}],["connectwallet",{"_index":1432,"title":{},"name":{},"text":{"13":{}},"component":{}}],["connectwallet.tsx",{"_index":1441,"title":{},"name":{},"text":{"13":{}},"component":{}}],["conscious",{"_index":3648,"title":{},"name":{},"text":{"74":{}},"component":{}}],["consecut",{"_index":2694,"title":{},"name":{},"text":{"44":{}},"component":{}}],["consensi",{"_index":2785,"title":{},"name":{},"text":{"46":{}},"component":{}}],["consensu",{"_index":367,"title":{"69-8":{}},"name":{},"text":{"2":{},"5":{},"7":{},"29":{},"69":{}},"component":{}}],["consensys.net/dilig",{"_index":2787,"title":{},"name":{},"text":{"46":{}},"component":{}}],["consequ",{"_index":3312,"title":{},"name":{},"text":{"65":{}},"component":{}}],["consid",{"_index":724,"title":{},"name":{},"text":{"5":{},"33":{},"55":{},"64":{},"65":{},"66":{},"73":{},"77":{},"83":{},"85":{},"89":{}},"component":{}}],["consider",{"_index":3618,"title":{},"name":{},"text":{"73":{}},"component":{}}],["consist",{"_index":96,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"11":{},"16":{},"33":{},"41":{},"48":{},"60":{},"66":{},"68":{},"70":{},"80":{},"83":{}},"component":{}}],["consol",{"_index":2203,"title":{},"name":{},"text":{"41":{}},"component":{}}],["console.log",{"_index":1529,"title":{},"name":{},"text":{"14":{}},"component":{}}],["consolid",{"_index":3154,"title":{},"name":{},"text":{"64":{}},"component":{}}],["const",{"_index":1381,"title":{},"name":{},"text":{"13":{},"14":{},"59":{}},"component":{}}],["constant",{"_index":68,"title":{},"name":{},"text":{"1":{},"4":{},"13":{},"29":{},"60":{},"65":{},"66":{},"70":{},"72":{},"78":{}},"component":{}}],["constants.starknetchainid.sn_sepolia",{"_index":1435,"title":{},"name":{},"text":{"13":{}},"component":{}}],["constants.t",{"_index":1508,"title":{},"name":{},"text":{"14":{}},"component":{}}],["constraint",{"_index":466,"title":{},"name":{},"text":{"2":{},"9":{},"73":{}},"component":{}}],["constru",{"_index":815,"title":{},"name":{},"text":{"5":{}},"component":{}}],["construct",{"_index":1142,"title":{"70-7":{}},"name":{},"text":{"9":{},"39":{},"41":{},"44":{},"60":{},"63":{},"65":{},"68":{},"70":{},"72":{},"83":{}},"component":{}}],["constructor",{"_index":1018,"title":{"9-3":{},"9-4":{},"9-5":{},"56-2":{}},"name":{},"text":{"9":{},"10":{},"44":{},"54":{},"56":{},"59":{},"65":{},"70":{},"72":{},"75":{},"77":{},"78":{},"82":{},"85":{}},"component":{}}],["constructor_calldata",{"_index":2914,"title":{},"name":{},"text":{"54":{},"72":{}},"component":{}}],["constructor_calldata_hash",{"_index":3764,"title":{},"name":{},"text":{"78":{}},"component":{}}],["constructor_entry_point",{"_index":3669,"title":{},"name":{},"text":{"75":{}},"component":{}}],["constructor_input",{"_index":1229,"title":{},"name":{},"text":{"10":{}},"component":{}}],["constructor’",{"_index":2915,"title":{},"name":{},"text":{"54":{},"85":{}},"component":{}}],["consult",{"_index":1130,"title":{},"name":{},"text":{"9":{}},"component":{}}],["consum",{"_index":109,"title":{},"name":{},"text":{"1":{},"8":{},"44":{},"65":{},"66":{},"67":{},"71":{}},"component":{}}],["consumedmessagetol1",{"_index":3374,"title":{"67-67":{}},"name":{},"text":{"67":{}},"component":{}}],["consumedmessagetol2",{"_index":3381,"title":{},"name":{},"text":{"67":{}},"component":{}}],["consumemessagefroml2",{"_index":3338,"title":{"67-9":{}},"name":{},"text":{"66":{},"67":{}},"component":{}}],["consumpt",{"_index":3348,"title":{},"name":{},"text":{"66":{}},"component":{}}],["contact",{"_index":1540,"title":{},"name":{},"text":{"14":{}},"component":{}}],["contact_address",{"_index":1255,"title":{},"name":{},"text":{"10":{}},"component":{}}],["contain",{"_index":122,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"8":{},"9":{},"10":{},"11":{},"20":{},"33":{},"34":{},"42":{},"44":{},"63":{},"64":{},"65":{},"66":{},"69":{},"70":{},"71":{},"72":{},"73":{},"76":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["content",{"_index":814,"title":{"53-1":{}},"name":{},"text":{"5":{},"13":{},"70":{},"80":{},"85":{},"91":{}},"component":{}}],["context",{"_index":390,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"41":{},"69":{},"71":{},"85":{}},"component":{}}],["contigu",{"_index":2563,"title":{},"name":{},"text":{"44":{}},"component":{}}],["continu",{"_index":748,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"29":{},"42":{},"69":{},"77":{},"80":{},"89":{}},"component":{}}],["contract",{"_index":3,"title":{"15":{},"16":{},"20":{},"59":{},"77":{},"78":{},"79":{},"80":{},"81":{},"91":{},"1-2":{},"2-2":{},"2-8":{},"2-9":{},"2-21":{},"9-1":{},"9-2":{},"9-3":{},"9-6":{},"12-1":{},"14-1":{},"22-2":{},"22-3":{},"22-4":{},"22-5":{},"29-10":{},"29-12":{},"29-13":{},"29-15":{},"29-16":{},"29-17":{},"33-3":{},"59-3":{},"65-21":{},"68-5":{},"70-3":{},"77-2":{},"79-1":{},"79-2":{},"91-3":{}},"name":{"12":{},"77":{},"78":{},"79":{},"80":{},"81":{},"91":{}},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"46":{},"47":{},"48":{},"49":{},"51":{},"53":{},"54":{},"55":{},"56":{},"57":{},"59":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"91":{}},"component":{}}],["contract.cairo",{"_index":1284,"title":{},"name":{},"text":{"11":{}},"component":{}}],["contract.popul",{"_index":1486,"title":{},"name":{},"text":{"14":{}},"component":{}}],["contract_abi",{"_index":1211,"title":{},"name":{},"text":{"10":{}},"component":{}}],["contract_abi.json",{"_index":1286,"title":{},"name":{},"text":{"11":{}},"component":{}}],["contract_address",{"_index":1210,"title":{},"name":{},"text":{"10":{},"59":{},"64":{},"66":{},"68":{},"72":{},"77":{},"78":{},"82":{}},"component":{}}],["contract_address.cairo",{"_index":3768,"title":{},"name":{},"text":{"78":{}},"component":{}}],["contract_address_salt",{"_index":3583,"title":{},"name":{},"text":{"72":{},"85":{}},"component":{}}],["contract_class",{"_index":1222,"title":{},"name":{},"text":{"10":{},"72":{}},"component":{}}],["contract_class_leaf_v0",{"_index":3494,"title":{},"name":{},"text":{"70":{}},"component":{}}],["contract_class_v0.1.0",{"_index":3677,"title":{},"name":{},"text":{"75":{}},"component":{}}],["contract_class_vers",{"_index":3659,"title":{},"name":{},"text":{"75":{}},"component":{}}],["contract_compiled.json",{"_index":1285,"title":{},"name":{},"text":{"11":{}},"component":{}}],["contract_definit",{"_index":1227,"title":{},"name":{},"text":{"10":{}},"component":{}}],["contract_hash",{"_index":3183,"title":{},"name":{},"text":{"64":{}},"component":{}}],["contract_paramet",{"_index":1927,"title":{},"name":{},"text":{"30":{}},"component":{}}],["contract_trie_root",{"_index":3488,"title":{},"name":{},"text":{"70":{}},"component":{}}],["contractaddress",{"_index":2079,"title":{},"name":{},"text":{"38":{},"59":{},"63":{},"66":{},"77":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["contractaddresszeroable::zero",{"_index":2084,"title":{},"name":{},"text":{"38":{}},"component":{}}],["contractclass",{"_index":2733,"title":{},"name":{},"text":{"44":{},"72":{}},"component":{}}],["contractdefinit",{"_index":2732,"title":{},"name":{},"text":{"44":{}},"component":{}}],["contractdeploy",{"_index":2967,"title":{"59-10":{}},"name":{},"text":{"59":{}},"component":{}}],["contracts/count",{"_index":1466,"title":{},"name":{},"text":{"14":{}},"component":{}}],["contractst",{"_index":1348,"title":{},"name":{},"text":{"12":{},"15":{},"77":{},"81":{}},"component":{}}],["contractu",{"_index":723,"title":{},"name":{},"text":{"5":{}},"component":{}}],["contract’",{"_index":455,"title":{},"name":{},"text":{"2":{},"10":{},"11":{},"15":{},"16":{},"20":{},"25":{},"42":{},"44":{},"59":{},"64":{},"66":{},"68":{},"70":{},"75":{},"77":{},"80":{},"81":{},"82":{},"84":{},"85":{},"87":{}},"component":{}}],["contrast",{"_index":2941,"title":{},"name":{},"text":{"55":{},"69":{},"74":{},"85":{}},"component":{}}],["contribut",{"_index":470,"title":{"3-5":{}},"name":{},"text":{"3":{},"5":{},"7":{},"22":{},"23":{},"29":{},"42":{},"44":{},"48":{},"65":{},"69":{},"76":{}},"component":{}}],["contributor",{"_index":484,"title":{"42-49":{},"42-54":{}},"name":{},"text":{"3":{},"5":{},"33":{}},"component":{}}],["control",{"_index":333,"title":{},"name":{},"text":{"2":{},"5":{},"22":{},"41":{},"57":{},"68":{},"87":{}},"component":{}}],["conveni",{"_index":2463,"title":{},"name":{},"text":{"42":{},"85":{}},"component":{}}],["convent",{"_index":489,"title":{"4":{}},"name":{"4":{}},"text":{},"component":{}}],["convert",{"_index":615,"title":{},"name":{},"text":{"5":{},"44":{},"75":{},"87":{}},"component":{}}],["coordin",{"_index":1931,"title":{},"name":{},"text":{"31":{},"60":{},"69":{},"89":{}},"component":{}}],["copi",{"_index":1302,"title":{},"name":{},"text":{"11":{},"13":{},"77":{}},"component":{}}],["cor",{"_index":2395,"title":{},"name":{},"text":{"42":{}},"component":{}}],["core",{"_index":2,"title":{"1-2":{},"2-21":{},"7-2":{},"68-5":{}},"name":{},"text":{"2":{},"22":{},"38":{},"39":{},"44":{},"53":{},"55":{},"65":{},"66":{},"68":{},"85":{}},"component":{}}],["core::felt252",{"_index":3703,"title":{},"name":{},"text":{"77":{}},"component":{}}],["core::integer::u128",{"_index":1502,"title":{},"name":{},"text":{"14":{},"77":{}},"component":{}}],["core::integer::u256",{"_index":3708,"title":{},"name":{},"text":{"77":{},"84":{}},"component":{}}],["core::integer::u8",{"_index":3706,"title":{},"name":{},"text":{"77":{}},"component":{}}],["core::starknet::contract_address::contractaddress",{"_index":3696,"title":{},"name":{},"text":{"77":{},"84":{}},"component":{}}],["core::starknet::storage::{storagepointerreadaccess",{"_index":1566,"title":{},"name":{},"text":{"15":{}},"component":{}}],["corelib",{"_index":3651,"title":{},"name":{},"text":{"74":{}},"component":{}}],["correct",{"_index":1790,"title":{},"name":{},"text":{"22":{},"42":{},"65":{},"68":{},"69":{},"73":{}},"component":{}}],["correctli",{"_index":1672,"title":{},"name":{},"text":{"17":{},"41":{},"42":{},"68":{},"69":{},"73":{},"83":{}},"component":{}}],["correl",{"_index":3270,"title":{},"name":{},"text":{"65":{}},"component":{}}],["correspond",{"_index":263,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"16":{},"33":{},"36":{},"38":{},"39":{},"54":{},"63":{},"65":{},"66":{},"68":{},"70":{},"72":{},"76":{},"77":{},"79":{},"81":{}},"component":{}}],["cost",{"_index":444,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"8":{},"37":{},"44":{},"65":{},"66":{},"67":{},"85":{}},"component":{}}],["count",{"_index":1343,"title":{},"name":{},"text":{"12":{},"35":{},"41":{},"65":{}},"component":{}}],["counter",{"_index":1305,"title":{"12":{}},"name":{"12":{},"13":{},"14":{}},"text":{"12":{},"13":{},"14":{},"35":{},"38":{},"66":{},"77":{},"81":{}},"component":{}}],["counter::itestsess",{"_index":1501,"title":{},"name":{},"text":{"14":{}},"component":{}}],["counter::read",{"_index":3794,"title":{},"name":{},"text":{"81":{}},"component":{}}],["counter_contract",{"_index":3748,"title":{},"name":{},"text":{"77":{}},"component":{}}],["counter_decreas",{"_index":3797,"title":{},"name":{},"text":{"81":{}},"component":{}}],["counter_increas",{"_index":3796,"title":{},"name":{},"text":{"81":{}},"component":{}}],["counterabi",{"_index":1465,"title":{},"name":{},"text":{"14":{}},"component":{}}],["countercontract",{"_index":3691,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["counterdecreas",{"_index":3701,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["counterincreas",{"_index":3700,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["coupl",{"_index":2808,"title":{},"name":{},"text":{"48":{}},"component":{}}],["cours",{"_index":2494,"title":{},"name":{},"text":{"42":{}},"component":{}}],["cover",{"_index":616,"title":{},"name":{},"text":{"5":{},"38":{}},"component":{}}],["cp",{"_index":1877,"title":{},"name":{},"text":{"29":{}},"component":{}}],["cp\\right",{"_index":1883,"title":{},"name":{},"text":{"29":{}},"component":{}}],["cpu",{"_index":319,"title":{},"name":{},"text":{"2":{},"41":{},"73":{}},"component":{}}],["cpuconstraintpoli",{"_index":1149,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly0",{"_index":1061,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly1",{"_index":1067,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly2",{"_index":1073,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly3",{"_index":1079,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly4",{"_index":1085,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly5",{"_index":1091,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly6",{"_index":1097,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuconstraintpoly7",{"_index":1114,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifi",{"_index":1019,"title":{"9-4":{}},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier/cpuoods/cpuconstantpoli",{"_index":1135,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier0",{"_index":1057,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier1",{"_index":1063,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier2",{"_index":1069,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier3",{"_index":1075,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier4",{"_index":1081,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier5",{"_index":1087,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier6",{"_index":1093,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpufrilessverifier7",{"_index":1110,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuood",{"_index":1154,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods0",{"_index":1059,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods1",{"_index":1065,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods2",{"_index":1071,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods3",{"_index":1077,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods4",{"_index":1083,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods5",{"_index":1089,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods6",{"_index":1095,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cpuoods7",{"_index":1112,"title":{},"name":{},"text":{"9":{}},"component":{}}],["crate",{"_index":2657,"title":{},"name":{},"text":{"44":{},"88":{}},"component":{}}],["creat",{"_index":645,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{},"20":{},"21":{},"28":{},"30":{},"33":{},"38":{},"39":{},"44":{},"55":{},"56":{},"59":{},"63":{},"66":{},"69":{},"71":{},"80":{},"85":{},"86":{},"87":{},"91":{}},"component":{}}],["create2",{"_index":2944,"title":{},"name":{},"text":{"55":{}},"component":{}}],["creation",{"_index":863,"title":{},"name":{},"text":{"7":{},"14":{},"30":{},"44":{},"56":{},"82":{}},"component":{}}],["creator",{"_index":974,"title":{},"name":{},"text":{"8":{}},"component":{}}],["critic",{"_index":617,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"22":{},"29":{},"30":{},"33":{},"54":{},"69":{}},"component":{}}],["cross",{"_index":434,"title":{},"name":{},"text":{"2":{},"65":{}},"component":{}}],["crucial",{"_index":855,"title":{},"name":{},"text":{"7":{},"22":{},"66":{},"68":{},"73":{},"76":{}},"component":{}}],["crypto",{"_index":2280,"title":{},"name":{},"text":{"41":{}},"component":{}}],["cryptoexpert",{"_index":3045,"title":{},"name":{},"text":{"60":{}},"component":{}}],["cryptograph",{"_index":446,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"8":{},"76":{}},"component":{}}],["cryptographi",{"_index":421,"title":{},"name":{},"text":{"2":{},"5":{}},"component":{}}],["css",{"_index":1398,"title":{},"name":{},"text":{"13":{}},"component":{}}],["css.properti",{"_index":1412,"title":{},"name":{},"text":{"13":{}},"component":{}}],["csstype",{"_index":1399,"title":{},"name":{},"text":{"13":{}},"component":{}}],["curl",{"_index":1681,"title":{},"name":{},"text":{"17":{}},"component":{}}],["curli",{"_index":539,"title":{},"name":{},"text":{"4":{}},"component":{}}],["current",{"_index":12,"title":{"1-7":{},"1-8":{},"8-4":{},"9-1":{}},"name":{},"text":{"1":{},"3":{},"5":{},"7":{},"8":{},"9":{},"13":{},"15":{},"21":{},"22":{},"26":{},"27":{},"28":{},"29":{},"30":{},"33":{},"38":{},"41":{},"42":{},"43":{},"44":{},"47":{},"48":{},"49":{},"55":{},"57":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"77":{},"80":{},"81":{},"82":{},"85":{},"90":{}},"component":{}}],["current_block",{"_index":2349,"title":{},"name":{},"text":{"42":{},"85":{}},"component":{}}],["curv",{"_index":1134,"title":{"62":{},"22-5":{},"29-7":{},"29-16":{}},"name":{"62":{}},"text":{"9":{},"22":{},"29":{},"44":{},"60":{},"62":{},"72":{},"74":{}},"component":{}}],["custodi",{"_index":2012,"title":{},"name":{},"text":{"35":{},"66":{}},"component":{}}],["custom",{"_index":447,"title":{"10-3":{},"57-3":{}},"name":{},"text":{"2":{},"3":{},"10":{},"33":{},"42":{},"53":{},"57":{},"84":{}},"component":{}}],["custom.css",{"_index":1400,"title":{},"name":{},"text":{"13":{}},"component":{}}],["custom.sqlit",{"_index":2483,"title":{},"name":{},"text":{"42":{}},"component":{}}],["cycl",{"_index":3530,"title":{},"name":{"71":{}},"text":{},"component":{}}],["d",{"_index":2210,"title":{},"name":{},"text":{"41":{},"63":{},"65":{}},"component":{}}],["da",{"_index":2609,"title":{},"name":{},"text":{"44":{}},"component":{}}],["dai",{"_index":1970,"title":{"49":{}},"name":{"49":{}},"text":{"33":{},"39":{},"49":{}},"component":{}}],["dao’",{"_index":2851,"title":{},"name":{},"text":{"49":{}},"component":{}}],["dapp",{"_index":441,"title":{"12":{},"86":{},"44-4":{}},"name":{"13":{},"86":{}},"text":{"2":{},"3":{},"7":{},"12":{},"13":{},"14":{},"38":{},"44":{},"66":{},"86":{},"89":{}},"component":{}}],["dapp’",{"_index":3352,"title":{},"name":{},"text":{"66":{}},"component":{}}],["dashboard",{"_index":1831,"title":{},"name":{},"text":{"25":{},"29":{}},"component":{}}],["data",{"_index":144,"title":{"50":{},"64":{},"8-3":{},"64-2":{},"64-3":{},"64-5":{},"64-6":{},"65-18":{},"83-1":{},"83-2":{}},"name":{"50":{},"64":{}},"text":{"1":{},"2":{},"5":{},"7":{},"9":{},"14":{},"22":{},"30":{},"41":{},"42":{},"44":{},"50":{},"51":{},"54":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"77":{},"80":{},"82":{},"83":{},"84":{},"85":{},"88":{}},"component":{}}],["data.append",{"_index":3926,"title":{},"name":{},"text":{"85":{}},"component":{}}],["data.span",{"_index":3930,"title":{},"name":{},"text":{"85":{}},"component":{}}],["data/starknet",{"_index":2879,"title":{},"name":{},"text":{"51":{}},"component":{}}],["data=[5",{"_index":3737,"title":{},"name":{},"text":{"77":{}},"component":{}}],["data[0",{"_index":3880,"title":{},"name":{},"text":{"84":{}},"component":{}}],["data[1",{"_index":3881,"title":{},"name":{},"text":{"84":{}},"component":{}}],["data\\_gas\\_price\\cdot\\text{felt_size_in_bytes}\\cdot\\bigg",{"_index":3231,"title":{},"name":{},"text":{"65":{}},"component":{}}],["data\\_hash",{"_index":3886,"title":{},"name":{},"text":{"84":{}},"component":{}}],["data_avail",{"_index":2637,"title":{},"name":{},"text":{"44":{}},"component":{}}],["data_availability_mod",{"_index":3568,"title":{},"name":{},"text":{"72":{}},"component":{}}],["data_ga",{"_index":2612,"title":{},"name":{},"text":{"44":{}},"component":{}}],["data_gas_consum",{"_index":2630,"title":{},"name":{},"text":{"44":{}},"component":{}}],["data_gas_consumed=0",{"_index":2635,"title":{},"name":{},"text":{"44":{}},"component":{}}],["data_gas_pric",{"_index":2631,"title":{},"name":{},"text":{"44":{}},"component":{}}],["databas",{"_index":2221,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["date",{"_index":247,"title":{},"name":{},"text":{"1":{},"5":{},"17":{},"33":{},"38":{},"39":{},"42":{},"48":{},"82":{},"86":{}},"component":{}}],["day",{"_index":1854,"title":{},"name":{},"text":{"29":{},"33":{},"35":{},"38":{},"66":{}},"component":{}}],["db",{"_index":2216,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["deactiv",{"_index":2070,"title":{},"name":{},"text":{"38":{}},"component":{}}],["deal",{"_index":433,"title":{},"name":{},"text":{"2":{},"84":{}},"component":{}}],["debat",{"_index":3453,"title":{},"name":{},"text":{"69":{}},"component":{}}],["debug",{"_index":1263,"title":{},"name":{},"text":{"10":{},"11":{},"20":{}},"component":{}}],["debug_info_with_sourc",{"_index":1279,"title":{"11-18":{}},"name":{},"text":{"11":{}},"component":{}}],["debugg",{"_index":3984,"title":{},"name":{},"text":{"88":{}},"component":{}}],["debunk",{"_index":3420,"title":{"69-5":{}},"name":{},"text":{},"component":{}}],["dec",{"_index":2524,"title":{"44-40":{}},"name":{},"text":{},"component":{}}],["decemb",{"_index":251,"title":{},"name":{},"text":{"1":{}},"component":{}}],["decentr",{"_index":550,"title":{},"name":{},"text":{"5":{},"9":{},"22":{},"29":{},"41":{},"69":{},"73":{},"86":{},"89":{}},"component":{}}],["decid",{"_index":596,"title":{},"name":{},"text":{"5":{},"42":{},"65":{}},"component":{}}],["decim",{"_index":1820,"title":{},"name":{},"text":{"25":{},"42":{},"47":{},"80":{},"83":{}},"component":{}}],["decimals_",{"_index":3705,"title":{},"name":{},"text":{"77":{}},"component":{}}],["decis",{"_index":552,"title":{},"name":{},"text":{"5":{},"33":{},"59":{}},"component":{}}],["declar",{"_index":226,"title":{"16":{},"10-5":{},"16-4":{},"21-3":{},"21-4":{},"44-27":{},"72-8":{}},"name":{},"text":{"1":{},"2":{},"10":{},"12":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"28":{},"42":{},"44":{},"48":{},"54":{},"59":{},"63":{},"64":{},"65":{},"66":{},"70":{},"71":{},"72":{},"73":{},"75":{},"76":{},"79":{},"80":{},"85":{},"91":{}},"component":{}}],["declare_operational_address",{"_index":1846,"title":{},"name":{},"text":{"28":{}},"component":{}}],["declare_v0_tx_hash",{"_index":3582,"title":{},"name":{},"text":{"72":{}},"component":{}}],["declare_v1_tx_hash",{"_index":3581,"title":{},"name":{},"text":{"72":{}},"component":{}}],["declare_v2_tx_hash",{"_index":3580,"title":{},"name":{},"text":{"72":{}},"component":{}}],["declare_v3_tx_hash",{"_index":3578,"title":{},"name":{},"text":{"72":{}},"component":{}}],["declared_class_hash1",{"_index":3115,"title":{},"name":{},"text":{"63":{}},"component":{}}],["declared_class_hashd",{"_index":3117,"title":{},"name":{},"text":{"63":{}},"component":{}}],["declared_compiled_class_hash1",{"_index":3116,"title":{},"name":{},"text":{"63":{}},"component":{}}],["declared_compiled_class_hashd",{"_index":3118,"title":{},"name":{},"text":{"63":{}},"component":{}}],["declaretransact",{"_index":2283,"title":{},"name":{},"text":{"41":{}},"component":{}}],["decod",{"_index":2257,"title":{},"name":{},"text":{"41":{},"64":{},"66":{},"88":{}},"component":{}}],["decompil",{"_index":3965,"title":{},"name":{},"text":{"87":{}},"component":{}}],["decor",{"_index":3347,"title":{},"name":{},"text":{"66":{},"84":{}},"component":{}}],["decreas",{"_index":938,"title":{},"name":{},"text":{"8":{},"28":{},"66":{}},"component":{}}],["decrease_allow",{"_index":3717,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["decrease_count",{"_index":3693,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["dedic",{"_index":1763,"title":{},"name":{},"text":{"22":{},"33":{},"41":{},"57":{},"77":{}},"component":{}}],["deduc",{"_index":3503,"title":{},"name":{},"text":{"70":{}},"component":{}}],["deep",{"_index":1693,"title":{},"name":{},"text":{"18":{},"29":{},"87":{},"88":{},"91":{}},"component":{}}],["deepen",{"_index":2897,"title":{},"name":{},"text":{"53":{}},"component":{}}],["default",{"_index":1299,"title":{"42-71":{}},"name":{},"text":{"11":{},"13":{},"14":{},"15":{},"16":{},"33":{},"41":{},"42":{},"44":{},"54":{},"64":{},"70":{},"83":{}},"component":{}}],["defi",{"_index":3323,"title":{},"name":{},"text":{"66":{}},"component":{}}],["defin",{"_index":69,"title":{},"name":{},"text":{"1":{},"2":{},"11":{},"22":{},"29":{},"33":{},"38":{},"44":{},"54":{},"55":{},"57":{},"60":{},"62":{},"63":{},"65":{},"67":{},"69":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"80":{},"84":{},"85":{}},"component":{}}],["definit",{"_index":347,"title":{"38-9":{},"38-17":{},"38-25":{},"38-34":{},"38-42":{},"38-51":{},"38-60":{},"38-68":{},"38-77":{},"38-86":{},"38-94":{},"38-102":{},"38-110":{},"38-118":{},"38-126":{},"38-133":{},"38-139":{},"38-144":{},"38-149":{},"38-154":{},"38-159":{},"38-164":{},"38-169":{},"38-174":{},"60-4":{},"67-8":{},"67-15":{},"67-21":{},"67-27":{},"67-33":{},"67-39":{},"67-45":{},"67-51":{},"67-58":{},"67-65":{},"67-70":{},"67-74":{},"67-78":{},"67-82":{},"70-8":{},"75-1":{},"84-2":{}},"name":{},"text":{"2":{},"16":{},"41":{},"44":{},"70":{},"72":{},"79":{},"83":{},"84":{}},"component":{}}],["delay",{"_index":2023,"title":{},"name":{},"text":{"35":{},"42":{},"66":{},"69":{}},"component":{}}],["deleg",{"_index":630,"title":{"24":{},"28":{},"31":{},"22-3":{},"26-2":{},"28-2":{},"28-6":{}},"name":{"24":{},"28":{},"31":{}},"text":{"5":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"69":{},"85":{}},"component":{}}],["delegate_cal",{"_index":1117,"title":{},"name":{},"text":{"9":{},"44":{}},"component":{}}],["delegatecal",{"_index":3770,"title":{},"name":{},"text":{"79":{}},"component":{}}],["delegator’",{"_index":1762,"title":{},"name":{},"text":{"22":{},"23":{},"26":{}},"component":{}}],["deletestak",{"_index":1922,"title":{},"name":{},"text":{"30":{}},"component":{}}],["delimit",{"_index":1214,"title":{},"name":{},"text":{"10":{}},"component":{}}],["deliv",{"_index":24,"title":{},"name":{},"text":{"1":{},"43":{},"44":{},"66":{}},"component":{}}],["demand",{"_index":3437,"title":{},"name":{},"text":{"69":{}},"component":{}}],["demonstr",{"_index":3685,"title":{},"name":{},"text":{"76":{},"85":{}},"component":{}}],["denial",{"_index":2917,"title":{},"name":{},"text":{"54":{}},"component":{}}],["denomin",{"_index":354,"title":{},"name":{},"text":{"2":{},"44":{},"65":{}},"component":{}}],["denot",{"_index":3007,"title":{},"name":{},"text":{"60":{},"65":{},"70":{}},"component":{}}],["deoxi",{"_index":239,"title":{},"name":{},"text":{"1":{}},"component":{}}],["depend",{"_index":775,"title":{"59-5":{}},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"42":{},"44":{},"55":{},"59":{},"63":{},"64":{},"65":{},"77":{},"85":{},"87":{}},"component":{}}],["deploy",{"_index":268,"title":{"16":{},"20":{},"56":{},"59":{},"10-6":{},"16-5":{},"20-2":{},"20-3":{},"21-3":{},"21-5":{},"41-10":{},"56-1":{},"59-3":{},"59-4":{},"59-7":{},"65-21":{},"72-21":{},"85-21":{}},"name":{"56":{},"59":{}},"text":{"1":{},"2":{},"5":{},"7":{},"9":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"25":{},"29":{},"30":{},"38":{},"44":{},"48":{},"54":{},"55":{},"56":{},"59":{},"63":{},"64":{},"65":{},"70":{},"72":{},"76":{},"78":{},"79":{},"82":{},"85":{},"86":{},"87":{},"88":{},"90":{},"91":{}},"component":{}}],["deploy_account",{"_index":461,"title":{"10-7":{},"56-2":{},"72-16":{}},"name":{},"text":{"2":{},"10":{},"20":{},"44":{},"54":{},"56":{},"65":{},"71":{},"72":{},"78":{},"79":{}},"component":{}}],["deploy_account_v1_tx_hash",{"_index":3585,"title":{},"name":{},"text":{"72":{}},"component":{}}],["deploy_account_v3_tx_hash",{"_index":3584,"title":{},"name":{},"text":{"72":{}},"component":{}}],["deploy_contract",{"_index":2720,"title":{},"name":{},"text":{"44":{}},"component":{}}],["deploy_from_zero",{"_index":2722,"title":{},"name":{},"text":{"44":{},"78":{},"85":{}},"component":{}}],["deploy_from_zero=tru",{"_index":2995,"title":{},"name":{},"text":{"59":{}},"component":{}}],["deploy_syscal",{"_index":3909,"title":{},"name":{},"text":{"85":{}},"component":{}}],["deploy_tx_hash",{"_index":3587,"title":{},"name":{},"text":{"72":{}},"component":{}}],["deployaccount",{"_index":2664,"title":{},"name":{},"text":{"44":{}},"component":{}}],["deploycontract",{"_index":2966,"title":{"59-9":{}},"name":{},"text":{"59":{}},"component":{}}],["deployed_addr",{"_index":2991,"title":{},"name":{},"text":{"59":{}},"component":{}}],["deployed_address1",{"_index":3107,"title":{},"name":{},"text":{"63":{}},"component":{}}],["deployed_addresss",{"_index":3109,"title":{},"name":{},"text":{"63":{}},"component":{}}],["deployed_class_hash",{"_index":3110,"title":{},"name":{},"text":{"63":{}},"component":{}}],["deployed_class_hash1",{"_index":3108,"title":{},"name":{},"text":{"63":{}},"component":{}}],["deployer_address",{"_index":3763,"title":{},"name":{},"text":{"78":{}},"component":{}}],["deployer’",{"_index":2984,"title":{},"name":{},"text":{"59":{},"85":{}},"component":{}}],["deposit",{"_index":1956,"title":{"34":{},"35":{},"36":{},"38-2":{},"39-3":{},"39-4":{},"39-5":{}},"name":{"35":{},"36":{}},"text":{"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"49":{},"66":{},"84":{},"85":{}},"component":{}}],["depositcancelrequest",{"_index":2021,"title":{"38-10":{}},"name":{},"text":{"35":{},"38":{}},"component":{}}],["depositor",{"_index":2024,"title":{},"name":{},"text":{"35":{},"38":{}},"component":{}}],["depositreclaim",{"_index":2022,"title":{"38-18":{}},"name":{},"text":{"35":{},"38":{}},"component":{}}],["depositwithmessag",{"_index":2001,"title":{"38-27":{}},"name":{},"text":{"34":{},"38":{}},"component":{}}],["depositwithmessagecancelrequest",{"_index":2009,"title":{"38-35":{}},"name":{},"text":{"34":{},"38":{}},"component":{}}],["depositwithmessagereclaim",{"_index":2010,"title":{"38-44":{}},"name":{},"text":{"34":{},"38":{}},"component":{}}],["deprec",{"_index":15,"title":{"1-9":{},"42-63":{},"65-6":{},"72-5":{},"72-6":{},"72-7":{},"72-11":{},"72-12":{},"72-13":{},"72-14":{},"72-19":{},"72-20":{}},"name":{},"text":{"1":{},"10":{},"42":{},"44":{},"54":{},"66":{},"68":{},"70":{},"72":{}},"component":{}}],["deprecated_declar",{"_index":2682,"title":{},"name":{},"text":{"44":{}},"component":{}}],["derefer",{"_index":2193,"title":{},"name":{},"text":{"41":{}},"component":{}}],["deriv",{"_index":2949,"title":{},"name":{},"text":{"57":{},"59":{},"65":{},"77":{},"81":{}},"component":{}}],["describ",{"_index":457,"title":{},"name":{},"text":{"2":{},"5":{},"10":{},"12":{},"29":{},"33":{},"44":{},"64":{},"65":{},"66":{},"70":{},"72":{},"77":{}},"component":{}}],["descript",{"_index":79,"title":{"11-3":{},"38-3":{},"38-11":{},"38-19":{},"38-28":{},"38-36":{},"38-45":{},"38-54":{},"38-62":{},"38-71":{},"38-80":{},"38-88":{},"38-96":{},"38-104":{},"38-112":{},"38-120":{},"38-128":{},"38-136":{},"38-141":{},"38-146":{},"38-151":{},"38-156":{},"38-161":{},"38-166":{},"38-171":{},"67-3":{},"67-10":{},"67-17":{},"67-23":{},"67-29":{},"67-35":{},"67-41":{},"67-47":{},"67-53":{},"67-60":{},"67-68":{},"67-72":{},"67-76":{},"67-80":{},"85-3":{},"85-10":{},"85-17":{},"85-23":{},"85-29":{},"85-36":{},"85-42":{},"85-49":{},"85-55":{},"85-62":{},"85-67":{}},"name":{},"text":{"1":{},"13":{},"16":{},"22":{},"38":{},"45":{},"53":{},"63":{},"67":{},"69":{},"70":{},"72":{},"74":{},"83":{},"85":{}},"component":{}}],["deseri",{"_index":2912,"title":{},"name":{},"text":{"54":{}},"component":{}}],["design",{"_index":923,"title":{},"name":{},"text":{"8":{},"9":{},"20":{},"22":{},"23":{},"31":{},"44":{},"46":{},"54":{},"55":{},"57":{},"60":{},"69":{},"72":{},"73":{},"86":{},"90":{}},"component":{}}],["desir",{"_index":1219,"title":{},"name":{},"text":{"10":{},"21":{},"29":{},"38":{},"40":{},"65":{},"70":{},"72":{}},"component":{}}],["despit",{"_index":3534,"title":{},"name":{},"text":{"71":{}},"component":{}}],["destin",{"_index":3311,"title":{},"name":{},"text":{"65":{}},"component":{}}],["detail",{"_index":265,"title":{"29-5":{}},"name":{},"text":{"1":{},"5":{},"8":{},"9":{},"12":{},"16":{},"17":{},"22":{},"25":{},"26":{},"30":{},"31":{},"33":{},"41":{},"42":{},"44":{},"58":{},"59":{},"63":{},"64":{},"65":{},"66":{},"68":{},"72":{},"75":{},"82":{}},"component":{}}],["detect",{"_index":1739,"title":{"21-2":{}},"name":{},"text":{"21":{},"33":{},"41":{},"87":{}},"component":{}}],["detector",{"_index":3967,"title":{},"name":{},"text":{"87":{}},"component":{}}],["deter",{"_index":875,"title":{},"name":{},"text":{"7":{}},"component":{}}],["determin",{"_index":603,"title":{},"name":{},"text":{"5":{},"8":{},"26":{},"29":{},"55":{},"57":{},"59":{},"64":{},"65":{},"68":{},"70":{},"72":{},"73":{},"78":{},"80":{},"83":{},"85":{}},"component":{}}],["determinist",{"_index":2996,"title":{},"name":{},"text":{"59":{},"68":{},"73":{}},"component":{}}],["dev",{"_index":28,"title":{},"name":{},"text":{"1":{},"14":{},"44":{},"72":{}},"component":{}}],["develop",{"_index":219,"title":{"17":{}},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"29":{},"33":{},"39":{},"44":{},"48":{},"53":{},"55":{},"59":{},"73":{},"76":{},"83":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{}},"component":{}}],["developer’",{"_index":2110,"title":{},"name":{},"text":{"39":{}},"component":{}}],["devent",{"_index":1585,"title":{},"name":{},"text":{"16":{}},"component":{}}],["deviat",{"_index":2495,"title":{},"name":{},"text":{"42":{},"68":{}},"component":{}}],["devnet",{"_index":1582,"title":{"90":{},"17-3":{},"90-1":{},"90-2":{}},"name":{"16":{},"90":{}},"text":{"16":{},"17":{},"20":{},"48":{},"59":{},"89":{},"90":{}},"component":{}}],["devnet’",{"_index":1676,"title":{},"name":{},"text":{"17":{}},"component":{}}],["devtool",{"_index":3933,"title":{"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"89-2":{}},"name":{},"text":{"89":{}},"component":{}}],["diagnost",{"_index":3961,"title":{},"name":{},"text":{"87":{}},"component":{}}],["diagram",{"_index":3519,"title":{},"name":{},"text":{"70":{},"71":{}},"component":{}}],["dict[resourc",{"_index":3558,"title":{},"name":{},"text":{"72":{}},"component":{}}],["dictat",{"_index":292,"title":{},"name":{},"text":{"2":{}},"component":{}}],["dictionari",{"_index":3399,"title":{},"name":{},"text":{"68":{},"72":{}},"component":{}}],["diff",{"_index":284,"title":{"2-26":{},"63-2":{}},"name":{},"text":{"41":{},"44":{},"63":{},"64":{},"65":{},"68":{},"71":{}},"component":{}}],["differ",{"_index":404,"title":{"77-5":{}},"name":{},"text":{"2":{},"3":{},"5":{},"8":{},"14":{},"17":{},"20":{},"21":{},"22":{},"31":{},"42":{},"54":{},"56":{},"57":{},"64":{},"65":{},"66":{},"68":{},"69":{},"72":{},"73":{},"85":{}},"component":{}}],["differenti",{"_index":516,"title":{},"name":{},"text":{"4":{},"49":{}},"component":{}}],["digest",{"_index":3484,"title":{},"name":{},"text":{"70":{}},"component":{}}],["digit",{"_index":637,"title":{},"name":{},"text":{"5":{},"41":{},"42":{}},"component":{}}],["dilig",{"_index":2786,"title":{},"name":{},"text":{"46":{}},"component":{}}],["dipdup",{"_index":2866,"title":{},"name":{},"text":{"50":{}},"component":{}}],["direct",{"_index":1258,"title":{},"name":{},"text":{"10":{},"22":{},"30":{},"41":{},"85":{}},"component":{}}],["directli",{"_index":364,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"9":{},"10":{},"22":{},"29":{},"42":{},"44":{},"54":{},"85":{}},"component":{}}],["directori",{"_index":77,"title":{},"name":{},"text":{"1":{},"10":{},"11":{},"13":{},"15":{},"16":{},"20":{},"33":{}},"component":{}}],["disabl",{"_index":1289,"title":{},"name":{},"text":{"11":{},"33":{},"44":{},"49":{}},"component":{}}],["disable_hint_valid",{"_index":1272,"title":{"11-9":{}},"name":{},"text":{"11":{}},"component":{}}],["disabled={statu",{"_index":1456,"title":{},"name":{},"text":{"13":{}},"component":{}}],["disagre",{"_index":3414,"title":{},"name":{},"text":{"68":{}},"component":{}}],["disallow",{"_index":2372,"title":{},"name":{},"text":{"42":{},"54":{}},"component":{}}],["disappear",{"_index":591,"title":{},"name":{},"text":{"5":{}},"component":{}}],["disclaim",{"_index":549,"title":{"5-4":{}},"name":{},"text":{"5":{}},"component":{}}],["disconnect",{"_index":1448,"title":{},"name":{},"text":{"13":{}},"component":{}}],["discord",{"_index":1541,"title":{},"name":{},"text":{"14":{},"88":{}},"component":{}}],["discount",{"_index":2540,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["discoveri",{"_index":3946,"title":{},"name":{},"text":{"86":{}},"component":{}}],["discrep",{"_index":3412,"title":{},"name":{},"text":{"68":{}},"component":{}}],["discret",{"_index":831,"title":{},"name":{},"text":{"5":{}},"component":{}}],["discuss",{"_index":624,"title":{},"name":{},"text":{"5":{},"8":{},"69":{},"80":{},"84":{}},"component":{}}],["disk",{"_index":2405,"title":{},"name":{},"text":{"42":{}},"component":{}}],["dispatch",{"_index":986,"title":{},"name":{},"text":{"8":{},"9":{},"59":{},"81":{}},"component":{}}],["dispatcher.deploycontract",{"_index":2982,"title":{},"name":{},"text":{"59":{}},"component":{}}],["display",{"_index":512,"title":{},"name":{},"text":{"4":{},"9":{},"14":{},"44":{}},"component":{}}],["displayconnect",{"_index":1404,"title":{},"name":{},"text":{"13":{}},"component":{}}],["displayconnected.tsx",{"_index":1429,"title":{},"name":{},"text":{"13":{}},"component":{}}],["displayselectwalletui",{"_index":1445,"title":{},"name":{},"text":{"13":{}},"component":{}}],["disrupt",{"_index":3471,"title":{},"name":{},"text":{"69":{}},"component":{}}],["distinct",{"_index":3490,"title":{},"name":{},"text":{"70":{}},"component":{}}],["distinguish",{"_index":3084,"title":{},"name":{},"text":{"62":{},"65":{},"68":{},"73":{},"79":{},"83":{}},"component":{}}],["distribut",{"_index":547,"title":{"5-3":{}},"name":{},"text":{"5":{},"8":{},"22":{},"29":{},"69":{}},"component":{}}],["dive",{"_index":1692,"title":{},"name":{},"text":{"18":{},"29":{},"87":{}},"component":{}}],["divers",{"_index":581,"title":{},"name":{},"text":{"5":{},"9":{},"33":{},"51":{}},"component":{}}],["divid",{"_index":1757,"title":{},"name":{},"text":{"22":{}},"component":{}}],["divis",{"_index":543,"title":{},"name":{},"text":{"4":{}},"component":{}}],["do",{"_index":2918,"title":{"73-3":{}},"name":{},"text":{"54":{},"66":{},"68":{},"73":{},"74":{},"77":{}},"component":{}}],["doc",{"_index":471,"title":{"3-5":{}},"name":{},"text":{"88":{}},"component":{}}],["docker",{"_index":2115,"title":{"41-5":{},"41-11":{}},"name":{},"text":{"41":{},"42":{}},"component":{}}],["docs.chain.link/data",{"_index":2872,"title":{},"name":{},"text":{"51":{}},"component":{}}],["docs.madara.build/installation/requir",{"_index":1815,"title":{},"name":{},"text":{"25":{}},"component":{}}],["docs.pragma.build/v1/resources/consumingdatafe",{"_index":2875,"title":{},"name":{},"text":{"51":{}},"component":{}}],["docs.pyth.network/pric",{"_index":2877,"title":{},"name":{},"text":{"51":{}},"component":{}}],["document",{"_index":477,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"12":{},"17":{},"22":{},"41":{},"42":{},"55":{},"78":{},"87":{}},"component":{}}],["doesn’t",{"_index":2063,"title":{},"name":{},"text":{"38":{},"59":{},"66":{},"68":{},"69":{},"73":{},"81":{}},"component":{}}],["dojo",{"_index":3956,"title":{},"name":{},"text":{"87":{},"90":{}},"component":{}}],["dom",{"_index":1362,"title":{},"name":{},"text":{"13":{}},"component":{}}],["domain",{"_index":1155,"title":{"60-1":{}},"name":{},"text":{"9":{},"42":{},"75":{},"85":{}},"component":{}}],["domin",{"_index":2587,"title":{},"name":{},"text":{"44":{}},"component":{}}],["donat",{"_index":690,"title":{},"name":{},"text":{"5":{}},"component":{}}],["done",{"_index":668,"title":{},"name":{},"text":{"5":{},"10":{},"20":{},"44":{},"54":{},"68":{},"70":{},"77":{}},"component":{}}],["dont_filter_identifi",{"_index":1274,"title":{"11-11":{}},"name":{},"text":{"11":{},"44":{}},"component":{}}],["don’t",{"_index":1301,"title":{},"name":{},"text":{"11":{},"13":{},"16":{},"35":{},"38":{},"42":{},"68":{},"69":{},"83":{}},"component":{}}],["doubl",{"_index":805,"title":{},"name":{},"text":{"5":{}},"component":{}}],["down",{"_index":1658,"title":{},"name":{},"text":{"17":{},"44":{},"54":{},"82":{},"85":{}},"component":{}}],["download",{"_index":1613,"title":{},"name":{},"text":{"16":{},"17":{},"42":{}},"component":{}}],["dp",{"_index":666,"title":{},"name":{},"text":{"5":{}},"component":{}}],["drain",{"_index":2901,"title":{},"name":{},"text":{"54":{}},"component":{}}],["draw",{"_index":499,"title":{},"name":{},"text":{"4":{}},"component":{}}],["drawback",{"_index":2952,"title":{},"name":{},"text":{"57":{}},"component":{}}],["driven",{"_index":3987,"title":{},"name":{},"text":{"89":{}},"component":{}}],["drop",{"_index":2362,"title":{},"name":{},"text":{"42":{},"59":{},"77":{},"81":{}},"component":{}}],["drpc",{"_index":2751,"title":{},"name":{},"text":{"45":{}},"component":{}}],["dry_run",{"_index":2721,"title":{},"name":{},"text":{"44":{}},"component":{}}],["due",{"_index":418,"title":{},"name":{},"text":{"2":{},"5":{},"41":{},"42":{},"44":{},"57":{},"66":{}},"component":{}}],["dump",{"_index":3996,"title":{},"name":{},"text":{"90":{}},"component":{}}],["duplex",{"_index":2188,"title":{},"name":{},"text":{"41":{}},"component":{}}],["duplic",{"_index":975,"title":{},"name":{},"text":{"8":{}},"component":{}}],["dure",{"_index":142,"title":{},"name":{},"text":{"1":{},"9":{},"11":{},"25":{},"29":{},"36":{},"39":{},"40":{},"65":{},"66":{},"71":{},"72":{},"82":{}},"component":{}}],["dwellir",{"_index":2753,"title":{},"name":{},"text":{"45":{}},"component":{}}],["dynam",{"_index":1006,"title":{},"name":{},"text":{"8":{},"22":{},"89":{}},"component":{}}],["e",{"_index":3867,"title":{},"name":{},"text":{"84":{}},"component":{}}],["e.emit",{"_index":3868,"title":{},"name":{},"text":{"84":{}},"component":{}}],["e.g",{"_index":1158,"title":{},"name":{},"text":{"9":{},"44":{},"54":{},"68":{},"73":{},"80":{}},"component":{}}],["each",{"_index":70,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"9":{},"10":{},"14":{},"20":{},"22":{},"29":{},"33":{},"39":{},"41":{},"42":{},"44":{},"47":{},"48":{},"54":{},"64":{},"65":{},"68":{},"69":{},"70":{},"71":{},"72":{},"76":{},"77":{},"79":{},"80":{},"81":{},"83":{},"84":{}},"component":{}}],["earli",{"_index":651,"title":{},"name":{},"text":{"5":{}},"component":{}}],["earlier",{"_index":2364,"title":{},"name":{},"text":{"42":{}},"component":{}}],["earn",{"_index":1786,"title":{},"name":{},"text":{"22":{},"24":{},"25":{},"29":{}},"component":{}}],["eas",{"_index":899,"title":{},"name":{},"text":{"7":{},"22":{}},"component":{}}],["easi",{"_index":3613,"title":{},"name":{},"text":{"73":{},"86":{}},"component":{}}],["easier",{"_index":3936,"title":{},"name":{},"text":{"86":{},"90":{}},"component":{}}],["easiest",{"_index":3952,"title":{},"name":{},"text":{"87":{}},"component":{}}],["easili",{"_index":1584,"title":{},"name":{},"text":{"16":{},"17":{},"20":{},"29":{},"91":{}},"component":{}}],["ec",{"_index":2736,"title":{},"name":{},"text":{"44":{}},"component":{}}],["ec_op",{"_index":3295,"title":{},"name":{},"text":{"65":{},"74":{}},"component":{}}],["ecdsa",{"_index":329,"title":{},"name":{},"text":{"2":{},"62":{},"65":{},"72":{},"74":{}},"component":{}}],["ecdsahashpointsxcolumn",{"_index":1053,"title":{},"name":{},"text":{"9":{}},"component":{}}],["ecdsahashpointsycolumn",{"_index":1055,"title":{},"name":{},"text":{"9":{}},"component":{}}],["ecdsapoint",{"_index":1131,"title":{},"name":{},"text":{"9":{}},"component":{}}],["ecdsapointsxcolumn",{"_index":1150,"title":{},"name":{},"text":{"9":{}},"component":{}}],["ecdsapointsycolumn",{"_index":1151,"title":{},"name":{},"text":{"9":{}},"component":{}}],["echo",{"_index":1742,"title":{},"name":{},"text":{"21":{}},"component":{}}],["econom",{"_index":545,"title":{"5":{},"5-1":{},"29-18":{}},"name":{"5":{}},"text":{"5":{},"22":{},"29":{}},"component":{}}],["ecosystem",{"_index":683,"title":{"7-1":{}},"name":{},"text":{"5":{},"7":{},"8":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"48":{},"49":{},"53":{},"69":{},"85":{},"87":{},"89":{}},"component":{}}],["ecosystem’",{"_index":852,"title":{},"name":{},"text":{"7":{}},"component":{}}],["edg",{"_index":3350,"title":{},"name":{},"text":{"66":{}},"component":{}}],["edit",{"_index":3990,"title":{},"name":{},"text":{"89":{}},"component":{}}],["effect",{"_index":428,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"28":{},"44":{},"69":{}},"component":{}}],["effici",{"_index":125,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"41":{},"60":{},"69":{},"70":{},"72":{},"74":{},"76":{}},"component":{}}],["eip",{"_index":2610,"title":{"64-2":{}},"name":{},"text":{"44":{},"55":{},"57":{},"64":{},"65":{}},"component":{}}],["eip4844",{"_index":2648,"title":{},"name":{},"text":{"44":{}},"component":{}}],["ekubo",{"_index":2859,"title":{},"name":{},"text":{"49":{}},"component":{}}],["elect",{"_index":3473,"title":{},"name":{},"text":{"69":{}},"component":{}}],["element",{"_index":494,"title":{},"name":{},"text":{"4":{},"10":{},"14":{},"41":{},"60":{},"61":{},"64":{},"65":{},"66":{},"68":{},"70":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"80":{},"83":{},"84":{},"85":{}},"component":{}}],["elig",{"_index":2931,"title":{},"name":{},"text":{"54":{}},"component":{}}],["ell",{"_index":3232,"title":{},"name":{},"text":{"65":{}},"component":{}}],["ell_l",{"_index":3509,"title":{},"name":{},"text":{"70":{}},"component":{}}],["ell_r",{"_index":3512,"title":{},"name":{},"text":{"70":{}},"component":{}}],["ellipsi",{"_index":525,"title":{},"name":{},"text":{"4":{}},"component":{}}],["ellipt",{"_index":1133,"title":{},"name":{},"text":{"9":{},"60":{},"62":{}},"component":{}}],["elm_ptr",{"_index":3624,"title":{},"name":{},"text":{"73":{}},"component":{}}],["elm_ptr=elm_ptr",{"_index":3630,"title":{},"name":{},"text":{"73":{}},"component":{}}],["elm_siz",{"_index":3622,"title":{},"name":{},"text":{"73":{}},"component":{}}],["embed",{"_index":2493,"title":{},"name":{},"text":{"42":{}},"component":{}}],["embed_v0",{"_index":1344,"title":{},"name":{},"text":{"12":{},"15":{}},"component":{}}],["emiss",{"_index":2163,"title":{},"name":{},"text":{"41":{},"65":{}},"component":{}}],["emit",{"_index":141,"title":{"38-8":{},"38-16":{},"38-24":{},"38-33":{},"38-41":{},"38-50":{},"38-59":{},"38-67":{},"38-76":{},"38-85":{},"38-93":{},"38-101":{},"38-109":{},"38-117":{},"38-125":{},"38-132":{},"67-7":{},"67-14":{},"67-57":{},"67-64":{},"84-1":{}},"name":{},"text":{"1":{},"30":{},"36":{},"38":{},"39":{},"42":{},"44":{},"59":{},"63":{},"65":{},"66":{},"67":{},"71":{},"77":{},"81":{},"84":{},"85":{}},"component":{}}],["emit_ev",{"_index":3871,"title":{"85-27":{}},"name":{},"text":{"84":{}},"component":{}}],["emit_event_syscal",{"_index":3875,"title":{},"name":{},"text":{"84":{},"85":{}},"component":{}}],["emitter_address",{"_index":3138,"title":{},"name":{},"text":{"63":{}},"component":{}}],["emphas",{"_index":2481,"title":{},"name":{},"text":{"42":{}},"component":{}}],["employ",{"_index":1143,"title":{},"name":{},"text":{"9":{}},"component":{}}],["empti",{"_index":1264,"title":{},"name":{},"text":{"10":{},"54":{},"70":{},"72":{},"83":{}},"component":{}}],["enabl",{"_index":298,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"16":{},"22":{},"25":{},"33":{},"34":{},"35":{},"38":{},"39":{},"41":{},"42":{},"44":{},"51":{},"52":{},"57":{},"59":{},"65":{},"66":{},"69":{},"72":{},"74":{},"76":{},"79":{},"85":{},"86":{},"91":{}},"component":{}}],["encapsul",{"_index":3721,"title":{},"name":{},"text":{"77":{}},"component":{}}],["enclos",{"_index":531,"title":{},"name":{},"text":{"4":{}},"component":{}}],["encod",{"_index":2270,"title":{},"name":{},"text":{"41":{},"44":{},"54":{},"64":{},"65":{},"66":{},"68":{},"70":{},"72":{},"75":{},"78":{},"80":{},"83":{},"84":{}},"component":{}}],["encompass",{"_index":969,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["encourag",{"_index":572,"title":{},"name":{},"text":{"5":{},"49":{}},"component":{}}],["encrypt",{"_index":1242,"title":{},"name":{},"text":{"10":{},"16":{},"20":{},"21":{}},"component":{}}],["end",{"_index":1452,"title":{},"name":{},"text":{"13":{},"14":{},"44":{},"65":{},"68":{},"69":{},"84":{},"90":{}},"component":{}}],["endian",{"_index":2741,"title":{},"name":{},"text":{"44":{},"66":{}},"component":{}}],["endors",{"_index":3680,"title":{},"name":{},"text":{"76":{}},"component":{}}],["endpoint",{"_index":868,"title":{"10-3":{}},"name":{},"text":{"7":{},"10":{},"41":{},"42":{},"44":{},"45":{}},"component":{}}],["endur",{"_index":1852,"title":{},"name":{},"text":{"29":{}},"component":{}}],["end{align",{"_index":1887,"title":{},"name":{},"text":{"29":{},"62":{},"65":{}},"component":{}}],["end{cas",{"_index":3068,"title":{},"name":{},"text":{"60":{},"70":{}},"component":{}}],["end{split",{"_index":3083,"title":{},"name":{},"text":{"62":{}},"component":{}}],["enforc",{"_index":259,"title":{},"name":{},"text":{"1":{},"37":{},"44":{},"54":{},"65":{},"68":{},"73":{},"75":{},"77":{}},"component":{}}],["engag",{"_index":662,"title":{},"name":{},"text":{"5":{}},"component":{}}],["engin",{"_index":3958,"title":{},"name":{},"text":{"87":{},"90":{}},"component":{}}],["enhanc",{"_index":908,"title":{"44-10":{},"44-19":{}},"name":{},"text":{"7":{},"8":{},"9":{},"22":{},"40":{},"41":{},"69":{},"74":{},"76":{}},"component":{}}],["enough",{"_index":1714,"title":{},"name":{},"text":{"20":{},"26":{},"36":{},"39":{},"40":{},"44":{},"65":{},"66":{},"68":{},"70":{},"73":{}},"component":{}}],["enrich",{"_index":2207,"title":{},"name":{},"text":{"41":{},"57":{}},"component":{}}],["enrol",{"_index":1936,"title":{},"name":{},"text":{"32":{},"37":{},"38":{}},"component":{}}],["enrolltokenbridg",{"_index":1937,"title":{"38-53":{}},"name":{},"text":{"32":{},"33":{},"38":{}},"component":{}}],["ensur",{"_index":93,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"9":{},"22":{},"23":{},"26":{},"27":{},"29":{},"31":{},"33":{},"35":{},"41":{},"59":{},"65":{},"69":{},"71":{},"73":{},"76":{},"78":{}},"component":{}}],["enter",{"_index":973,"title":{},"name":{"25":{}},"text":{"8":{},"10":{},"11":{},"16":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"33":{},"36":{},"40":{},"71":{}},"component":{}}],["enter_delegation_pool",{"_index":1774,"title":{},"name":{},"text":{"22":{},"24":{}},"component":{}}],["entir",{"_index":201,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"9":{},"22":{},"54":{},"69":{},"73":{},"85":{}},"component":{}}],["entiti",{"_index":78,"title":{},"name":{},"text":{"1":{},"2":{},"44":{},"66":{},"69":{}},"component":{}}],["entri",{"_index":348,"title":{"77-9":{}},"name":{},"text":{"2":{},"29":{},"44":{},"65":{},"68":{},"70":{},"75":{},"77":{},"79":{}},"component":{}}],["entro",{"_index":3971,"title":{"88-4":{}},"name":{},"text":{"88":{},"89":{}},"component":{}}],["entry/exit",{"_index":1891,"title":{},"name":{},"text":{"29":{}},"component":{}}],["entry_point_selector",{"_index":3362,"title":{},"name":{},"text":{"66":{},"72":{},"82":{},"85":{}},"component":{}}],["entry_point_typ",{"_index":2698,"title":{},"name":{},"text":{"44":{}},"component":{}}],["entrypoint",{"_index":2417,"title":{},"name":{},"text":{"42":{}},"component":{}}],["enum",{"_index":2620,"title":{"77-6":{},"77-7":{},"83-7":{}},"name":{},"text":{"44":{},"77":{},"81":{},"83":{}},"component":{}}],["enumer",{"_index":3289,"title":{},"name":{},"text":{"65":{}},"component":{}}],["enum’",{"_index":3849,"title":{},"name":{},"text":{"83":{}},"component":{}}],["env",{"_index":2448,"title":{},"name":{},"text":{"42":{}},"component":{}}],["environ",{"_index":50,"title":{"17":{},"10-2":{},"21-1":{}},"name":{"17":{}},"text":{"1":{},"3":{},"10":{},"11":{},"17":{},"19":{},"20":{},"42":{},"59":{},"91":{}},"component":{}}],["eoa",{"_index":2938,"title":{},"name":{},"text":{"55":{},"57":{}},"component":{}}],["ephemer",{"_index":2404,"title":{},"name":{},"text":{"42":{}},"component":{}}],["epoch",{"_index":1890,"title":{},"name":{},"text":{"29":{},"63":{},"82":{}},"component":{}}],["equal",{"_index":1838,"title":{},"name":{},"text":{"26":{},"28":{},"31":{},"65":{},"77":{}},"component":{}}],["equilibrium",{"_index":894,"title":{},"name":{},"text":{"7":{},"25":{},"45":{}},"component":{}}],["equip",{"_index":849,"title":{},"name":{},"text":{"7":{}},"component":{}}],["equiti",{"_index":638,"title":{},"name":{},"text":{"5":{}},"component":{}}],["equiv",{"_index":3075,"title":{},"name":{},"text":{"62":{}},"component":{}}],["equival",{"_index":3070,"title":{},"name":{},"text":{"60":{},"73":{}},"component":{}}],["erc",{"_index":1939,"title":{},"name":{},"text":{"33":{},"38":{},"39":{},"40":{},"44":{},"47":{},"57":{},"65":{},"77":{}},"component":{}}],["erc20",{"_index":1817,"title":{},"name":{},"text":{"25":{},"27":{}},"component":{}}],["err",{"_index":1526,"title":{},"name":{},"text":{"14":{},"85":{}},"component":{}}],["err.messag",{"_index":1527,"title":{},"name":{},"text":{"14":{}},"component":{}}],["error",{"_index":419,"title":{"85-7":{}},"name":{},"text":{"2":{},"5":{},"10":{},"14":{},"41":{},"42":{},"44":{},"87":{}},"component":{}}],["error_messag",{"_index":1262,"title":{},"name":{},"text":{"10":{}},"component":{}}],["esnext",{"_index":1365,"title":{},"name":{},"text":{"13":{}},"component":{}}],["especi",{"_index":2339,"title":{},"name":{},"text":{"42":{},"83":{}},"component":{}}],["essenc",{"_index":1167,"title":{},"name":{},"text":{"9":{},"69":{}},"component":{}}],["essenti",{"_index":631,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"13":{},"30":{},"76":{}},"component":{}}],["establish",{"_index":368,"title":{},"name":{},"text":{"2":{},"9":{},"69":{}},"component":{}}],["estim",{"_index":398,"title":{"37":{},"65-7":{}},"name":{"37":{}},"text":{"2":{},"5":{},"10":{},"20":{},"37":{},"38":{},"42":{},"44":{},"65":{},"66":{}},"component":{}}],["estimate_fe",{"_index":1181,"title":{"10-8":{}},"name":{},"text":{"10":{}},"component":{}}],["estimate_fee_bulk",{"_index":2692,"title":{},"name":{},"text":{"44":{}},"component":{}}],["estimate_message_fe",{"_index":1182,"title":{"10-9":{}},"name":{},"text":{"10":{}},"component":{}}],["estimatedepositfeewei",{"_index":2034,"title":{"38-61":{}},"name":{},"text":{"37":{},"38":{}},"component":{}}],["estimateenrollmentfeewei",{"_index":2035,"title":{"38-70":{}},"name":{},"text":{"37":{},"38":{}},"component":{}}],["etc",{"_index":695,"title":{},"name":{},"text":{"5":{},"10":{},"66":{},"87":{}},"component":{}}],["eth",{"_index":38,"title":{},"name":{},"text":{"1":{},"5":{},"16":{},"33":{},"36":{},"39":{},"41":{},"58":{},"65":{},"66":{}},"component":{}}],["eth/strk",{"_index":1319,"title":{},"name":{},"text":{"12":{}},"component":{}}],["eth_l1_gas_pric",{"_index":2625,"title":{},"name":{},"text":{"44":{}},"component":{}}],["ethaddress",{"_index":2080,"title":{},"name":{},"text":{"38":{},"66":{},"83":{}},"component":{}}],["ethaddresszeroable::zero",{"_index":2081,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ether",{"_index":612,"title":{},"name":{},"text":{"5":{},"33":{}},"component":{}}],["ethereum",{"_index":110,"title":{"57-1":{},"64-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"20":{},"33":{},"36":{},"38":{},"39":{},"40":{},"42":{},"44":{},"54":{},"55":{},"57":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"85":{},"91":{}},"component":{}}],["ethereumaddress",{"_index":3358,"title":{},"name":{},"text":{"66":{}},"component":{}}],["ethereum’",{"_index":212,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"55":{},"69":{},"71":{},"79":{},"85":{}},"component":{}}],["etherscan",{"_index":1957,"title":{},"name":{},"text":{"33":{},"36":{},"40":{},"67":{}},"component":{}}],["even",{"_index":998,"title":{},"name":{},"text":{"8":{},"35":{},"39":{},"54":{},"57":{},"65":{},"68":{},"69":{},"73":{}},"component":{}}],["event",{"_index":140,"title":{"30":{},"38":{},"67":{},"84":{},"30-1":{},"38-8":{},"38-9":{},"38-16":{},"38-17":{},"38-24":{},"38-25":{},"38-33":{},"38-34":{},"38-41":{},"38-42":{},"38-50":{},"38-51":{},"38-59":{},"38-60":{},"38-67":{},"38-76":{},"38-85":{},"38-93":{},"38-101":{},"38-109":{},"38-117":{},"38-125":{},"38-132":{},"38-133":{},"44-28":{},"59-10":{},"63-3":{},"63-4":{},"67-7":{},"67-14":{},"67-57":{},"67-64":{},"67-66":{},"67-69":{},"67-70":{},"67-73":{},"67-74":{},"67-77":{},"67-78":{},"67-81":{},"67-82":{},"77-4":{},"77-6":{},"77-10":{},"84-1":{},"84-2":{},"84-3":{}},"name":{"30":{},"84":{}},"text":{"1":{},"30":{},"36":{},"38":{},"39":{},"41":{},"42":{},"44":{},"59":{},"63":{},"64":{},"65":{},"66":{},"67":{},"71":{},"77":{},"81":{},"84":{},"85":{},"88":{}},"component":{}}],["event::counterincreas",{"_index":3798,"title":{},"name":{},"text":{"81":{}},"component":{}}],["event::testenum",{"_index":3734,"title":{},"name":{},"text":{"77":{}},"component":{}}],["event\\_nam",{"_index":3870,"title":{},"name":{},"text":{"84":{}},"component":{}}],["event_commit",{"_index":3887,"title":{},"name":{},"text":{"84":{}},"component":{}}],["event_count",{"_index":3099,"title":{},"name":{},"text":{"63":{}},"component":{}}],["events_commit",{"_index":3095,"title":{},"name":{},"text":{"63":{}},"component":{}}],["events_count",{"_index":3091,"title":{},"name":{},"text":{"63":{}},"component":{}}],["eventu",{"_index":1868,"title":{},"name":{},"text":{"29":{},"54":{},"60":{},"65":{},"73":{}},"component":{}}],["event’",{"_index":2683,"title":{},"name":{},"text":{"44":{},"77":{},"84":{},"85":{}},"component":{}}],["everyon",{"_index":957,"title":{},"name":{},"text":{"8":{}},"component":{}}],["everyth",{"_index":350,"title":{},"name":{},"text":{"2":{},"79":{}},"component":{}}],["evolv",{"_index":927,"title":{},"name":{},"text":{"8":{},"29":{},"42":{},"48":{},"81":{}},"component":{}}],["exact",{"_index":2397,"title":{},"name":{},"text":{"42":{},"65":{}},"component":{}}],["exactli",{"_index":1254,"title":{},"name":{},"text":{"10":{},"35":{},"38":{},"54":{},"68":{},"83":{}},"component":{}}],["examin",{"_index":3826,"title":{},"name":{},"text":{"83":{}},"component":{}}],["exampl",{"_index":518,"title":{"11-2":{},"33-3":{},"57-3":{},"64-5":{},"64-8":{},"70-9":{},"77-2":{},"85-14":{},"85-33":{},"85-46":{},"85-59":{},"85-71":{}},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"18":{},"25":{},"28":{},"34":{},"36":{},"38":{},"40":{},"44":{},"54":{},"57":{},"59":{},"64":{},"65":{},"66":{},"68":{},"70":{},"71":{},"72":{},"73":{},"77":{},"79":{},"80":{},"81":{},"83":{},"84":{},"85":{},"88":{},"91":{}},"component":{}}],["exce",{"_index":3158,"title":{},"name":{},"text":{"64":{},"71":{}},"component":{}}],["excel",{"_index":896,"title":{},"name":{},"text":{"7":{},"69":{}},"component":{}}],["except",{"_index":3883,"title":{},"name":{},"text":{"84":{}},"component":{}}],["excess_blob_ga",{"_index":3261,"title":{},"name":{},"text":{"65":{}},"component":{}}],["exchang",{"_index":2000,"title":{},"name":{},"text":{"34":{},"66":{}},"component":{}}],["exclud",{"_index":718,"title":{},"name":{},"text":{"5":{},"42":{}},"component":{}}],["execut",{"_index":126,"title":{"82":{}},"name":{"82":{}},"text":{"1":{},"2":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"23":{},"24":{},"27":{},"31":{},"34":{},"38":{},"41":{},"42":{},"44":{},"54":{},"55":{},"56":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"82":{},"84":{},"85":{},"87":{}},"component":{}}],["execute_entry_point",{"_index":3406,"title":{},"name":{},"text":{"68":{}},"component":{}}],["execute_transactions.cairo",{"_index":3407,"title":{},"name":{},"text":{"68":{}},"component":{}}],["execution_info",{"_index":3903,"title":{},"name":{},"text":{"85":{}},"component":{}}],["execution_info.block_info.unbox",{"_index":3904,"title":{},"name":{},"text":{"85":{}},"component":{}}],["execution_resourc",{"_index":2574,"title":{},"name":{},"text":{"44":{},"71":{}},"component":{}}],["execution_statu",{"_index":3538,"title":{},"name":{},"text":{"71":{}},"component":{}}],["executioninfo",{"_index":3799,"title":{"82-1":{}},"name":{},"text":{"82":{},"85":{}},"component":{}}],["exhibit",{"_index":2338,"title":{},"name":{},"text":{"42":{}},"component":{}}],["exist",{"_index":371,"title":{},"name":{},"text":{"2":{},"5":{},"22":{},"23":{},"27":{},"28":{},"31":{},"33":{},"38":{},"41":{},"42":{},"44":{},"48":{},"49":{},"54":{},"56":{},"65":{},"68":{},"70":{},"72":{},"73":{},"79":{}},"component":{}}],["exit",{"_index":1288,"title":{"26":{}},"name":{"26":{}},"text":{"11":{},"22":{},"26":{},"29":{},"30":{},"41":{}},"component":{}}],["exit_delegation_pool_act",{"_index":1782,"title":{},"name":{},"text":{"22":{},"26":{}},"component":{}}],["exit_delegation_pool_int",{"_index":1780,"title":{},"name":{},"text":{"22":{},"26":{}},"component":{}}],["expand",{"_index":2151,"title":{},"name":{},"text":{"41":{},"70":{}},"component":{}}],["expans",{"_index":3500,"title":{},"name":{},"text":{"70":{}},"component":{}}],["expect",{"_index":905,"title":{},"name":{},"text":{"7":{},"10":{},"29":{},"41":{},"42":{},"44":{},"54":{},"64":{},"85":{}},"component":{}}],["expens",{"_index":322,"title":{},"name":{},"text":{"2":{},"74":{}},"component":{}}],["experi",{"_index":884,"title":{},"name":{},"text":{"7":{},"41":{},"53":{},"55":{},"57":{},"87":{},"91":{}},"component":{}}],["experiment",{"_index":2348,"title":{},"name":{},"text":{"42":{},"44":{}},"component":{}}],["expir",{"_index":1836,"title":{},"name":{},"text":{"26":{}},"component":{}}],["explain",{"_index":1324,"title":{},"name":{},"text":{"12":{},"45":{},"80":{}},"component":{}}],["explan",{"_index":490,"title":{},"name":{},"text":{"4":{},"64":{},"71":{}},"component":{}}],["explicitli",{"_index":1259,"title":{},"name":{},"text":{"10":{},"44":{},"54":{},"85":{}},"component":{}}],["explor",{"_index":468,"title":{"52":{},"3-1":{}},"name":{"52":{}},"text":{"3":{},"7":{},"8":{},"18":{},"20":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"36":{},"38":{},"40":{},"52":{},"53":{},"67":{}},"component":{}}],["exponenti",{"_index":941,"title":{},"name":{},"text":{"8":{}},"component":{}}],["export",{"_index":1195,"title":{},"name":{},"text":{"10":{},"13":{},"14":{},"16":{},"20":{},"21":{}},"component":{}}],["expos",{"_index":1998,"title":{},"name":{},"text":{"33":{},"41":{},"42":{},"59":{},"85":{}},"component":{}}],["express",{"_index":346,"title":{},"name":{},"text":{"2":{},"5":{},"28":{},"44":{},"68":{}},"component":{}}],["extend",{"_index":2224,"title":{},"name":{},"text":{"41":{},"55":{}},"component":{}}],["extens",{"_index":1352,"title":{"87-2":{}},"name":{},"text":{"13":{},"42":{},"44":{},"87":{},"89":{}},"component":{}}],["extent",{"_index":841,"title":{},"name":{},"text":{"5":{}},"component":{}}],["extern",{"_index":1009,"title":{},"name":{},"text":{"8":{},"14":{},"38":{},"44":{},"54":{},"55":{},"57":{},"70":{},"75":{},"77":{},"81":{},"85":{}},"component":{}}],["external_entry_point",{"_index":3667,"title":{},"name":{},"text":{"75":{}},"component":{}}],["extra",{"_index":3807,"title":{},"name":{},"text":{"82":{}},"component":{}}],["extract",{"_index":3153,"title":{"64-9":{}},"name":{},"text":{"64":{}},"component":{}}],["extrem",{"_index":3156,"title":{},"name":{},"text":{"64":{},"90":{}},"component":{}}],["extropi",{"_index":2788,"title":{},"name":{},"text":{"46":{}},"component":{}}],["f",{"_index":3215,"title":{},"name":{},"text":{"65":{}},"component":{}}],["f[1600",{"_index":3655,"title":{},"name":{},"text":{"74":{}},"component":{}}],["facial",{"_index":2960,"title":{},"name":{},"text":{"57":{}},"component":{}}],["facilit",{"_index":563,"title":{},"name":{},"text":{"5":{},"9":{},"22":{},"30":{},"38":{},"59":{}},"component":{}}],["fact",{"_index":394,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"39":{},"65":{},"68":{},"73":{}},"component":{}}],["factor",{"_index":834,"title":{},"name":{},"text":{"5":{},"8":{},"44":{},"65":{}},"component":{}}],["factori",{"_index":2969,"title":{},"name":{},"text":{"59":{}},"component":{}}],["fail",{"_index":385,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"21":{},"23":{},"26":{},"27":{},"31":{},"34":{},"38":{},"39":{},"42":{},"44":{},"54":{},"71":{},"73":{},"74":{},"85":{}},"component":{}}],["failur",{"_index":1717,"title":{},"name":{},"text":{"20":{},"41":{},"54":{},"71":{},"73":{}},"component":{}}],["fair",{"_index":601,"title":{},"name":{},"text":{"5":{},"65":{}},"component":{}}],["fairli",{"_index":1787,"title":{},"name":{},"text":{"22":{}},"component":{}}],["fake",{"_index":2715,"title":{},"name":{},"text":{"44":{}},"component":{}}],["fall",{"_index":2559,"title":{},"name":{},"text":{"44":{}},"component":{}}],["fallback",{"_index":2160,"title":{},"name":{},"text":{"41":{}},"component":{}}],["fals",{"_index":1447,"title":{},"name":{},"text":{"13":{},"25":{},"34":{},"38":{},"41":{},"42":{},"59":{},"85":{}},"component":{}}],["famili",{"_index":3034,"title":{},"name":{},"text":{"60":{}},"component":{}}],["familiar",{"_index":812,"title":{},"name":{},"text":{"5":{}},"component":{}}],["faq",{"_index":2454,"title":{},"name":{},"text":{"42":{},"45":{}},"component":{}}],["far",{"_index":2641,"title":{},"name":{},"text":{"44":{}},"component":{}}],["fashion",{"_index":2415,"title":{},"name":{},"text":{"42":{}},"component":{}}],["fast",{"_index":1583,"title":{},"name":{},"text":{"16":{},"42":{},"64":{},"88":{},"90":{}},"component":{}}],["fast_pedersen_hash.pi",{"_index":3032,"title":{},"name":{},"text":{"60":{}},"component":{}}],["faster",{"_index":857,"title":{},"name":{},"text":{"7":{},"8":{},"41":{},"44":{},"69":{}},"component":{}}],["faucet",{"_index":1320,"title":{},"name":{},"text":{"12":{},"20":{}},"component":{}}],["favicon.ico",{"_index":1393,"title":{},"name":{},"text":{"13":{}},"component":{}}],["favor",{"_index":2482,"title":{},"name":{},"text":{"42":{}},"component":{}}],["feasibl",{"_index":1855,"title":{},"name":{},"text":{"29":{}},"component":{}}],["featur",{"_index":16,"title":{"1-9":{},"1-10":{},"44-10":{},"44-19":{}},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"29":{},"41":{},"42":{},"44":{},"48":{},"49":{},"53":{},"68":{},"77":{},"90":{},"91":{}},"component":{}}],["feb",{"_index":2533,"title":{},"name":{},"text":{"44":{}},"component":{}}],["fee",{"_index":6,"title":{"37":{},"65":{},"1-4":{},"65-2":{},"65-3":{},"65-4":{},"65-7":{},"65-8":{},"65-11":{},"65-12":{},"66-6":{}},"name":{"37":{},"65":{}},"text":{"1":{},"2":{},"5":{},"8":{},"10":{},"12":{},"20":{},"36":{},"37":{},"38":{},"40":{},"42":{},"44":{},"54":{},"56":{},"57":{},"58":{},"63":{},"65":{},"66":{},"67":{},"71":{},"72":{},"73":{},"82":{}},"component":{}}],["fee_data_availability_mod",{"_index":3555,"title":{},"name":{},"text":{"72":{},"82":{}},"component":{}}],["fee_estim",{"_index":2629,"title":{},"name":{},"text":{"44":{}},"component":{}}],["feedback",{"_index":971,"title":{},"name":{},"text":{"8":{},"44":{}},"component":{}}],["feeder",{"_index":230,"title":{"44-12":{}},"name":{},"text":{"1":{},"10":{},"41":{},"42":{},"44":{},"69":{}},"component":{}}],["feeder_gateway_url",{"_index":1198,"title":{},"name":{},"text":{"10":{}},"component":{}}],["feeds/starknet",{"_index":2873,"title":{},"name":{},"text":{"51":{}},"component":{}}],["feeds/us",{"_index":2878,"title":{},"name":{},"text":{"51":{}},"component":{}}],["feel",{"_index":1700,"title":{},"name":{},"text":{"19":{},"68":{}},"component":{}}],["feetoken",{"_index":1589,"title":{},"name":{},"text":{"16":{}},"component":{}}],["felt",{"_index":145,"title":{},"name":{},"text":{"1":{},"42":{},"44":{},"61":{},"65":{},"72":{},"73":{},"74":{},"80":{},"83":{},"84":{},"85":{},"87":{}},"component":{}}],["felt252",{"_index":1564,"title":{},"name":{},"text":{"15":{},"38":{},"59":{},"61":{},"63":{},"66":{},"77":{},"80":{},"82":{},"83":{},"85":{}},"component":{}}],["fetch",{"_index":1492,"title":{"16-3":{},"21-6":{}},"name":{},"text":{"14":{},"16":{},"20":{},"21":{},"41":{},"87":{},"88":{}},"component":{}}],["few",{"_index":623,"title":{},"name":{},"text":{"5":{},"15":{},"42":{},"44":{},"54":{},"68":{}},"component":{}}],["fewer",{"_index":3647,"title":{},"name":{},"text":{"74":{}},"component":{}}],["fft",{"_index":3161,"title":{},"name":{},"text":{"64":{}},"component":{}}],["fibrou",{"_index":2861,"title":{},"name":{},"text":{"49":{}},"component":{}}],["field",{"_index":1002,"title":{"61":{},"72-3":{},"72-5":{},"72-9":{},"72-11":{},"72-13":{},"72-17":{},"72-19":{}},"name":{},"text":{"8":{},"10":{},"11":{},"41":{},"42":{},"44":{},"54":{},"60":{},"61":{},"63":{},"65":{},"70":{},"71":{},"72":{},"74":{},"75":{},"77":{},"80":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["fieldel",{"_index":3359,"title":{},"name":{},"text":{"66":{},"72":{}},"component":{}}],["fifth",{"_index":1688,"title":{},"name":{},"text":{"18":{},"25":{}},"component":{}}],["figur",{"_index":715,"title":{},"name":{},"text":{"5":{},"9":{},"66":{},"70":{}},"component":{}}],["file",{"_index":72,"title":{"11-5":{},"42-66":{}},"name":{},"text":{"1":{},"4":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"20":{},"21":{},"30":{},"39":{},"42":{},"44":{},"47":{},"77":{},"87":{}},"component":{}}],["file#hardwar",{"_index":1812,"title":{},"name":{},"text":{"25":{}},"component":{}}],["filenam",{"_index":2484,"title":{},"name":{},"text":{"42":{}},"component":{}}],["file’",{"_index":2734,"title":{},"name":{},"text":{"44":{}},"component":{}}],["fill",{"_index":2103,"title":{},"name":{},"text":{"39":{},"54":{},"65":{},"83":{}},"component":{}}],["filter",{"_index":1291,"title":{},"name":{},"text":{"11":{},"42":{},"85":{}},"component":{}}],["final",{"_index":621,"title":{},"name":{},"text":{"5":{},"14":{},"18":{},"20":{},"22":{},"26":{},"39":{},"42":{},"44":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"77":{},"80":{}},"component":{}}],["finality_statu",{"_index":3537,"title":{},"name":{},"text":{"71":{}},"component":{}}],["financi",{"_index":824,"title":{},"name":{},"text":{"5":{}},"component":{}}],["find",{"_index":1495,"title":{},"name":{},"text":{"14":{},"21":{},"50":{},"64":{},"73":{},"77":{},"91":{}},"component":{}}],["find_el",{"_index":3619,"title":{},"name":{},"text":{"73":{}},"component":{}}],["find_element{range_check_ptr",{"_index":3620,"title":{},"name":{},"text":{"73":{}},"component":{}}],["fine",{"_index":3639,"title":{},"name":{},"text":{"73":{}},"component":{}}],["fingerprint",{"_index":3682,"title":{},"name":{},"text":{"76":{}},"component":{}}],["finish",{"_index":1616,"title":{},"name":{},"text":{"16":{},"85":{}},"component":{}}],["finit",{"_index":1295,"title":{},"name":{},"text":{"11":{},"61":{}},"component":{}}],["first",{"_index":502,"title":{"29-4":{}},"name":{},"text":{"4":{},"8":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"38":{},"41":{},"42":{},"44":{},"57":{},"60":{},"63":{},"64":{},"65":{},"66":{},"68":{},"72":{},"77":{},"80":{},"83":{},"85":{}},"component":{}}],["first_v0_12_0_block",{"_index":3900,"title":{},"name":{},"text":{"85":{}},"component":{}}],["fit",{"_index":977,"title":{},"name":{},"text":{"8":{},"9":{},"44":{},"60":{},"65":{},"71":{}},"component":{}}],["five",{"_index":2018,"title":{},"name":{},"text":{"35":{},"38":{},"65":{},"66":{}},"component":{}}],["fix",{"_index":513,"title":{"41-4":{},"41-9":{},"41-14":{},"41-22":{},"41-26":{},"41-33":{},"41-37":{},"41-39":{},"41-45":{},"42-2":{},"42-4":{},"42-7":{},"42-9":{},"42-13":{},"42-16":{},"42-18":{},"42-24":{},"42-25":{},"42-28":{},"42-31":{},"42-34":{},"42-36":{},"42-41":{},"42-48":{},"42-52":{},"42-56":{},"42-60":{},"42-68":{}},"name":{},"text":{"4":{},"5":{},"8":{},"41":{},"42":{},"44":{},"57":{},"65":{},"66":{},"70":{},"82":{},"87":{}},"component":{}}],["flag",{"_index":1747,"title":{},"name":{},"text":{"21":{},"41":{},"42":{},"44":{},"64":{},"65":{},"85":{}},"component":{}}],["flag}}_{\\text{1",{"_index":3169,"title":{},"name":{},"text":{"64":{}},"component":{}}],["flame",{"_index":3962,"title":{},"name":{},"text":{"87":{}},"component":{}}],["flat",{"_index":3719,"title":{},"name":{},"text":{"77":{}},"component":{}}],["flatten",{"_index":3689,"title":{"77-7":{}},"name":{},"text":{},"component":{}}],["flexibl",{"_index":924,"title":{},"name":{},"text":{"8":{},"22":{},"55":{},"57":{},"69":{},"73":{},"77":{}},"component":{}}],["flood",{"_index":3464,"title":{},"name":{},"text":{"69":{}},"component":{}}],["flow",{"_index":334,"title":{"58":{},"9-7":{},"69-1":{},"71-1":{}},"name":{"58":{}},"text":{"2":{},"38":{},"66":{},"69":{},"71":{},"73":{},"87":{}},"component":{}}],["fn",{"_index":1329,"title":{},"name":{},"text":{"12":{},"15":{},"59":{},"77":{},"81":{},"84":{},"85":{}},"component":{}}],["focu",{"_index":2222,"title":{},"name":{},"text":{"41":{},"42":{},"77":{},"91":{}},"component":{}}],["focus",{"_index":901,"title":{},"name":{},"text":{"7":{},"9":{}},"component":{}}],["focustre",{"_index":3982,"title":{},"name":{},"text":{"88":{}},"component":{}}],["follow",{"_index":58,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"9":{},"10":{},"11":{},"12":{},"13":{},"15":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"47":{},"48":{},"49":{},"52":{},"54":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["font",{"_index":515,"title":{},"name":{},"text":{"4":{}},"component":{}}],["fontfamili",{"_index":1420,"title":{},"name":{},"text":{"13":{}},"component":{}}],["fontsiz",{"_index":1418,"title":{},"name":{},"text":{"13":{}},"component":{}}],["fontweight",{"_index":1422,"title":{},"name":{},"text":{"13":{}},"component":{}}],["foo",{"_index":2713,"title":{},"name":{},"text":{"44":{}},"component":{}}],["foo.return.s",{"_index":2742,"title":{},"name":{},"text":{"44":{}},"component":{}}],["forbid",{"_index":597,"title":{},"name":{},"text":{"5":{},"44":{}},"component":{}}],["forc",{"_index":1587,"title":{},"name":{},"text":{"16":{}},"component":{}}],["forev",{"_index":3353,"title":{},"name":{},"text":{"66":{}},"component":{}}],["fork",{"_index":3995,"title":{},"name":{},"text":{"90":{},"91":{}},"component":{}}],["form",{"_index":818,"title":{},"name":{},"text":{"5":{},"66":{},"68":{}},"component":{}}],["formal",{"_index":2466,"title":{},"name":{},"text":{"42":{}},"component":{}}],["format",{"_index":305,"title":{"64-4":{},"64-7":{}},"name":{},"text":{"2":{},"42":{},"44":{},"45":{},"64":{},"77":{},"87":{}},"component":{}}],["formattxr",{"_index":1521,"title":{},"name":{},"text":{"14":{}},"component":{}}],["former",{"_index":1220,"title":{},"name":{},"text":{"10":{}},"component":{}}],["formul",{"_index":3277,"title":{},"name":{},"text":{"65":{},"73":{},"83":{}},"component":{}}],["formula",{"_index":1793,"title":{},"name":{},"text":{"22":{},"29":{},"65":{}},"component":{}}],["forum",{"_index":253,"title":{},"name":{},"text":{"1":{},"44":{},"57":{},"64":{},"65":{},"81":{}},"component":{}}],["forward",{"_index":541,"title":{"64-2":{},"64-3":{}},"name":{},"text":{"4":{},"9":{},"68":{}},"component":{}}],["found",{"_index":2082,"title":{},"name":{},"text":{"38":{},"42":{},"44":{},"60":{},"68":{},"77":{}},"component":{}}],["foundat",{"_index":369,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"33":{}},"component":{}}],["foundation’",{"_index":685,"title":{},"name":{},"text":{"5":{}},"component":{}}],["foundri",{"_index":1556,"title":{"17-3":{},"91-1":{}},"name":{},"text":{"15":{},"17":{},"48":{},"86":{},"87":{},"88":{},"89":{},"91":{}},"component":{}}],["foundry’",{"_index":1675,"title":{},"name":{},"text":{"17":{}},"component":{}}],["four",{"_index":1660,"title":{},"name":{},"text":{"17":{},"44":{},"83":{}},"component":{}}],["fourier",{"_index":3159,"title":{},"name":{},"text":{"64":{}},"component":{}}],["fourth",{"_index":1703,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["frac{c}{10",{"_index":1870,"title":{},"name":{},"text":{"29":{}},"component":{}}],["frac{m}{",{"_index":1884,"title":{},"name":{},"text":{"29":{}},"component":{}}],["framework",{"_index":1313,"title":{},"name":{},"text":{"12":{},"17":{},"44":{}},"component":{}}],["fraud",{"_index":861,"title":{},"name":{},"text":{"7":{}},"component":{}}],["fraudul",{"_index":876,"title":{},"name":{},"text":{"7":{},"39":{}},"component":{}}],["frax",{"_index":1977,"title":{},"name":{},"text":{"33":{}},"component":{}}],["free",{"_index":255,"title":{},"name":{},"text":{"1":{},"5":{}},"component":{}}],["freedom",{"_index":3635,"title":{},"name":{},"text":{"73":{}},"component":{}}],["frequent",{"_index":3478,"title":{},"name":{},"text":{"69":{}},"component":{}}],["fresh",{"_index":3686,"title":{},"name":{},"text":{"76":{}},"component":{}}],["fri",{"_index":278,"title":{"2-10":{}},"name":{},"text":{"2":{},"8":{},"9":{},"44":{},"63":{},"72":{}},"component":{}}],["friendli",{"_index":887,"title":{},"name":{},"text":{"7":{},"60":{},"72":{},"73":{},"77":{}},"component":{}}],["friendship",{"_index":1702,"title":{},"name":{},"text":{"19":{}},"component":{}}],["fristat",{"_index":1176,"title":{},"name":{},"text":{"9":{}},"component":{}}],["fristatementcontract",{"_index":1036,"title":{},"name":{},"text":{"9":{}},"component":{}}],["from1",{"_index":3146,"title":{},"name":{},"text":{"63":{}},"component":{}}],["from\\_address",{"_index":3884,"title":{},"name":{},"text":{"84":{}},"component":{}}],["from_address",{"_index":1249,"title":{},"name":{},"text":{"10":{},"42":{},"66":{},"71":{},"84":{}},"component":{}}],["from_block=\"latest",{"_index":2468,"title":{},"name":{},"text":{"42":{}},"component":{}}],["fromaddress",{"_index":3342,"title":{},"name":{},"text":{"66":{},"67":{}},"component":{}}],["fromn",{"_index":3149,"title":{},"name":{},"text":{"63":{}},"component":{}}],["frontend",{"_index":2895,"title":{},"name":{},"text":{"53":{}},"component":{}}],["full",{"_index":214,"title":{"45":{},"2-11":{}},"name":{},"text":{"1":{},"2":{},"7":{},"11":{},"17":{},"22":{},"25":{},"29":{},"41":{},"42":{},"45":{},"48":{},"64":{},"65":{},"66":{},"68":{},"77":{},"83":{},"87":{}},"component":{}}],["full_output",{"_index":2570,"title":{},"name":{},"text":{"44":{}},"component":{}}],["fullest",{"_index":840,"title":{},"name":{},"text":{"5":{}},"component":{}}],["fulli",{"_index":1858,"title":{},"name":{},"text":{"29":{},"41":{},"66":{},"69":{}},"component":{}}],["fullstack",{"_index":1536,"title":{},"name":{},"text":{"14":{}},"component":{}}],["func",{"_index":2712,"title":{},"name":{},"text":{"44":{},"73":{},"84":{}},"component":{}}],["function",{"_index":151,"title":{"30":{},"38":{},"54":{},"60":{},"67":{},"7-2":{},"30-2":{},"38-1":{},"38-9":{},"38-17":{},"38-25":{},"38-34":{},"38-42":{},"38-51":{},"38-60":{},"38-68":{},"38-77":{},"38-86":{},"38-94":{},"38-102":{},"38-110":{},"38-118":{},"38-126":{},"38-133":{},"38-134":{},"38-139":{},"38-144":{},"38-149":{},"38-154":{},"38-159":{},"38-164":{},"38-169":{},"38-174":{},"39-4":{},"55-1":{},"57-3":{},"67-1":{},"67-8":{},"67-15":{},"67-21":{},"67-27":{},"67-33":{},"67-39":{},"67-45":{},"67-51":{},"67-58":{},"67-65":{},"80-2":{},"85-2":{},"85-9":{},"85-16":{},"85-22":{},"85-28":{},"85-35":{},"85-41":{},"85-48":{},"85-54":{},"85-61":{},"85-66":{}},"name":{"30":{},"38":{},"54":{},"60":{}},"text":{"1":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"42":{},"44":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"63":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{}},"component":{}}],["function_idx",{"_index":3661,"title":{},"name":{},"text":{"75":{}},"component":{}}],["function_nam",{"_index":1212,"title":{},"name":{},"text":{"10":{}},"component":{}}],["function_selector",{"_index":3911,"title":{},"name":{},"text":{"85":{}},"component":{}}],["functionnam",{"_index":1477,"title":{},"name":{},"text":{"14":{}},"component":{}}],["functions.adoc#array_hash",{"_index":3889,"title":{},"name":{},"text":{"84":{}},"component":{}}],["function’",{"_index":2007,"title":{},"name":{},"text":{"34":{},"44":{},"54":{},"85":{}},"component":{}}],["fund",{"_index":682,"title":{"36":{},"40":{},"39-10":{}},"name":{},"text":{"5":{},"20":{},"22":{},"29":{},"31":{},"33":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"44":{},"54":{},"72":{},"90":{}},"component":{}}],["fundament",{"_index":165,"title":{},"name":{},"text":{"1":{},"5":{},"7":{}},"component":{}}],["further",{"_index":657,"title":{},"name":{},"text":{"5":{},"22":{},"68":{},"73":{},"77":{}},"component":{}}],["furthermor",{"_index":3634,"title":{},"name":{},"text":{"73":{}},"component":{}}],["futur",{"_index":189,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"9":{},"10":{},"25":{},"29":{},"30":{},"42":{},"44":{},"55":{},"57":{},"59":{},"63":{},"65":{},"68":{},"69":{},"70":{},"72":{},"73":{},"85":{},"90":{}},"component":{}}],["fuzzinglab",{"_index":3964,"title":{},"name":{},"text":{"87":{}},"component":{}}],["fx",{"_index":1978,"title":{},"name":{},"text":{"33":{}},"component":{}}],["g=\\left",{"_index":3588,"title":{},"name":{},"text":{"72":{}},"component":{}}],["g_x",{"_index":3589,"title":{},"name":{},"text":{"72":{}},"component":{}}],["g_x=874739451078007766457464989774322083649278607533249481151382481072868806602",{"_index":3591,"title":{},"name":{},"text":{"72":{}},"component":{}}],["g_y=152666792071518830868575557812948353041420400780739481342941381225525861407",{"_index":3592,"title":{},"name":{},"text":{"72":{}},"component":{}}],["g_y\\right",{"_index":3590,"title":{},"name":{},"text":{"72":{}},"component":{}}],["ga",{"_index":100,"title":{"65-13":{}},"name":{},"text":{"1":{},"5":{},"42":{},"44":{},"58":{},"63":{},"65":{},"66":{},"72":{},"73":{},"91":{}},"component":{}}],["game",{"_index":3957,"title":{},"name":{},"text":{"87":{},"90":{}},"component":{}}],["gap",{"_index":3602,"title":{},"name":{},"text":{"73":{}},"component":{}}],["gas/appl",{"_index":3291,"title":{},"name":{},"text":{"65":{}},"component":{}}],["gas/charact",{"_index":2607,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["gas/felt",{"_index":2605,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["gas/step",{"_index":2643,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["gas\\_pric",{"_index":3216,"title":{},"name":{},"text":{"65":{}},"component":{}}],["gas\\_price\\cdot&\\bigg",{"_index":3247,"title":{},"name":{},"text":{"65":{}},"component":{}}],["gas_consum",{"_index":2633,"title":{},"name":{},"text":{"44":{}},"component":{}}],["gas_pric",{"_index":2634,"title":{},"name":{},"text":{"44":{}},"component":{}}],["gasbuiltin",{"_index":3898,"title":{},"name":{},"text":{"85":{}},"component":{}}],["gateway",{"_index":231,"title":{"42-65":{},"44-12":{}},"name":{},"text":{"1":{},"8":{},"10":{},"41":{},"42":{},"44":{},"69":{},"71":{}},"component":{}}],["gateway_url",{"_index":1199,"title":{},"name":{},"text":{"10":{}},"component":{}}],["gateway’",{"_index":2367,"title":{},"name":{},"text":{"42":{}},"component":{}}],["gather",{"_index":3790,"title":{},"name":{},"text":{"81":{}},"component":{}}],["gener",{"_index":134,"title":{"15-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"8":{},"9":{},"10":{},"11":{},"14":{},"15":{},"44":{},"59":{},"62":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"73":{},"75":{},"77":{},"80":{},"81":{},"87":{},"88":{},"90":{}},"component":{}}],["genesi",{"_index":2452,"title":{},"name":{},"text":{"42":{}},"component":{}}],["get",{"_index":2438,"title":{},"name":{},"text":{"42":{},"45":{},"68":{},"76":{},"80":{},"85":{},"88":{},"91":{}},"component":{}}],["get_bal",{"_index":1565,"title":{},"name":{},"text":{"15":{},"16":{},"20":{}},"component":{}}],["get_block",{"_index":1183,"title":{"10-10":{}},"name":{},"text":{"10":{},"44":{}},"component":{}}],["get_block_hash",{"_index":2668,"title":{"85-1":{}},"name":{},"text":{"44":{},"54":{},"56":{},"70":{}},"component":{}}],["get_block_hash_syscal",{"_index":3895,"title":{},"name":{},"text":{"85":{}},"component":{}}],["get_block_trac",{"_index":2578,"title":{},"name":{},"text":{"44":{}},"component":{}}],["get_caller_address",{"_index":2903,"title":{},"name":{},"text":{"54":{},"59":{},"66":{}},"component":{}}],["get_class_by_hash",{"_index":2729,"title":{},"name":{},"text":{"44":{}},"component":{}}],["get_class_hash_at",{"_index":2730,"title":{},"name":{},"text":{"44":{}},"component":{}}],["get_cod",{"_index":1184,"title":{"10-11":{}},"name":{},"text":{"10":{}},"component":{}}],["get_contract_address",{"_index":3915,"title":{},"name":{},"text":{"85":{}},"component":{}}],["get_count",{"_index":1335,"title":{},"name":{},"text":{"12":{},"14":{},"77":{},"81":{}},"component":{}}],["get_decim",{"_index":3711,"title":{},"name":{},"text":{"77":{}},"component":{}}],["get_erc20_class_hash",{"_index":2042,"title":{"38-135":{}},"name":{},"text":{"38":{}},"component":{}}],["get_execution_info",{"_index":2666,"title":{"85-8":{}},"name":{},"text":{"44":{},"54":{},"56":{},"68":{},"82":{},"85":{}},"component":{}}],["get_execution_info_syscal",{"_index":3902,"title":{},"name":{},"text":{"85":{}},"component":{}}],["get_ident",{"_index":2043,"title":{"38-140":{}},"name":{},"text":{"38":{}},"component":{}}],["get_l1_token",{"_index":2044,"title":{"38-145":{}},"name":{},"text":{"38":{}},"component":{}}],["get_l2_token",{"_index":2045,"title":{"38-150":{}},"name":{},"text":{"38":{}},"component":{}}],["get_nam",{"_index":3709,"title":{},"name":{},"text":{"77":{}},"component":{}}],["get_remaining_withdrawal_quota",{"_index":2046,"title":{"38-155":{}},"name":{},"text":{"38":{}},"component":{}}],["get_sequencer_address",{"_index":2669,"title":{},"name":{},"text":{"44":{},"54":{},"56":{}},"component":{}}],["get_state_upd",{"_index":2672,"title":{},"name":{},"text":{"44":{}},"component":{}}],["get_storage_at",{"_index":1185,"title":{"10-12":{}},"name":{},"text":{"10":{}},"component":{}}],["get_symbol",{"_index":3710,"title":{},"name":{},"text":{"77":{}},"component":{}}],["get_total_stak",{"_index":1928,"title":{},"name":{},"text":{"30":{}},"component":{}}],["get_total_suppli",{"_index":3712,"title":{},"name":{},"text":{"77":{}},"component":{}}],["get_transact",{"_index":1186,"title":{"10-13":{}},"name":{},"text":{"10":{}},"component":{}}],["get_transaction_receipt",{"_index":1187,"title":{"10-14":{}},"name":{},"text":{"10":{}},"component":{}}],["get_transaction_trac",{"_index":2579,"title":{},"name":{},"text":{"44":{}},"component":{}}],["get_tx_info",{"_index":2907,"title":{},"name":{},"text":{"54":{}},"component":{}}],["get_vers",{"_index":2047,"title":{"38-160":{}},"name":{},"text":{"38":{}},"component":{}}],["getblock",{"_index":2755,"title":{},"name":{},"text":{"45":{}},"component":{}}],["getblockbodi",{"_index":2145,"title":{},"name":{},"text":{"41":{}},"component":{}}],["getbridg",{"_index":1944,"title":{"38-79":{}},"name":{},"text":{"33":{},"38":{}},"component":{}}],["getcount",{"_index":1472,"title":{},"name":{},"text":{"14":{}},"component":{}}],["getmaxl1msgfe",{"_index":3368,"title":{"67-16":{}},"name":{},"text":{"67":{}},"component":{}}],["getregistri",{"_index":2038,"title":{"38-87":{}},"name":{},"text":{"38":{}},"component":{}}],["getstatu",{"_index":2039,"title":{"38-95":{}},"name":{},"text":{"38":{}},"component":{}}],["gettransactionreceiptrespons",{"_index":1513,"title":{},"name":{},"text":{"14":{}},"component":{}}],["getwithdrawalbridg",{"_index":2040,"title":{"38-103":{}},"name":{},"text":{"38":{}},"component":{}}],["ginger",{"_index":2801,"title":{},"name":{},"text":{"46":{}},"component":{}}],["gingersec.xyz",{"_index":2802,"title":{},"name":{},"text":{"46":{}},"component":{}}],["git",{"_index":1685,"title":{},"name":{},"text":{"17":{}},"component":{}}],["github",{"_index":307,"title":{},"name":{},"text":{"2":{},"29":{},"33":{},"41":{},"42":{},"44":{},"45":{},"60":{},"63":{},"68":{},"74":{},"88":{}},"component":{}}],["github.com/eqlabs/pathfind",{"_index":2777,"title":{},"name":{},"text":{"45":{}},"component":{}}],["github.com/eqlabs/pathfinder?tab=readm",{"_index":1810,"title":{},"name":{},"text":{"25":{}},"component":{}}],["github.com/madara",{"_index":2771,"title":{},"name":{},"text":{"45":{}},"component":{}}],["github.com/nethermindeth/juno",{"_index":2774,"title":{},"name":{},"text":{"45":{}},"component":{}}],["github.com/starkwar",{"_index":2775,"title":{},"name":{},"text":{"45":{}},"component":{}}],["give",{"_index":588,"title":{},"name":{},"text":{"5":{},"17":{},"29":{},"42":{},"57":{},"75":{},"77":{}},"component":{}}],["given",{"_index":1230,"title":{},"name":{},"text":{"10":{},"30":{},"38":{},"44":{},"56":{},"59":{},"60":{},"65":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"77":{},"84":{},"85":{}},"component":{}}],["glanc",{"_index":961,"title":{},"name":{},"text":{"8":{}},"component":{}}],["global",{"_index":1670,"title":{},"name":{},"text":{"17":{},"30":{},"41":{},"68":{}},"component":{}}],["global_state_root",{"_index":3087,"title":{},"name":{},"text":{"63":{}},"component":{}}],["globalindexupd",{"_index":1918,"title":{},"name":{},"text":{"30":{}},"component":{}}],["globals.css",{"_index":1389,"title":{},"name":{},"text":{"13":{}},"component":{}}],["glossari",{"_index":287,"title":{"2":{}},"name":{"2":{}},"text":{},"component":{}}],["gnark",{"_index":2279,"title":{},"name":{},"text":{"41":{}},"component":{}}],["go",{"_index":706,"title":{},"name":{},"text":{"5":{},"10":{},"17":{},"18":{},"36":{},"39":{},"40":{},"42":{},"45":{},"65":{},"68":{},"73":{},"85":{},"88":{},"91":{}},"component":{}}],["goal",{"_index":608,"title":{},"name":{},"text":{"5":{},"12":{},"41":{},"69":{}},"component":{}}],["goe",{"_index":988,"title":{},"name":{},"text":{"8":{},"16":{},"20":{},"68":{}},"component":{}}],["goerli",{"_index":202,"title":{},"name":{},"text":{"1":{},"41":{},"44":{},"72":{}},"component":{}}],["golang",{"_index":898,"title":{},"name":{},"text":{"7":{},"41":{}},"component":{}}],["gomaxproc",{"_index":2158,"title":{},"name":{},"text":{"41":{}},"component":{}}],["good",{"_index":1538,"title":{},"name":{},"text":{"14":{},"18":{},"19":{},"55":{},"66":{},"68":{},"73":{}},"component":{}}],["govern",{"_index":43,"title":{},"name":{},"text":{"1":{},"5":{},"22":{}},"component":{}}],["gpsstatementverifi",{"_index":1020,"title":{"9-5":{}},"name":{},"text":{"9":{}},"component":{}}],["grace",{"_index":2296,"title":{},"name":{},"text":{"41":{},"73":{}},"component":{}}],["gracefulli",{"_index":2250,"title":{},"name":{},"text":{"41":{}},"component":{}}],["grade",{"_index":3939,"title":{},"name":{},"text":{"86":{}},"component":{}}],["gradual",{"_index":1857,"title":{},"name":{},"text":{"29":{},"65":{},"68":{}},"component":{}}],["grant",{"_index":641,"title":{},"name":{},"text":{"5":{}},"component":{}}],["graph",{"_index":717,"title":{},"name":{},"text":{"5":{},"87":{}},"component":{}}],["grasp",{"_index":3427,"title":{},"name":{},"text":{"69":{}},"component":{}}],["greater",{"_index":960,"title":{"83-2":{}},"name":{},"text":{"8":{},"31":{},"85":{}},"component":{}}],["ground",{"_index":1704,"title":{},"name":{},"text":{"20":{}},"component":{}}],["group",{"_index":584,"title":{},"name":{},"text":{"5":{},"33":{},"69":{}},"component":{}}],["grpc",{"_index":2248,"title":{},"name":{},"text":{"41":{}},"component":{}}],["guarante",{"_index":747,"title":{},"name":{},"text":{"5":{},"54":{},"55":{},"69":{},"73":{}},"component":{}}],["guard",{"_index":2015,"title":{},"name":{},"text":{"35":{},"38":{}},"component":{}}],["guess",{"_index":3400,"title":{},"name":{},"text":{"68":{}},"component":{}}],["gui",{"_index":493,"title":{},"name":{},"text":{"4":{},"38":{}},"component":{}}],["guid",{"_index":486,"title":{"12":{}},"name":{},"text":{"3":{},"12":{},"16":{},"17":{},"20":{},"28":{},"32":{},"42":{},"51":{},"53":{}},"component":{}}],["guidelin",{"_index":481,"title":{},"name":{},"text":{"3":{}},"component":{}}],["gwei",{"_index":3260,"title":{},"name":{},"text":{"65":{}},"component":{}}],["h",{"_index":1271,"title":{"11-7":{}},"name":{},"text":{"11":{},"60":{},"63":{},"66":{},"70":{},"72":{},"75":{},"80":{},"84":{}},"component":{}}],["h\\big",{"_index":3056,"title":{},"name":{},"text":{"60":{}},"component":{}}],["h_{ped",{"_index":3506,"title":{},"name":{},"text":{"70":{}},"component":{}}],["hacker",{"_index":770,"title":{},"name":{},"text":{"5":{}},"component":{}}],["hade",{"_index":3036,"title":{},"name":{},"text":{"60":{},"74":{}},"component":{}}],["haiko",{"_index":2863,"title":{},"name":{},"text":{"49":{}},"component":{}}],["halt",{"_index":3610,"title":{},"name":{},"text":{"73":{}},"component":{}}],["hand",{"_index":1691,"title":{},"name":{},"text":{"18":{},"29":{},"70":{}},"component":{}}],["handi",{"_index":3600,"title":{},"name":{},"text":{"73":{}},"component":{}}],["handl",{"_index":1147,"title":{},"name":{},"text":{"9":{},"22":{},"24":{},"29":{},"41":{},"42":{},"44":{},"66":{},"68":{},"69":{},"72":{},"73":{},"77":{},"83":{},"85":{}},"component":{}}],["handle_deposit",{"_index":2105,"title":{},"name":{},"text":{"39":{}},"component":{}}],["handler",{"_index":1251,"title":{"66-9":{}},"name":{},"text":{"10":{},"34":{},"38":{},"39":{},"41":{},"42":{},"66":{},"70":{},"72":{},"75":{},"77":{}},"component":{}}],["happen",{"_index":1578,"title":{},"name":{},"text":{"15":{},"25":{},"36":{},"40":{},"54":{},"65":{},"66":{},"68":{},"77":{},"81":{}},"component":{}}],["happi",{"_index":3637,"title":{},"name":{},"text":{"73":{}},"component":{}}],["hard",{"_index":2462,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hardwar",{"_index":780,"title":{},"name":{},"text":{"5":{},"25":{},"57":{},"69":{}},"component":{}}],["harm",{"_index":3636,"title":{},"name":{},"text":{"73":{}},"component":{}}],["hash",{"_index":311,"title":{"60":{},"75":{},"76":{},"60-3":{},"60-5":{},"60-6":{},"63-1":{},"63-4":{},"63-5":{},"66-3":{},"66-8":{},"72-4":{},"72-6":{},"72-7":{},"72-10":{},"72-12":{},"72-14":{},"72-15":{},"72-18":{},"72-20":{},"72-21":{},"75-2":{},"84-3":{}},"name":{"60":{},"75":{},"76":{}},"text":{"2":{},"8":{},"9":{},"10":{},"14":{},"16":{},"20":{},"33":{},"38":{},"41":{},"42":{},"44":{},"54":{},"55":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"74":{},"75":{},"76":{},"78":{},"79":{},"80":{},"82":{},"84":{},"85":{}},"component":{}}],["hashchain",{"_index":2990,"title":{},"name":{},"text":{"59":{}},"component":{}}],["hashed_supported_cairo_verifi",{"_index":1164,"title":{},"name":{},"text":{"9":{}},"component":{}}],["hassl",{"_index":2447,"title":{},"name":{},"text":{"42":{}},"component":{}}],["have",{"_index":1866,"title":{},"name":{},"text":{"29":{},"54":{},"66":{},"77":{}},"component":{}}],["header",{"_index":2511,"title":{"44-20":{}},"name":{},"text":{"44":{},"63":{},"65":{}},"component":{}}],["health",{"_index":853,"title":{},"name":{},"text":{"7":{},"41":{}},"component":{}}],["healthi",{"_index":2229,"title":{},"name":{},"text":{"41":{}},"component":{}}],["heard",{"_index":1753,"title":{},"name":{},"text":{"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["heart",{"_index":3941,"title":{},"name":{},"text":{"86":{}},"component":{}}],["heavi",{"_index":3447,"title":{},"name":{},"text":{"69":{}},"component":{}}],["heavili",{"_index":3405,"title":{},"name":{},"text":{"68":{}},"component":{}}],["hefti",{"_index":3438,"title":{},"name":{},"text":{"69":{}},"component":{}}],["height",{"_index":2351,"title":{},"name":{},"text":{"42":{},"63":{},"70":{}},"component":{}}],["held",{"_index":794,"title":{},"name":{},"text":{"5":{},"42":{}},"component":{}}],["hello",{"_index":1545,"title":{"19":{},"21":{}},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"83":{}},"component":{}}],["hello_starknet",{"_index":1555,"title":{},"name":{},"text":{"15":{},"16":{},"20":{}},"component":{}}],["hello_starknet/src/lib.cairo",{"_index":1558,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hello_starknet/target/dev",{"_index":1579,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hello_starknet_hellostarknet.contract_class.json",{"_index":1580,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hellocontract",{"_index":1559,"title":{},"name":{},"text":{"15":{}},"component":{}}],["hellostarknet",{"_index":1543,"title":{"15":{},"16":{},"20":{},"15-2":{},"15-3":{},"16-4":{},"16-5":{},"16-6":{},"20-3":{},"20-4":{},"21-3":{},"21-5":{}},"name":{"15":{}},"text":{"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{}}],["hellostarknet'",{"_index":1637,"title":{},"name":{},"text":{"16":{}},"component":{}}],["hellostarknetimpl",{"_index":1568,"title":{},"name":{},"text":{"15":{}},"component":{}}],["help",{"_index":135,"title":{"11-7":{}},"name":{},"text":{"1":{},"3":{},"7":{},"11":{},"17":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"41":{},"69":{},"86":{},"87":{},"88":{},"91":{}},"component":{}}],["helper",{"_index":2739,"title":{},"name":{},"text":{"44":{}},"component":{}}],["henc",{"_index":3853,"title":{},"name":{},"text":{"83":{}},"component":{}}],["here",{"_index":264,"title":{},"name":{},"text":{"1":{},"3":{},"5":{},"10":{},"12":{},"13":{},"14":{},"42":{},"44":{},"50":{},"66":{},"69":{},"72":{},"77":{},"84":{}},"component":{}}],["herein",{"_index":738,"title":{},"name":{},"text":{"5":{}},"component":{}}],["here’",{"_index":2135,"title":{},"name":{},"text":{"41":{},"76":{}},"component":{}}],["hesit",{"_index":3390,"title":{},"name":{},"text":{"68":{}},"component":{}}],["hex",{"_index":2419,"title":{},"name":{},"text":{"42":{},"83":{}},"component":{}}],["hexadecim",{"_index":3970,"title":{},"name":{},"text":{"87":{}},"component":{}}],["hidden",{"_index":2368,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hierarchi",{"_index":3760,"title":{},"name":{},"text":{"77":{}},"component":{}}],["high",{"_index":445,"title":{"68-3":{}},"name":{},"text":{"2":{},"3":{},"7":{},"44":{},"60":{},"70":{},"71":{},"74":{},"77":{},"83":{}},"component":{}}],["higher",{"_index":229,"title":{},"name":{},"text":{"1":{},"41":{},"44":{},"54":{},"67":{},"69":{},"84":{},"85":{}},"component":{}}],["highest",{"_index":3505,"title":{},"name":{},"text":{"70":{}},"component":{}}],["highest_block",{"_index":2352,"title":{},"name":{},"text":{"42":{}},"component":{}}],["highli",{"_index":1666,"title":{},"name":{},"text":{"17":{},"42":{},"69":{}},"component":{}}],["highlight",{"_index":498,"title":{"42-38":{},"42-62":{}},"name":{},"text":{"4":{},"8":{},"87":{}},"component":{}}],["hinder",{"_index":2486,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hint",{"_index":1290,"title":{"73-5":{}},"name":{},"text":{"11":{},"44":{},"68":{},"73":{},"79":{}},"component":{}}],["histor",{"_index":2392,"title":{},"name":{},"text":{"42":{},"44":{}},"component":{}}],["histori",{"_index":223,"title":{},"name":{},"text":{"1":{},"41":{},"42":{},"88":{}},"component":{}}],["hoc",{"_index":2596,"title":{},"name":{},"text":{"44":{}},"component":{}}],["hold",{"_index":811,"title":{},"name":{},"text":{"5":{},"7":{},"15":{},"22":{},"29":{},"64":{},"65":{}},"component":{}}],["holder",{"_index":635,"title":{},"name":{},"text":{"5":{}},"component":{}}],["home",{"_index":1244,"title":{},"name":{},"text":{"10":{}},"component":{}}],["honest",{"_index":3666,"title":{},"name":{},"text":{"75":{}},"component":{}}],["hood",{"_index":2598,"title":{},"name":{},"text":{"44":{},"53":{},"59":{},"85":{}},"component":{}}],["hook",{"_index":1395,"title":{},"name":{},"text":{"13":{},"14":{},"86":{}},"component":{}}],["host",{"_index":1609,"title":{},"name":{},"text":{"16":{},"41":{},"42":{},"69":{}},"component":{}}],["hotfix",{"_index":2450,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hour",{"_index":1656,"title":{},"name":{},"text":{"17":{},"38":{},"44":{},"54":{},"82":{},"85":{}},"component":{}}],["hped",{"_index":3492,"title":{},"name":{},"text":{"70":{}},"component":{}}],["hpo",{"_index":3486,"title":{},"name":{},"text":{"70":{}},"component":{}}],["html/css",{"_index":1315,"title":{},"name":{},"text":{"12":{}},"component":{}}],["http",{"_index":2218,"title":{},"name":{},"text":{"41":{},"42":{},"44":{}},"component":{}}],["http://127.0.0.1:5050",{"_index":1608,"title":{},"name":{},"text":{"16":{}},"component":{}}],["httpport",{"_index":2219,"title":{},"name":{},"text":{"41":{}},"component":{}}],["httpport:$httpport",{"_index":2212,"title":{},"name":{},"text":{"41":{}},"component":{}}],["https://alpha",{"_index":47,"title":{},"name":{},"text":{"1":{},"10":{}},"component":{}}],["https://alpha4.starknet.io/feeder_gateway",{"_index":1200,"title":{},"name":{},"text":{"10":{}},"component":{}}],["https://alpha4.starknet.io/gateway",{"_index":1202,"title":{},"name":{},"text":{"10":{}},"component":{}}],["https://blastapi.io/publ",{"_index":2745,"title":{},"name":{},"text":{"45":{}},"component":{}}],["https://data.voyager.onlin",{"_index":2763,"title":{},"name":{},"text":{"45":{}},"component":{}}],["https://dipdup.io/docs/quickstart",{"_index":2867,"title":{},"name":{},"text":{"50":{}},"component":{}}],["https://drpc.org/chainlist/starknet",{"_index":2752,"title":{},"name":{},"text":{"45":{}},"component":{}}],["https://get.starkli.sh",{"_index":1682,"title":{},"name":{},"text":{"17":{}},"component":{}}],["https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1",{"_index":2440,"title":{},"name":{},"text":{"42":{}},"component":{}}],["https://github.com/matthieuaug",{"_index":2386,"title":{},"name":{},"text":{"42":{}},"component":{}}],["https://github.com/shrame",{"_index":2383,"title":{},"name":{},"text":{"42":{}},"component":{}}],["https://github.com/starkwar",{"_index":2291,"title":{},"name":{},"text":{"41":{}},"component":{}}],["https://github.com/xjonathanlei/starkli",{"_index":1686,"title":{},"name":{},"text":{"17":{}},"component":{}}],["https://starkgate.starknet.io",{"_index":2098,"title":{},"name":{},"text":{"39":{}},"component":{}}],["https://starknet.blockpi.network/v1/rpc/publ",{"_index":2748,"title":{},"name":{},"text":{"45":{}},"component":{}}],["https://www.dwellir.com/networks/starknet",{"_index":2754,"title":{},"name":{},"text":{"45":{}},"component":{}}],["https://www.lavanet.xyz/get",{"_index":2761,"title":{},"name":{},"text":{"45":{}},"component":{}}],["https://www.starknet.io",{"_index":3324,"title":{},"name":{},"text":{"66":{}},"component":{}}],["https://zan.top/service/publ",{"_index":2769,"title":{},"name":{},"text":{"45":{}},"component":{}}],["hub",{"_index":44,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"9":{}},"component":{}}],["hypothet",{"_index":3273,"title":{},"name":{},"text":{"65":{}},"component":{}}],["i'th",{"_index":3137,"title":{},"name":{},"text":{"63":{}},"component":{}}],["i.",{"_index":2553,"title":{},"name":{},"text":{"44":{},"63":{},"68":{},"75":{},"85":{}},"component":{}}],["i128",{"_index":3821,"title":{},"name":{},"text":{"83":{}},"component":{}}],["i16",{"_index":3818,"title":{},"name":{},"text":{"83":{}},"component":{}}],["i32",{"_index":3819,"title":{},"name":{},"text":{"83":{}},"component":{}}],["i64",{"_index":3820,"title":{},"name":{},"text":{"83":{}},"component":{}}],["i8",{"_index":3817,"title":{},"name":{},"text":{"83":{}},"component":{}}],["icon",{"_index":1392,"title":{},"name":{},"text":{"13":{}},"component":{}}],["icountercontract",{"_index":3747,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["id",{"_index":1595,"title":{"72-23":{}},"name":{},"text":{"16":{},"41":{},"42":{},"71":{},"72":{},"87":{},"91":{}},"component":{}}],["ideal",{"_index":582,"title":{},"name":{},"text":{"5":{},"16":{},"20":{}},"component":{}}],["ident",{"_index":976,"title":{},"name":{},"text":{"8":{},"38":{},"54":{},"68":{},"78":{}},"component":{}}],["identifi",{"_index":310,"title":{"21-4":{},"38-111":{}},"name":{},"text":{"2":{},"11":{},"16":{},"21":{},"38":{},"42":{},"44":{},"70":{},"75":{},"76":{},"77":{},"78":{},"79":{},"82":{},"84":{}},"component":{}}],["if/els",{"_index":3617,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ifft",{"_index":3163,"title":{},"name":{},"text":{"64":{}},"component":{}}],["ignor",{"_index":1557,"title":{},"name":{},"text":{"15":{},"41":{},"42":{},"44":{},"65":{},"77":{}},"component":{}}],["ihellostarknet",{"_index":1562,"title":{},"name":{},"text":{"15":{}},"component":{}}],["ii",{"_index":759,"title":{},"name":{},"text":{"5":{}},"component":{}}],["iii",{"_index":760,"title":{},"name":{},"text":{"5":{}},"component":{}}],["illustr",{"_index":3340,"title":{},"name":{},"text":{"66":{},"70":{},"71":{},"72":{},"77":{},"84":{}},"component":{}}],["imag",{"_index":1038,"title":{"41-5":{},"41-11":{}},"name":{},"text":{"9":{},"13":{},"41":{}},"component":{}}],["images/starknet",{"_index":1402,"title":{},"name":{},"text":{"13":{}},"component":{}}],["immedi",{"_index":1438,"title":{},"name":{},"text":{"13":{},"29":{},"42":{},"69":{}},"component":{}}],["impact",{"_index":777,"title":{},"name":{},"text":{"5":{},"42":{}},"component":{}}],["imperson",{"_index":3997,"title":{},"name":{},"text":{"90":{}},"component":{}}],["impl",{"_index":1345,"title":{"77-9":{}},"name":{},"text":{"12":{},"14":{},"15":{},"77":{},"81":{}},"component":{}}],["implement",{"_index":295,"title":{"7-7":{},"54-5":{},"68-6":{}},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"17":{},"22":{},"25":{},"29":{},"34":{},"38":{},"41":{},"42":{},"44":{},"54":{},"59":{},"60":{},"63":{},"64":{},"65":{},"67":{},"68":{},"69":{},"72":{},"75":{},"77":{},"79":{},"81":{},"85":{},"88":{},"90":{}},"component":{}}],["impli",{"_index":839,"title":{},"name":{},"text":{"5":{},"54":{}},"component":{}}],["implic",{"_index":167,"title":{"71-3":{}},"name":{},"text":{"1":{},"71":{}},"component":{}}],["implicit",{"_index":3897,"title":{},"name":{},"text":{"85":{}},"component":{}}],["import",{"_index":0,"title":{"1-1":{},"29-3":{}},"name":{},"text":{"1":{},"4":{},"5":{},"7":{},"11":{},"13":{},"14":{},"30":{},"41":{},"44":{},"55":{},"65":{},"68":{},"73":{},"76":{},"80":{},"85":{}},"component":{}}],["impos",{"_index":1984,"title":{},"name":{},"text":{"33":{},"68":{}},"component":{}}],["imposs",{"_index":2963,"title":{},"name":{},"text":{"57":{}},"component":{}}],["improv",{"_index":627,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"41":{},"42":{},"44":{},"55":{},"57":{},"65":{},"87":{}},"component":{}}],["in",{"_index":1139,"title":{},"name":{},"text":{"9":{}},"component":{}}],["in\\mathbb{f}_p^2",{"_index":3016,"title":{},"name":{},"text":{"60":{}},"component":{}}],["inaccess",{"_index":3893,"title":{},"name":{},"text":{"85":{}},"component":{}}],["inact",{"_index":2073,"title":{},"name":{},"text":{"38":{}},"component":{}}],["inbox",{"_index":25,"title":{},"name":{},"text":{"1":{},"43":{},"44":{}},"component":{}}],["incent",{"_index":569,"title":{},"name":{},"text":{"5":{},"29":{},"66":{}},"component":{}}],["incentiv",{"_index":600,"title":{},"name":{},"text":{"5":{},"22":{}},"component":{}}],["includ",{"_index":324,"title":{"39-6":{},"39-9":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"16":{},"17":{},"19":{},"22":{},"24":{},"25":{},"30":{},"33":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"47":{},"54":{},"55":{},"57":{},"58":{},"59":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"76":{},"79":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"91":{}},"component":{}}],["includerecommend",{"_index":1383,"title":{},"name":{},"text":{"13":{}},"component":{}}],["inclus",{"_index":891,"title":{},"name":{},"text":{"7":{},"44":{},"76":{}},"component":{}}],["incom",{"_index":2231,"title":{},"name":{},"text":{"41":{},"42":{},"68":{}},"component":{}}],["incompat",{"_index":2390,"title":{},"name":{},"text":{"42":{}},"component":{}}],["inconsist",{"_index":2337,"title":{},"name":{},"text":{"42":{}},"component":{}}],["incorpor",{"_index":892,"title":{},"name":{},"text":{"7":{},"8":{},"10":{},"69":{}},"component":{}}],["incorrect",{"_index":3664,"title":{},"name":{},"text":{"75":{}},"component":{}}],["increas",{"_index":733,"title":{"27":{}},"name":{"27":{}},"text":{"5":{},"8":{},"14":{},"15":{},"22":{},"27":{},"28":{},"29":{},"41":{},"42":{},"44":{},"57":{},"66":{},"69":{},"71":{},"72":{}},"component":{}}],["increase_allow",{"_index":3715,"title":{},"name":{},"text":{"77":{}},"component":{}}],["increase_bal",{"_index":1563,"title":{},"name":{},"text":{"15":{},"16":{},"20":{}},"component":{}}],["increase_count",{"_index":1330,"title":{},"name":{},"text":{"12":{},"14":{},"77":{},"81":{}},"component":{}}],["increase_stak",{"_index":1769,"title":{},"name":{},"text":{"22":{},"27":{}},"component":{}}],["increasecount",{"_index":1484,"title":{},"name":{},"text":{"14":{}},"component":{}}],["increment",{"_index":1323,"title":{},"name":{},"text":{"12":{},"29":{},"55":{},"66":{}},"component":{}}],["incur",{"_index":3209,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{}}],["inde",{"_index":1640,"title":{},"name":{},"text":{"16":{},"20":{},"39":{},"66":{}},"component":{}}],["independ",{"_index":804,"title":{"59-6":{}},"name":{},"text":{"5":{},"9":{},"59":{}},"component":{}}],["index",{"_index":472,"title":{"50":{}},"name":{"3":{},"6":{},"50":{}},"text":{"29":{},"30":{},"38":{},"40":{},"50":{},"63":{},"64":{},"67":{},"73":{},"75":{},"84":{}},"component":{}}],["index=0",{"_index":3846,"title":{},"name":{},"text":{"83":{}},"component":{}}],["index=1",{"_index":3848,"title":{},"name":{},"text":{"83":{}},"component":{}}],["index=2",{"_index":3858,"title":{},"name":{},"text":{"83":{}},"component":{}}],["indic",{"_index":492,"title":{},"name":{},"text":{"4":{},"38":{},"44":{},"66":{},"67":{},"70":{},"83":{},"85":{}},"component":{}}],["indirectli",{"_index":1850,"title":{},"name":{},"text":{"29":{}},"component":{}}],["individu",{"_index":771,"title":{},"name":{},"text":{"5":{},"8":{},"33":{},"57":{},"68":{}},"component":{}}],["induc",{"_index":3208,"title":{},"name":{},"text":{"65":{},"66":{}},"component":{}}],["inflat",{"_index":720,"title":{},"name":{},"text":{"5":{},"22":{},"29":{}},"component":{}}],["influenc",{"_index":3767,"title":{},"name":{},"text":{"78":{}},"component":{}}],["info",{"_index":21,"title":{},"name":{"1":{},"82":{}},"text":{},"component":{}}],["info.cairo",{"_index":3652,"title":{},"name":{},"text":{"74":{},"82":{}},"component":{}}],["inform",{"_index":20,"title":{"1":{},"82":{},"28-7":{},"82-3":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"10":{},"11":{},"18":{},"22":{},"25":{},"28":{},"30":{},"36":{},"37":{},"38":{},"40":{},"41":{},"43":{},"44":{},"45":{},"48":{},"50":{},"51":{},"52":{},"54":{},"55":{},"56":{},"59":{},"60":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"87":{}},"component":{}}],["infrastructur",{"_index":2513,"title":{"44-29":{}},"name":{},"text":{"68":{}},"component":{}}],["infura",{"_index":2759,"title":{},"name":{},"text":{"45":{}},"component":{}}],["inher",{"_index":788,"title":{},"name":{},"text":{"5":{}},"component":{}}],["inherit",{"_index":116,"title":{},"name":{},"text":{"1":{},"33":{}},"component":{}}],["init",{"_index":1710,"title":{},"name":{},"text":{"20":{}},"component":{}}],["initi",{"_index":299,"title":{"16-2":{},"39-8":{}},"name":{},"text":{"2":{},"5":{},"8":{},"9":{},"12":{},"13":{},"16":{},"22":{},"23":{},"26":{},"31":{},"36":{},"38":{},"39":{},"40":{},"44":{},"57":{},"66":{},"68":{},"69":{},"72":{},"76":{},"80":{},"82":{},"87":{}},"component":{}}],["initial_count",{"_index":3694,"title":{},"name":{},"text":{"77":{}},"component":{}}],["initial_suppli",{"_index":3707,"title":{},"name":{},"text":{"77":{}},"component":{}}],["initiate_token_withdraw",{"_index":2048,"title":{"38-165":{}},"name":{},"text":{"38":{},"39":{},"40":{}},"component":{}}],["inject",{"_index":3211,"title":{},"name":{},"text":{"65":{}},"component":{}}],["inner",{"_index":1694,"title":{},"name":{},"text":{"18":{},"68":{},"76":{}},"component":{}}],["innov",{"_index":1016,"title":{},"name":{},"text":{"8":{},"18":{},"89":{}},"component":{}}],["input",{"_index":410,"title":{},"name":{},"text":{"2":{},"10":{},"14":{},"34":{},"38":{},"42":{},"44":{},"54":{},"60":{},"66":{},"68":{},"73":{},"77":{},"78":{},"84":{},"85":{},"87":{}},"component":{}}],["insid",{"_index":1370,"title":{"77-6":{}},"name":{},"text":{"13":{},"14":{},"15":{},"44":{},"57":{},"64":{},"66":{},"73":{},"75":{},"77":{},"80":{},"84":{}},"component":{}}],["inspir",{"_index":2936,"title":{},"name":{},"text":{"55":{},"86":{},"87":{}},"component":{}}],["instal",{"_index":1282,"title":{"17-2":{},"17-3":{},"17-6":{}},"name":{},"text":{"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"87":{},"91":{}},"component":{}}],["instanc",{"_index":271,"title":{"79":{},"2-9":{},"16-2":{},"79-2":{}},"name":{},"text":{"1":{},"2":{},"9":{},"11":{},"16":{},"20":{},"33":{},"41":{},"44":{},"54":{},"59":{},"70":{},"72":{},"79":{},"83":{},"85":{}},"component":{}}],["instance’",{"_index":3481,"title":{},"name":{},"text":{"70":{}},"component":{}}],["instanti",{"_index":3654,"title":{},"name":{},"text":{"74":{},"83":{}},"component":{}}],["instead",{"_index":193,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"10":{},"11":{},"16":{},"20":{},"29":{},"41":{},"42":{},"44":{},"48":{},"55":{},"59":{},"68":{},"69":{},"73":{},"85":{}},"component":{}}],["institut",{"_index":691,"title":{},"name":{},"text":{"5":{}},"component":{}}],["instruct",{"_index":345,"title":{},"name":{},"text":{"2":{},"17":{},"20":{},"34":{},"44":{},"73":{},"75":{}},"component":{}}],["int",{"_index":2416,"title":{},"name":{},"text":{"42":{}},"component":{}}],["int.from_byt",{"_index":3594,"title":{},"name":{},"text":{"72":{}},"component":{}}],["integ",{"_index":2032,"title":{"83-3":{}},"name":{},"text":{"36":{},"70":{},"74":{},"83":{}},"component":{}}],["integr",{"_index":248,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"9":{},"22":{},"29":{},"41":{},"42":{},"51":{},"53":{},"59":{},"65":{},"76":{},"87":{},"88":{},"91":{}},"component":{}}],["intend",{"_index":556,"title":{},"name":{},"text":{"5":{},"26":{},"65":{},"75":{}},"component":{}}],["intens",{"_index":2923,"title":{},"name":{},"text":{"54":{}},"component":{}}],["intent",{"_index":1834,"title":{},"name":{},"text":{"26":{},"29":{},"30":{},"31":{},"66":{}},"component":{}}],["intention",{"_index":3665,"title":{},"name":{},"text":{"75":{}},"component":{}}],["interact",{"_index":361,"title":{"16":{},"20":{},"88":{},"14-1":{},"16-6":{},"20-4":{},"21-3":{},"21-5":{}},"name":{"14":{},"88":{}},"text":{"2":{},"7":{},"9":{},"10":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"31":{},"41":{},"44":{},"53":{},"57":{},"66":{},"68":{},"69":{},"70":{},"80":{},"83":{},"85":{},"86":{},"88":{},"89":{},"90":{},"91":{}},"component":{}}],["interconnect",{"_index":1021,"title":{"9-6":{}},"name":{},"text":{"69":{}},"component":{}}],["interdepend",{"_index":871,"title":{},"name":{},"text":{"7":{}},"component":{}}],["interest",{"_index":697,"title":{},"name":{},"text":{"5":{},"18":{},"33":{},"53":{},"76":{}},"component":{}}],["interfac",{"_index":396,"title":{"54":{},"55":{},"59-2":{},"77-9":{}},"name":{},"text":{"2":{},"7":{},"14":{},"15":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"38":{},"54":{},"55":{},"59":{},"67":{},"77":{},"81":{},"85":{},"88":{},"91":{}},"component":{}}],["interface_nam",{"_index":1500,"title":{},"name":{},"text":{"14":{},"77":{}},"component":{}}],["interlink",{"_index":1169,"title":{},"name":{},"text":{"9":{}},"component":{}}],["intermedi",{"_index":406,"title":{},"name":{},"text":{"2":{},"8":{},"44":{},"70":{},"73":{},"75":{},"76":{}},"component":{}}],["intermitt",{"_index":3477,"title":{},"name":{},"text":{"69":{}},"component":{}}],["intern",{"_index":994,"title":{},"name":{},"text":{"8":{},"44":{},"68":{},"70":{},"72":{},"74":{},"85":{}},"component":{}}],["interplay",{"_index":844,"title":{"7-3":{}},"name":{},"text":{},"component":{}}],["interpret",{"_index":828,"title":{},"name":{},"text":{"5":{},"42":{},"64":{}},"component":{}}],["interrupt",{"_index":1722,"title":{},"name":{},"text":{"20":{}},"component":{}}],["interv",{"_index":1907,"title":{},"name":{},"text":{"29":{},"42":{},"67":{}},"component":{}}],["intricaci",{"_index":3428,"title":{},"name":{},"text":{"69":{}},"component":{}}],["introduc",{"_index":198,"title":{},"name":{},"text":{"1":{},"29":{},"41":{},"42":{},"44":{},"53":{},"65":{},"69":{},"72":{},"77":{},"79":{},"85":{}},"component":{}}],["introduct",{"_index":1542,"title":{"15-1":{},"16-1":{},"17-1":{},"20-1":{},"29-1":{},"64-1":{},"77-1":{},"89-1":{}},"name":{"57":{}},"text":{"29":{},"44":{},"53":{},"77":{}},"component":{}}],["invalid",{"_index":978,"title":{"54-3":{}},"name":{},"text":{"8":{},"42":{},"44":{},"54":{},"57":{},"66":{},"71":{},"74":{},"82":{}},"component":{}}],["invers",{"_index":3162,"title":{},"name":{},"text":{"64":{}},"component":{}}],["invest",{"_index":566,"title":{},"name":{},"text":{"5":{}},"component":{}}],["investig",{"_index":1001,"title":{},"name":{},"text":{"8":{},"33":{}},"component":{}}],["investor",{"_index":660,"title":{},"name":{},"text":{"5":{}},"component":{}}],["invoc",{"_index":3328,"title":{},"name":{},"text":{"66":{}},"component":{}}],["invok",{"_index":266,"title":{"10-15":{},"72-2":{}},"name":{},"text":{"1":{},"2":{},"10":{},"16":{},"20":{},"25":{},"42":{},"44":{},"54":{},"56":{},"65":{},"66":{},"68":{},"70":{},"71":{},"72":{},"82":{}},"component":{}}],["invoke_v0_tx_hash",{"_index":3577,"title":{},"name":{},"text":{"72":{}},"component":{}}],["invoke_v1_tx_hash",{"_index":3576,"title":{},"name":{},"text":{"72":{}},"component":{}}],["invoke_v3_tx_hash",{"_index":3565,"title":{},"name":{},"text":{"72":{}},"component":{}}],["invoketransact",{"_index":2287,"title":{},"name":{},"text":{"41":{}},"component":{}}],["involv",{"_index":113,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"8":{},"24":{},"26":{},"29":{},"31":{},"39":{},"42":{},"65":{},"69":{},"76":{},"85":{}},"component":{}}],["iothercontract",{"_index":3746,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["iothercontractdispatch",{"_index":3751,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["iothercontractdispatchertrait",{"_index":3752,"title":{},"name":{},"text":{"77":{}},"component":{}}],["iothercontractlibrarydispatch",{"_index":3753,"title":{},"name":{},"text":{"77":{}},"component":{}}],["ip",{"_index":175,"title":{},"name":{},"text":{"1":{}},"component":{}}],["irongauntlet",{"_index":2146,"title":{},"name":{},"text":{"41":{}},"component":{}}],["is_paus",{"_index":1929,"title":{},"name":{},"text":{"30":{}},"component":{}}],["is_zero",{"_index":2904,"title":{},"name":{},"text":{"54":{}},"component":{}}],["isconnect",{"_index":1449,"title":{},"name":{},"text":{"13":{}},"component":{}}],["isn’t",{"_index":3465,"title":{},"name":{},"text":{"69":{},"73":{}},"component":{}}],["isservicingtoken",{"_index":2041,"title":{"38-119":{}},"name":{},"text":{"38":{}},"component":{}}],["issu",{"_index":1862,"title":{},"name":{},"text":{"29":{},"33":{},"41":{},"42":{},"44":{},"49":{},"69":{},"89":{}},"component":{}}],["issuanc",{"_index":737,"title":{},"name":{},"text":{"5":{}},"component":{}}],["issuccess",{"_index":1476,"title":{},"name":{},"text":{"14":{}},"component":{}}],["istarkgatemanager.sol",{"_index":2051,"title":{},"name":{},"text":{"38":{}},"component":{}}],["istarkgateregistry.sol",{"_index":2053,"title":{},"name":{},"text":{"38":{}},"component":{}}],["istarkgateservice.sol",{"_index":2054,"title":{},"name":{},"text":{"38":{}},"component":{}}],["istarknetmessaging.sol",{"_index":3379,"title":{},"name":{},"text":{"67":{}},"component":{}}],["istarknetmessagingev",{"_index":3386,"title":{},"name":{},"text":{"67":{}},"component":{}}],["istarknetmessagingevents.sol",{"_index":3380,"title":{},"name":{},"text":{"67":{}},"component":{}}],["it'",{"_index":1728,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ital",{"_index":501,"title":{},"name":{},"text":{"4":{}},"component":{}}],["item",{"_index":528,"title":{},"name":{},"text":{"4":{},"14":{},"77":{}},"component":{}}],["item1",{"_index":533,"title":{},"name":{},"text":{"4":{}},"component":{}}],["item2",{"_index":534,"title":{},"name":{},"text":{"4":{}},"component":{}}],["iter",{"_index":3533,"title":{},"name":{},"text":{"71":{},"77":{}},"component":{}}],["itestsess",{"_index":1328,"title":{},"name":{},"text":{"12":{}},"component":{}}],["itself",{"_index":1999,"title":{},"name":{},"text":{"33":{},"44":{},"66":{},"68":{},"69":{}},"component":{}}],["it’",{"_index":903,"title":{},"name":{},"text":{"7":{},"13":{},"41":{},"44":{},"54":{},"68":{},"69":{},"73":{},"77":{}},"component":{}}],["iuniversaldeploy",{"_index":2972,"title":{},"name":{},"text":{"59":{}},"component":{}}],["iuniversaldeployerdispatch",{"_index":2976,"title":{},"name":{},"text":{"59":{}},"component":{}}],["iv",{"_index":764,"title":{},"name":{},"text":{"5":{}},"component":{}}],["j",{"_index":3043,"title":{},"name":{},"text":{"60":{}},"component":{}}],["jan",{"_index":2514,"title":{"44-31":{}},"name":{},"text":{"49":{}},"component":{}}],["januari",{"_index":1948,"title":{},"name":{},"text":{"33":{},"49":{}},"component":{}}],["javascript",{"_index":3983,"title":{},"name":{},"text":{"88":{},"90":{}},"component":{}}],["javascript/typescript",{"_index":1310,"title":{},"name":{},"text":{"12":{}},"component":{}}],["jediswap",{"_index":2862,"title":{},"name":{},"text":{"49":{}},"component":{}}],["job",{"_index":939,"title":{},"name":{},"text":{"8":{}},"component":{}}],["join",{"_index":952,"title":{},"name":{},"text":{"8":{},"24":{},"30":{}},"component":{}}],["jonathan",{"_index":3973,"title":{},"name":{},"text":{"88":{}},"component":{}}],["joshklop",{"_index":2142,"title":{},"name":{},"text":{"41":{}},"component":{}}],["journey",{"_index":1549,"title":{"18":{}},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"53":{}},"component":{}}],["js",{"_index":3993,"title":{"90-2":{}},"name":{},"text":{"89":{},"90":{}},"component":{}}],["json",{"_index":71,"title":{"44-13":{},"44-21":{},"44-22":{},"44-23":{}},"name":{},"text":{"1":{},"2":{},"10":{},"14":{},"16":{},"39":{},"41":{},"42":{},"44":{},"45":{},"47":{},"65":{},"66":{},"69":{},"71":{},"75":{},"77":{},"88":{}},"component":{}}],["json.stringifi",{"_index":1524,"title":{},"name":{},"text":{"14":{}},"component":{}}],["jsonrpc",{"_index":3540,"title":{},"name":{},"text":{"71":{}},"component":{}}],["juli",{"_index":2520,"title":{"44-36":{},"44-44":{}},"name":{},"text":{},"component":{}}],["june",{"_index":2532,"title":{"44-45":{}},"name":{},"text":{},"component":{}}],["juno",{"_index":238,"title":{"41":{}},"name":{"41":{}},"text":{"1":{},"7":{},"25":{},"41":{},"45":{},"48":{}},"component":{}}],["juno.nethermind.io/hardwar",{"_index":1809,"title":{},"name":{},"text":{"25":{}},"component":{}}],["juno_gettransactionstatu",{"_index":2178,"title":{},"name":{},"text":{"41":{}},"component":{}}],["juno_vers",{"_index":2245,"title":{},"name":{},"text":{"41":{}},"component":{}}],["juno’",{"_index":2202,"title":{},"name":{},"text":{"41":{}},"component":{}}],["jvm",{"_index":2829,"title":{},"name":{},"text":{"48":{},"88":{}},"component":{}}],["k",{"_index":3126,"title":{},"name":{},"text":{"63":{},"65":{}},"component":{}}],["k1",{"_index":3120,"title":{},"name":{},"text":{"63":{}},"component":{}}],["k_1",{"_index":3783,"title":{},"name":{},"text":{"80":{}},"component":{}}],["k_2",{"_index":3785,"title":{},"name":{},"text":{"80":{}},"component":{}}],["k_n",{"_index":3784,"title":{},"name":{},"text":{"80":{}},"component":{}}],["karnot’",{"_index":1829,"title":{},"name":{},"text":{"25":{}},"component":{}}],["katana",{"_index":3994,"title":{"90-3":{}},"name":{},"text":{"89":{},"90":{}},"component":{}}],["keccak",{"_index":2673,"title":{"60-2":{},"85-65":{}},"name":{},"text":{"44":{},"60":{},"65":{},"72":{},"74":{},"80":{},"85":{}},"component":{}}],["keccak.cairo",{"_index":3656,"title":{},"name":{},"text":{"74":{},"85":{}},"component":{}}],["keccak256",{"_index":3009,"title":{},"name":{},"text":{"60":{},"66":{}},"component":{}}],["keccak::keccak_u256s_le_input",{"_index":3925,"title":{},"name":{},"text":{"85":{}},"component":{}}],["keccak_syscal",{"_index":3922,"title":{},"name":{},"text":{"85":{}},"component":{}}],["keccak_u256s_le_input",{"_index":3929,"title":{},"name":{},"text":{"85":{}},"component":{}}],["keep",{"_index":2924,"title":{},"name":{},"text":{"54":{},"57":{},"69":{}},"component":{}}],["kept",{"_index":1241,"title":{},"name":{},"text":{"10":{},"11":{},"28":{},"77":{}},"component":{}}],["key",{"_index":148,"title":{"9-3":{},"29-2":{}},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"10":{},"16":{},"20":{},"21":{},"22":{},"29":{},"30":{},"41":{},"44":{},"54":{},"57":{},"58":{},"63":{},"64":{},"65":{},"68":{},"70":{},"71":{},"73":{},"77":{},"80":{},"84":{},"85":{}},"component":{}}],["key/valu",{"_index":3482,"title":{},"name":{},"text":{"70":{}},"component":{}}],["keys=[sn_keccak",{"_index":3744,"title":{},"name":{},"text":{"77":{}},"component":{}}],["keys\\_hash",{"_index":3885,"title":{},"name":{},"text":{"84":{}},"component":{}}],["keystor",{"_index":1618,"title":{},"name":{},"text":{"16":{},"20":{},"21":{}},"component":{}}],["keystore.json",{"_index":1623,"title":{},"name":{},"text":{"16":{},"20":{},"21":{}},"component":{}}],["keyword",{"_index":2709,"title":{},"name":{},"text":{"44":{}},"component":{}}],["ki",{"_index":3133,"title":{},"name":{},"text":{"63":{}},"component":{}}],["kick",{"_index":3267,"title":{},"name":{},"text":{"65":{}},"component":{}}],["kind",{"_index":822,"title":{},"name":{},"text":{"5":{},"77":{}},"component":{}}],["kirugan",{"_index":2148,"title":{},"name":{},"text":{"41":{}},"component":{}}],["kit",{"_index":3950,"title":{},"name":{},"text":{"86":{},"88":{}},"component":{}}],["kn",{"_index":3123,"title":{},"name":{},"text":{"63":{}},"component":{}}],["know",{"_index":340,"title":{},"name":{},"text":{"2":{},"38":{},"68":{},"70":{},"83":{}},"component":{}}],["knowledg",{"_index":439,"title":{},"name":{},"text":{"2":{},"3":{},"73":{}},"component":{}}],["known",{"_index":437,"title":{},"name":{},"text":{"2":{},"3":{},"5":{},"7":{},"15":{},"16":{},"42":{},"44":{},"55":{},"57":{},"59":{},"69":{},"71":{},"77":{},"85":{}},"component":{}}],["kubernet",{"_index":2156,"title":{},"name":{},"text":{"41":{}},"component":{}}],["l",{"_index":3265,"title":{},"name":{},"text":{"65":{}},"component":{}}],["l1",{"_index":107,"title":{"66":{},"2-12":{},"2-21":{},"29-11":{},"38-1":{},"39-4":{},"39-10":{},"66-1":{},"66-2":{},"66-3":{},"66-4":{},"66-5":{},"66-6":{},"66-7":{},"66-8":{},"66-9":{},"67-1":{},"67-66":{},"69-9":{}},"name":{},"text":{"1":{},"2":{},"5":{},"9":{},"10":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"47":{},"49":{},"63":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"75":{},"77":{},"85":{}},"component":{}}],["l1<>l2",{"_index":3999,"title":{},"name":{},"text":{"90":{}},"component":{}}],["l1_bridge_address",{"_index":2806,"title":{},"name":{},"text":{"47":{}},"component":{}}],["l1_da_mod",{"_index":2619,"title":{},"name":{},"text":{"44":{},"63":{},"65":{}},"component":{}}],["l1_data_ga",{"_index":2639,"title":{},"name":{},"text":{"44":{}},"component":{}}],["l1_data_gas_consum",{"_index":3145,"title":{},"name":{},"text":{"63":{}},"component":{}}],["l1_data_gas_pric",{"_index":2621,"title":{},"name":{},"text":{"44":{},"63":{}},"component":{}}],["l1_data_gas_price_in_fri",{"_index":3103,"title":{},"name":{},"text":{"63":{}},"component":{}}],["l1_data_gas_price_in_wei",{"_index":3102,"title":{},"name":{},"text":{"63":{}},"component":{}}],["l1_ga",{"_index":2638,"title":{},"name":{},"text":{"44":{},"72":{}},"component":{}}],["l1_gas_bound",{"_index":3566,"title":{},"name":{},"text":{"72":{}},"component":{}}],["l1_gas_consum",{"_index":3144,"title":{},"name":{},"text":{"63":{}},"component":{}}],["l1_gas_pric",{"_index":2624,"title":{},"name":{},"text":{"44":{},"63":{}},"component":{}}],["l1_gas_price_in_fri",{"_index":3101,"title":{},"name":{},"text":{"63":{}},"component":{}}],["l1_gas_price_in_wei",{"_index":3100,"title":{},"name":{},"text":{"63":{}},"component":{}}],["l1_handler",{"_index":3322,"title":{},"name":{},"text":{"65":{},"66":{},"77":{}},"component":{}}],["l1_handler_entry_point",{"_index":3668,"title":{},"name":{},"text":{"75":{}},"component":{}}],["l1_handler_tx_hash",{"_index":3360,"title":{},"name":{},"text":{"66":{}},"component":{}}],["l1_handler_txn_receipt",{"_index":2185,"title":{},"name":{},"text":{"41":{}},"component":{}}],["l1_recipi",{"_index":2076,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["l1_token",{"_index":2091,"title":{},"name":{},"text":{"38":{},"40":{}},"component":{}}],["l1_token_address",{"_index":2083,"title":{},"name":{},"text":{"38":{},"47":{}},"component":{}}],["l1handlertransact",{"_index":3367,"title":{},"name":{},"text":{"66":{},"72":{}},"component":{}}],["l1tol2messag",{"_index":3371,"title":{"67-34":{}},"name":{},"text":{"67":{}},"component":{}}],["l1tol2messagecancel",{"_index":3369,"title":{"67-22":{}},"name":{},"text":{"67":{}},"component":{}}],["l1tol2messagenonc",{"_index":3370,"title":{"67-28":{}},"name":{},"text":{"67":{}},"component":{}}],["l1→l2",{"_index":261,"title":{"39-3":{}},"name":{},"text":{"1":{},"36":{},"66":{},"68":{}},"component":{}}],["l2",{"_index":108,"title":{"66":{},"2-13":{},"29-14":{},"38-134":{},"39-8":{},"65-22":{},"66-1":{},"66-2":{},"66-3":{},"66-4":{},"66-5":{},"66-6":{},"66-7":{},"66-8":{},"69-8":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"10":{},"20":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"42":{},"47":{},"49":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["l2_bridge_address",{"_index":2807,"title":{},"name":{},"text":{"47":{}},"component":{}}],["l2_ga",{"_index":3560,"title":{},"name":{},"text":{"72":{}},"component":{}}],["l2_gas_bound",{"_index":3567,"title":{},"name":{},"text":{"72":{}},"component":{}}],["l2_gas_consum",{"_index":3143,"title":{},"name":{},"text":{"63":{}},"component":{}}],["l2_token",{"_index":2092,"title":{},"name":{},"text":{"38":{}},"component":{}}],["l2_token_address",{"_index":2078,"title":{},"name":{},"text":{"38":{},"47":{}},"component":{}}],["l2recipi",{"_index":2033,"title":{},"name":{},"text":{"36":{},"38":{}},"component":{}}],["l2tol1messag",{"_index":3372,"title":{"67-40":{}},"name":{},"text":{"67":{}},"component":{}}],["l2→l1",{"_index":2096,"title":{"39-7":{},"65-20":{}},"name":{},"text":{"40":{},"65":{},"66":{}},"component":{}}],["l3",{"_index":3646,"title":{},"name":{},"text":{"73":{}},"component":{}}],["label",{"_index":1962,"title":{},"name":{},"text":{"33":{}},"component":{}}],["lambdaclass’",{"_index":2674,"title":{},"name":{},"text":{"44":{}},"component":{}}],["lang",{"_index":1239,"title":{},"name":{},"text":{"10":{},"42":{},"45":{},"60":{},"68":{}},"component":{}}],["languag",{"_index":448,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"44":{},"66":{},"69":{},"72":{},"73":{},"79":{},"83":{},"85":{},"87":{},"88":{}},"component":{}}],["larg",{"_index":583,"title":{},"name":{},"text":{"5":{},"8":{},"42":{},"54":{}},"component":{}}],["larger",{"_index":554,"title":{},"name":{},"text":{"5":{},"8":{},"83":{}},"component":{}}],["last",{"_index":932,"title":{},"name":{},"text":{"8":{},"14":{},"18":{},"48":{},"65":{}},"component":{}}],["latenc",{"_index":964,"title":{"29-9":{}},"name":{},"text":{"8":{},"29":{},"41":{},"65":{},"69":{}},"component":{}}],["later",{"_index":671,"title":{},"name":{},"text":{"5":{},"54":{},"65":{},"68":{},"69":{}},"component":{}}],["latest",{"_index":22,"title":{"42-1":{}},"name":{},"text":{"1":{},"2":{},"7":{},"10":{},"17":{},"42":{},"43":{},"44":{},"48":{},"49":{},"64":{},"69":{},"81":{},"88":{}},"component":{}}],["latter",{"_index":1221,"title":{},"name":{},"text":{"10":{}},"component":{}}],["launch",{"_index":2853,"title":{},"name":{},"text":{"49":{}},"component":{}}],["lava",{"_index":2760,"title":{},"name":{},"text":{"45":{}},"component":{}}],["law",{"_index":842,"title":{},"name":{},"text":{"5":{}},"component":{}}],["layer",{"_index":279,"title":{"2-12":{},"2-13":{}},"name":{},"text":{"2":{},"3":{},"5":{},"9":{},"41":{},"44":{},"64":{},"66":{},"69":{},"73":{}},"component":{}}],["layerswap",{"_index":2858,"title":{},"name":{},"text":{"49":{}},"component":{}}],["layout",{"_index":1007,"title":{"80-1":{}},"name":{},"text":{"8":{},"9":{},"83":{}},"component":{}}],["layout.tsx",{"_index":1387,"title":{},"name":{},"text":{"13":{}},"component":{}}],["ldot",{"_index":3498,"title":{},"name":{},"text":{"70":{}},"component":{}}],["lead",{"_index":1003,"title":{},"name":{},"text":{"8":{},"54":{},"70":{}},"component":{}}],["leader",{"_index":3472,"title":{},"name":{},"text":{"69":{}},"component":{}}],["leaf",{"_index":3136,"title":{},"name":{},"text":{"63":{},"70":{}},"component":{}}],["learn",{"_index":474,"title":{},"name":{},"text":{"3":{},"15":{},"16":{},"20":{},"32":{},"53":{},"91":{}},"component":{}}],["leav",{"_index":2100,"title":{},"name":{},"text":{"39":{},"70":{},"73":{}},"component":{}}],["led",{"_index":2434,"title":{},"name":{},"text":{"42":{}},"component":{}}],["ledger",{"_index":1816,"title":{},"name":{},"text":{"25":{}},"component":{}}],["left",{"_index":1409,"title":{},"name":{},"text":{"13":{},"65":{},"70":{}},"component":{}}],["left=right",{"_index":3515,"title":{},"name":{},"text":{"70":{}},"component":{}}],["left[\\text{hades_permut",{"_index":3039,"title":{},"name":{},"text":{"60":{}},"component":{}}],["left[\\text{self_stak",{"_index":1881,"title":{},"name":{},"text":{"29":{}},"component":{}}],["left[\\text{shift_point",{"_index":3022,"title":{},"name":{},"text":{"60":{}},"component":{}}],["legaci",{"_index":1189,"title":{"10":{},"11":{},"33-2":{},"33-4":{}},"name":{},"text":{"33":{}},"component":{}}],["legacy_bridge_eic.cairo",{"_index":1951,"title":{},"name":{},"text":{"33":{}},"component":{}}],["legacybridge.sol",{"_index":1950,"title":{},"name":{},"text":{"33":{}},"component":{}}],["legacymap",{"_index":3789,"title":{},"name":{},"text":{"80":{}},"component":{}}],["legal",{"_index":823,"title":{},"name":{},"text":{"5":{},"71":{}},"component":{}}],["legitimaci",{"_index":874,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lei",{"_index":3974,"title":{},"name":{},"text":{"88":{}},"component":{}}],["len",{"_index":3152,"title":{},"name":{},"text":{"63":{}},"component":{}}],["lend",{"_index":2543,"title":{},"name":{},"text":{"44":{}},"component":{}}],["length",{"_index":185,"title":{},"name":{},"text":{"1":{},"44":{},"65":{},"70":{},"71":{},"83":{}},"component":{}}],["length>0",{"_index":3504,"title":{},"name":{},"text":{"70":{}},"component":{}}],["less",{"_index":858,"title":{"83-1":{}},"name":{},"text":{"7":{},"26":{},"28":{},"44":{},"65":{},"69":{},"83":{},"85":{}},"component":{}}],["let",{"_index":1770,"title":{},"name":{},"text":{"22":{},"38":{},"42":{},"91":{}},"component":{}}],["let’",{"_index":1458,"title":{},"name":{},"text":{"14":{},"65":{},"69":{}},"component":{}}],["level",{"_index":156,"title":{"68-3":{},"80-2":{}},"name":{},"text":{"1":{},"2":{},"5":{},"29":{},"41":{},"44":{},"54":{},"55":{},"70":{},"71":{},"74":{},"77":{},"83":{},"84":{},"85":{}},"component":{}}],["leverag",{"_index":940,"title":{},"name":{},"text":{"8":{},"59":{}},"component":{}}],["li",{"_index":937,"title":{},"name":{},"text":{"8":{},"80":{}},"component":{}}],["lib",{"_index":1366,"title":{},"name":{},"text":{"13":{}},"component":{}}],["lib.cairo",{"_index":1325,"title":{},"name":{},"text":{"12":{}},"component":{}}],["libfunc",{"_index":2347,"title":{},"name":{},"text":{"42":{}},"component":{}}],["librari",{"_index":1297,"title":{"85-6":{},"85-13":{},"85-20":{},"85-26":{},"85-32":{},"85-39":{},"85-45":{},"85-52":{},"85-58":{},"85-70":{}},"name":{},"text":{"11":{},"41":{},"44":{},"72":{},"73":{},"83":{},"85":{},"86":{},"87":{},"88":{},"91":{}},"component":{}}],["library_cal",{"_index":2731,"title":{"85-34":{}},"name":{},"text":{"44":{},"79":{}},"component":{}}],["library_call_syscal",{"_index":3910,"title":{},"name":{},"text":{"85":{}},"component":{}}],["libs/papyru",{"_index":2776,"title":{},"name":{},"text":{"45":{}},"component":{}}],["libs/starknet",{"_index":2292,"title":{},"name":{},"text":{"41":{}},"component":{}}],["life",{"_index":2650,"title":{},"name":{"71":{}},"text":{"44":{}},"component":{}}],["lifecycl",{"_index":1270,"title":{"71":{}},"name":{},"text":{"10":{},"22":{},"54":{},"69":{},"71":{}},"component":{}}],["lifetim",{"_index":2965,"title":{},"name":{},"text":{"58":{}},"component":{}}],["light",{"_index":856,"title":{},"name":{},"text":{"7":{},"69":{}},"component":{}}],["limb",{"_index":3832,"title":{},"name":{},"text":{"83":{}},"component":{}}],["limit",{"_index":14,"title":{"1-8":{},"33-5":{},"54-2":{},"65-4":{}},"name":{},"text":{"1":{},"5":{},"8":{},"9":{},"33":{},"39":{},"41":{},"42":{},"44":{},"49":{},"54":{},"56":{},"57":{},"65":{},"68":{},"71":{},"73":{},"77":{},"80":{}},"component":{}}],["lincoln",{"_index":1654,"title":{},"name":{},"text":{"17":{}},"component":{}}],["line",{"_index":1179,"title":{"10-1":{},"41-15":{}},"name":{},"text":{"10":{},"11":{},"13":{},"17":{},"41":{},"42":{},"44":{},"69":{},"73":{},"80":{},"88":{},"91":{}},"component":{}}],["link",{"_index":1190,"title":{"29-3":{}},"name":{},"text":{"10":{},"12":{},"14":{},"22":{},"42":{}},"component":{}}],["lint",{"_index":3951,"title":{"87-7":{}},"name":{},"text":{"87":{},"89":{}},"component":{}}],["linux",{"_index":1646,"title":{"17-4":{},"17-7":{}},"name":{},"text":{"17":{}},"component":{}}],["liquid",{"_index":1972,"title":{},"name":{},"text":{"33":{}},"component":{}}],["list",{"_index":431,"title":{"33-4":{},"89-2":{}},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"13":{},"16":{},"18":{},"20":{},"30":{},"33":{},"38":{},"39":{},"40":{},"42":{},"44":{},"45":{},"46":{},"47":{},"63":{},"65":{},"66":{},"67":{},"68":{},"71":{},"72":{},"74":{},"77":{},"83":{},"84":{},"89":{}},"component":{}}],["live",{"_index":618,"title":{},"name":{},"text":{"5":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"42":{},"44":{},"87":{}},"component":{}}],["load",{"_index":944,"title":{},"name":{},"text":{"8":{},"44":{},"68":{},"69":{},"90":{}},"component":{}}],["local",{"_index":885,"title":{"16":{},"16-2":{},"16-4":{},"16-5":{},"16-6":{},"21-3":{}},"name":{},"text":{"7":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"42":{},"68":{},"73":{},"85":{},"90":{}},"component":{}}],["locat",{"_index":314,"title":{},"name":{},"text":{"2":{},"10":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{}},"component":{}}],["lock",{"_index":656,"title":{},"name":{},"text":{"5":{},"17":{},"22":{},"25":{},"29":{},"30":{},"33":{},"38":{},"39":{}},"component":{}}],["lockup",{"_index":1889,"title":{},"name":{},"text":{"29":{}},"component":{}}],["log",{"_index":2206,"title":{},"name":{},"text":{"41":{},"42":{},"65":{},"66":{},"84":{}},"component":{}}],["logarithm",{"_index":947,"title":{},"name":{},"text":{"8":{}},"component":{}}],["logic",{"_index":291,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"22":{},"54":{},"55":{},"57":{},"72":{},"85":{}},"component":{}}],["logmessagetol1",{"_index":3320,"title":{},"name":{},"text":{"65":{},"66":{},"67":{}},"component":{}}],["logmessagetol2",{"_index":3375,"title":{"67-71":{}},"name":{},"text":{"67":{}},"component":{}}],["logo.svg",{"_index":1403,"title":{},"name":{},"text":{"13":{}},"component":{}}],["logstateupd",{"_index":2565,"title":{},"name":{},"text":{"44":{}},"component":{}}],["long",{"_index":696,"title":{},"name":{},"text":{"5":{},"35":{},"68":{},"83":{}},"component":{}}],["longer",{"_index":200,"title":{},"name":{},"text":{"1":{},"38":{},"41":{},"42":{},"44":{},"68":{},"77":{},"83":{}},"component":{}}],["look",{"_index":1748,"title":{},"name":{},"text":{"21":{},"64":{},"73":{},"77":{}},"component":{}}],["lookup",{"_index":1127,"title":{},"name":{},"text":{"9":{}},"component":{}}],["loop",{"_index":886,"title":{},"name":{},"text":{"7":{}},"component":{}}],["lose",{"_index":1248,"title":{},"name":{},"text":{"10":{},"57":{},"66":{},"69":{},"77":{}},"component":{}}],["loss",{"_index":793,"title":{},"name":{},"text":{"5":{},"33":{}},"component":{}}],["lost",{"_index":800,"title":{},"name":{},"text":{"5":{}},"component":{}}],["lot",{"_index":3468,"title":{},"name":{},"text":{"69":{},"73":{}},"component":{}}],["low",{"_index":155,"title":{"80-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"44":{},"54":{},"60":{},"74":{},"83":{},"84":{}},"component":{}}],["lower",{"_index":967,"title":{},"name":{},"text":{"8":{},"12":{},"24":{},"69":{},"85":{}},"component":{}}],["lowerbann",{"_index":1406,"title":{},"name":{},"text":{"13":{}},"component":{}}],["luck",{"_index":1695,"title":{},"name":{},"text":{"18":{},"19":{}},"component":{}}],["luckili",{"_index":1598,"title":{},"name":{},"text":{"16":{}},"component":{}}],["lusd",{"_index":1980,"title":{},"name":{},"text":{"33":{}},"component":{}}],["ly",{"_index":3643,"title":{},"name":{},"text":{"73":{}},"component":{}}],["m",{"_index":1869,"title":{},"name":{},"text":{"29":{},"65":{}},"component":{}}],["m1",{"_index":3121,"title":{},"name":{},"text":{"63":{}},"component":{}}],["m\\ge",{"_index":3238,"title":{},"name":{},"text":{"65":{}},"component":{}}],["machin",{"_index":338,"title":{},"name":{},"text":{"2":{},"8":{},"65":{},"68":{},"69":{},"87":{}},"component":{}}],["maco",{"_index":1645,"title":{"17-4":{},"17-7":{}},"name":{},"text":{"17":{}},"component":{}}],["madara",{"_index":1813,"title":{},"name":{},"text":{"25":{},"45":{}},"component":{}}],["made",{"_index":553,"title":{},"name":{},"text":{"5":{},"41":{},"42":{}},"component":{}}],["main",{"_index":429,"title":{},"name":{},"text":{"2":{},"9":{},"23":{},"29":{},"38":{},"44":{},"53":{},"68":{},"69":{},"72":{}},"component":{}}],["mainnet",{"_index":30,"title":{},"name":{},"text":{"1":{},"9":{},"10":{},"13":{},"20":{},"29":{},"33":{},"36":{},"39":{},"40":{},"42":{},"44":{},"47":{},"52":{},"59":{},"82":{},"88":{},"90":{}},"component":{}}],["mainnet.json",{"_index":2803,"title":{},"name":{},"text":{"47":{}},"component":{}}],["mainnet.starknet.io",{"_index":48,"title":{},"name":{},"text":{"1":{}},"component":{}}],["mainnet.starknet.io/feeder_gateway",{"_index":1201,"title":{},"name":{},"text":{"10":{}},"component":{}}],["mainnet.starknet.io/gateway",{"_index":1203,"title":{},"name":{},"text":{"10":{}},"component":{}}],["maintain",{"_index":136,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"9":{},"29":{},"41":{},"66":{},"68":{},"69":{},"76":{},"87":{},"88":{}},"component":{}}],["mainten",{"_index":632,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["major",{"_index":633,"title":{},"name":{},"text":{"5":{},"42":{},"89":{}},"component":{}}],["make",{"_index":181,"title":{},"name":{},"text":{"1":{},"8":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"38":{},"39":{},"41":{},"44":{},"54":{},"57":{},"59":{},"60":{},"69":{},"73":{},"81":{},"86":{},"90":{}},"component":{}}],["maker",{"_index":2850,"title":{},"name":{},"text":{"49":{}},"component":{}}],["malici",{"_index":862,"title":{},"name":{},"text":{"7":{},"44":{},"55":{},"68":{},"73":{}},"component":{}}],["manag",{"_index":159,"title":{"28":{},"28-1":{},"28-4":{},"29-13":{},"33-1":{}},"name":{"28":{}},"text":{"1":{},"5":{},"9":{},"10":{},"15":{},"17":{},"22":{},"24":{},"28":{},"29":{},"33":{},"38":{},"42":{},"55":{},"57":{},"69":{},"76":{},"87":{}},"component":{}}],["mandatori",{"_index":2706,"title":{},"name":{},"text":{"44":{},"55":{}},"component":{}}],["mani",{"_index":833,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"39":{},"54":{},"90":{}},"component":{}}],["manipul",{"_index":3281,"title":{},"name":{},"text":{"65":{},"91":{}},"component":{}}],["manner",{"_index":3206,"title":{},"name":{},"text":{"64":{},"65":{},"66":{},"70":{},"75":{}},"component":{}}],["mansion",{"_index":3953,"title":{},"name":{},"text":{"87":{},"88":{}},"component":{}}],["manual",{"_index":1197,"title":{},"name":{},"text":{"10":{},"17":{},"33":{},"44":{},"48":{},"66":{}},"component":{}}],["map",{"_index":1017,"title":{"9-2":{}},"name":{},"text":{"9":{},"41":{},"44":{},"60":{},"66":{},"70":{},"72":{},"80":{}},"component":{}}],["mar",{"_index":2523,"title":{"44-39":{}},"name":{},"text":{},"component":{}}],["march",{"_index":707,"title":{"44-18":{}},"name":{},"text":{"5":{},"44":{}},"component":{}}],["margin",{"_index":2541,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["mark",{"_index":1913,"title":{},"name":{},"text":{"30":{},"42":{},"69":{},"71":{},"81":{}},"component":{}}],["market",{"_index":1894,"title":{},"name":{},"text":{"29":{},"72":{}},"component":{}}],["massiv",{"_index":376,"title":{},"name":{},"text":{"2":{},"3":{}},"component":{}}],["master",{"_index":2655,"title":{},"name":{},"text":{"44":{}},"component":{}}],["match",{"_index":1839,"title":{},"name":{},"text":{"26":{},"38":{},"42":{},"53":{},"55":{}},"component":{}}],["materi",{"_index":750,"title":{},"name":{},"text":{"5":{}},"component":{}}],["mathbb{f}_p",{"_index":2998,"title":{},"name":{},"text":{"60":{},"61":{}},"component":{}}],["mathbb{f}_p^*\\rightarrow",{"_index":3006,"title":{},"name":{},"text":{"60":{}},"component":{}}],["mathbb{f}_p^2\\rightarrow\\mathbb{f}_p",{"_index":3004,"title":{},"name":{},"text":{"60":{}},"component":{}}],["mathemat",{"_index":332,"title":{"70-8":{}},"name":{},"text":{"2":{},"4":{}},"component":{}}],["matter",{"_index":3732,"title":{},"name":{},"text":{"77":{}},"component":{}}],["matthieu",{"_index":2384,"title":{},"name":{},"text":{"42":{}},"component":{}}],["matur",{"_index":3463,"title":{},"name":{},"text":{"69":{}},"component":{}}],["maven",{"_index":3980,"title":{},"name":{},"text":{"88":{}},"component":{}}],["max",{"_index":118,"title":{},"name":{},"text":{"1":{},"41":{},"42":{},"65":{}},"component":{}}],["max_amount",{"_index":3561,"title":{},"name":{},"text":{"72":{},"82":{}},"component":{}}],["max_fe",{"_index":2728,"title":{},"name":{},"text":{"44":{},"65":{},"71":{},"72":{},"82":{}},"component":{}}],["max_k",{"_index":3218,"title":{},"name":{},"text":{"65":{}},"component":{}}],["max_k[\\text{cairoresourceusage}_k",{"_index":3287,"title":{},"name":{},"text":{"65":{}},"component":{}}],["max_l1_msg_fe",{"_index":3384,"title":{},"name":{},"text":{"67":{}},"component":{}}],["max_price_per_unit",{"_index":3562,"title":{},"name":{},"text":{"72":{},"82":{}},"component":{}}],["maxim",{"_index":1864,"title":{},"name":{},"text":{"29":{},"54":{},"65":{},"80":{}},"component":{}}],["maximum",{"_index":82,"title":{},"name":{},"text":{"1":{},"29":{},"36":{},"41":{},"42":{},"44":{},"54":{},"65":{},"67":{},"71":{},"72":{},"82":{}},"component":{}}],["mean",{"_index":943,"title":{},"name":{},"text":{"8":{},"42":{},"44":{},"49":{},"57":{},"64":{},"68":{},"69":{},"73":{},"77":{},"82":{}},"component":{}}],["meant",{"_index":557,"title":{},"name":{},"text":{"5":{},"42":{}},"component":{}}],["measur",{"_index":121,"title":{},"name":{},"text":{"1":{},"2":{},"10":{},"65":{},"70":{}},"component":{}}],["mechan",{"_index":112,"title":{"65":{},"66":{},"58-1":{},"68-4":{}},"name":{"65":{},"66":{}},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"22":{},"39":{},"44":{},"57":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"85":{}},"component":{}}],["medium",{"_index":2691,"title":{},"name":{},"text":{"44":{}},"component":{}}],["meet",{"_index":755,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["member",{"_index":655,"title":{},"name":{},"text":{"5":{},"22":{},"33":{},"44":{},"55":{},"77":{},"81":{},"83":{},"84":{}},"component":{}}],["member’",{"_index":1779,"title":{},"name":{},"text":{"22":{}},"component":{}}],["memori",{"_index":453,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"38":{},"44":{},"68":{}},"component":{}}],["memorypag",{"_index":1172,"title":{},"name":{},"text":{"9":{}},"component":{}}],["memorypagefactregistri",{"_index":1028,"title":{},"name":{},"text":{"9":{}},"component":{}}],["mempool",{"_index":845,"title":{"7-3":{},"7-6":{}},"name":{},"text":{"7":{},"44":{},"54":{},"58":{},"69":{},"71":{}},"component":{}}],["memstorag",{"_index":2271,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mention",{"_index":1293,"title":{},"name":{},"text":{"11":{},"68":{}},"component":{}}],["menu",{"_index":497,"title":{},"name":{},"text":{"4":{}},"component":{}}],["merkl",{"_index":1035,"title":{"70-5":{}},"name":{},"text":{"9":{},"41":{},"42":{},"63":{},"68":{},"69":{},"70":{}},"component":{}}],["merklestat",{"_index":1174,"title":{},"name":{},"text":{"9":{}},"component":{}}],["merklestatementcontract",{"_index":1034,"title":{},"name":{},"text":{"9":{}},"component":{}}],["messag",{"_index":105,"title":{"66":{},"67":{},"65-20":{},"66-1":{},"66-2":{},"66-3":{},"66-4":{},"66-5":{},"66-6":{},"85-7":{}},"name":{"66":{},"67":{}},"text":{"1":{},"2":{},"10":{},"11":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"63":{},"65":{},"66":{},"67":{},"68":{},"71":{},"72":{},"85":{}},"component":{}}],["message_fe",{"_index":3385,"title":{},"name":{},"text":{"67":{}},"component":{}}],["message_hash",{"_index":2184,"title":{},"name":{},"text":{"41":{}},"component":{}}],["message_receiv",{"_index":3877,"title":{},"name":{},"text":{"84":{}},"component":{}}],["message_received.emit",{"_index":3882,"title":{},"name":{},"text":{"84":{}},"component":{}}],["messagecancellationdelay",{"_index":3373,"title":{"67-46":{}},"name":{},"text":{"67":{}},"component":{}}],["messages_s",{"_index":3539,"title":{},"name":{},"text":{"71":{}},"component":{}}],["messagetol2cancel",{"_index":3376,"title":{"67-75":{}},"name":{},"text":{"67":{}},"component":{}}],["messagetol2cancellationstart",{"_index":3377,"title":{"67-79":{}},"name":{},"text":{"67":{}},"component":{}}],["messagetyp",{"_index":3854,"title":{},"name":{},"text":{"83":{}},"component":{}}],["messagetype::a",{"_index":3855,"title":{},"name":{},"text":{"83":{}},"component":{}}],["messagetype::b",{"_index":3856,"title":{},"name":{},"text":{"83":{}},"component":{}}],["messagetype::c",{"_index":3857,"title":{},"name":{},"text":{"83":{}},"component":{}}],["met",{"_index":87,"title":{},"name":{},"text":{"1":{}},"component":{}}],["meta",{"_index":3165,"title":{},"name":{},"text":{"64":{}},"component":{}}],["metadata",{"_index":1390,"title":{},"name":{},"text":{"13":{}},"component":{}}],["metamask",{"_index":3947,"title":{},"name":{},"text":{"86":{}},"component":{}}],["meter",{"_index":3641,"title":{},"name":{},"text":{"73":{}},"component":{}}],["method",{"_index":297,"title":{"59-9":{}},"name":{},"text":{"2":{},"9":{},"17":{},"41":{},"42":{},"44":{},"49":{},"56":{},"64":{},"69":{},"71":{},"73":{},"85":{}},"component":{}}],["metric",{"_index":2132,"title":{},"name":{},"text":{"41":{},"42":{},"52":{},"65":{}},"component":{}}],["metricsport",{"_index":2220,"title":{},"name":{},"text":{"41":{}},"component":{}}],["metricsport:$metricsport",{"_index":2213,"title":{},"name":{},"text":{"41":{}},"component":{}}],["mi",{"_index":3134,"title":{},"name":{},"text":{"63":{}},"component":{}}],["microsoft",{"_index":3959,"title":{},"name":{},"text":{"87":{}},"component":{}}],["mid",{"_index":3607,"title":{},"name":{},"text":{"73":{}},"component":{}}],["migrat",{"_index":206,"title":{"49":{},"81":{},"41-16":{}},"name":{"49":{}},"text":{"1":{},"41":{},"42":{},"44":{},"49":{},"59":{}},"component":{}}],["mileston",{"_index":1859,"title":{},"name":{},"text":{"29":{}},"component":{}}],["million",{"_index":703,"title":{},"name":{},"text":{"5":{},"44":{}},"component":{}}],["millisecond",{"_index":1504,"title":{},"name":{},"text":{"14":{}},"component":{}}],["min",{"_index":183,"title":{},"name":{},"text":{"1":{}},"component":{}}],["min_proof_of_work_bit",{"_index":1157,"title":{},"name":{},"text":{"9":{}},"component":{}}],["mind",{"_index":1795,"title":{},"name":{},"text":{"22":{},"65":{}},"component":{}}],["mine",{"_index":3436,"title":{},"name":{},"text":{"69":{}},"component":{}}],["miner",{"_index":576,"title":{},"name":{},"text":{"5":{},"69":{}},"component":{}}],["minim",{"_index":424,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"9":{},"12":{},"33":{}},"component":{}}],["minimalist",{"_index":1391,"title":{},"name":{},"text":{"13":{}},"component":{}}],["minimum",{"_index":1819,"title":{},"name":{},"text":{"25":{},"29":{},"30":{},"37":{}},"component":{}}],["minor",{"_index":2278,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["mint",{"_index":647,"title":{"22-5":{},"29-7":{},"29-13":{},"29-16":{}},"name":{},"text":{"5":{},"22":{},"29":{},"39":{},"66":{}},"component":{}}],["minut",{"_index":1577,"title":{},"name":{},"text":{"15":{},"29":{}},"component":{}}],["mirror",{"_index":1705,"title":{},"name":{},"text":{"20":{}},"component":{}}],["misconcept",{"_index":3421,"title":{"69-5":{}},"name":{},"text":{},"component":{}}],["misinterpret",{"_index":3458,"title":{},"name":{},"text":{"69":{}},"component":{}}],["mismatch",{"_index":2365,"title":{},"name":{},"text":{"42":{},"44":{}},"component":{}}],["miss",{"_index":2236,"title":{},"name":{},"text":{"41":{},"42":{},"67":{},"89":{}},"component":{}}],["mission",{"_index":686,"title":{},"name":{},"text":{"5":{}},"component":{}}],["mistak",{"_index":3968,"title":{},"name":{},"text":{"87":{}},"component":{}}],["misunderstand",{"_index":3454,"title":{},"name":{},"text":{"69":{}},"component":{}}],["mitig",{"_index":1985,"title":{},"name":{},"text":{"33":{},"66":{}},"component":{}}],["mix",{"_index":2893,"title":{},"name":{},"text":{"53":{}},"component":{}}],["mn",{"_index":3125,"title":{},"name":{},"text":{"63":{}},"component":{}}],["mock",{"_index":3998,"title":{},"name":{},"text":{"90":{}},"component":{}}],["mod",{"_index":1338,"title":{},"name":{},"text":{"12":{},"15":{},"77":{},"81":{}},"component":{}}],["mode",{"_index":1031,"title":{},"name":{},"text":{"9":{},"82":{},"85":{}},"component":{}}],["model",{"_index":776,"title":{},"name":{},"text":{"5":{},"7":{},"22":{},"42":{}},"component":{}}],["modern",{"_index":1961,"title":{},"name":{},"text":{"33":{},"59":{}},"component":{}}],["modif",{"_index":1560,"title":{},"name":{},"text":{"15":{}},"component":{}}],["modifi",{"_index":1191,"title":{},"name":{},"text":{"10":{},"16":{},"65":{},"77":{},"80":{},"81":{},"85":{}},"component":{}}],["modul",{"_index":1235,"title":{},"name":{},"text":{"10":{},"44":{}},"component":{}}],["modular",{"_index":1754,"title":{},"name":{},"text":{"22":{}},"component":{}}],["moment",{"_index":2019,"title":{},"name":{},"text":{"35":{},"44":{},"67":{},"71":{}},"component":{}}],["monday",{"_index":3847,"title":{},"name":{},"text":{"83":{}},"component":{}}],["monitor",{"_index":993,"title":{},"name":{},"text":{"8":{},"9":{},"41":{},"42":{},"64":{},"69":{}},"component":{}}],["monolith",{"_index":1024,"title":{},"name":{},"text":{"9":{}},"component":{}}],["monospac",{"_index":509,"title":{},"name":{},"text":{"4":{}},"component":{}}],["month",{"_index":705,"title":{},"name":{},"text":{"5":{}},"component":{}}],["more",{"_index":210,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"15":{},"16":{},"17":{},"18":{},"22":{},"25":{},"26":{},"28":{},"31":{},"36":{},"37":{},"39":{},"40":{},"41":{},"42":{},"44":{},"45":{},"48":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"78":{},"81":{},"83":{},"84":{},"85":{},"87":{},"91":{}},"component":{}}],["moreov",{"_index":3411,"title":{},"name":{},"text":{"68":{}},"component":{}}],["mostli",{"_index":2471,"title":{},"name":{},"text":{"42":{},"54":{}},"component":{}}],["motiv",{"_index":2970,"title":{},"name":{},"text":{"59":{}},"component":{}}],["move",{"_index":1930,"title":{},"name":{},"text":{"31":{},"34":{},"41":{},"42":{},"44":{},"69":{},"86":{}},"component":{}}],["movement",{"_index":2049,"title":{},"name":{},"text":{"38":{}},"component":{}}],["ms",{"_index":1483,"title":{},"name":{},"text":{"14":{}},"component":{}}],["msg_to_l1",{"_index":2346,"title":{},"name":{},"text":{"42":{},"66":{}},"component":{}}],["msghash",{"_index":3383,"title":{},"name":{},"text":{"67":{}},"component":{}}],["much",{"_index":1837,"title":{},"name":{},"text":{"26":{},"69":{},"87":{}},"component":{}}],["mul_mod",{"_index":2576,"title":{},"name":{},"text":{"44":{}},"component":{}}],["multi",{"_index":1946,"title":{},"name":{},"text":{"33":{},"38":{}},"component":{}}],["multical",{"_index":280,"title":{"2-14":{}},"name":{},"text":{},"component":{}}],["multipl",{"_index":380,"title":{"9-1":{}},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"9":{},"10":{},"41":{},"42":{},"44":{},"45":{},"54":{},"57":{},"59":{},"65":{},"66":{},"69":{},"80":{},"82":{},"85":{}},"component":{}}],["multipli",{"_index":3658,"title":{},"name":{},"text":{"74":{}},"component":{}}],["mut",{"_index":2981,"title":{},"name":{},"text":{"59":{},"66":{},"85":{}},"component":{}}],["mutabl",{"_index":2037,"title":{"38-5":{},"38-13":{},"38-21":{},"38-30":{},"38-38":{},"38-47":{},"38-56":{},"38-64":{},"38-73":{},"38-82":{},"38-90":{},"38-98":{},"38-106":{},"38-114":{},"38-122":{},"38-130":{},"67-4":{},"67-11":{},"67-18":{},"67-24":{},"67-30":{},"67-36":{},"67-42":{},"67-48":{},"67-54":{},"67-61":{}},"name":{},"text":{},"component":{}}],["my_struct",{"_index":3860,"title":{},"name":{},"text":{"83":{}},"component":{}}],["mycal",{"_index":1485,"title":{},"name":{},"text":{"14":{}},"component":{}}],["myenum",{"_index":3727,"title":{},"name":{},"text":{"77":{}},"component":{}}],["myenum::var1",{"_index":3735,"title":{},"name":{},"text":{"77":{}},"component":{}}],["mystruct",{"_index":3729,"title":{},"name":{},"text":{"77":{},"83":{}},"component":{}}],["n",{"_index":3048,"title":{},"name":{},"text":{"60":{},"63":{},"65":{},"67":{},"70":{},"72":{}},"component":{}}],["n/a",{"_index":2886,"title":{},"name":{},"text":{"52":{},"66":{},"72":{},"88":{}},"component":{}}],["n=0",{"_index":3067,"title":{},"name":{},"text":{"60":{}},"component":{}}],["n=1",{"_index":3065,"title":{},"name":{},"text":{"60":{}},"component":{}}],["n\\ge",{"_index":3062,"title":{},"name":{},"text":{"60":{},"65":{}},"component":{}}],["n\\ge\\el",{"_index":3237,"title":{},"name":{},"text":{"65":{}},"component":{}}],["n_elm",{"_index":3623,"title":{},"name":{},"text":{"73":{}},"component":{}}],["n_updat",{"_index":2556,"title":{},"name":{},"text":{"44":{}},"component":{}}],["n_updates_len",{"_index":2554,"title":{},"name":{},"text":{"44":{}},"component":{}}],["name",{"_index":191,"title":{"77-5":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"9":{},"10":{},"11":{},"13":{},"14":{},"34":{},"38":{},"41":{},"42":{},"44":{},"45":{},"46":{},"47":{},"49":{},"50":{},"52":{},"54":{},"59":{},"63":{},"72":{},"74":{},"75":{},"77":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"88":{}},"component":{}}],["name_",{"_index":3702,"title":{},"name":{},"text":{"77":{}},"component":{}}],["nascent",{"_index":808,"title":{},"name":{},"text":{"5":{}},"component":{}}],["nativ",{"_index":758,"title":{},"name":{},"text":{"5":{},"57":{},"68":{},"73":{}},"component":{}}],["natur",{"_index":1014,"title":{},"name":{},"text":{"8":{},"44":{}},"component":{}}],["navig",{"_index":1574,"title":{},"name":{},"text":{"15":{},"16":{},"20":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{}},"component":{}}],["near",{"_index":2451,"title":{},"name":{},"text":{"42":{}},"component":{}}],["nearest",{"_index":2618,"title":{},"name":{},"text":{"44":{},"54":{},"82":{},"85":{}},"component":{}}],["necessari",{"_index":985,"title":{},"name":{},"text":{"8":{},"11":{},"12":{},"13":{},"14":{},"16":{},"19":{},"20":{},"29":{},"41":{},"49":{},"68":{},"69":{}},"component":{}}],["necessarili",{"_index":837,"title":{},"name":{},"text":{"5":{},"69":{},"79":{}},"component":{}}],["necessit",{"_index":1162,"title":{},"name":{},"text":{"9":{},"59":{}},"component":{}}],["need",{"_index":757,"title":{"73-1":{},"73-2":{}},"name":{},"text":{"5":{},"8":{},"10":{},"12":{},"14":{},"15":{},"16":{},"20":{},"23":{},"24":{},"38":{},"41":{},"42":{},"44":{},"54":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"72":{},"73":{},"74":{},"76":{},"81":{},"83":{},"87":{},"88":{}},"component":{}}],["neg",{"_index":3822,"title":{},"name":{},"text":{"83":{}},"component":{}}],["neglig",{"_index":2592,"title":{},"name":{},"text":{"44":{}},"component":{}}],["neq",{"_index":3516,"title":{},"name":{},"text":{"70":{}},"component":{}}],["nest",{"_index":3688,"title":{"77-4":{}},"name":{},"text":{"77":{},"80":{}},"component":{}}],["nethermind",{"_index":897,"title":{},"name":{},"text":{"7":{},"25":{},"41":{},"42":{},"45":{},"46":{},"88":{}},"component":{}}],["nethermind.io",{"_index":2790,"title":{},"name":{},"text":{"46":{}},"component":{}}],["nethermind/juno:v0.6.0",{"_index":2215,"title":{},"name":{},"text":{"41":{}},"component":{}}],["nethermind/juno:v0.7.0",{"_index":2197,"title":{},"name":{},"text":{"41":{}},"component":{}}],["nethermind/juno:v0.7.3",{"_index":2171,"title":{},"name":{},"text":{"41":{}},"component":{}}],["network",{"_index":124,"title":{"10-2":{},"42-64":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"10":{},"12":{},"13":{},"14":{},"15":{},"16":{},"22":{},"23":{},"29":{},"39":{},"41":{},"42":{},"51":{},"57":{},"59":{},"66":{},"69":{},"72":{},"76":{},"88":{},"89":{}},"component":{}}],["network=sepolia",{"_index":1713,"title":{},"name":{},"text":{"20":{},"21":{},"25":{}},"component":{}}],["network’",{"_index":168,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"22":{},"29":{},"69":{},"76":{}},"component":{}}],["never",{"_index":2099,"title":{},"name":{},"text":{"39":{},"73":{}},"component":{}}],["new",{"_index":270,"title":{"56":{},"20-2":{},"42-49":{},"42-54":{},"44-10":{},"44-19":{},"56-1":{},"70-1":{}},"name":{"56":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"14":{},"15":{},"16":{},"18":{},"20":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"38":{},"41":{},"42":{},"44":{},"49":{},"56":{},"63":{},"64":{},"65":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"76":{},"79":{},"85":{},"87":{}},"component":{}}],["new_account",{"_index":2696,"title":{},"name":{},"text":{"44":{}},"component":{}}],["new_class_hash1",{"_index":3112,"title":{},"name":{},"text":{"63":{}},"component":{}}],["new_class_hashr",{"_index":3114,"title":{},"name":{},"text":{"63":{}},"component":{}}],["new_nonc",{"_index":2558,"title":{},"name":{},"text":{"44":{}},"component":{}}],["new_nonce1",{"_index":3128,"title":{},"name":{},"text":{"63":{}},"component":{}}],["new_noncek",{"_index":3130,"title":{},"name":{},"text":{"63":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::counter_contract::counterdecreas",{"_index":3698,"title":{},"name":{},"text":{"77":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::counter_contract::counterincreas",{"_index":3697,"title":{},"name":{},"text":{"77":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::counter_contract::ev",{"_index":3699,"title":{},"name":{},"text":{"77":{}},"component":{}}],["new_syntax_test_contract::new_syntax_test_contract::icountercontract",{"_index":3692,"title":{},"name":{},"text":{"77":{}},"component":{}}],["newdelegationpool",{"_index":1912,"title":{},"name":{},"text":{"30":{}},"component":{}}],["newer",{"_index":2479,"title":{},"name":{},"text":{"42":{},"48":{},"70":{}},"component":{}}],["newest",{"_index":2821,"title":{},"name":{},"text":{"48":{}},"component":{}}],["newhead",{"_index":2377,"title":{},"name":{},"text":{"42":{}},"component":{}}],["newli",{"_index":719,"title":{},"name":{},"text":{"5":{},"15":{},"38":{},"64":{},"65":{},"72":{}},"component":{}}],["newslett",{"_index":29,"title":{},"name":{},"text":{"1":{},"44":{},"72":{}},"component":{}}],["newstak",{"_index":1919,"title":{},"name":{},"text":{"30":{}},"component":{}}],["newton",{"_index":2453,"title":{},"name":{},"text":{"42":{}},"component":{}}],["next",{"_index":1357,"title":{"18":{}},"name":{"18":{}},"text":{"13":{},"18":{},"19":{},"40":{},"44":{},"58":{},"64":{},"67":{},"73":{},"77":{},"79":{},"85":{}},"component":{}}],["next.j",{"_index":1312,"title":{},"name":{},"text":{"12":{},"13":{}},"component":{}}],["next/imag",{"_index":1397,"title":{},"name":{},"text":{"13":{}},"component":{}}],["nextj",{"_index":3934,"title":{},"name":{},"text":{"86":{}},"component":{}}],["nft",{"_index":2890,"title":{},"name":{},"text":{"52":{},"57":{}},"component":{}}],["nftscan",{"_index":2889,"title":{},"name":{},"text":{"52":{}},"component":{}}],["ngo",{"_index":694,"title":{},"name":{},"text":{"5":{}},"component":{}}],["nice",{"_index":2458,"title":{},"name":{},"text":{"42":{},"44":{}},"component":{}}],["nil",{"_index":2191,"title":{},"name":{},"text":{"41":{}},"component":{}}],["no_debug_info",{"_index":1278,"title":{"11-17":{}},"name":{},"text":{"11":{}},"component":{}}],["no_opt_unused_funct",{"_index":1281,"title":{"11-20":{}},"name":{},"text":{"11":{}},"component":{}}],["no_wallet",{"_index":1260,"title":{},"name":{},"text":{"10":{},"44":{}},"component":{}}],["node",{"_index":215,"title":{"7":{},"45":{},"2-11":{},"7-1":{},"7-2":{},"7-3":{},"7-4":{},"7-5":{},"7-6":{},"7-7":{},"69-6":{},"69-7":{},"69-8":{},"69-9":{},"70-6":{},"70-8":{}},"name":{"7":{}},"text":{"1":{},"2":{},"7":{},"17":{},"25":{},"29":{},"41":{},"42":{},"44":{},"45":{},"48":{},"53":{},"64":{},"68":{},"69":{},"70":{},"90":{}},"component":{}}],["node.j",{"_index":1311,"title":{},"name":{},"text":{"12":{},"13":{}},"component":{}}],["nodes—play",{"_index":3423,"title":{},"name":{},"text":{"69":{}},"component":{}}],["node’",{"_index":1605,"title":{},"name":{},"text":{"16":{}},"component":{}}],["non",{"_index":521,"title":{},"name":{},"text":{"4":{},"13":{},"41":{},"42":{},"55":{},"65":{},"68":{},"70":{},"73":{},"83":{}},"component":{}}],["nonc",{"_index":1208,"title":{},"name":{},"text":{"10":{},"38":{},"41":{},"42":{},"44":{},"55":{},"56":{},"57":{},"63":{},"64":{},"65":{},"66":{},"67":{},"70":{},"71":{},"72":{},"79":{},"82":{}},"component":{}}],["nonce_data_availability_mod",{"_index":3556,"title":{},"name":{},"text":{"72":{},"82":{}},"component":{}}],["nonce}}_{\\text{64",{"_index":3171,"title":{},"name":{},"text":{"64":{}},"component":{}}],["none",{"_index":2060,"title":{},"name":{},"text":{"38":{},"67":{},"85":{}},"component":{}}],["nonempti",{"_index":3808,"title":{},"name":{},"text":{"82":{}},"component":{}}],["nonpay",{"_index":2061,"title":{},"name":{},"text":{"38":{}},"component":{}}],["nopan",{"_index":3899,"title":{},"name":{},"text":{"85":{}},"component":{}}],["normal",{"_index":520,"title":{},"name":{},"text":{"4":{},"64":{}},"component":{}}],["nostra",{"_index":2864,"title":{},"name":{},"text":{"49":{}},"component":{}}],["not_receiv",{"_index":1266,"title":{},"name":{},"text":{"10":{},"39":{},"71":{}},"component":{}}],["notabl",{"_index":1118,"title":{},"name":{},"text":{"9":{}},"component":{}}],["notat",{"_index":488,"title":{"4":{}},"name":{"4":{}},"text":{"4":{},"73":{}},"component":{}}],["note",{"_index":1261,"title":{"41":{},"42":{},"44":{},"26-3":{},"41-16":{}},"name":{"44":{}},"text":{"10":{},"12":{},"25":{},"28":{},"41":{},"42":{},"43":{},"44":{},"66":{},"68":{},"69":{},"73":{},"80":{},"83":{},"84":{},"85":{}},"component":{}}],["noth",{"_index":827,"title":{},"name":{},"text":{"5":{},"73":{}},"component":{}}],["notic",{"_index":2340,"title":{},"name":{},"text":{"42":{},"65":{},"70":{}},"component":{}}],["notif",{"_index":2373,"title":{},"name":{},"text":{"42":{}},"component":{}}],["notion",{"_index":3606,"title":{},"name":{},"text":{"73":{}},"component":{}}],["nov",{"_index":2515,"title":{"44-32":{},"44-41":{}},"name":{},"text":{},"component":{}}],["novelti",{"_index":2688,"title":{},"name":{},"text":{"44":{}},"component":{}}],["novemb",{"_index":207,"title":{"44-7":{}},"name":{},"text":{"1":{},"5":{}},"component":{}}],["now",{"_index":1355,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"39":{},"41":{},"42":{},"44":{},"57":{},"64":{},"66":{},"68":{},"69":{},"71":{},"72":{},"77":{},"83":{}},"component":{}}],["nownod",{"_index":2764,"title":{},"name":{},"text":{"45":{}},"component":{}}],["npm",{"_index":1359,"title":{},"name":{},"text":{"13":{},"14":{},"88":{}},"component":{}}],["npx",{"_index":1356,"title":{},"name":{},"text":{"13":{}},"component":{}}],["num",{"_index":3185,"title":{},"name":{},"text":{"64":{}},"component":{}}],["num_of_storage_upd",{"_index":3184,"title":{},"name":{},"text":{"64":{}},"component":{}}],["num_security_bit",{"_index":1156,"title":{},"name":{},"text":{"9":{}},"component":{}}],["numashex",{"_index":2255,"title":{},"name":{},"text":{"41":{}},"component":{}}],["number",{"_index":91,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"10":{},"11":{},"14":{},"24":{},"25":{},"27":{},"31":{},"41":{},"42":{},"44":{},"47":{},"54":{},"60":{},"61":{},"63":{},"64":{},"65":{},"67":{},"68":{},"70":{},"71":{},"72":{},"79":{},"82":{},"83":{},"85":{},"91":{}},"component":{}}],["numer",{"_index":999,"title":{},"name":{},"text":{"8":{},"9":{}},"component":{}}],["o",{"_index":3393,"title":{},"name":{},"text":{"68":{}},"component":{}}],["object",{"_index":1437,"title":{},"name":{},"text":{"13":{},"14":{},"44":{},"53":{},"72":{},"75":{},"79":{}},"component":{}}],["oblig",{"_index":753,"title":{},"name":{},"text":{"5":{}},"component":{}}],["observ",{"_index":3467,"title":{},"name":{},"text":{"69":{}},"component":{}}],["obtain",{"_index":1228,"title":{},"name":{},"text":{"10":{},"70":{}},"component":{}}],["obviou",{"_index":3608,"title":{},"name":{},"text":{"73":{}},"component":{}}],["occasion",{"_index":2437,"title":{},"name":{},"text":{"42":{}},"component":{}}],["occupi",{"_index":3166,"title":{},"name":{},"text":{"64":{},"65":{}},"component":{}}],["occur",{"_index":2251,"title":{},"name":{},"text":{"41":{},"69":{},"71":{}},"component":{}}],["occurr",{"_index":503,"title":{},"name":{},"text":{"4":{}},"component":{}}],["oct",{"_index":2527,"title":{"44-42":{}},"name":{},"text":{},"component":{}}],["offchain",{"_index":2870,"title":{},"name":{},"text":{"51":{}},"component":{}}],["offer",{"_index":619,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"24":{},"54":{},"57":{},"59":{},"85":{}},"component":{}}],["offici",{"_index":1547,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"30":{},"41":{},"42":{}},"component":{}}],["offload",{"_index":3433,"title":{},"name":{},"text":{"69":{}},"component":{}}],["offset",{"_index":2418,"title":{},"name":{},"text":{"42":{}},"component":{}}],["oklink",{"_index":2887,"title":{},"name":{},"text":{"52":{}},"component":{}}],["oklink.com/starknet",{"_index":2888,"title":{},"name":{},"text":{"52":{}},"component":{}}],["okx",{"_index":3949,"title":{},"name":{},"text":{"86":{}},"component":{}}],["old",{"_index":2074,"title":{"44-5":{}},"name":{},"text":{"38":{},"42":{},"44":{},"49":{},"68":{},"69":{},"82":{},"85":{}},"component":{}}],["older",{"_index":2393,"title":{},"name":{},"text":{"42":{},"48":{},"65":{}},"component":{}}],["omerfirmak",{"_index":2138,"title":{},"name":{},"text":{"41":{}},"component":{}}],["omit",{"_index":1215,"title":{},"name":{},"text":{"10":{},"41":{},"73":{}},"component":{}}],["omnia",{"_index":2765,"title":{},"name":{},"text":{"45":{}},"component":{}}],["on",{"_index":384,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"10":{},"11":{},"14":{},"16":{},"20":{},"22":{},"28":{},"29":{},"31":{},"38":{},"42":{},"44":{},"49":{},"53":{},"54":{},"55":{},"56":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"75":{},"77":{},"78":{},"83":{},"84":{},"85":{}},"component":{}}],["on_rec",{"_index":2005,"title":{"38-170":{}},"name":{},"text":{"34":{},"38":{}},"component":{}}],["onboard",{"_index":677,"title":{},"name":{},"text":{"5":{}},"component":{}}],["onc",{"_index":383,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"13":{},"20":{},"23":{},"26":{},"28":{},"38":{},"42":{},"44":{},"54":{},"68":{},"69":{},"76":{},"84":{},"85":{}},"component":{}}],["onchain",{"_index":648,"title":{"64-5":{},"65-18":{}},"name":{},"text":{"5":{},"8":{},"44":{},"57":{},"64":{},"65":{},"85":{}},"component":{}}],["ongo",{"_index":2133,"title":{},"name":{},"text":{"41":{}},"component":{}}],["onlin",{"_index":3963,"title":{},"name":{},"text":{"87":{}},"component":{}}],["onlyifnoconnector",{"_index":1384,"title":{},"name":{},"text":{"13":{}},"component":{}}],["onward",{"_index":2583,"title":{},"name":{},"text":{"44":{},"65":{},"77":{},"85":{}},"component":{}}],["op",{"_index":2737,"title":{},"name":{},"text":{"44":{}},"component":{}}],["opcod",{"_index":2945,"title":{},"name":{},"text":{"55":{},"65":{}},"component":{}}],["open",{"_index":773,"title":{"28-2":{},"91-3":{}},"name":{},"text":{"5":{},"14":{},"28":{},"45":{},"46":{},"77":{},"86":{},"89":{},"91":{}},"component":{}}],["openzeppelin",{"_index":1236,"title":{},"name":{},"text":{"10":{},"16":{},"20":{},"55":{}},"component":{}}],["openzeppelin’",{"_index":2933,"title":{},"name":{},"text":{"54":{}},"component":{}}],["oper",{"_index":102,"title":{"28":{},"68":{},"28-1":{},"28-5":{}},"name":{"28":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"22":{},"24":{},"25":{},"28":{},"30":{},"38":{},"39":{},"41":{},"42":{},"57":{},"65":{},"68":{},"69":{},"70":{},"71":{},"72":{},"74":{},"76":{},"85":{}},"component":{}}],["operational_address",{"_index":1823,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["operationaladdresschang",{"_index":1917,"title":{},"name":{},"text":{"30":{}},"component":{}}],["oppos",{"_index":2942,"title":{},"name":{},"text":{"55":{},"65":{}},"component":{}}],["optim",{"_index":316,"title":{"8-5":{},"69-5":{}},"name":{},"text":{"2":{},"8":{},"9":{},"11":{},"20":{},"31":{},"41":{},"42":{},"44":{},"69":{},"74":{},"76":{}},"component":{}}],["optimis",{"_index":2478,"title":{},"name":{},"text":{"42":{}},"component":{}}],["optimist",{"_index":2560,"title":{},"name":{},"text":{"44":{}},"component":{}}],["optimization.if",{"_index":1292,"title":{},"name":{},"text":{"11":{}},"component":{}}],["option",{"_index":257,"title":{"11-6":{},"42-63":{}},"name":{"11":{}},"text":{"1":{},"4":{},"10":{},"14":{},"16":{},"29":{},"38":{},"41":{},"42":{},"65":{}},"component":{}}],["oracl",{"_index":2868,"title":{"51":{}},"name":{"51":{}},"text":{"51":{}},"component":{}}],["order",{"_index":176,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"13":{},"33":{},"35":{},"38":{},"42":{},"44":{},"50":{},"51":{},"57":{},"60":{},"65":{},"67":{},"68":{},"69":{},"70":{},"74":{},"76":{},"83":{}},"component":{}}],["organ",{"_index":692,"title":{},"name":{},"text":{"5":{},"41":{},"70":{},"81":{}},"component":{}}],["orient",{"_index":3769,"title":{},"name":{},"text":{"79":{}},"component":{}}],["origin",{"_index":610,"title":{"59-5":{},"59-6":{}},"name":{},"text":{"5":{},"59":{},"64":{},"79":{},"82":{},"83":{}},"component":{}}],["origin’",{"_index":2989,"title":{},"name":{},"text":{"59":{}},"component":{}}],["os",{"_index":283,"title":{"2-23":{}},"name":{"68":{}},"text":{"2":{},"3":{},"44":{},"65":{},"68":{},"70":{},"73":{},"75":{},"76":{},"82":{},"85":{}},"component":{}}],["os.cairo'",{"_index":3396,"title":{},"name":{},"text":{"68":{}},"component":{}}],["os_program_hash",{"_index":2569,"title":{},"name":{},"text":{"44":{}},"component":{}}],["osec.io",{"_index":2794,"title":{},"name":{},"text":{"46":{}},"component":{}}],["osoutputhead",{"_index":2566,"title":{},"name":{},"text":{"44":{}},"component":{}}],["other",{"_index":1849,"title":{"44-15":{}},"name":{},"text":{"29":{},"41":{}},"component":{}}],["other_contract",{"_index":3754,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["other_contract_addr",{"_index":3695,"title":{},"name":{},"text":{"77":{}},"component":{}}],["otherwis",{"_index":585,"title":{},"name":{},"text":{"5":{},"10":{},"25":{},"44":{},"57":{},"65":{},"66":{},"73":{},"75":{},"85":{}},"component":{}}],["ottersec",{"_index":2793,"title":{},"name":{},"text":{"46":{}},"component":{}}],["ourselv",{"_index":1706,"title":{},"name":{},"text":{"20":{}},"component":{}}],["out",{"_index":726,"title":{},"name":{},"text":{"5":{},"9":{},"16":{},"17":{},"20":{},"32":{},"41":{},"42":{},"44":{},"65":{},"68":{},"77":{},"85":{}},"component":{}}],["outlin",{"_index":558,"title":{},"name":{},"text":{"5":{},"28":{},"57":{}},"component":{}}],["output",{"_index":388,"title":{"11-16":{}},"name":{},"text":{"2":{},"9":{},"11":{},"14":{},"16":{},"20":{},"21":{},"42":{},"44":{},"60":{},"68":{},"70":{},"73":{},"76":{},"77":{},"85":{}},"component":{}}],["output.cairo",{"_index":3404,"title":{},"name":{},"text":{"68":{}},"component":{}}],["output=account.json",{"_index":1606,"title":{},"name":{},"text":{"16":{}},"component":{}}],["outsid",{"_index":835,"title":{},"name":{},"text":{"5":{},"77":{}},"component":{}}],["outsourc",{"_index":3439,"title":{},"name":{},"text":{"69":{}},"component":{}}],["ov",{"_index":1811,"title":{},"name":{},"text":{"25":{}},"component":{}}],["over",{"_index":734,"title":{},"name":{},"text":{"5":{},"23":{},"29":{},"41":{},"44":{},"49":{},"57":{},"60":{},"65":{},"68":{},"72":{},"73":{},"74":{},"77":{}},"component":{}}],["overal",{"_index":161,"title":{"65-9":{},"65-11":{},"65-12":{},"65-17":{}},"name":{},"text":{"1":{},"7":{},"8":{},"22":{},"41":{},"65":{},"71":{}},"component":{}}],["overall_fe",{"_index":2632,"title":{},"name":{},"text":{"44":{}},"component":{}}],["overcom",{"_index":3601,"title":{},"name":{},"text":{"73":{}},"component":{}}],["overflow",{"_index":2336,"title":{},"name":{},"text":{"42":{}},"component":{}}],["overli",{"_index":1246,"title":{},"name":{},"text":{"10":{}},"component":{}}],["overload",{"_index":1506,"title":{},"name":{},"text":{"14":{}},"component":{}}],["overrid",{"_index":2719,"title":{},"name":{},"text":{"44":{}},"component":{}}],["oversight",{"_index":1997,"title":{},"name":{},"text":{"33":{}},"component":{}}],["overview",{"_index":42,"title":{"3":{},"19":{},"29":{},"39":{},"69":{},"7-1":{},"29-6":{},"48-1":{},"54-1":{},"68-3":{}},"name":{"8":{},"19":{},"29":{},"39":{},"69":{},"89":{}},"text":{"1":{},"38":{},"48":{},"53":{}},"component":{}}],["own",{"_index":2943,"title":{},"name":{},"text":{"55":{},"57":{},"69":{}},"component":{}}],["owner",{"_index":2988,"title":{},"name":{},"text":{"59":{},"77":{}},"component":{}}],["ownership",{"_index":2987,"title":{},"name":{},"text":{"59":{}},"component":{}}],["oz",{"_index":1709,"title":{},"name":{},"text":{"20":{}},"component":{}}],["p",{"_index":2211,"title":{},"name":{"61":{}},"text":{"41":{},"60":{},"61":{},"62":{},"68":{},"83":{},"84":{}},"component":{}}],["p1",{"_index":3025,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p2",{"_index":3026,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p2p",{"_index":2134,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["p3\\right]_x",{"_index":3027,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p=2^{251}+17\\cdot",{"_index":2999,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p]_x",{"_index":3033,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p_0",{"_index":3024,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p_1",{"_index":3029,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p_2",{"_index":3030,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p_3",{"_index":3031,"title":{},"name":{},"text":{"60":{}},"component":{}}],["p_l",{"_index":3510,"title":{},"name":{},"text":{"70":{}},"component":{}}],["p_r",{"_index":3513,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pack",{"_index":2562,"title":{},"name":{},"text":{"44":{}},"component":{}}],["packag",{"_index":989,"title":{},"name":{},"text":{"8":{},"10":{},"17":{},"44":{},"87":{},"88":{},"90":{}},"component":{}}],["package.json",{"_index":1360,"title":{},"name":{},"text":{"13":{}},"component":{}}],["pad",{"_index":1425,"title":{},"name":{},"text":{"13":{}},"component":{}}],["page",{"_index":1029,"title":{},"name":{},"text":{"9":{},"13":{},"29":{},"41":{},"48":{},"50":{},"65":{},"72":{},"74":{},"89":{}},"component":{}}],["page.tsx",{"_index":1396,"title":{},"name":{},"text":{"13":{}},"component":{}}],["page’",{"_index":3389,"title":{},"name":{},"text":{"68":{}},"component":{}}],["paid",{"_index":611,"title":{},"name":{},"text":{"5":{},"44":{},"56":{},"65":{},"66":{},"71":{}},"component":{}}],["pair",{"_index":982,"title":{},"name":{},"text":{"8":{},"33":{},"57":{},"75":{},"84":{}},"component":{}}],["panic",{"_index":2194,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["papyru",{"_index":240,"title":{},"name":{},"text":{"1":{},"7":{},"45":{}},"component":{}}],["paradigm",{"_index":2727,"title":{},"name":{},"text":{"44":{}},"component":{}}],["parallel",{"_index":920,"title":{},"name":{},"text":{"8":{},"41":{},"44":{},"57":{},"69":{}},"component":{}}],["paramet",{"_index":1005,"title":{"9-3":{},"9-4":{},"9-5":{},"29-18":{},"38-6":{},"38-14":{},"38-22":{},"38-31":{},"38-39":{},"38-48":{},"38-57":{},"38-65":{},"38-74":{},"38-83":{},"38-91":{},"38-99":{},"38-107":{},"38-115":{},"38-123":{},"38-129":{},"38-137":{},"38-142":{},"38-147":{},"38-152":{},"38-157":{},"38-162":{},"38-167":{},"38-172":{},"67-5":{},"67-12":{},"67-19":{},"67-25":{},"67-31":{},"67-37":{},"67-43":{},"67-49":{},"67-55":{},"67-62":{}},"name":{},"text":{"8":{},"9":{},"10":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"38":{},"47":{},"59":{},"60":{},"64":{},"65":{},"66":{},"67":{},"78":{},"81":{},"85":{}},"component":{}}],["parent",{"_index":2354,"title":{},"name":{},"text":{"42":{},"63":{},"70":{}},"component":{}}],["parent_block_hash",{"_index":3086,"title":{},"name":{},"text":{"63":{}},"component":{}}],["parenthes",{"_index":535,"title":{},"name":{},"text":{"4":{}},"component":{}}],["part",{"_index":460,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"9":{},"10":{},"24":{},"26":{},"29":{},"39":{},"42":{},"44":{},"49":{},"54":{},"60":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{},"77":{},"80":{},"83":{},"84":{},"85":{},"88":{}},"component":{}}],["parti",{"_index":742,"title":{},"name":{},"text":{"5":{},"22":{},"54":{},"55":{},"70":{},"75":{},"76":{}},"component":{}}],["partial",{"_index":676,"title":{},"name":{},"text":{"5":{},"42":{},"44":{},"71":{}},"component":{}}],["particip",{"_index":590,"title":{},"name":{},"text":{"5":{},"8":{},"22":{},"28":{},"29":{},"69":{}},"component":{}}],["particular",{"_index":413,"title":{},"name":{},"text":{"2":{},"5":{},"44":{},"54":{},"55":{},"85":{}},"component":{}}],["particularli",{"_index":1161,"title":{},"name":{},"text":{"9":{},"72":{},"85":{}},"component":{}}],["partli",{"_index":745,"title":{},"name":{},"text":{"5":{}},"component":{}}],["partner",{"_index":664,"title":{},"name":{},"text":{"5":{}},"component":{}}],["pass",{"_index":1237,"title":{},"name":{},"text":{"10":{},"22":{},"26":{},"35":{},"38":{},"42":{},"59":{},"67":{},"68":{},"71":{},"72":{},"78":{}},"component":{}}],["passiv",{"_index":2951,"title":{},"name":{},"text":{"57":{}},"component":{}}],["password",{"_index":1621,"title":{},"name":{},"text":{"16":{},"20":{},"21":{}},"component":{}}],["past",{"_index":360,"title":{},"name":{},"text":{"2":{},"14":{},"54":{}},"component":{}}],["patch",{"_index":2273,"title":{},"name":{},"text":{"41":{}},"component":{}}],["path",{"_index":511,"title":{},"name":{},"text":{"4":{},"8":{},"9":{},"10":{},"11":{},"16":{},"20":{},"41":{},"42":{},"68":{},"70":{},"73":{}},"component":{}}],["pathfind",{"_index":237,"title":{"42":{}},"name":{"42":{}},"text":{"1":{},"7":{},"25":{},"42":{},"45":{},"48":{},"64":{}},"component":{}}],["pathfinder_getproof",{"_index":2421,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pathfinder_gettransactionstatu",{"_index":2414,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pathfinder_subscribe_newhead",{"_index":2378,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pathfinder_vers",{"_index":2476,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pathfinder’",{"_index":2758,"title":{},"name":{},"text":{"45":{},"64":{}},"component":{}}],["patricia",{"_index":2299,"title":{"70-5":{}},"name":{},"text":{"41":{},"44":{},"63":{},"70":{}},"component":{}}],["pattern",{"_index":4005,"title":{},"name":{},"text":{"91":{}},"component":{}}],["paus",{"_index":1835,"title":{},"name":{},"text":{"26":{},"30":{}},"component":{}}],["pay",{"_index":606,"title":{},"name":{},"text":{"5":{},"12":{},"20":{},"36":{},"40":{},"44":{},"54":{},"57":{},"65":{},"66":{},"71":{},"72":{},"82":{}},"component":{}}],["payabl",{"_index":2059,"title":{},"name":{},"text":{"38":{},"66":{},"67":{}},"component":{}}],["payableamount",{"_index":2029,"title":{},"name":{},"text":{"36":{}},"component":{}}],["payload",{"_index":2065,"title":{"65-22":{}},"name":{},"text":{"38":{},"65":{},"66":{},"67":{},"71":{},"85":{}},"component":{}}],["payload.append",{"_index":3331,"title":{},"name":{},"text":{"66":{},"85":{}},"component":{}}],["payload.length",{"_index":3344,"title":{},"name":{},"text":{"66":{}},"component":{}}],["payload.span",{"_index":3336,"title":{},"name":{},"text":{"66":{}},"component":{}}],["payload1",{"_index":3148,"title":{},"name":{},"text":{"63":{}},"component":{}}],["payload[1",{"_index":3332,"title":{},"name":{},"text":{"66":{}},"component":{}}],["payload[2",{"_index":3333,"title":{},"name":{},"text":{"66":{}},"component":{}}],["payloadn",{"_index":3151,"title":{},"name":{},"text":{"63":{}},"component":{}}],["paymast",{"_index":2956,"title":{},"name":{},"text":{"57":{},"82":{}},"component":{}}],["paymaster_data",{"_index":3557,"title":{},"name":{},"text":{"72":{},"82":{}},"component":{}}],["payment",{"_index":2653,"title":{"58-1":{}},"name":{},"text":{"44":{},"54":{}},"component":{}}],["peckshield",{"_index":2795,"title":{},"name":{},"text":{"46":{}},"component":{}}],["peckshield.com",{"_index":2796,"title":{},"name":{},"text":{"46":{}},"component":{}}],["pedersen",{"_index":327,"title":{"60-3":{},"60-7":{}},"name":{},"text":{"2":{},"9":{},"41":{},"60":{},"65":{},"66":{},"70":{},"72":{},"74":{},"78":{},"80":{},"84":{}},"component":{}}],["pedersen.cairo",{"_index":3650,"title":{},"name":{},"text":{"74":{}},"component":{}}],["pedersenhashpoint",{"_index":1123,"title":{},"name":{},"text":{"9":{}},"component":{}}],["pedersenhashpointsxcolumn",{"_index":1049,"title":{},"name":{},"text":{"9":{}},"component":{}}],["pedersenhashpointsycolumn",{"_index":1051,"title":{},"name":{},"text":{"9":{}},"component":{}}],["peer",{"_index":2223,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pend",{"_index":85,"title":{},"name":{},"text":{"1":{},"10":{},"13":{},"38":{},"42":{},"44":{},"67":{},"83":{}},"component":{}}],["pending_word",{"_index":3862,"title":{},"name":{},"text":{"83":{}},"component":{}}],["pending_word_len",{"_index":3863,"title":{},"name":{},"text":{"83":{}},"component":{}}],["pendingtransact",{"_index":2180,"title":{},"name":{},"text":{"41":{}},"component":{}}],["peopl",{"_index":3457,"title":{},"name":{},"text":{"69":{}},"component":{}}],["per",{"_index":131,"title":{},"name":{},"text":{"1":{},"16":{},"17":{},"33":{},"41":{},"42":{},"44":{},"65":{}},"component":{}}],["percentag",{"_index":699,"title":{},"name":{},"text":{"5":{},"25":{},"28":{},"29":{}},"component":{}}],["perform",{"_index":138,"title":{"34":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"10":{},"28":{},"29":{},"31":{},"35":{},"41":{},"42":{},"44":{},"54":{},"56":{},"64":{},"66":{},"69":{},"71":{},"74":{},"76":{}},"component":{}}],["period",{"_index":728,"title":{},"name":{},"text":{"5":{},"22":{},"26":{},"29":{},"38":{},"39":{}},"component":{}}],["perman",{"_index":803,"title":{},"name":{},"text":{"5":{}},"component":{}}],["permissionless",{"_index":435,"title":{},"name":{},"text":{"2":{},"3":{},"32":{},"39":{}},"component":{}}],["permissionlessli",{"_index":1945,"title":{},"name":{},"text":{"33":{}},"component":{}}],["permit",{"_index":732,"title":{},"name":{},"text":{"5":{}},"component":{}}],["permut",{"_index":3037,"title":{},"name":{},"text":{"60":{},"74":{}},"component":{}}],["persist",{"_index":3771,"title":{},"name":{},"text":{"80":{}},"component":{}}],["person",{"_index":587,"title":{},"name":{},"text":{"5":{}},"component":{}}],["pertain",{"_index":972,"title":{},"name":{},"text":{"8":{}},"component":{}}],["pertin",{"_index":2496,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pessimist",{"_index":3308,"title":{},"name":{},"text":{"65":{}},"component":{}}],["phase",{"_index":1856,"title":{},"name":{},"text":{"29":{},"44":{},"71":{}},"component":{}}],["phone",{"_index":2964,"title":{},"name":{},"text":{"57":{}},"component":{}}],["phone’",{"_index":2962,"title":{},"name":{},"text":{"57":{}},"component":{}}],["phrase",{"_index":1651,"title":{},"name":{},"text":{"17":{},"57":{}},"component":{}}],["pipelin",{"_index":915,"title":{"8-3":{}},"name":{},"text":{"41":{}},"component":{}}],["pivot",{"_index":3683,"title":{},"name":{},"text":{"76":{}},"component":{}}],["place",{"_index":1193,"title":{},"name":{},"text":{"10":{},"22":{},"39":{},"47":{},"69":{},"77":{}},"component":{}}],["placehold",{"_index":3131,"title":{},"name":{},"text":{"63":{},"72":{}},"component":{}}],["plain",{"_index":1622,"title":{},"name":{},"text":{"16":{}},"component":{}}],["plan",{"_index":649,"title":{},"name":{},"text":{"5":{},"49":{},"69":{},"73":{}},"component":{}}],["play",{"_index":1013,"title":{},"name":{},"text":{"8":{},"22":{},"76":{}},"component":{}}],["player",{"_index":3435,"title":{},"name":{},"text":{"69":{}},"component":{}}],["playground",{"_index":3761,"title":{"87-5":{}},"name":{},"text":{"77":{},"87":{},"89":{}},"component":{}}],["playwithcairo",{"_index":1433,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["playwithcairo.jsx",{"_index":1459,"title":{},"name":{},"text":{"14":{}},"component":{}}],["pleas",{"_index":1427,"title":{},"name":{},"text":{"13":{},"30":{},"42":{},"44":{},"89":{}},"component":{}}],["pledg",{"_index":731,"title":{},"name":{},"text":{"5":{}},"component":{}}],["plu",{"_index":3259,"title":{},"name":{},"text":{"65":{},"79":{}},"component":{}}],["pluggabl",{"_index":3742,"title":{},"name":{},"text":{"77":{}},"component":{}}],["plugin",{"_index":1671,"title":{"91-2":{}},"name":{},"text":{"17":{},"89":{},"91":{}},"component":{}}],["pmod{p",{"_index":3077,"title":{},"name":{},"text":{"62":{}},"component":{}}],["pod",{"_index":2157,"title":{},"name":{},"text":{"41":{}},"component":{}}],["point",{"_index":349,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"41":{},"44":{},"54":{},"60":{},"62":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"77":{},"79":{},"80":{},"84":{}},"component":{}}],["pointer",{"_index":2192,"title":{},"name":{},"text":{"41":{}},"component":{}}],["polici",{"_index":1876,"title":{},"name":{},"text":{"29":{}},"component":{}}],["poll",{"_index":2344,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pollut",{"_index":2925,"title":{},"name":{},"text":{"54":{}},"component":{}}],["polylogarithm",{"_index":422,"title":{},"name":{},"text":{"2":{}},"component":{}}],["polynomi",{"_index":1148,"title":{},"name":{},"text":{"9":{},"73":{}},"component":{}}],["pool",{"_index":1750,"title":{"31":{},"22-3":{},"28-2":{}},"name":{"31":{}},"text":{"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"33":{},"42":{},"66":{}},"component":{}}],["pool_en",{"_index":1824,"title":{},"name":{},"text":{"25":{}},"component":{}}],["pool_memb",{"_index":1802,"title":{},"name":{},"text":{"23":{},"26":{}},"component":{}}],["poolmemberinfo",{"_index":1767,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pool’",{"_index":1777,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["popular",{"_index":1650,"title":{},"name":{},"text":{"17":{},"91":{}},"component":{}}],["port",{"_index":1610,"title":{},"name":{},"text":{"16":{},"41":{}},"component":{}}],["portabl",{"_index":1678,"title":{},"name":{},"text":{"17":{}},"component":{}}],["portion",{"_index":614,"title":{},"name":{},"text":{"5":{}},"component":{}}],["poseidon",{"_index":1141,"title":{"60-5":{},"60-8":{}},"name":{},"text":{"9":{},"41":{},"60":{},"63":{},"65":{},"70":{},"72":{},"74":{},"75":{}},"component":{}}],["poseidon.cairo",{"_index":3071,"title":{},"name":{},"text":{"60":{},"74":{}},"component":{}}],["poseidon_hash.pi",{"_index":3069,"title":{},"name":{},"text":{"60":{}},"component":{}}],["poseidonposeidon",{"_index":1140,"title":{},"name":{},"text":{"9":{}},"component":{}}],["poseidonposeidonfullroundkey",{"_index":1103,"title":{},"name":{},"text":{"9":{}},"component":{}}],["poseidonposeidonfullroundkey0column6",{"_index":1099,"title":{},"name":{},"text":{"9":{}},"component":{}}],["poseidonposeidonfullroundkey1column6",{"_index":1101,"title":{},"name":{},"text":{"9":{}},"component":{}}],["poseidonposeidonfullroundkeycolumn0",{"_index":1159,"title":{},"name":{},"text":{"9":{}},"component":{}}],["poseidonposeidonpartialroundkey",{"_index":1152,"title":{},"name":{},"text":{"9":{}},"component":{}}],["poseidonposeidonpartialroundkey0column6",{"_index":1106,"title":{},"name":{},"text":{"9":{}},"component":{}}],["poseidonposeidonpartialroundkey1column6",{"_index":1108,"title":{},"name":{},"text":{"9":{}},"component":{}}],["posit",{"_index":1120,"title":{"11-4":{}},"name":{},"text":{"9":{}},"component":{}}],["possess",{"_index":2950,"title":{},"name":{},"text":{"57":{},"70":{}},"component":{}}],["possibl",{"_index":540,"title":{},"name":{},"text":{"4":{},"10":{},"21":{},"42":{},"54":{},"65":{},"68":{},"71":{},"72":{},"73":{},"77":{},"84":{},"85":{}},"component":{}}],["post",{"_index":254,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"44":{},"65":{},"81":{},"85":{}},"component":{}}],["potenti",{"_index":128,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"33":{},"41":{},"66":{},"77":{}},"component":{}}],["pow_2_128",{"_index":3833,"title":{},"name":{},"text":{"83":{}},"component":{}}],["power",{"_index":674,"title":{},"name":{},"text":{"5":{},"8":{},"12":{},"45":{},"69":{}},"component":{}}],["pprof",{"_index":2285,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pr",{"_index":2137,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["practic",{"_index":698,"title":{},"name":{},"text":{"5":{},"57":{},"91":{}},"component":{}}],["pragma",{"_index":2874,"title":{},"name":{},"text":{"51":{}},"component":{}}],["pre",{"_index":1308,"title":{"44-1":{},"64-6":{},"64-7":{},"64-8":{}},"name":{},"text":{"12":{},"24":{},"25":{},"27":{},"42":{},"44":{},"71":{},"72":{},"90":{}},"component":{}}],["preced",{"_index":526,"title":{},"name":{},"text":{"4":{}},"component":{}}],["precis",{"_index":1826,"title":{},"name":{},"text":{"25":{},"28":{},"66":{}},"component":{}}],["precompil",{"_index":3410,"title":{},"name":{},"text":{"68":{}},"component":{}}],["precomput",{"_index":2281,"title":{},"name":{},"text":{"41":{}},"component":{}}],["predefin",{"_index":321,"title":{},"name":{},"text":{"2":{},"8":{},"65":{},"67":{},"74":{}},"component":{}}],["predeploy",{"_index":1581,"title":{"16-3":{},"21-6":{}},"name":{},"text":{"16":{},"20":{}},"component":{}}],["predetermin",{"_index":3278,"title":{},"name":{},"text":{"65":{}},"component":{}}],["predica",{"_index":3611,"title":{},"name":{},"text":{"73":{}},"component":{}}],["predict",{"_index":97,"title":{},"name":{},"text":{"1":{},"59":{}},"component":{}}],["preexist",{"_index":2947,"title":{},"name":{},"text":{"56":{}},"component":{}}],["prefer",{"_index":909,"title":{},"name":{},"text":{"7":{}},"component":{}}],["prefix",{"_index":2433,"title":{},"name":{},"text":{"42":{},"44":{},"66":{},"70":{},"72":{},"78":{}},"component":{}}],["preliminari",{"_index":3531,"title":{},"name":{},"text":{"71":{}},"component":{}}],["prepar",{"_index":1808,"title":{},"name":{},"text":{"25":{},"29":{},"68":{}},"component":{}}],["preprocess",{"_index":1277,"title":{"11-15":{}},"name":{},"text":{"11":{},"68":{}},"component":{}}],["preprocessor",{"_index":1298,"title":{},"name":{},"text":{"11":{}},"component":{}}],["prerequisit",{"_index":1798,"title":{},"name":{},"text":{"23":{},"25":{},"26":{},"27":{},"28":{},"31":{},"36":{},"40":{},"81":{}},"component":{}}],["present",{"_index":2869,"title":{},"name":{},"text":{"51":{},"73":{},"90":{}},"component":{}}],["preserv",{"_index":592,"title":{},"name":{},"text":{"5":{},"8":{},"69":{}},"component":{}}],["press",{"_index":1719,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pretti",{"_index":2204,"title":{},"name":{},"text":{"41":{}},"component":{}}],["prettifi",{"_index":2600,"title":{},"name":{},"text":{"44":{}},"component":{}}],["prev_block_hash",{"_index":2568,"title":{},"name":{},"text":{"44":{}},"component":{}}],["prev_block_numb",{"_index":2567,"title":{},"name":{},"text":{"44":{}},"component":{}}],["prevent",{"_index":127,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"16":{},"42":{},"54":{},"59":{},"65":{},"66":{},"69":{},"70":{},"78":{},"82":{}},"component":{}}],["previou",{"_index":1511,"title":{},"name":{},"text":{"14":{},"31":{},"33":{},"38":{},"39":{},"41":{},"42":{},"44":{},"54":{},"64":{},"66":{},"70":{},"77":{},"80":{}},"component":{}}],["previous",{"_index":256,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"26":{},"39":{},"42":{},"55":{},"69":{},"73":{},"77":{},"79":{},"85":{}},"component":{}}],["price",{"_index":2389,"title":{"44-24":{},"65-1":{}},"name":{},"text":{"42":{},"44":{},"63":{},"64":{},"65":{},"72":{},"82":{}},"component":{}}],["price_in_fri",{"_index":2623,"title":{},"name":{},"text":{"44":{}},"component":{}}],["price_in_wei",{"_index":2622,"title":{},"name":{},"text":{"44":{}},"component":{}}],["primari",{"_index":562,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"16":{},"38":{},"41":{},"42":{}},"component":{}}],["primarili",{"_index":1030,"title":{},"name":{},"text":{"9":{},"42":{},"69":{}},"component":{}}],["prime",{"_index":1275,"title":{"11-13":{}},"name":{},"text":{"11":{},"61":{}},"component":{}}],["print",{"_index":2205,"title":{},"name":{},"text":{"41":{},"87":{}},"component":{}}],["prior",{"_index":872,"title":{},"name":{},"text":{"7":{},"33":{},"65":{},"71":{}},"component":{}}],["privaci",{"_index":1749,"title":{},"name":{},"text":{"21":{}},"component":{}}],["privat",{"_index":798,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"16":{},"20":{},"21":{},"57":{}},"component":{}}],["problem",{"_index":1537,"title":{},"name":{},"text":{"14":{},"73":{}},"component":{}}],["proce",{"_index":980,"title":{},"name":{},"text":{"8":{},"58":{},"64":{},"70":{},"71":{},"77":{}},"component":{}}],["procedur",{"_index":301,"title":{},"name":{},"text":{"2":{},"17":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"35":{},"36":{},"40":{},"49":{},"59":{},"81":{}},"component":{}}],["proceed",{"_index":1715,"title":{},"name":{},"text":{"20":{}},"component":{}}],["process",{"_index":123,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"9":{},"14":{},"15":{},"16":{},"20":{},"22":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"35":{},"36":{},"40":{},"41":{},"42":{},"57":{},"59":{},"65":{},"69":{},"72":{},"76":{},"89":{}},"component":{}}],["processmessag",{"_index":3337,"title":{},"name":{},"text":{"66":{}},"component":{}}],["procur",{"_index":3681,"title":{},"name":{},"text":{"76":{}},"component":{}}],["produc",{"_index":1853,"title":{},"name":{},"text":{"29":{},"68":{},"69":{},"75":{}},"component":{}}],["product",{"_index":94,"title":{},"name":{},"text":{"1":{},"7":{},"20":{},"69":{},"86":{}},"component":{}}],["profession",{"_index":826,"title":{},"name":{},"text":{"5":{}},"component":{}}],["profil",{"_index":2286,"title":{"87-4":{}},"name":{},"text":{"41":{},"87":{},"89":{},"91":{}},"component":{}}],["program",{"_index":153,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"8":{},"9":{},"11":{},"44":{},"57":{},"65":{},"66":{},"68":{},"69":{},"73":{},"74":{},"75":{},"79":{},"83":{},"85":{}},"component":{}}],["programhash",{"_index":3417,"title":{},"name":{},"text":{"68":{}},"component":{}}],["programm",{"_index":294,"title":{},"name":{},"text":{"2":{},"57":{}},"component":{}}],["program’",{"_index":411,"title":{},"name":{},"text":{"2":{},"11":{}},"component":{}}],["progress",{"_index":765,"title":{},"name":{},"text":{"5":{}},"component":{}}],["project",{"_index":1000,"title":{},"name":{},"text":{"8":{},"13":{},"14":{},"15":{},"17":{},"21":{},"46":{},"87":{},"88":{},"89":{},"91":{}},"component":{}}],["prometheu",{"_index":2150,"title":{},"name":{},"text":{"41":{}},"component":{}}],["promin",{"_index":3942,"title":{},"name":{},"text":{"86":{}},"component":{}}],["promis",{"_index":829,"title":{},"name":{},"text":{"5":{}},"component":{}}],["promot",{"_index":1892,"title":{},"name":{},"text":{"29":{}},"component":{}}],["proof",{"_index":389,"title":{"8-2":{},"69-9":{}},"name":{},"text":{"2":{},"3":{},"5":{},"8":{},"9":{},"42":{},"44":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"76":{},"80":{}},"component":{}}],["proof’",{"_index":3912,"title":{},"name":{},"text":{"85":{}},"component":{}}],["prop",{"_index":1518,"title":{},"name":{},"text":{"14":{}},"component":{}}],["propag",{"_index":864,"title":{},"name":{},"text":{"7":{}},"component":{}}],["properli",{"_index":751,"title":{},"name":{},"text":{"5":{},"8":{},"14":{},"42":{},"83":{}},"component":{}}],["properti",{"_index":409,"title":{},"name":{},"text":{"2":{},"44":{},"65":{},"73":{}},"component":{}}],["proport",{"_index":2919,"title":{},"name":{},"text":{"54":{}},"component":{}}],["propos",{"_index":609,"title":{},"name":{},"text":{"5":{},"29":{},"44":{},"55":{},"57":{},"59":{}},"component":{}}],["prospect",{"_index":3684,"title":{},"name":{},"text":{"76":{}},"component":{}}],["protect",{"_index":2916,"title":{"55-2":{}},"name":{},"text":{"54":{},"55":{},"57":{},"66":{},"68":{}},"component":{}}],["protocol",{"_index":293,"title":{"26":{},"29-5":{}},"name":{},"text":{"2":{},"5":{},"8":{},"22":{},"25":{},"26":{},"29":{},"30":{},"44":{},"45":{},"54":{},"55":{},"57":{},"62":{},"63":{},"66":{},"68":{},"69":{},"72":{}},"component":{}}],["protocol_vers",{"_index":3097,"title":{},"name":{},"text":{"63":{}},"component":{}}],["protocol’",{"_index":1788,"title":{},"name":{},"text":{"22":{},"29":{}},"component":{}}],["prototyp",{"_index":3938,"title":{},"name":{},"text":{"86":{}},"component":{}}],["provabl",{"_index":412,"title":{},"name":{},"text":{"2":{},"5":{},"69":{},"73":{}},"component":{}}],["prove",{"_index":344,"title":{"39-6":{},"39-9":{}},"name":{},"text":{"2":{},"5":{},"8":{},"29":{},"39":{},"60":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"73":{}},"component":{}}],["proven",{"_index":452,"title":{},"name":{},"text":{"2":{},"29":{},"64":{},"68":{},"73":{}},"component":{}}],["prover",{"_index":281,"title":{"8":{},"2-15":{},"69-4":{},"69-5":{}},"name":{"8":{}},"text":{"2":{},"8":{},"39":{},"44":{},"53":{},"58":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"73":{},"76":{}},"component":{}}],["provers—work",{"_index":3450,"title":{},"name":{},"text":{"69":{}},"component":{}}],["prover’",{"_index":984,"title":{},"name":{},"text":{"8":{}},"component":{}}],["provid",{"_index":375,"title":{"46":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"10":{},"12":{},"13":{},"20":{},"26":{},"30":{},"33":{},"38":{},"39":{},"41":{},"42":{},"44":{},"45":{},"46":{},"48":{},"52":{},"55":{},"69":{},"70":{},"76":{},"78":{},"85":{},"87":{}},"component":{}}],["provider.tsx",{"_index":1371,"title":{},"name":{},"text":{"13":{}},"component":{}}],["provis",{"_index":622,"title":{},"name":{},"text":{"5":{},"7":{}},"component":{}}],["proxi",{"_index":1040,"title":{"42-65":{}},"name":{},"text":{"9":{},"36":{},"40":{},"42":{}},"component":{}}],["pscott",{"_index":2461,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pseudo",{"_index":3586,"title":{},"name":{},"text":{"72":{}},"component":{}}],["pub",{"_index":1561,"title":{},"name":{},"text":{"15":{},"88":{}},"component":{}}],["public",{"_index":796,"title":{},"name":{},"text":{"5":{},"8":{},"16":{},"20":{},"45":{},"54":{},"57":{},"72":{},"85":{}},"component":{}}],["publicprovid",{"_index":1374,"title":{},"name":{},"text":{"13":{}},"component":{}}],["publish",{"_index":578,"title":{},"name":{},"text":{"5":{},"8":{},"42":{},"64":{},"65":{}},"component":{}}],["pull",{"_index":2170,"title":{},"name":{},"text":{"41":{},"85":{}},"component":{}}],["pure",{"_index":2075,"title":{},"name":{},"text":{"38":{},"67":{}},"component":{}}],["purpos",{"_index":467,"title":{"5-2":{},"76-1":{}},"name":{},"text":{"2":{},"5":{},"8":{},"10":{},"15":{},"42":{},"68":{},"70":{},"90":{}},"component":{}}],["pursuant",{"_index":735,"title":{},"name":{},"text":{"5":{}},"component":{}}],["put",{"_index":401,"title":{},"name":{},"text":{"2":{},"44":{}},"component":{}}],["pwd",{"_index":1626,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["pypi",{"_index":3978,"title":{},"name":{},"text":{"88":{}},"component":{}}],["pyth",{"_index":2876,"title":{},"name":{},"text":{"51":{}},"component":{}}],["python",{"_index":2329,"title":{"42-44":{}},"name":{},"text":{"42":{},"60":{},"64":{},"68":{},"72":{}},"component":{}}],["python3.7",{"_index":2716,"title":{},"name":{},"text":{"44":{}},"component":{}}],["python3.9",{"_index":2717,"title":{},"name":{},"text":{"44":{}},"component":{}}],["q_1",{"_index":3239,"title":{},"name":{},"text":{"65":{}},"component":{}}],["q_i",{"_index":3227,"title":{},"name":{},"text":{"65":{}},"component":{}}],["q_i\\right",{"_index":3249,"title":{},"name":{},"text":{"65":{}},"component":{}}],["q_t",{"_index":3240,"title":{},"name":{},"text":{"65":{}},"component":{}}],["qtyforincreas",{"_index":1468,"title":{},"name":{},"text":{"14":{}},"component":{}}],["qtyforincrease.tostr",{"_index":1494,"title":{},"name":{},"text":{"14":{}},"component":{}}],["quad",{"_index":3221,"title":{},"name":{},"text":{"65":{}},"component":{}}],["qualiti",{"_index":2649,"title":{},"name":{},"text":{"44":{}},"component":{}}],["quantum",{"_index":425,"title":{},"name":{},"text":{"2":{}},"component":{}}],["queri",{"_index":234,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"10":{},"16":{},"30":{},"41":{},"42":{},"44":{},"59":{},"69":{},"88":{}},"component":{}}],["question",{"_index":2930,"title":{},"name":{},"text":{"54":{}},"component":{}}],["quick",{"_index":469,"title":{"3-2":{}},"name":{},"text":{"87":{}},"component":{}}],["quickli",{"_index":2898,"title":{},"name":{},"text":{"53":{}},"component":{}}],["quicknod",{"_index":2766,"title":{},"name":{},"text":{"45":{}},"component":{}}],["quickstart",{"_index":1546,"title":{"19":{},"21":{}},"name":{},"text":{"15":{},"16":{},"18":{},"19":{},"20":{}},"component":{}}],["quistart",{"_index":1649,"title":{},"name":{},"text":{"17":{}},"component":{}}],["quit",{"_index":2491,"title":{},"name":{},"text":{"42":{}},"component":{}}],["quorum",{"_index":1992,"title":{},"name":{},"text":{"33":{}},"component":{}}],["quota",{"_index":2104,"title":{},"name":{},"text":{"39":{}},"component":{}}],["r",{"_index":1976,"title":{},"name":{},"text":{"33":{},"44":{},"63":{},"70":{}},"component":{}}],["r=h_{ped",{"_index":3520,"title":{},"name":{},"text":{"70":{}},"component":{}}],["race",{"_index":806,"title":{},"name":{},"text":{"5":{}},"component":{}}],["rais",{"_index":2921,"title":{},"name":{},"text":{"54":{},"65":{}},"component":{}}],["ran",{"_index":3392,"title":{},"name":{},"text":{"68":{}},"component":{}}],["random",{"_index":1225,"title":{},"name":{},"text":{"10":{},"13":{},"72":{},"78":{}},"component":{}}],["rang",{"_index":325,"title":{"60-1":{}},"name":{},"text":{"2":{},"4":{},"9":{},"42":{},"51":{},"65":{},"68":{},"70":{},"74":{},"85":{}},"component":{}}],["range_check96",{"_index":2577,"title":{},"name":{},"text":{"44":{}},"component":{}}],["rapidli",{"_index":2402,"title":{},"name":{},"text":{"42":{},"69":{}},"component":{}}],["rate",{"_index":948,"title":{"28-3":{}},"name":{},"text":{"8":{},"22":{},"25":{},"28":{},"29":{},"30":{}},"component":{}}],["ratio",{"_index":2693,"title":{},"name":{},"text":{"44":{}},"component":{}}],["raw",{"_index":3164,"title":{},"name":{},"text":{"64":{},"77":{}},"component":{}}],["rc.3",{"_index":2849,"title":{},"name":{},"text":{"48":{}},"component":{}}],["rc0",{"_index":2375,"title":{},"name":{},"text":{"42":{},"44":{}},"component":{}}],["rc1",{"_index":2290,"title":{},"name":{},"text":{"41":{}},"component":{}}],["re",{"_index":2480,"title":{},"name":{},"text":{"42":{},"44":{},"49":{},"69":{}},"component":{}}],["reach",{"_index":620,"title":{},"name":{},"text":{"5":{},"8":{},"65":{},"68":{}},"component":{}}],["react",{"_index":1306,"title":{"86-3":{}},"name":{},"text":{"12":{},"13":{},"14":{},"86":{},"89":{}},"component":{}}],["react.reactnod",{"_index":1380,"title":{},"name":{},"text":{"13":{}},"component":{}}],["react/chain",{"_index":1367,"title":{},"name":{},"text":{"13":{}},"component":{}}],["react/cor",{"_index":1368,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["react/jsx",{"_index":1314,"title":{},"name":{},"text":{"12":{}},"component":{}}],["read",{"_index":179,"title":{"30":{},"30-2":{}},"name":{"30":{}},"text":{"1":{},"5":{},"10":{},"12":{},"14":{},"15":{},"16":{},"30":{},"41":{},"42":{},"68":{},"80":{},"85":{}},"component":{}}],["read/writ",{"_index":2112,"title":{},"name":{},"text":{"40":{}},"component":{}}],["readabl",{"_index":2272,"title":{},"name":{},"text":{"41":{}},"component":{}}],["readi",{"_index":1533,"title":{},"name":{},"text":{"14":{},"54":{}},"component":{}}],["readm",{"_index":2455,"title":{},"name":{},"text":{"42":{},"45":{}},"component":{}}],["real",{"_index":1909,"title":{},"name":{},"text":{"30":{},"51":{},"67":{},"69":{}},"component":{}}],["realiti",{"_index":3475,"title":{},"name":{},"text":{"69":{}},"component":{}}],["reason",{"_index":2013,"title":{},"name":{},"text":{"35":{},"38":{},"68":{}},"component":{}}],["rebat",{"_index":675,"title":{},"name":{},"text":{"5":{}},"component":{}}],["recalcul",{"_index":1778,"title":{},"name":{},"text":{"22":{},"27":{}},"component":{}}],["receipt",{"_index":1257,"title":{"63-3":{},"63-5":{},"71-4":{}},"name":{},"text":{"10":{},"41":{},"42":{},"44":{},"63":{},"71":{},"84":{}},"component":{}}],["receipts_commit",{"_index":3096,"title":{},"name":{},"text":{"63":{}},"component":{}}],["receiv",{"_index":387,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"10":{},"24":{},"34":{},"35":{},"38":{},"39":{},"42":{},"54":{},"56":{},"58":{},"65":{},"66":{},"67":{},"69":{},"71":{},"85":{}},"component":{}}],["receiver_interface.cairo",{"_index":2095,"title":{},"name":{},"text":{"38":{}},"component":{}}],["recent",{"_index":2922,"title":{},"name":{},"text":{"54":{},"65":{},"81":{}},"component":{}}],["recipi",{"_index":1253,"title":{},"name":{},"text":{"10":{},"34":{},"36":{},"38":{},"40":{},"66":{},"67":{},"77":{}},"component":{}}],["recipients’",{"_index":2094,"title":{},"name":{},"text":{"38":{}},"component":{}}],["recipient’",{"_index":2027,"title":{},"name":{},"text":{"36":{},"38":{},"39":{},"40":{},"66":{},"85":{}},"component":{}}],["reclaim",{"_index":2020,"title":{},"name":{},"text":{"35":{},"38":{}},"component":{}}],["recogn",{"_index":2072,"title":{},"name":{},"text":{"38":{},"76":{}},"component":{}}],["recognit",{"_index":2961,"title":{},"name":{},"text":{"57":{}},"component":{}}],["recommend",{"_index":810,"title":{"18":{}},"name":{},"text":{"5":{},"13":{},"17":{},"19":{},"41":{},"42":{},"45":{},"48":{},"85":{},"87":{}},"component":{}}],["recompil",{"_index":3678,"title":{},"name":{},"text":{"76":{}},"component":{}}],["reconstruct",{"_index":3155,"title":{},"name":{},"text":{"64":{}},"component":{}}],["record",{"_index":365,"title":{},"name":{},"text":{"2":{},"8":{},"22":{},"25":{},"26":{},"38":{},"39":{},"65":{},"66":{},"68":{},"69":{}},"component":{}}],["recov",{"_index":2008,"title":{},"name":{},"text":{"34":{},"38":{},"64":{}},"component":{}}],["recoveri",{"_index":2958,"title":{},"name":{},"text":{"57":{}},"component":{}}],["recurs",{"_index":913,"title":{"8-2":{}},"name":{},"text":{"8":{},"44":{},"68":{},"69":{},"77":{}},"component":{}}],["reddio",{"_index":2767,"title":{},"name":{},"text":{"45":{}},"component":{}}],["redeploy",{"_index":2993,"title":{},"name":{},"text":{"59":{}},"component":{}}],["reduc",{"_index":177,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"41":{},"44":{}},"component":{}}],["reduct",{"_index":2253,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{}}],["ref",{"_index":1331,"title":{},"name":{"52":{}},"text":{"12":{},"15":{},"59":{},"77":{},"81":{}},"component":{}}],["refactor",{"_index":2167,"title":{},"name":{},"text":{"41":{}},"component":{}}],["refer",{"_index":288,"title":{"10":{},"11":{},"38":{},"54":{},"67":{},"38-1":{},"38-134":{},"54-5":{},"67-1":{},"67-66":{}},"name":{"38":{},"67":{}},"text":{"2":{},"4":{},"8":{},"9":{},"10":{},"22":{},"25":{},"28":{},"30":{},"32":{},"33":{},"35":{},"38":{},"39":{},"44":{},"49":{},"51":{},"55":{},"60":{},"61":{},"63":{},"65":{},"72":{},"73":{},"74":{},"83":{}},"component":{}}],["refetchinterv",{"_index":1481,"title":{},"name":{},"text":{"14":{}},"component":{}}],["refin",{"_index":1861,"title":{},"name":{},"text":{"29":{}},"component":{}}],["reflect",{"_index":1993,"title":{},"name":{},"text":{"33":{}},"component":{}}],["refresh",{"_index":1480,"title":{},"name":{},"text":{"14":{}},"component":{}}],["refund",{"_index":3309,"title":{},"name":{},"text":{"65":{},"67":{}},"component":{}}],["regardless",{"_index":414,"title":{},"name":{},"text":{"2":{},"8":{},"39":{},"73":{}},"component":{}}],["regenesi",{"_index":2856,"title":{},"name":{},"text":{"49":{}},"component":{}}],["regist",{"_index":393,"title":{},"name":{},"text":{"2":{},"8":{},"9":{},"25":{},"38":{},"68":{},"76":{}},"component":{}}],["registri",{"_index":996,"title":{"33-1":{}},"name":{},"text":{"8":{},"9":{},"33":{},"38":{},"87":{}},"component":{}}],["regular",{"_index":62,"title":{},"name":{},"text":{"1":{},"28":{},"44":{},"55":{},"66":{},"70":{},"77":{}},"component":{}}],["reject",{"_index":1267,"title":{},"name":{},"text":{"10":{},"14":{},"42":{},"44":{},"54":{},"57":{},"71":{}},"component":{}}],["rejectedtransactionreceiptrespons",{"_index":1514,"title":{},"name":{},"text":{"14":{}},"component":{}}],["rel",{"_index":224,"title":{},"name":{},"text":{"1":{},"10":{},"44":{},"65":{}},"component":{}}],["relat",{"_index":67,"title":{},"name":{},"text":{"1":{},"5":{},"9":{},"41":{},"42":{},"44":{},"50":{},"65":{},"66":{}},"component":{}}],["relationship",{"_index":878,"title":{},"name":{},"text":{"7":{},"69":{}},"component":{}}],["relax",{"_index":2256,"title":{},"name":{},"text":{"41":{},"77":{}},"component":{}}],["relay",{"_index":870,"title":{},"name":{},"text":{"7":{}},"component":{}}],["releas",{"_index":190,"title":{"41":{},"42":{},"44":{},"3-4":{},"42-70":{},"44-1":{}},"name":{},"text":{"1":{},"18":{},"41":{},"42":{},"43":{},"44":{},"72":{},"81":{}},"component":{}}],["relev",{"_index":546,"title":{"5-1":{}},"name":{},"text":{"8":{},"9":{},"10":{},"27":{},"30":{},"38":{},"39":{},"40":{},"45":{},"48":{},"65":{},"66":{},"77":{}},"component":{}}],["reli",{"_index":740,"title":{"69-8":{}},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"42":{},"68":{},"69":{}},"component":{}}],["reliabl",{"_index":1865,"title":{},"name":{},"text":{"29":{},"41":{},"69":{}},"component":{}}],["relianc",{"_index":1015,"title":{},"name":{},"text":{"8":{}},"component":{}}],["reliev",{"_index":1805,"title":{},"name":{},"text":{"24":{}},"component":{}}],["remain",{"_index":95,"title":{},"name":{},"text":{"1":{},"5":{},"9":{},"22":{},"44":{},"64":{},"65":{},"83":{}},"component":{}}],["rememb",{"_index":1726,"title":{},"name":{},"text":{"20":{},"59":{}},"component":{}}],["remix",{"_index":3991,"title":{"91-2":{}},"name":{},"text":{"89":{},"91":{}},"component":{}}],["remot",{"_index":300,"title":{},"name":{},"text":{"2":{}},"component":{}}],["remov",{"_index":18,"title":{"1-10":{},"41-44":{},"42-42":{}},"name":{},"text":{"1":{},"30":{},"38":{},"39":{},"41":{},"42":{},"44":{},"72":{},"87":{}},"component":{}}],["renam",{"_index":2177,"title":{},"name":{},"text":{"41":{},"42":{},"44":{}},"component":{}}],["render",{"_index":3355,"title":{},"name":{},"text":{"66":{}},"component":{}}],["reorg",{"_index":2246,"title":{},"name":{},"text":{"41":{},"42":{},"68":{}},"component":{}}],["reorgan",{"_index":2247,"title":{},"name":{},"text":{"41":{}},"component":{}}],["repeat",{"_index":527,"title":{},"name":{},"text":{"4":{},"8":{},"14":{},"65":{},"71":{}},"component":{}}],["repeatedli",{"_index":3354,"title":{},"name":{},"text":{"66":{}},"component":{}}],["replac",{"_index":205,"title":{},"name":{},"text":{"1":{},"13":{},"38":{},"44":{},"64":{},"72":{},"73":{},"81":{},"85":{}},"component":{}}],["replace_class",{"_index":2689,"title":{"85-47":{}},"name":{},"text":{"44":{},"65":{},"85":{}},"component":{}}],["replace_class_syscal",{"_index":3914,"title":{},"name":{},"text":{"85":{}},"component":{}}],["replaced_contract_address1",{"_index":3111,"title":{},"name":{},"text":{"63":{}},"component":{}}],["replaced_contract_addressr",{"_index":3113,"title":{},"name":{},"text":{"63":{}},"component":{}}],["replay",{"_index":2935,"title":{"55-2":{},"69-7":{}},"name":{},"text":{"55":{},"57":{},"69":{},"78":{},"82":{}},"component":{}}],["repo",{"_index":1428,"title":{},"name":{},"text":{"13":{},"14":{},"30":{},"64":{}},"component":{}}],["report",{"_index":1532,"title":{},"name":{},"text":{"14":{},"44":{},"91":{}},"component":{}}],["repositori",{"_index":1756,"title":{},"name":{},"text":{"22":{},"29":{},"30":{},"41":{},"42":{},"60":{},"63":{},"68":{},"74":{},"77":{},"78":{},"91":{}},"component":{}}],["repres",{"_index":313,"title":{},"name":{},"text":{"2":{},"5":{},"10":{},"15":{},"25":{},"28":{},"33":{},"48":{},"57":{},"65":{},"70":{},"72":{},"75":{},"81":{},"83":{},"85":{}},"component":{}}],["represent",{"_index":407,"title":{},"name":{},"text":{"2":{},"5":{},"9":{},"44":{},"47":{},"63":{},"70":{},"72":{},"73":{},"75":{},"76":{},"77":{},"83":{}},"component":{}}],["reproduc",{"_index":2994,"title":{},"name":{},"text":{"59":{},"70":{}},"component":{}}],["request",{"_index":881,"title":{"88-5":{}},"name":{},"text":{"7":{},"8":{},"10":{},"14":{},"24":{},"30":{},"35":{},"38":{},"39":{},"41":{},"42":{},"67":{},"68":{},"73":{},"85":{},"88":{},"89":{}},"component":{}}],["requests.@joshklop",{"_index":2190,"title":{},"name":{},"text":{"41":{}},"component":{}}],["requir",{"_index":242,"title":{"42-44":{}},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"12":{},"16":{},"17":{},"20":{},"21":{},"24":{},"25":{},"26":{},"29":{},"30":{},"33":{},"36":{},"40":{},"41":{},"42":{},"44":{},"53":{},"54":{},"56":{},"57":{},"59":{},"65":{},"67":{},"68":{},"69":{},"73":{},"76":{},"79":{},"81":{},"82":{},"85":{}},"component":{}}],["research",{"_index":667,"title":{},"name":{},"text":{"5":{}},"component":{}}],["resembl",{"_index":1588,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["reserv",{"_index":681,"title":{},"name":{},"text":{"5":{},"44":{},"59":{},"70":{}},"component":{}}],["resid",{"_index":1119,"title":{},"name":{},"text":{"9":{},"39":{}},"component":{}}],["resili",{"_index":589,"title":{},"name":{},"text":{"5":{},"69":{}},"component":{}}],["resist",{"_index":594,"title":{},"name":{},"text":{"5":{}},"component":{}}],["resolv",{"_index":1296,"title":{},"name":{},"text":{"11":{},"14":{},"33":{},"41":{},"44":{}},"component":{}}],["resourc",{"_index":76,"title":{"32-1":{},"33-6":{},"34-1":{},"35-1":{},"38-69":{},"38-78":{},"39-11":{},"44-6":{},"44-8":{},"44-16":{},"44-30":{},"56-3":{},"66-10":{},"79-4":{},"83-10":{},"84-4":{}},"name":{},"text":{"1":{},"2":{},"5":{},"8":{},"9":{},"37":{},"41":{},"44":{},"54":{},"60":{},"64":{},"65":{},"69":{},"71":{},"72":{},"78":{},"82":{},"91":{}},"component":{}}],["resource_bound",{"_index":3214,"title":{},"name":{},"text":{"65":{},"72":{},"82":{}},"component":{}}],["resourcebound",{"_index":3559,"title":{"82-4":{}},"name":{},"text":{"72":{},"82":{}},"component":{}}],["respect",{"_index":843,"title":{},"name":{},"text":{"5":{},"23":{},"27":{},"48":{},"56":{},"70":{},"72":{},"80":{},"84":{}},"component":{}}],["respons",{"_index":882,"title":{},"name":{},"text":{"7":{},"8":{},"10":{},"14":{},"22":{},"24":{},"29":{},"33":{},"44":{},"65":{},"68":{},"85":{}},"component":{}}],["response.transaction_hash",{"_index":1488,"title":{},"name":{},"text":{"14":{}},"component":{}}],["rest",{"_index":3736,"title":{},"name":{},"text":{"77":{}},"component":{}}],["restart",{"_index":958,"title":{},"name":{},"text":{"8":{},"17":{},"21":{}},"component":{}}],["restor",{"_index":2408,"title":{},"name":{},"text":{"42":{}},"component":{}}],["restrict",{"_index":2663,"title":{"56-2":{}},"name":{},"text":{"44":{},"54":{},"56":{},"68":{}},"component":{}}],["restructur",{"_index":2208,"title":{},"name":{},"text":{"41":{}},"component":{}}],["result",{"_index":342,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"14":{},"16":{},"20":{},"33":{},"41":{},"42":{},"44":{},"54":{},"59":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"75":{},"76":{},"77":{},"83":{},"85":{}},"component":{}}],["resync",{"_index":2268,"title":{},"name":{},"text":{"41":{}},"component":{}}],["retain",{"_index":722,"title":{},"name":{},"text":{"5":{},"49":{}},"component":{}}],["reth",{"_index":1975,"title":{},"name":{},"text":{"33":{}},"component":{}}],["retriev",{"_index":397,"title":{},"name":{},"text":{"2":{},"15":{},"30":{},"38":{},"57":{},"70":{},"72":{}},"component":{}}],["return",{"_index":1204,"title":{"38-7":{},"38-15":{},"38-23":{},"38-32":{},"38-40":{},"38-49":{},"38-58":{},"38-66":{},"38-75":{},"38-84":{},"38-92":{},"38-100":{},"38-108":{},"38-116":{},"38-124":{},"38-131":{},"38-138":{},"38-143":{},"38-148":{},"38-153":{},"38-158":{},"38-163":{},"38-168":{},"38-173":{},"67-6":{},"67-13":{},"67-20":{},"67-26":{},"67-32":{},"67-38":{},"67-44":{},"67-50":{},"67-56":{},"67-63":{},"85-5":{},"85-12":{},"85-19":{},"85-25":{},"85-31":{},"85-38":{},"85-44":{},"85-51":{},"85-57":{},"85-64":{},"85-69":{}},"name":{},"text":{"10":{},"13":{},"14":{},"22":{},"26":{},"30":{},"34":{},"38":{},"41":{},"42":{},"44":{},"54":{},"56":{},"58":{},"59":{},"66":{},"67":{},"68":{},"73":{},"80":{},"85":{}},"component":{}}],["revers",{"_index":3461,"title":{},"name":{},"text":{"69":{},"71":{}},"component":{}}],["revert",{"_index":417,"title":{"54-4":{},"71-3":{},"73-3":{}},"name":{},"text":{"2":{},"14":{},"38":{},"54":{},"55":{},"67":{},"71":{},"73":{},"85":{}},"component":{}}],["revert_reason",{"_index":3142,"title":{},"name":{},"text":{"63":{}},"component":{}}],["revertedtransactionreceiptrespons",{"_index":1515,"title":{},"name":{},"text":{"14":{}},"component":{}}],["review",{"_index":479,"title":{},"name":{},"text":{"3":{},"17":{},"18":{}},"component":{}}],["revis",{"_index":60,"title":{},"name":{},"text":{"1":{},"41":{}},"component":{}}],["reviv",{"_index":2601,"title":{},"name":{},"text":{"44":{}},"component":{}}],["revolv",{"_index":3470,"title":{},"name":{},"text":{"69":{}},"component":{}}],["reward",{"_index":579,"title":{"23":{},"22-4":{},"28-6":{},"29-8":{},"29-12":{},"29-15":{}},"name":{"23":{}},"text":{"5":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["reward_address",{"_index":1806,"title":{},"name":{},"text":{"24":{},"25":{},"28":{}},"component":{}}],["rewardssuppliedtodelegationpool",{"_index":1923,"title":{},"name":{},"text":{"30":{}},"component":{}}],["rgb",{"_index":1414,"title":{},"name":{},"text":{"13":{}},"component":{}}],["rich",{"_index":4003,"title":{},"name":{},"text":{"91":{}},"component":{}}],["richer",{"_index":2939,"title":{},"name":{},"text":{"55":{}},"component":{}}],["right",{"_index":640,"title":{},"name":{},"text":{"5":{},"13":{},"65":{},"70":{}},"component":{}}],["right\\neq",{"_index":3518,"title":{},"name":{},"text":{"70":{}},"component":{}}],["right]_0",{"_index":3040,"title":{},"name":{},"text":{"60":{}},"component":{}}],["rightarrow",{"_index":3002,"title":{},"name":{},"text":{"60":{}},"component":{}}],["rise",{"_index":945,"title":{},"name":{},"text":{"8":{}},"component":{}}],["risk",{"_index":548,"title":{"5-4":{}},"name":{},"text":{"5":{},"33":{},"66":{}},"component":{}}],["roadmap",{"_index":2501,"title":{"43-1":{}},"name":{},"text":{"43":{},"44":{},"69":{},"73":{}},"component":{}}],["robust",{"_index":902,"title":{},"name":{},"text":{"7":{},"69":{}},"component":{}}],["rocket",{"_index":1974,"title":{},"name":{},"text":{"33":{}},"component":{}}],["role",{"_index":848,"title":{},"name":{},"text":{"7":{},"8":{},"22":{},"29":{},"55":{},"69":{},"76":{}},"component":{}}],["roll",{"_index":3430,"title":{},"name":{},"text":{"69":{}},"component":{}}],["rollup",{"_index":436,"title":{},"name":{},"text":{"2":{},"3":{},"9":{},"64":{},"68":{},"69":{},"73":{}},"component":{}}],["room",{"_index":3645,"title":{},"name":{},"text":{"73":{}},"component":{}}],["root",{"_index":273,"title":{},"name":{},"text":{"13":{},"22":{},"41":{},"42":{},"44":{},"63":{},"69":{},"70":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{}}}],["root/juno:/var/lib/juno",{"_index":2214,"title":{},"name":{},"text":{"41":{}},"component":{}}],["rootlayout",{"_index":1394,"title":{},"name":{},"text":{"13":{}},"component":{}}],["rough",{"_index":2503,"title":{"44-2":{}},"name":{},"text":{"68":{}},"component":{}}],["roughli",{"_index":1037,"title":{},"name":{},"text":{"9":{},"65":{}},"component":{}}],["round",{"_index":2617,"title":{},"name":{},"text":{"44":{},"54":{},"82":{},"85":{}},"component":{}}],["rout",{"_index":1027,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{}}],["rpc",{"_index":241,"title":{"2-16":{},"42-43":{},"42-71":{},"44-3":{},"44-13":{},"44-21":{},"44-22":{},"44-23":{},"88-5":{}},"name":{},"text":{"1":{},"2":{},"41":{},"42":{},"44":{},"45":{},"48":{},"65":{},"66":{},"69":{},"71":{},"77":{},"88":{},"89":{}},"component":{}}],["rpc.cor",{"_index":2396,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc.msgtol1",{"_index":2237,"title":{},"name":{},"text":{"41":{}},"component":{}}],["rpc.websocket",{"_index":2379,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc.websocket.capac",{"_index":2380,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/pathfind",{"_index":2475,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/pathfinder/v0.1",{"_index":2489,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/pathfinder/v0.1/pathfinder_getproof",{"_index":2464,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/starknet",{"_index":2770,"title":{},"name":{},"text":{"45":{}},"component":{}}],["rpc/v0.1",{"_index":2443,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/v0.2",{"_index":2445,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/v0.2/pathfinder_getproof",{"_index":2465,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/v0.3",{"_index":2430,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rpc/vx_i",{"_index":2756,"title":{},"name":{},"text":{"45":{}},"component":{}}],["rpc=http://127.0.0.1:5050",{"_index":1607,"title":{},"name":{},"text":{"16":{}},"component":{}}],["rs",{"_index":2827,"title":{"90-1":{}},"name":{},"text":{"48":{},"88":{},"89":{},"90":{}},"component":{}}],["rule",{"_index":370,"title":{},"name":{},"text":{"2":{},"7":{},"70":{}},"component":{}}],["run",{"_index":357,"title":{"90":{}},"name":{"90":{}},"text":{"2":{},"5":{},"8":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"25":{},"29":{},"39":{},"41":{},"42":{},"44":{},"48":{},"54":{},"56":{},"58":{},"68":{},"69":{},"71":{},"73":{},"77":{},"85":{},"87":{},"90":{}},"component":{}}],["runner",{"_index":983,"title":{},"name":{},"text":{"8":{},"15":{},"45":{}},"component":{}}],["rust",{"_index":895,"title":{"17-2":{}},"name":{},"text":{"7":{},"15":{},"17":{},"41":{},"42":{},"44":{},"45":{},"68":{},"87":{},"88":{},"90":{}},"component":{}}],["rustc",{"_index":1665,"title":{},"name":{},"text":{"17":{}},"component":{}}],["s",{"_index":1872,"title":{},"name":{},"text":{"29":{},"63":{},"68":{},"70":{}},"component":{}}],["s_1+1",{"_index":3066,"title":{},"name":{},"text":{"60":{}},"component":{}}],["s_1+a_1",{"_index":3059,"title":{},"name":{},"text":{"60":{}},"component":{}}],["s_2",{"_index":3053,"title":{},"name":{},"text":{"60":{}},"component":{}}],["s_2+1",{"_index":3064,"title":{},"name":{},"text":{"60":{}},"component":{}}],["s_2+a_2",{"_index":3060,"title":{},"name":{},"text":{"60":{}},"component":{}}],["s_3",{"_index":3054,"title":{},"name":{},"text":{"60":{}},"component":{}}],["safe",{"_index":2335,"title":{"73-4":{}},"name":{},"text":{"42":{},"44":{},"73":{}},"component":{}}],["safeguard",{"_index":3280,"title":{},"name":{},"text":{"65":{}},"component":{}}],["salt",{"_index":1223,"title":{},"name":{},"text":{"10":{},"16":{},"20":{},"54":{},"59":{},"72":{},"78":{},"82":{},"85":{}},"component":{}}],["salt=0",{"_index":1633,"title":{},"name":{},"text":{"16":{},"59":{}},"component":{}}],["same",{"_index":1216,"title":{},"name":{},"text":{"10":{},"28":{},"29":{},"42":{},"44":{},"49":{},"54":{},"64":{},"65":{},"66":{},"69":{},"70":{},"71":{},"73":{},"76":{},"77":{},"83":{},"85":{}},"component":{}}],["sampl",{"_index":1153,"title":{},"name":{},"text":{"9":{},"42":{},"44":{},"65":{}},"component":{}}],["san",{"_index":1421,"title":{},"name":{},"text":{"13":{}},"component":{}}],["satisfactorili",{"_index":766,"title":{},"name":{},"text":{"5":{}},"component":{}}],["satisfi",{"_index":465,"title":{},"name":{},"text":{"2":{},"73":{}},"component":{}}],["satur",{"_index":2361,"title":{},"name":{},"text":{"42":{}},"component":{}}],["save",{"_index":919,"title":{},"name":{},"text":{"8":{},"15":{}},"component":{}}],["scaffold",{"_index":3931,"title":{"86-1":{},"86-2":{}},"name":{},"text":{"86":{},"89":{}},"component":{}}],["scalabl",{"_index":169,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"69":{}},"component":{}}],["scalar",{"_index":2738,"title":{},"name":{},"text":{"44":{},"74":{}},"component":{}}],["scale",{"_index":377,"title":{},"name":{},"text":{"2":{},"3":{},"8":{}},"component":{}}],["scarb",{"_index":1317,"title":{"17-3":{},"87-1":{}},"name":{},"text":{"12":{},"15":{},"17":{},"21":{},"48":{},"86":{},"87":{},"89":{}},"component":{}}],["scarbs.xyz",{"_index":3955,"title":{},"name":{},"text":{"87":{}},"component":{}}],["scarb’",{"_index":1552,"title":{},"name":{},"text":{"15":{},"17":{}},"component":{}}],["schedul",{"_index":246,"title":{},"name":{},"text":{"1":{},"5":{},"8":{}},"component":{}}],["schema",{"_index":2200,"title":{},"name":{},"text":{"41":{},"77":{}},"component":{}}],["scheme",{"_index":2544,"title":{},"name":{},"text":{"44":{},"57":{},"62":{},"70":{},"72":{}},"component":{}}],["scope",{"_index":3894,"title":{},"name":{},"text":{"85":{}},"component":{}}],["screen",{"_index":1535,"title":{},"name":{},"text":{"14":{}},"component":{}}],["script",{"_index":1679,"title":{},"name":{},"text":{"17":{},"44":{},"64":{}},"component":{}}],["sdk",{"_index":218,"title":{"88-3":{}},"name":{},"text":{"1":{},"48":{},"59":{},"70":{},"76":{},"83":{},"88":{},"89":{}},"component":{}}],["seamless",{"_index":1170,"title":{},"name":{},"text":{"9":{},"33":{},"38":{},"39":{}},"component":{}}],["seamlessli",{"_index":3940,"title":{},"name":{},"text":{"86":{}},"component":{}}],["search",{"_index":1723,"title":{},"name":{},"text":{"20":{},"25":{},"73":{}},"component":{}}],["second",{"_index":89,"title":{},"name":{},"text":{"1":{},"14":{},"15":{},"25":{},"57":{},"63":{},"65":{},"67":{},"68":{},"69":{},"82":{},"83":{},"85":{}},"component":{}}],["secp",{"_index":2714,"title":{},"name":{},"text":{"44":{}},"component":{}}],["secp256k1",{"_index":2670,"title":{},"name":{},"text":{"44":{}},"component":{}}],["secp256k1_mul",{"_index":2660,"title":{},"name":{},"text":{"44":{}},"component":{}}],["secp256r1",{"_index":2662,"title":{},"name":{},"text":{"44":{}},"component":{}}],["secp256r1_mul",{"_index":2661,"title":{},"name":{},"text":{"44":{}},"component":{}}],["secret",{"_index":1620,"title":{},"name":{},"text":{"16":{}},"component":{}}],["section",{"_index":1496,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"28":{},"29":{},"42":{},"64":{},"65":{},"89":{}},"component":{}}],["secur",{"_index":170,"title":{"22-6":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"21":{},"22":{},"23":{},"25":{},"29":{},"33":{},"46":{},"57":{},"69":{},"85":{},"87":{}},"component":{}}],["security.extropy.io",{"_index":2789,"title":{},"name":{},"text":{"46":{}},"component":{}}],["securityqq",{"_index":2456,"title":{},"name":{},"text":{"42":{}},"component":{}}],["see",{"_index":40,"title":{"38-26":{},"38-43":{},"38-52":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"10":{},"11":{},"15":{},"16":{},"17":{},"18":{},"20":{},"25":{},"26":{},"31":{},"33":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"52":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"72":{},"74":{},"75":{},"78":{},"81":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["seed",{"_index":799,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"57":{}},"component":{}}],["seed=0",{"_index":1586,"title":{},"name":{},"text":{"16":{}},"component":{}}],["seem",{"_index":962,"title":{},"name":{},"text":{"8":{},"68":{},"73":{}},"component":{}}],["seen",{"_index":456,"title":{},"name":{},"text":{"2":{},"42":{}},"component":{}}],["segment",{"_index":1033,"title":{},"name":{},"text":{"9":{},"68":{},"80":{}},"component":{}}],["select",{"_index":890,"title":{"42-64":{}},"name":{},"text":{"7":{},"13":{},"14":{},"15":{},"21":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"42":{},"57":{},"58":{}},"component":{}}],["selector",{"_index":2704,"title":{},"name":{},"text":{"44":{},"66":{},"67":{},"75":{},"77":{},"85":{}},"component":{}}],["selectwallet",{"_index":1444,"title":{},"name":{},"text":{"13":{}},"component":{}}],["selectwallet.tsx",{"_index":1453,"title":{},"name":{},"text":{"13":{}},"component":{}}],["self",{"_index":1332,"title":{},"name":{},"text":{"12":{},"15":{},"35":{},"59":{},"77":{},"81":{}},"component":{}}],["self.balance.read",{"_index":1572,"title":{},"name":{},"text":{"15":{}},"component":{}}],["self.balance.writ",{"_index":1571,"title":{},"name":{},"text":{"15":{}},"component":{}}],["self.count.read",{"_index":1350,"title":{},"name":{},"text":{"12":{}},"component":{}}],["self.count.writ",{"_index":1349,"title":{},"name":{},"text":{"12":{}},"component":{}}],["self.counter.read",{"_index":3757,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["self.counter.writ",{"_index":3755,"title":{},"name":{},"text":{"77":{}},"component":{}}],["self.emit",{"_index":3731,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["self.other_contract.read",{"_index":3758,"title":{},"name":{},"text":{"77":{}},"component":{}}],["sell",{"_index":730,"title":{},"name":{},"text":{"5":{}},"component":{}}],["sem",{"_index":2274,"title":{},"name":{},"text":{"41":{}},"component":{}}],["semant",{"_index":351,"title":{},"name":{},"text":{"2":{},"44":{},"68":{},"73":{},"79":{}},"component":{}}],["send",{"_index":104,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"10":{},"16":{},"20":{},"36":{},"38":{},"39":{},"40":{},"44":{},"54":{},"56":{},"57":{},"58":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"71":{},"72":{},"73":{},"79":{},"82":{},"85":{}},"component":{}}],["send_message_to_l1",{"_index":3310,"title":{"85-40":{}},"name":{},"text":{"65":{},"66":{}},"component":{}}],["send_message_to_l1_syscal",{"_index":3334,"title":{},"name":{},"text":{"66":{},"85":{}},"component":{}}],["sendasync",{"_index":1475,"title":{},"name":{},"text":{"14":{}},"component":{}}],["sender",{"_index":1252,"title":{},"name":{},"text":{"10":{},"38":{},"41":{},"54":{},"65":{},"66":{},"67":{},"72":{},"77":{},"78":{},"85":{}},"component":{}}],["sender_address",{"_index":3563,"title":{},"name":{},"text":{"72":{}},"component":{}}],["sender’",{"_index":2058,"title":{},"name":{},"text":{"38":{},"56":{},"65":{},"66":{}},"component":{}}],["sendmessagetol2",{"_index":3345,"title":{"67-52":{}},"name":{},"text":{"66":{},"67":{}},"component":{}}],["sent",{"_index":343,"title":{},"name":{},"text":{"2":{},"8":{},"25":{},"38":{},"44":{},"54":{},"55":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{}},"component":{}}],["sep",{"_index":2517,"title":{"44-34":{}},"name":{},"text":{},"component":{}}],["separ",{"_index":544,"title":{},"name":{},"text":{"4":{},"9":{},"11":{},"38":{},"42":{},"44":{},"54":{},"73":{},"75":{},"79":{},"84":{},"85":{},"87":{}},"component":{}}],["sepolia",{"_index":32,"title":{"20":{},"20-2":{},"20-3":{},"20-4":{},"21-5":{},"21-6":{}},"name":{"20":{}},"text":{"1":{},"10":{},"12":{},"13":{},"14":{},"18":{},"19":{},"20":{},"25":{},"29":{},"36":{},"39":{},"40":{},"44":{},"47":{},"52":{},"59":{},"72":{},"88":{}},"component":{}}],["sepolia.json",{"_index":2804,"title":{},"name":{},"text":{"47":{}},"component":{}}],["sepolia.starknet.io",{"_index":49,"title":{},"name":{},"text":{"1":{}},"component":{}}],["sepolia.starkscan.co",{"_index":2883,"title":{},"name":{},"text":{"52":{}},"component":{}}],["sepolia.voyager.co",{"_index":2881,"title":{},"name":{},"text":{"52":{}},"component":{}}],["sepolia’",{"_index":222,"title":{},"name":{},"text":{"1":{},"20":{}},"component":{}}],["sept",{"_index":2529,"title":{"44-43":{}},"name":{},"text":{},"component":{}}],["sequenc",{"_index":9,"title":{"1-6":{},"2-17":{},"7-3":{},"7-4":{},"69-3":{},"69-5":{}},"name":{},"text":{"2":{},"5":{},"7":{},"10":{},"25":{},"29":{},"39":{},"42":{},"44":{},"53":{},"54":{},"56":{},"58":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"71":{},"73":{},"75":{},"82":{},"85":{}},"component":{}}],["sequencer_address",{"_index":2665,"title":{},"name":{},"text":{"44":{},"54":{},"56":{},"63":{},"82":{}},"component":{}}],["sequencer’",{"_index":235,"title":{},"name":{},"text":{"1":{},"44":{},"63":{},"65":{}},"component":{}}],["sequenti",{"_index":2703,"title":{},"name":{},"text":{"44":{},"55":{},"57":{},"68":{},"69":{},"71":{}},"component":{}}],["serd",{"_index":3730,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["seri",{"_index":933,"title":{"19":{}},"name":{},"text":{"8":{},"9":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{}}],["serial",{"_index":2473,"title":{"83":{},"83-3":{},"83-4":{},"83-5":{},"83-6":{},"83-7":{},"83-8":{},"83-9":{}},"name":{"83":{}},"text":{"42":{},"75":{},"77":{},"83":{}},"component":{}}],["serialize_os_output",{"_index":3403,"title":{},"name":{},"text":{"68":{}},"component":{}}],["serif",{"_index":522,"title":{},"name":{},"text":{"4":{},"13":{}},"component":{}}],["seriou",{"_index":1986,"title":{},"name":{},"text":{"33":{}},"component":{}}],["serv",{"_index":565,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"42":{},"53":{},"55":{},"69":{}},"component":{}}],["server",{"_index":880,"title":{},"name":{},"text":{"7":{},"13":{},"42":{},"69":{},"87":{}},"component":{}}],["servic",{"_index":217,"title":{"45":{}},"name":{"45":{}},"text":{"1":{},"2":{},"5":{},"8":{},"33":{},"38":{},"41":{},"46":{},"49":{},"50":{},"54":{},"85":{}},"component":{}}],["set",{"_index":308,"title":{"17":{},"10-2":{},"10-3":{},"21-1":{}},"name":{},"text":{"2":{},"3":{},"4":{},"8":{},"9":{},"10":{},"15":{},"16":{},"17":{},"19":{},"21":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"41":{},"42":{},"44":{},"49":{},"54":{},"56":{},"59":{},"64":{},"65":{},"67":{},"69":{},"70":{},"85":{},"91":{}},"component":{}}],["set_open_for_deleg",{"_index":1843,"title":{},"name":{},"text":{"28":{}},"component":{}}],["setcount",{"_index":1473,"title":{},"name":{},"text":{"14":{}},"component":{}}],["setselectwalletui",{"_index":1450,"title":{},"name":{},"text":{"13":{}},"component":{}}],["setselectwalletui]=usest",{"_index":1446,"title":{},"name":{},"text":{"13":{}},"component":{}}],["settransactionhash",{"_index":1471,"title":{},"name":{},"text":{"14":{}},"component":{}}],["setup",{"_index":1648,"title":{},"name":{"17":{}},"text":{"17":{},"42":{},"69":{}},"component":{}}],["setwithdrawlimitpct",{"_index":1989,"title":{},"name":{},"text":{"33":{}},"component":{}}],["sever",{"_index":963,"title":{},"name":{},"text":{"8":{},"9":{},"14":{},"22":{},"28":{},"41":{},"42":{},"44":{},"64":{},"68":{}},"component":{}}],["sfrxeth",{"_index":1979,"title":{},"name":{},"text":{"33":{}},"component":{}}],["sh",{"_index":1683,"title":{},"name":{},"text":{"17":{}},"component":{}}],["sha256",{"_index":2584,"title":{},"name":{},"text":{"44":{}},"component":{}}],["share",{"_index":402,"title":{},"name":{},"text":{"2":{},"8":{},"22":{},"29":{},"33":{},"69":{}},"component":{}}],["sharp",{"_index":4,"title":{"1-3":{},"2-18":{},"8-1":{},"8-2":{},"8-3":{},"8-4":{},"9-2":{},"9-7":{}},"name":{},"text":{"2":{},"8":{},"9":{}},"component":{}}],["sharpen",{"_index":1661,"title":{},"name":{},"text":{"17":{}},"component":{}}],["sharp’",{"_index":925,"title":{},"name":{},"text":{"8":{},"68":{}},"component":{}}],["shell",{"_index":1680,"title":{"21-2":{}},"name":{},"text":{"17":{},"21":{}},"component":{}}],["shift",{"_index":3445,"title":{},"name":{},"text":{"69":{}},"component":{}}],["shift\\_point",{"_index":3028,"title":{},"name":{},"text":{"60":{}},"component":{}}],["short",{"_index":2687,"title":{},"name":{},"text":{"44":{},"65":{},"73":{}},"component":{}}],["shorten",{"_index":3741,"title":{},"name":{},"text":{"77":{}},"component":{}}],["shorter",{"_index":968,"title":{},"name":{},"text":{"8":{},"83":{}},"component":{}}],["shortli",{"_index":2927,"title":{},"name":{},"text":{"54":{}},"component":{}}],["shouldn’t",{"_index":3180,"title":{},"name":{},"text":{"64":{}},"component":{}}],["show",{"_index":1287,"title":{},"name":{},"text":{"11":{},"13":{},"20":{},"33":{},"64":{},"65":{},"70":{},"77":{},"82":{},"85":{},"87":{}},"component":{}}],["showcas",{"_index":3988,"title":{},"name":{},"text":{"89":{}},"component":{}}],["shown",{"_index":1138,"title":{},"name":{},"text":{"9":{},"39":{},"72":{},"77":{},"83":{}},"component":{}}],["shrame",{"_index":2381,"title":{},"name":{},"text":{"42":{}},"component":{}}],["shutdown",{"_index":2297,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sibl",{"_index":3522,"title":{},"name":{},"text":{"70":{}},"component":{}}],["sierra",{"_index":51,"title":{"73":{},"2-19":{},"73-2":{},"87-3":{},"87-6":{}},"name":{"73":{}},"text":{"1":{},"2":{},"14":{},"16":{},"41":{},"42":{},"44":{},"48":{},"65":{},"70":{},"73":{},"75":{},"76":{},"87":{},"89":{}},"component":{}}],["sierra_program",{"_index":2645,"title":{},"name":{},"text":{"44":{}},"component":{}}],["sierra_program_hash",{"_index":3671,"title":{},"name":{},"text":{"75":{}},"component":{}}],["sierra’",{"_index":3640,"title":{},"name":{},"text":{"73":{}},"component":{}}],["sierra→casm",{"_index":3579,"title":{},"name":{},"text":{"72":{},"73":{},"76":{}},"component":{}}],["sign",{"_index":382,"title":{},"name":{},"text":{"2":{},"5":{},"10":{},"16":{},"42":{},"44":{},"57":{},"70":{},"75":{},"82":{},"83":{}},"component":{}}],["signal",{"_index":1833,"title":{},"name":{},"text":{"26":{},"29":{},"30":{}},"component":{}}],["signatur",{"_index":184,"title":{"44-26":{},"72-22":{},"85-2":{},"85-9":{},"85-16":{},"85-22":{},"85-28":{},"85-35":{},"85-41":{},"85-48":{},"85-54":{},"85-61":{},"85-66":{}},"name":{},"text":{"1":{},"10":{},"42":{},"44":{},"54":{},"55":{},"57":{},"63":{},"65":{},"71":{},"72":{},"74":{},"81":{},"82":{}},"component":{}}],["signature_inform",{"_index":1217,"title":{},"name":{},"text":{"10":{}},"component":{}}],["signed=fals",{"_index":3596,"title":{},"name":{},"text":{"72":{}},"component":{}}],["signer",{"_index":1617,"title":{},"name":{},"text":{"16":{},"20":{},"21":{}},"component":{}}],["signific",{"_index":605,"title":{"76-1":{}},"name":{},"text":{"5":{},"8":{},"70":{},"83":{}},"component":{}}],["significantli",{"_index":850,"title":{},"name":{},"text":{"7":{},"8":{},"64":{},"76":{}},"component":{}}],["silent",{"_index":2436,"title":{},"name":{},"text":{"42":{}},"component":{}}],["similar",{"_index":955,"title":{},"name":{},"text":{"8":{},"9":{},"20":{},"22":{},"26":{},"34":{},"38":{},"42":{},"44":{},"54":{},"55":{},"66":{},"69":{},"73":{},"83":{}},"component":{}}],["similarli",{"_index":1840,"title":{},"name":{},"text":{"26":{},"44":{},"69":{}},"component":{}}],["simpl",{"_index":1322,"title":{},"name":{},"text":{"12":{},"15":{},"42":{},"54":{},"57":{},"65":{},"69":{},"73":{},"87":{}},"component":{}}],["simple_bootloader_program_hash",{"_index":1165,"title":{},"name":{},"text":{"9":{}},"component":{}}],["simpli",{"_index":1554,"title":{},"name":{},"text":{"15":{},"16":{},"49":{},"73":{},"74":{},"83":{}},"component":{}}],["simplic",{"_index":3263,"title":{},"name":{},"text":{"65":{}},"component":{}}],["simplifi",{"_index":2948,"title":{"58":{}},"name":{"58":{}},"text":{"56":{}},"component":{}}],["simul",{"_index":2413,"title":{},"name":{},"text":{"42":{},"88":{}},"component":{}}],["singl",{"_index":133,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"8":{},"10":{},"33":{},"38":{},"44":{},"54":{},"64":{},"65":{},"67":{},"68":{},"69":{},"70":{},"77":{},"80":{},"83":{},"84":{},"85":{},"87":{}},"component":{}}],["singleton",{"_index":2968,"title":{},"name":{},"text":{"59":{}},"component":{}}],["singular",{"_index":1023,"title":{},"name":{},"text":{"9":{}},"component":{}}],["site",{"_index":213,"title":{},"name":{},"text":{"1":{},"40":{},"66":{},"74":{}},"component":{}}],["situat",{"_index":3157,"title":{},"name":{},"text":{"64":{}},"component":{}}],["six",{"_index":1655,"title":{},"name":{},"text":{"17":{},"65":{}},"component":{}}],["size",{"_index":119,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"9":{},"11":{},"26":{},"44":{},"65":{},"70":{},"80":{},"84":{}},"component":{}}],["sketch",{"_index":3395,"title":{},"name":{},"text":{"68":{}},"component":{}}],["skill",{"_index":1309,"title":{},"name":{},"text":{"12":{}},"component":{}}],["skip",{"_index":2906,"title":{},"name":{},"text":{"54":{},"68":{},"70":{},"77":{}},"component":{}}],["slash",{"_index":542,"title":{},"name":{},"text":{"4":{}},"component":{}}],["slot",{"_index":454,"title":{},"name":{},"text":{"2":{},"54":{},"65":{},"68":{},"80":{},"83":{}},"component":{}}],["slow",{"_index":2369,"title":{},"name":{},"text":{"42":{}},"component":{}}],["slower",{"_index":946,"title":{},"name":{},"text":{"8":{}},"component":{}}],["small",{"_index":225,"title":{},"name":{},"text":{"1":{},"12":{},"29":{}},"component":{}}],["smaller",{"_index":951,"title":{},"name":{},"text":{"8":{},"9":{},"71":{},"83":{}},"component":{}}],["smallest",{"_index":330,"title":{},"name":{},"text":{"2":{}},"component":{}}],["smart",{"_index":154,"title":{"34":{},"91":{},"9-1":{},"12-1":{}},"name":{"91":{}},"text":{"1":{},"2":{},"7":{},"9":{},"12":{},"15":{},"16":{},"17":{},"21":{},"29":{},"34":{},"38":{},"44":{},"49":{},"51":{},"53":{},"55":{},"57":{},"59":{},"62":{},"67":{},"69":{},"72":{},"73":{},"78":{},"85":{},"86":{},"87":{},"89":{},"91":{}},"component":{}}],["smartphon",{"_index":3476,"title":{},"name":{},"text":{"69":{}},"component":{}}],["smooth",{"_index":2685,"title":{},"name":{},"text":{"44":{},"69":{}},"component":{}}],["sn_keccak",{"_index":3141,"title":{},"name":{},"text":{"63":{},"72":{},"77":{},"80":{}},"component":{}}],["sn_main",{"_index":3597,"title":{},"name":{},"text":{"72":{}},"component":{}}],["sn_sepolia",{"_index":1596,"title":{},"name":{},"text":{"16":{},"72":{}},"component":{}}],["snap",{"_index":3948,"title":{},"name":{},"text":{"86":{}},"component":{}}],["snapshot",{"_index":2225,"title":{},"name":{},"text":{"41":{},"69":{}},"component":{}}],["sncast",{"_index":1674,"title":{"88-2":{}},"name":{},"text":{"17":{},"88":{},"89":{},"91":{}},"component":{}}],["snforg",{"_index":1673,"title":{},"name":{},"text":{"17":{},"91":{}},"component":{}}],["snip",{"_index":2535,"title":{},"name":{},"text":{"44":{},"55":{},"72":{}},"component":{}}],["snip6",{"_index":2934,"title":{},"name":{},"text":{"54":{}},"component":{}}],["snippet",{"_index":3593,"title":{},"name":{},"text":{"72":{},"73":{}},"component":{}}],["sno",{"_index":3387,"title":{"68":{},"68-1":{},"68-2":{},"68-5":{}},"name":{},"text":{"68":{}},"component":{}}],["snos’",{"_index":3398,"title":{},"name":{},"text":{"68":{}},"component":{}}],["social",{"_index":2957,"title":{},"name":{},"text":{"57":{}},"component":{}}],["soft",{"_index":2474,"title":{},"name":{},"text":{"42":{}},"component":{}}],["softwar",{"_index":339,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"87":{},"88":{}},"component":{}}],["sole",{"_index":736,"title":{},"name":{},"text":{"5":{},"69":{},"76":{}},"component":{}}],["solicit",{"_index":816,"title":{},"name":{},"text":{"5":{}},"component":{}}],["solid",{"_index":929,"title":{"9":{}},"name":{"9":{}},"text":{"8":{},"9":{},"66":{}},"component":{}}],["solut",{"_index":233,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"44":{},"73":{}},"component":{}}],["solv",{"_index":2695,"title":{},"name":{},"text":{"44":{},"54":{},"73":{}},"component":{}}],["somehow",{"_index":2928,"title":{},"name":{},"text":{"54":{}},"component":{}}],["someon",{"_index":2986,"title":{},"name":{},"text":{"59":{}},"component":{}}],["someth",{"_index":1499,"title":{},"name":{},"text":{"14":{}},"component":{}}],["sometim",{"_index":2424,"title":{},"name":{},"text":{"42":{},"89":{}},"component":{}}],["somewhat",{"_index":3460,"title":{},"name":{},"text":{"69":{}},"component":{}}],["sound",{"_index":997,"title":{},"name":{},"text":{"8":{}},"component":{}}],["sourc",{"_index":774,"title":{},"name":{},"text":{"5":{},"11":{},"12":{},"21":{},"42":{},"75":{},"86":{}},"component":{}}],["space",{"_index":1213,"title":{},"name":{},"text":{"10":{},"59":{},"70":{},"80":{}},"component":{}}],["spaceshard",{"_index":3976,"title":{},"name":{},"text":{"88":{},"90":{}},"component":{}}],["spam",{"_index":178,"title":{},"name":{},"text":{"1":{},"42":{},"54":{}},"component":{}}],["span",{"_index":2093,"title":{},"name":{},"text":{"38":{},"59":{},"82":{},"85":{}},"component":{}}],["spark",{"_index":3452,"title":{},"name":{},"text":{"69":{}},"component":{}}],["spars",{"_index":3523,"title":{},"name":{},"text":{"70":{}},"component":{}}],["spec",{"_index":1768,"title":{},"name":{},"text":{"22":{},"30":{},"44":{},"45":{},"65":{},"77":{}},"component":{}}],["spec.md",{"_index":1908,"title":{},"name":{},"text":{"30":{}},"component":{}}],["special",{"_index":296,"title":{"70-10":{}},"name":{},"text":{"2":{},"3":{},"69":{},"70":{},"74":{}},"component":{}}],["specif",{"_index":430,"title":{"59-8":{},"77-11":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"10":{},"18":{},"22":{},"23":{},"28":{},"38":{},"41":{},"42":{},"44":{},"55":{},"60":{},"65":{},"66":{},"68":{},"69":{},"70":{},"72":{},"76":{},"77":{},"85":{},"88":{},"90":{},"91":{}},"component":{}}],["specifi",{"_index":524,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"16":{},"20":{},"21":{},"22":{},"25":{},"26":{},"27":{},"38":{},"39":{},"42":{},"44":{},"48":{},"65":{},"66":{},"70":{},"72":{},"77":{},"82":{},"83":{},"85":{}},"component":{}}],["specs/tree/v0.3.0",{"_index":2293,"title":{},"name":{},"text":{"41":{}},"component":{}}],["spend",{"_index":575,"title":{},"name":{},"text":{"5":{},"17":{}},"component":{}}],["spender",{"_index":1818,"title":{},"name":{},"text":{"25":{},"77":{}},"component":{}}],["spirit",{"_index":3989,"title":{},"name":{},"text":{"89":{}},"component":{}}],["split",{"_index":2681,"title":{},"name":{},"text":{"44":{},"69":{},"83":{}},"component":{}}],["spong",{"_index":3035,"title":{},"name":{},"text":{"60":{}},"component":{}}],["sponsor",{"_index":3806,"title":{},"name":{},"text":{"82":{}},"component":{}}],["spread",{"_index":2557,"title":{},"name":{},"text":{"44":{}},"component":{}}],["sqrt{",{"_index":1871,"title":{},"name":{},"text":{"29":{}},"component":{}}],["squar",{"_index":529,"title":{},"name":{},"text":{"4":{},"22":{}},"component":{}}],["squash",{"_index":2539,"title":{},"name":{},"text":{"44":{},"68":{}},"component":{}}],["src/app",{"_index":1369,"title":{},"name":{},"text":{"13":{}},"component":{}}],["srivastav",{"_index":2382,"title":{},"name":{},"text":{"42":{}},"component":{}}],["stabil",{"_index":137,"title":{},"name":{},"text":{"1":{},"29":{},"41":{},"44":{}},"component":{}}],["stablecoin",{"_index":1971,"title":{},"name":{},"text":{"33":{}},"component":{}}],["stack",{"_index":1039,"title":{},"name":{},"text":{"9":{},"42":{}},"component":{}}],["stage",{"_index":783,"title":{"29-4":{}},"name":{},"text":{"5":{},"10":{},"25":{},"29":{},"54":{},"58":{},"66":{},"69":{},"71":{},"72":{}},"component":{}}],["stake",{"_index":602,"title":{"22":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"22-1":{},"22-2":{},"28-1":{},"29-8":{},"29-17":{},"30-1":{}},"name":{"24":{},"25":{},"26":{},"27":{},"28":{},"30":{}},"text":{"5":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"69":{}},"component":{}}],["stakebalancechang",{"_index":1910,"title":{},"name":{},"text":{"30":{}},"component":{}}],["stakehold",{"_index":763,"title":{},"name":{},"text":{"5":{}},"component":{}}],["staker",{"_index":577,"title":{},"name":{},"text":{"5":{},"28":{},"30":{}},"component":{}}],["staker_address",{"_index":1801,"title":{},"name":{},"text":{"23":{},"26":{},"28":{},"30":{}},"component":{}}],["stakerexitint",{"_index":1914,"title":{},"name":{},"text":{"30":{}},"component":{}}],["stakerinfo",{"_index":1764,"title":{},"name":{},"text":{"22":{}},"component":{}}],["stakerrewardaddresschang",{"_index":1916,"title":{},"name":{},"text":{"30":{}},"component":{}}],["stakerrewardclaim",{"_index":1921,"title":{},"name":{},"text":{"30":{}},"component":{}}],["staker’",{"_index":1911,"title":{},"name":{},"text":{"30":{}},"component":{}}],["stand",{"_index":928,"title":{},"name":{},"text":{"8":{},"20":{}},"component":{}}],["standalon",{"_index":3759,"title":{},"name":{},"text":{"77":{},"85":{},"87":{}},"component":{}}],["standard",{"_index":323,"title":{},"name":{},"text":{"2":{},"11":{},"33":{},"38":{},"44":{},"54":{},"55":{},"59":{},"69":{},"70":{},"74":{}},"component":{}}],["stark",{"_index":282,"title":{"61":{},"62":{},"2-20":{},"86-1":{},"87-8":{}},"name":{"62":{}},"text":{"2":{},"3":{},"5":{},"8":{},"9":{},"44":{},"60":{},"61":{},"62":{},"65":{},"69":{},"70":{},"72":{},"73":{},"74":{},"83":{},"86":{},"87":{},"89":{}},"component":{}}],["starkdefi",{"_index":2865,"title":{},"name":{},"text":{"49":{}},"component":{}}],["starkent",{"_index":1664,"title":{},"name":{},"text":{"17":{}},"component":{}}],["starkex",{"_index":926,"title":{},"name":{},"text":{"8":{}},"component":{}}],["starkgat",{"_index":1934,"title":{"32":{},"33":{},"36":{},"37":{},"38":{},"39":{},"40":{},"33-1":{},"39-1":{},"39-2":{}},"name":{},"text":{"32":{},"33":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"49":{}},"component":{}}],["starkgatemanager.sol",{"_index":2050,"title":{},"name":{},"text":{"38":{}},"component":{}}],["starkgateregistry.sol",{"_index":2052,"title":{},"name":{},"text":{"38":{}},"component":{}}],["starkgate’",{"_index":2025,"title":{},"name":{},"text":{"36":{},"40":{},"49":{}},"component":{}}],["starkli",{"_index":195,"title":{"17-6":{},"21-2":{},"21-4":{},"56-1":{},"88-1":{}},"name":{"10":{}},"text":{"1":{},"10":{},"12":{},"16":{},"17":{},"20":{},"21":{},"25":{},"48":{},"56":{},"88":{},"89":{}},"component":{}}],["starkliup",{"_index":1677,"title":{},"name":{},"text":{"17":{}},"component":{}}],["starkli’",{"_index":1687,"title":{},"name":{},"text":{"17":{},"56":{}},"component":{}}],["starknet",{"_index":27,"title":{"5":{},"10":{},"17":{},"18":{},"19":{},"20":{},"21":{},"43":{},"48":{},"53":{},"68":{},"69":{},"70":{},"86":{},"88":{},"89":{},"90":{},"91":{},"2-21":{},"2-22":{},"2-23":{},"2-24":{},"3-1":{},"3-5":{},"7-1":{},"7-3":{},"7-7":{},"10-2":{},"10-4":{},"10-5":{},"10-6":{},"10-7":{},"10-8":{},"10-9":{},"10-10":{},"10-11":{},"10-12":{},"10-13":{},"10-14":{},"10-15":{},"10-16":{},"16-2":{},"17-3":{},"39-5":{},"42-72":{},"44-1":{},"44-7":{},"44-9":{},"44-17":{},"44-18":{},"44-22":{},"44-23":{},"44-31":{},"44-32":{},"44-34":{},"44-35":{},"44-36":{},"44-37":{},"44-38":{},"44-39":{},"44-40":{},"44-41":{},"44-42":{},"44-43":{},"44-44":{},"44-45":{},"48-2":{},"48-3":{},"60-2":{},"64-2":{},"68-5":{},"86-2":{},"86-3":{},"86-4":{},"88-3":{},"88-5":{},"90-1":{},"90-2":{},"91-1":{},"91-2":{}},"name":{"5":{},"11":{},"53":{},"69":{},"70":{},"84":{},"88":{}},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{}},"component":{}}],["starknet'",{"_index":475,"title":{},"name":{},"text":{"3":{}},"component":{}}],["starknet.dart",{"_index":3981,"title":{},"name":{},"text":{"88":{}},"component":{}}],["starknet.go",{"_index":2828,"title":{},"name":{},"text":{"48":{},"88":{}},"component":{}}],["starknet.io",{"_index":1851,"title":{},"name":{},"text":{"29":{}},"component":{}}],["starknet.j",{"_index":1316,"title":{},"name":{},"text":{"12":{},"48":{},"83":{},"86":{},"88":{}},"component":{}}],["starknet.nftscan.com",{"_index":2891,"title":{},"name":{},"text":{"52":{}},"component":{}}],["starknet.pi",{"_index":2824,"title":{},"name":{},"text":{"48":{},"88":{}},"component":{}}],["starknet.swift",{"_index":2830,"title":{},"name":{},"text":{"48":{},"88":{}},"component":{}}],["starknet::contract",{"_index":1337,"title":{},"name":{},"text":{"12":{},"15":{},"77":{},"81":{}},"component":{}}],["starknet::contractaddress",{"_index":3749,"title":{},"name":{},"text":{"77":{}},"component":{}}],["starknet::ev",{"_index":2997,"title":{},"name":{},"text":{"59":{},"77":{},"81":{}},"component":{}}],["starknet::interfac",{"_index":1326,"title":{},"name":{},"text":{"12":{},"15":{},"59":{},"77":{},"81":{}},"component":{}}],["starknet::storage::storagepointerreadaccess",{"_index":1341,"title":{},"name":{},"text":{"12":{}},"component":{}}],["starknet::storage::storagepointerwriteaccess",{"_index":1340,"title":{},"name":{},"text":{"12":{}},"component":{}}],["starknet::storage_access::storage_base_address_from_felt252",{"_index":3918,"title":{},"name":{},"text":{"85":{}},"component":{}}],["starknet::syscalls::emit_event_syscal",{"_index":3872,"title":{},"name":{},"text":{"84":{}},"component":{}}],["starknet::syscalls::storage_read_syscal",{"_index":3777,"title":{},"name":{},"text":{"80":{}},"component":{}}],["starknet::syscalls::storage_write_syscal",{"_index":3778,"title":{},"name":{},"text":{"80":{}},"component":{}}],["starknet_account",{"_index":1625,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["starknet_adddeclaretransact",{"_index":2242,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_adddeployaccounttransact",{"_index":2243,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_adddeploytransact",{"_index":2441,"title":{},"name":{},"text":{"42":{}},"component":{}}],["starknet_addinvoketransact",{"_index":2244,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_api_openrpc.json",{"_index":306,"title":{},"name":{},"text":{"2":{},"44":{},"45":{},"72":{}},"component":{}}],["starknet_block_hash0",{"_index":3098,"title":{},"name":{},"text":{"63":{}},"component":{}}],["starknet_blockhashandnumb",{"_index":2304,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_blocknumb",{"_index":2303,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_cal",{"_index":2240,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["starknet_chainid",{"_index":2302,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_contract_address",{"_index":3762,"title":{},"name":{},"text":{"78":{}},"component":{}}],["starknet_estimatefe",{"_index":2241,"title":{},"name":{},"text":{"41":{},"42":{},"65":{}},"component":{}}],["starknet_estimatemessagefe",{"_index":2228,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["starknet_ev",{"_index":2477,"title":{},"name":{},"text":{"42":{}},"component":{}}],["starknet_getblocktransactioncount",{"_index":2309,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_getblockwithtx",{"_index":2306,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_getblockwithtxhash",{"_index":2305,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_getclass",{"_index":2265,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_getclassat",{"_index":2266,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_getclasshashat",{"_index":2264,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_getev",{"_index":2267,"title":{},"name":{},"text":{"41":{},"42":{},"85":{}},"component":{}}],["starknet_getnonc",{"_index":2262,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_getstateupd",{"_index":2311,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["starknet_getstorageat",{"_index":2263,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_gettransactionbyblockidandindex",{"_index":2310,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_gettransactionbyhash",{"_index":2307,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_gettransactionreceipt",{"_index":2308,"title":{},"name":{},"text":{"41":{},"71":{}},"component":{}}],["starknet_gettransactionstatu",{"_index":2179,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_keccak",{"_index":2301,"title":{},"name":{},"text":{"41":{},"75":{}},"component":{}}],["starknet_keystor",{"_index":1627,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["starknet_network",{"_index":1194,"title":{},"name":{},"text":{"10":{}},"component":{}}],["starknet_network=sepolia",{"_index":1196,"title":{},"name":{},"text":{"10":{}},"component":{}}],["starknet_pendingtransact",{"_index":2186,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_simul",{"_index":2431,"title":{},"name":{},"text":{"42":{}},"component":{}}],["starknet_simulatetransact",{"_index":2199,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["starknet_specvers",{"_index":2176,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_state_diff0",{"_index":3106,"title":{},"name":{},"text":{"63":{}},"component":{}}],["starknet_state_v0",{"_index":3487,"title":{},"name":{},"text":{"70":{}},"component":{}}],["starknet_sync",{"_index":2254,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_traceblocktransact",{"_index":2182,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_tracetransact",{"_index":2198,"title":{},"name":{},"text":{"41":{}},"component":{}}],["starknet_vers",{"_index":2718,"title":{},"name":{},"text":{"44":{}},"component":{}}],["starknet_wallet=starkware.starknet.wallets.open_zeppelin.openzeppelinaccount",{"_index":1238,"title":{},"name":{},"text":{"10":{}},"component":{}}],["starknetconfig",{"_index":1373,"title":{},"name":{},"text":{"13":{}},"component":{}}],["starknetkit",{"_index":3932,"title":{"86-5":{}},"name":{},"text":{"86":{},"89":{}},"component":{}}],["starknetmessag",{"_index":3378,"title":{},"name":{},"text":{"67":{}},"component":{}}],["starknetmessaging.sol",{"_index":3339,"title":{},"name":{},"text":{"66":{},"67":{}},"component":{}}],["starknetprovid",{"_index":1378,"title":{},"name":{},"text":{"13":{}},"component":{}}],["starknetreactimg",{"_index":1401,"title":{},"name":{},"text":{"13":{}},"component":{}}],["starknettokenbridge.sol",{"_index":1940,"title":{},"name":{},"text":{"33":{},"38":{}},"component":{}}],["starknet’",{"_index":555,"title":{"55":{},"69-2":{}},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"18":{},"20":{},"29":{},"39":{},"44":{},"55":{},"60":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"72":{},"73":{},"76":{},"79":{},"85":{}},"component":{}}],["starkscan",{"_index":2111,"title":{},"name":{},"text":{"40":{},"52":{}},"component":{}}],["starkscan.co",{"_index":2882,"title":{},"name":{},"text":{"52":{}},"component":{}}],["starkwar",{"_index":639,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"33":{},"38":{},"39":{},"45":{},"49":{},"69":{},"89":{}},"component":{}}],["starkware.starknet.wallet",{"_index":1240,"title":{},"name":{},"text":{"10":{}},"component":{}}],["starkware’",{"_index":653,"title":{},"name":{},"text":{"5":{},"66":{}},"component":{}}],["start",{"_index":64,"title":{"3-2":{}},"name":{},"text":{"1":{},"3":{},"5":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"41":{},"42":{},"44":{},"45":{},"53":{},"64":{},"65":{},"67":{},"68":{},"70":{},"73":{},"80":{}},"component":{}}],["started/starknet",{"_index":2762,"title":{},"name":{},"text":{"45":{}},"component":{}}],["startl1tol2messagecancel",{"_index":3356,"title":{"67-59":{}},"name":{},"text":{"66":{},"67":{}},"component":{}}],["state",{"_index":111,"title":{"70":{},"2-24":{},"2-26":{},"38-5":{},"38-13":{},"38-21":{},"38-30":{},"38-38":{},"38-47":{},"38-56":{},"38-64":{},"38-73":{},"38-82":{},"38-90":{},"38-98":{},"38-106":{},"38-114":{},"38-122":{},"38-130":{},"63-2":{},"67-4":{},"67-11":{},"67-18":{},"67-24":{},"67-30":{},"67-36":{},"67-42":{},"67-48":{},"67-54":{},"67-61":{},"69-2":{},"70-1":{},"70-2":{},"71-3":{}},"name":{"70":{}},"text":{"1":{},"2":{},"7":{},"9":{},"10":{},"16":{},"20":{},"30":{},"39":{},"40":{},"41":{},"42":{},"44":{},"60":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"76":{},"79":{},"81":{},"85":{},"90":{}},"component":{}}],["state.cairo",{"_index":3402,"title":{},"name":{},"text":{"68":{}},"component":{}}],["state_commit",{"_index":3485,"title":{},"name":{},"text":{"70":{}},"component":{}}],["state_diff_commit",{"_index":3093,"title":{},"name":{},"text":{"63":{}},"component":{}}],["state_diff_length",{"_index":3092,"title":{},"name":{},"text":{"63":{}},"component":{}}],["state_mut",{"_index":1503,"title":{},"name":{},"text":{"14":{},"77":{}},"component":{}}],["state_of",{"_index":1926,"title":{},"name":{},"text":{"30":{}},"component":{}}],["state_upd",{"_index":3401,"title":{},"name":{},"text":{"68":{}},"component":{}}],["stateless",{"_index":922,"title":{},"name":{},"text":{"8":{}},"component":{}}],["statement",{"_index":836,"title":{},"name":{},"text":{"5":{},"9":{},"11":{},"44":{},"68":{},"73":{}},"component":{}}],["statesnapshot",{"_index":2261,"title":{},"name":{},"text":{"41":{}},"component":{}}],["static",{"_index":3791,"title":{},"name":{},"text":{"81":{},"87":{}},"component":{}}],["statu",{"_index":1177,"title":{"71-2":{}},"name":{},"text":{"9":{},"10":{},"13":{},"14":{},"20":{},"22":{},"38":{},"39":{},"41":{},"42":{},"44":{},"54":{},"71":{}},"component":{}}],["status",{"_index":1265,"title":{},"name":{},"text":{"10":{},"71":{}},"component":{}}],["stay",{"_index":358,"title":{},"name":{},"text":{"2":{}},"component":{}}],["stdout",{"_index":1300,"title":{},"name":{},"text":{"11":{}},"component":{}}],["step",{"_index":90,"title":{"18":{},"2-6":{},"39-4":{},"39-5":{},"39-6":{},"39-8":{},"39-9":{},"39-10":{}},"name":{"18":{}},"text":{"1":{},"2":{},"8":{},"11":{},"12":{},"14":{},"16":{},"18":{},"19":{},"20":{},"29":{},"39":{},"41":{},"44":{},"54":{},"56":{},"65":{},"66":{},"68":{},"69":{},"71":{},"73":{},"88":{}},"component":{}}],["still",{"_index":187,"title":{},"name":{},"text":{"1":{},"5":{},"8":{},"35":{},"38":{},"42":{},"44":{},"54":{},"71":{},"72":{}},"component":{}}],["stolen",{"_index":801,"title":{},"name":{},"text":{"5":{},"57":{}},"component":{}}],["stop",{"_index":244,"title":{},"name":{},"text":{"1":{},"11":{},"33":{},"38":{},"42":{},"49":{},"73":{}},"component":{}}],["storag",{"_index":132,"title":{"80":{},"65-19":{},"80-1":{},"80-2":{},"80-3":{}},"name":{"80":{}},"text":{"1":{},"2":{},"7":{},"10":{},"12":{},"15":{},"16":{},"41":{},"42":{},"44":{},"54":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"77":{},"79":{},"80":{},"81":{},"83":{},"85":{}},"component":{}}],["storage_address",{"_index":3919,"title":{},"name":{},"text":{"85":{}},"component":{}}],["storage_base_address_from_felt252",{"_index":3920,"title":{},"name":{},"text":{"85":{}},"component":{}}],["storage_read",{"_index":3774,"title":{"85-53":{}},"name":{},"text":{"80":{}},"component":{}}],["storage_read_syscal",{"_index":3917,"title":{},"name":{},"text":{"85":{}},"component":{}}],["storage_root",{"_index":3493,"title":{},"name":{},"text":{"70":{}},"component":{}}],["storage_writ",{"_index":3776,"title":{"85-60":{}},"name":{},"text":{"80":{}},"component":{}}],["storage_write_syscal",{"_index":3772,"title":{},"name":{},"text":{"80":{},"85":{}},"component":{}}],["storageaddress",{"_index":3813,"title":{},"name":{},"text":{"83":{},"85":{}},"component":{}}],["storagepointerwriteaccess",{"_index":1567,"title":{},"name":{},"text":{"15":{}},"component":{}}],["store",{"_index":359,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"12":{},"16":{},"22":{},"39":{},"41":{},"42":{},"44":{},"65":{},"66":{},"68":{},"70":{},"71":{},"76":{},"80":{},"83":{}},"component":{}}],["straight",{"_index":3456,"title":{},"name":{},"text":{"69":{}},"component":{}}],["straightforward",{"_index":3908,"title":{},"name":{},"text":{"85":{}},"component":{}}],["strateg",{"_index":680,"title":{},"name":{},"text":{"5":{}},"component":{}}],["strategi",{"_index":1785,"title":{},"name":{},"text":{"22":{},"31":{}},"component":{}}],["streamlin",{"_index":2201,"title":{},"name":{},"text":{"41":{},"89":{}},"component":{}}],["strength",{"_index":893,"title":{},"name":{},"text":{"7":{}},"component":{}}],["string",{"_index":1226,"title":{},"name":{},"text":{"10":{},"14":{},"38":{},"41":{},"42":{},"44":{},"63":{},"70":{},"72":{},"75":{},"78":{},"83":{},"84":{},"85":{},"87":{}},"component":{}}],["strk",{"_index":36,"title":{"5-2":{}},"name":{},"text":{"1":{},"2":{},"5":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"33":{},"44":{},"65":{},"72":{}},"component":{}}],["strk_l1_gas_pric",{"_index":2626,"title":{},"name":{},"text":{"44":{}},"component":{}}],["stroke",{"_index":3397,"title":{},"name":{},"text":{"68":{}},"component":{}}],["struct",{"_index":1342,"title":{"82-1":{},"82-2":{},"82-3":{},"82-4":{},"83-8":{}},"name":{},"text":{"12":{},"15":{},"44":{},"59":{},"72":{},"77":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{}},"component":{}}],["structur",{"_index":580,"title":{"63":{},"57-1":{},"66-2":{},"66-7":{}},"name":{"63":{}},"text":{"5":{},"9":{},"22":{},"29":{},"44":{},"55":{},"66":{},"70":{},"72":{},"77":{},"84":{}},"component":{}}],["struct’",{"_index":3859,"title":{},"name":{},"text":{"83":{}},"component":{}}],["stuck",{"_index":2439,"title":{},"name":{},"text":{"42":{}},"component":{}}],["studio",{"_index":3960,"title":{},"name":{},"text":{"87":{}},"component":{}}],["style",{"_index":303,"title":{},"name":{},"text":{"2":{},"3":{},"42":{},"68":{}},"component":{}}],["sub",{"_index":1163,"title":{},"name":{},"text":{"9":{},"77":{}},"component":{}}],["subject",{"_index":59,"title":{},"name":{},"text":{"1":{},"5":{},"29":{},"54":{}},"component":{}}],["submiss",{"_index":883,"title":{},"name":{},"text":{"7":{},"71":{}},"component":{}}],["submit",{"_index":392,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"15":{},"16":{},"23":{},"24":{},"26":{},"27":{},"28":{},"30":{},"31":{},"39":{},"42":{},"44":{},"65":{},"68":{},"69":{},"71":{},"72":{},"73":{}},"component":{}}],["submitt",{"_index":3212,"title":{},"name":{},"text":{"65":{}},"component":{}}],["subscrib",{"_index":26,"title":{},"name":{},"text":{"1":{},"43":{},"44":{}},"component":{}}],["subscript",{"_index":2143,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["subsequ",{"_index":678,"title":{},"name":{},"text":{"5":{},"15":{},"16":{},"20":{},"25":{},"31":{},"34":{},"36":{},"38":{},"40":{}},"component":{}}],["subset",{"_index":3615,"title":{},"name":{},"text":{"73":{}},"component":{}}],["substanti",{"_index":2341,"title":{},"name":{},"text":{"42":{}},"component":{}}],["substitut",{"_index":3633,"title":{},"name":{},"text":{"73":{}},"component":{}}],["subtracted_valu",{"_index":3718,"title":{},"name":{},"text":{"77":{}},"component":{}}],["subtri",{"_index":3497,"title":{},"name":{},"text":{"70":{}},"component":{}}],["succe",{"_index":2006,"title":{},"name":{},"text":{"34":{},"38":{}},"component":{}}],["succeed",{"_index":416,"title":{},"name":{},"text":{"2":{},"38":{},"71":{}},"component":{}}],["success",{"_index":786,"title":{},"name":{},"text":{"5":{},"10":{},"14":{},"16":{},"20":{},"23":{},"24":{},"54":{}},"component":{}}],["successfulli",{"_index":1690,"title":{},"name":{},"text":{"18":{},"20":{},"31":{},"38":{},"54":{},"58":{},"68":{},"71":{},"73":{}},"component":{}}],["successfultransactionreceiptrespons",{"_index":1516,"title":{},"name":{},"text":{"14":{}},"component":{}}],["such",{"_index":103,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"8":{},"9":{},"22":{},"28":{},"30":{},"34":{},"36":{},"38":{},"40":{},"42":{},"44":{},"49":{},"54":{},"57":{},"59":{},"60":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"76":{},"77":{},"83":{},"85":{},"87":{},"91":{}},"component":{}}],["suffer",{"_index":768,"title":{},"name":{},"text":{"5":{}},"component":{}}],["suffici",{"_index":762,"title":{},"name":{},"text":{"5":{},"22":{},"25":{},"27":{},"69":{},"77":{}},"component":{}}],["suffix",{"_index":2757,"title":{},"name":{},"text":{"45":{}},"component":{}}],["suggest",{"_index":2487,"title":{},"name":{},"text":{"42":{},"59":{},"69":{},"87":{}},"component":{}}],["suit",{"_index":3975,"title":{},"name":{},"text":{"88":{},"89":{}},"component":{}}],["sum",{"_index":3317,"title":{},"name":{},"text":{"65":{}},"component":{}}],["sum\\limits_{i=1}^t",{"_index":3226,"title":{},"name":{},"text":{"65":{}},"component":{}}],["summar",{"_index":911,"title":{},"name":{},"text":{"7":{},"80":{}},"component":{}}],["summari",{"_index":2446,"title":{},"name":{},"text":{"42":{},"71":{}},"component":{}}],["sunday",{"_index":3845,"title":{},"name":{},"text":{"83":{}},"component":{}}],["super",{"_index":3750,"title":{},"name":{},"text":{"77":{}},"component":{}}],["super::icountercontract",{"_index":3756,"title":{},"name":{},"text":{"77":{},"81":{}},"component":{}}],["super::ihellostarknet",{"_index":1569,"title":{},"name":{},"text":{"15":{}},"component":{}}],["super::itestsess",{"_index":1347,"title":{},"name":{},"text":{"12":{}},"component":{}}],["superflu",{"_index":1963,"title":{},"name":{},"text":{"33":{}},"component":{}}],["supplementari",{"_index":485,"title":{},"name":{},"text":{"3":{}},"component":{}}],["suppli",{"_index":507,"title":{"5-3":{}},"name":{},"text":{"4":{},"5":{},"10":{},"22":{},"29":{},"30":{},"44":{},"51":{},"75":{}},"component":{}}],["supplier",{"_index":1751,"title":{"22-4":{},"29-12":{},"29-15":{}},"name":{},"text":{"22":{},"30":{}},"component":{}}],["support",{"_index":188,"title":{"39-2":{},"42-72":{}},"name":{},"text":{"1":{},"5":{},"8":{},"20":{},"21":{},"25":{},"32":{},"33":{},"39":{},"41":{},"42":{},"44":{},"45":{},"48":{},"49":{},"54":{},"66":{},"68":{},"69":{},"70":{},"72":{},"75":{},"77":{},"85":{},"88":{},"89":{},"90":{}},"component":{}}],["suppos",{"_index":3272,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["sure",{"_index":1440,"title":{},"name":{},"text":{"13":{},"20":{},"33":{},"38":{},"39":{},"54":{},"73":{}},"component":{}}],["surround",{"_index":517,"title":{},"name":{},"text":{"4":{},"57":{}},"component":{}}],["survey",{"_index":1752,"title":{},"name":{},"text":{"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["swap",{"_index":2472,"title":{},"name":{},"text":{"42":{},"49":{}},"component":{}}],["switch",{"_index":1668,"title":{"31":{},"41-15":{}},"name":{"31":{}},"text":{"17":{},"21":{},"29":{},"31":{},"41":{},"64":{}},"component":{}}],["switch_delegation_pool",{"_index":1783,"title":{},"name":{},"text":{"22":{},"31":{}},"component":{}}],["symbol",{"_index":2805,"title":{},"name":{},"text":{"47":{},"49":{},"80":{}},"component":{}}],["symbol_",{"_index":3704,"title":{},"name":{},"text":{"77":{}},"component":{}}],["sync",{"_index":2164,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["sync.pol",{"_index":2359,"title":{},"name":{},"text":{"42":{}},"component":{}}],["synchron",{"_index":243,"title":{},"name":{},"text":{"1":{},"2":{},"41":{}},"component":{}}],["sync’d",{"_index":2350,"title":{},"name":{},"text":{"42":{}},"component":{}}],["syntax",{"_index":1180,"title":{"10-1":{}},"name":{"81":{}},"text":{"10":{},"44":{},"73":{},"81":{},"84":{},"85":{}},"component":{}}],["syscal",{"_index":2585,"title":{"68-4":{}},"name":{},"text":{"44":{},"54":{},"56":{},"59":{},"65":{},"66":{},"68":{},"71":{},"78":{},"82":{},"85":{}},"component":{}}],["syscallresult",{"_index":3896,"title":{},"name":{},"text":{"85":{}},"component":{}}],["syscalls.cairo",{"_index":3901,"title":{},"name":{},"text":{"85":{}},"component":{}}],["system",{"_index":272,"title":{"68":{},"85":{}},"name":{"85":{}},"text":{"1":{},"2":{},"3":{},"5":{},"8":{},"9":{},"10":{},"22":{},"28":{},"41":{},"42":{},"44":{},"59":{},"60":{},"68":{},"69":{},"70":{},"71":{},"73":{},"78":{},"79":{},"80":{},"84":{},"85":{}},"component":{}}],["systemat",{"_index":3444,"title":{},"name":{},"text":{"69":{}},"component":{}}],["system’",{"_index":3426,"title":{},"name":{},"text":{"69":{}},"component":{}}],["t",{"_index":3229,"title":{},"name":{},"text":{"65":{},"81":{}},"component":{}}],["tabl",{"_index":1128,"title":{"48":{},"53-1":{}},"name":{},"text":{"9":{},"22":{},"33":{},"39":{},"41":{},"45":{},"46":{},"48":{},"50":{},"51":{},"54":{},"65":{},"66":{},"72":{},"74":{},"83":{}},"component":{}}],["tag",{"_index":979,"title":{},"name":{},"text":{"8":{},"10":{},"29":{},"69":{}},"component":{}}],["tailor",{"_index":1011,"title":{},"name":{},"text":{"8":{},"90":{}},"component":{}}],["take",{"_index":1576,"title":{},"name":{},"text":{"15":{},"16":{},"18":{},"35":{},"38":{},"44":{},"57":{},"59":{},"60":{},"64":{},"65":{},"66":{},"69":{},"73":{},"74":{},"77":{},"83":{}},"component":{}}],["taken",{"_index":970,"title":{},"name":{},"text":{"8":{},"42":{},"65":{},"80":{},"82":{}},"component":{}}],["tandem",{"_index":3451,"title":{},"name":{},"text":{"69":{}},"component":{}}],["target",{"_index":625,"title":{},"name":{},"text":{"5":{},"13":{},"22":{},"31":{},"66":{},"70":{}},"component":{}}],["target/dev/counter_test_session.contract_class.json",{"_index":1497,"title":{},"name":{},"text":{"14":{}},"component":{}}],["target/dev/hello_starknet_hellostarknet.contract_class.json",{"_index":1628,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["task",{"_index":949,"title":{},"name":{},"text":{"8":{},"9":{},"29":{},"69":{},"74":{}},"component":{}}],["tax",{"_index":825,"title":{},"name":{},"text":{"5":{}},"component":{}}],["tcontractst",{"_index":1333,"title":{},"name":{},"text":{"12":{},"15":{},"59":{},"77":{},"81":{}},"component":{}}],["team",{"_index":654,"title":{},"name":{},"text":{"5":{},"8":{},"14":{},"33":{},"46":{},"55":{},"74":{}},"component":{}}],["technic",{"_index":749,"title":{},"name":{},"text":{"5":{},"22":{},"33":{},"44":{},"68":{}},"component":{}}],["technolog",{"_index":607,"title":{},"name":{},"text":{"5":{},"8":{},"69":{}},"component":{}}],["telegram",{"_index":3979,"title":{},"name":{},"text":{"88":{}},"component":{}}],["temporari",{"_index":232,"title":{},"name":{},"text":{"1":{},"5":{},"10":{}},"component":{}}],["temporarili",{"_index":2401,"title":{},"name":{},"text":{"42":{}},"component":{}}],["tempvar",{"_index":3629,"title":{},"name":{},"text":{"73":{}},"component":{}}],["ten",{"_index":643,"title":{},"name":{},"text":{"5":{}},"component":{}}],["term",{"_index":504,"title":{"29-2":{}},"name":{},"text":{"4":{},"5":{},"39":{},"44":{},"65":{},"85":{}},"component":{}}],["termin",{"_index":1283,"title":{"44-5":{}},"name":{},"text":{"11":{},"17":{},"21":{},"44":{}},"component":{}}],["test",{"_index":669,"title":{},"name":{},"text":{"5":{},"10":{},"14":{},"15":{},"17":{},"20":{},"29":{},"41":{},"44":{},"90":{},"91":{}},"component":{}}],["test_component::ev",{"_index":3723,"title":{},"name":{},"text":{"77":{}},"component":{}}],["test_sess",{"_index":1339,"title":{},"name":{},"text":{"12":{}},"component":{}}],["testcounterdecreas",{"_index":3725,"title":{},"name":{},"text":{"77":{}},"component":{}}],["testcounterincreas",{"_index":3724,"title":{},"name":{},"text":{"77":{}},"component":{}}],["testenum",{"_index":3726,"title":{},"name":{},"text":{"77":{}},"component":{}}],["testnet",{"_index":57,"title":{},"name":{},"text":{"1":{},"10":{},"12":{},"13":{},"14":{},"20":{},"36":{},"40":{},"42":{},"44":{},"47":{},"59":{},"72":{},"82":{},"90":{}},"component":{}}],["testnet2",{"_index":2423,"title":{},"name":{},"text":{"42":{}},"component":{}}],["testsess",{"_index":1346,"title":{},"name":{},"text":{"12":{},"14":{}},"component":{}}],["tether",{"_index":1968,"title":{},"name":{},"text":{"33":{}},"component":{}}],["text",{"_index":496,"title":{},"name":{},"text":{"4":{},"16":{},"42":{},"70":{}},"component":{}}],["textalign",{"_index":1424,"title":{},"name":{},"text":{"13":{}},"component":{}}],["text{cairoresourcefeeweights}_k",{"_index":3288,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{contract_update_discount",{"_index":3256,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{contract_update_discount}\\cdot",{"_index":3250,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{current_block",{"_index":3529,"title":{},"name":{},"text":{"70":{}},"component":{}}],["text{da_calldata_cost",{"_index":3253,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{da_calldata_cost}\\left",{"_index":3248,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{felt_size_in_byt",{"_index":3246,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{first_v0_12_0_block",{"_index":3528,"title":{},"name":{},"text":{"70":{}},"component":{}}],["text{had",{"_index":3063,"title":{},"name":{},"text":{"60":{}},"component":{}}],["text{hades}:\\mathbb{f}_p^3\\rightarrow\\mathbb{f}_p^3",{"_index":3050,"title":{},"name":{},"text":{"60":{}},"component":{}}],["text{if",{"_index":3061,"title":{},"name":{},"text":{"60":{},"70":{}},"component":{}}],["text{index}_1",{"_index":3674,"title":{},"name":{},"text":{"75":{}},"component":{}}],["text{index}_n",{"_index":3676,"title":{},"name":{},"text":{"75":{}},"component":{}}],["text{l1_log_data_cost",{"_index":3225,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{l1_log_data_cost}\\cdot\\text{payload_s",{"_index":3316,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{l1_storage_write_cost",{"_index":3242,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{l1_storage_write_cost}+\\text{log_message_to_l1_cost}\\right",{"_index":3228,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{l2_payload_cost",{"_index":3245,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{l2_payload_costs}\\bigg",{"_index":3230,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{log_message_to_l1_cost",{"_index":3243,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{max_amount",{"_index":3535,"title":{},"name":{},"text":{"71":{}},"component":{}}],["text{max_price_per_unit",{"_index":3536,"title":{},"name":{},"text":{"71":{}},"component":{}}],["text{message_calldata_cost",{"_index":3224,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{message_calldata_cost}\\cdot",{"_index":3222,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{message_calldata_cost}\\cdot\\left",{"_index":3314,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{message_cost",{"_index":3313,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{otherwis",{"_index":3507,"title":{},"name":{},"text":{"70":{}},"component":{}}],["text{pedersen",{"_index":3003,"title":{},"name":{},"text":{"60":{}},"component":{}}],["text{poseidon",{"_index":3005,"title":{},"name":{},"text":{"60":{}},"component":{}}],["text{poseidon_1",{"_index":3038,"title":{},"name":{},"text":{"60":{}},"component":{}}],["text{poseidon_2",{"_index":3041,"title":{},"name":{},"text":{"60":{}},"component":{}}],["text{selector}_1",{"_index":3673,"title":{},"name":{},"text":{"75":{}},"component":{}}],["text{selector}_n",{"_index":3675,"title":{},"name":{},"text":{"75":{}},"component":{}}],["text{sn_keccak",{"_index":3001,"title":{},"name":{},"text":{"60":{},"84":{}},"component":{}}],["text{stak",{"_index":1885,"title":{},"name":{},"text":{"29":{}},"component":{}}],["text{stake_deleg",{"_index":1886,"title":{},"name":{},"text":{"29":{}},"component":{}}],["text{string_in_math_not",{"_index":519,"title":{},"name":{},"text":{"4":{}},"component":{}}],["text{total_stake_deleg",{"_index":1882,"title":{},"name":{},"text":{"29":{}},"component":{}}],["text{tracecells}[tx]/l",{"_index":3271,"title":{},"name":{},"text":{"65":{}},"component":{}}],["text{valid",{"_index":1880,"title":{},"name":{},"text":{"29":{}},"component":{}}],["th",{"_index":3044,"title":{},"name":{},"text":{"60":{}},"component":{}}],["thank",{"_index":2460,"title":{},"name":{},"text":{"42":{},"54":{},"73":{}},"component":{}}],["that’",{"_index":3466,"title":{},"name":{},"text":{"69":{}},"component":{}}],["the`validate_deploy",{"_index":2697,"title":{},"name":{},"text":{"44":{}},"component":{}}],["themselv",{"_index":2490,"title":{},"name":{},"text":{"42":{},"68":{},"77":{}},"component":{}}],["theoret",{"_index":1874,"title":{},"name":{},"text":{"29":{}},"component":{}}],["theori",{"_index":782,"title":{},"name":{},"text":{"5":{}},"component":{}}],["therebi",{"_index":2954,"title":{},"name":{},"text":{"57":{},"69":{}},"component":{}}],["therefor",{"_index":115,"title":{},"name":{},"text":{"1":{},"5":{},"15":{},"16":{},"17":{},"18":{},"20":{},"33":{},"42":{},"44":{},"59":{},"64":{},"65":{},"68":{},"85":{}},"component":{}}],["there’",{"_index":1725,"title":{},"name":{},"text":{"20":{}},"component":{}}],["thing",{"_index":1697,"title":{},"name":{},"text":{"18":{},"68":{},"73":{}},"component":{}}],["think",{"_index":2926,"title":{},"name":{},"text":{"54":{},"59":{},"84":{}},"component":{}}],["third",{"_index":741,"title":{},"name":{},"text":{"5":{},"16":{},"25":{}},"component":{}}],["those",{"_index":673,"title":{},"name":{},"text":{"5":{},"8":{},"34":{},"38":{},"44":{},"55":{},"57":{},"59":{},"64":{},"72":{},"76":{},"84":{}},"component":{}}],["though",{"_index":1551,"title":{},"name":{},"text":{"15":{},"19":{},"39":{},"73":{}},"component":{}}],["three",{"_index":2572,"title":{},"name":{},"text":{"44":{},"54":{},"60":{},"65":{},"69":{},"70":{},"74":{},"83":{},"84":{},"85":{}},"component":{}}],["threshold",{"_index":628,"title":{},"name":{},"text":{"5":{},"29":{}},"component":{}}],["through",{"_index":567,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"10":{},"16":{},"17":{},"20":{},"22":{},"30":{},"38":{},"42":{},"57":{},"59":{},"67":{},"68":{},"69":{},"72":{},"73":{},"75":{},"80":{},"81":{}},"component":{}}],["throughout",{"_index":1553,"title":{},"name":{},"text":{"15":{},"54":{},"60":{},"65":{},"68":{},"84":{}},"component":{}}],["throughput",{"_index":907,"title":{},"name":{},"text":{"7":{},"41":{}},"component":{}}],["thu",{"_index":2905,"title":{},"name":{},"text":{"54":{},"64":{}},"component":{}}],["thwart",{"_index":3766,"title":{},"name":{},"text":{"78":{}},"component":{}}],["time",{"_index":81,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"8":{},"15":{},"20":{},"22":{},"23":{},"26":{},"29":{},"30":{},"35":{},"38":{},"39":{},"41":{},"42":{},"44":{},"49":{},"51":{},"54":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"82":{},"83":{},"85":{}},"component":{}}],["timelin",{"_index":2498,"title":{"44-2":{}},"name":{},"text":{"42":{}},"component":{}}],["timestamp",{"_index":1915,"title":{},"name":{},"text":{"30":{},"42":{},"44":{},"63":{},"67":{},"82":{},"91":{}},"component":{}}],["tip",{"_index":3564,"title":{},"name":{},"text":{"72":{},"82":{}},"component":{}}],["titl",{"_index":505,"title":{},"name":{},"text":{"4":{},"13":{}},"component":{}}],["titlestyl",{"_index":1411,"title":{},"name":{},"text":{"13":{}},"component":{}}],["to1",{"_index":3147,"title":{},"name":{},"text":{"63":{}},"component":{}}],["to_address",{"_index":1250,"title":{},"name":{},"text":{"10":{},"66":{},"71":{},"85":{}},"component":{}}],["to_address.into",{"_index":3335,"title":{},"name":{},"text":{"66":{}},"component":{}}],["to_pool",{"_index":1933,"title":{},"name":{},"text":{"31":{}},"component":{}}],["to_stak",{"_index":1932,"title":{},"name":{},"text":{"31":{}},"component":{}}],["toaddress",{"_index":3343,"title":{},"name":{},"text":{"66":{},"67":{}},"component":{}}],["today",{"_index":598,"title":{},"name":{},"text":{"5":{},"10":{},"44":{},"57":{},"65":{}},"component":{}}],["togeth",{"_index":400,"title":{},"name":{},"text":{"2":{},"8":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"44":{},"69":{}},"component":{}}],["toggl",{"_index":4004,"title":{},"name":{},"text":{"91":{}},"component":{}}],["token",{"_index":7,"title":{"5":{},"32":{},"47":{},"1-4":{},"1-5":{},"5-2":{},"39-2":{}},"name":{"32":{},"47":{},"49":{}},"text":{"1":{},"5":{},"10":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"32":{},"33":{},"36":{},"38":{},"39":{},"40":{},"47":{},"49":{},"57":{},"65":{},"66":{}},"component":{}}],["token_bridge.cairo",{"_index":1941,"title":{},"name":{},"text":{"33":{},"38":{}},"component":{}}],["token_bridge_interface.cairo",{"_index":2055,"title":{},"name":{},"text":{"38":{}},"component":{}}],["tokenenrollmentiniti",{"_index":2068,"title":{},"name":{},"text":{"38":{}},"component":{}}],["tokenom",{"_index":551,"title":{},"name":{},"text":{"5":{}},"component":{}}],["tokens.json",{"_index":2101,"title":{},"name":{},"text":{"39":{}},"component":{}}],["tokenstatu",{"_index":2071,"title":{},"name":{},"text":{"38":{}},"component":{}}],["token’",{"_index":2107,"title":{},"name":{},"text":{"39":{}},"component":{}}],["toluwalopeayo",{"_index":2196,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ton",{"_index":3150,"title":{},"name":{},"text":{"63":{}},"component":{}}],["tool",{"_index":220,"title":{},"name":{},"text":{"1":{},"7":{},"11":{},"17":{},"18":{},"25":{},"26":{},"44":{},"48":{},"53":{},"87":{},"88":{},"89":{},"91":{}},"component":{}}],["toolbox",{"_index":3969,"title":{},"name":{},"text":{"87":{}},"component":{}}],["toolchain",{"_index":1575,"title":{},"name":{},"text":{"15":{},"17":{},"18":{},"91":{}},"component":{}}],["toolkit",{"_index":3937,"title":{},"name":{},"text":{"86":{},"87":{}},"component":{}}],["top",{"_index":372,"title":{},"name":{},"text":{"2":{},"5":{},"41":{},"57":{},"73":{}},"component":{}}],["topic",{"_index":506,"title":{},"name":{},"text":{"4":{},"7":{},"8":{},"9":{},"65":{},"72":{},"85":{}},"component":{}}],["tostr",{"_index":1493,"title":{},"name":{},"text":{"14":{}},"component":{}}],["total",{"_index":700,"title":{},"name":{},"text":{"5":{},"22":{},"26":{},"27":{},"29":{},"30":{},"33":{},"39":{},"63":{},"65":{},"71":{}},"component":{}}],["total_gas_consum",{"_index":2571,"title":{},"name":{},"text":{"44":{}},"component":{}}],["total_suppli",{"_index":3788,"title":{},"name":{},"text":{"80":{}},"component":{}}],["touch",{"_index":3792,"title":{},"name":{},"text":{"81":{}},"component":{}}],["toward",{"_index":3425,"title":{},"name":{},"text":{"69":{}},"component":{}}],["trace",{"_index":285,"title":{"2-27":{}},"name":{},"text":{"2":{},"8":{},"41":{},"42":{},"44":{},"65":{},"69":{},"74":{},"87":{},"88":{}},"component":{}}],["track",{"_index":866,"title":{},"name":{},"text":{"7":{},"22":{},"30":{},"42":{},"64":{},"65":{},"69":{}},"component":{}}],["tradeoff",{"_index":3469,"title":{},"name":{},"text":{"69":{},"85":{}},"component":{}}],["tradit",{"_index":3526,"title":{},"name":{},"text":{"70":{},"79":{}},"component":{}}],["trail",{"_index":2797,"title":{},"name":{},"text":{"46":{}},"component":{}}],["train",{"_index":981,"title":{},"name":{},"text":{"8":{}},"component":{}}],["trait",{"_index":1327,"title":{},"name":{},"text":{"12":{},"15":{},"59":{},"77":{},"81":{}},"component":{}}],["transact",{"_index":114,"title":{"58":{},"71":{},"72":{},"2-25":{},"39-9":{},"44-5":{},"54-3":{},"54-4":{},"63-3":{},"65-4":{},"65-5":{},"65-6":{},"66-9":{},"69-1":{},"69-7":{},"71-1":{},"71-2":{},"71-3":{},"71-4":{},"72-1":{},"72-2":{},"72-3":{},"72-5":{},"72-8":{},"72-9":{},"72-11":{},"72-13":{},"72-16":{},"72-17":{},"72-19":{},"72-21":{},"73-3":{},"82-3":{}},"name":{"58":{},"71":{},"72":{}},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"14":{},"16":{},"20":{},"23":{},"24":{},"26":{},"27":{},"28":{},"31":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"52":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"75":{},"76":{},"78":{},"79":{},"82":{},"83":{},"84":{},"85":{},"88":{}},"component":{}}],["transaction.commit",{"_index":2152,"title":{},"name":{},"text":{"41":{}},"component":{}}],["transaction_count",{"_index":3090,"title":{},"name":{},"text":{"63":{}},"component":{}}],["transaction_hash",{"_index":1256,"title":{},"name":{},"text":{"10":{},"63":{},"71":{},"82":{}},"component":{}}],["transactionhash",{"_index":1470,"title":{},"name":{},"text":{"14":{}},"component":{}}],["transactions_commit",{"_index":3094,"title":{},"name":{},"text":{"63":{}},"component":{}}],["transactionstatu",{"_index":1464,"title":{},"name":{},"text":{"14":{}},"component":{}}],["transactionstatus.tsx",{"_index":1512,"title":{},"name":{},"text":{"14":{}},"component":{}}],["transactionstorag",{"_index":2269,"title":{},"name":{},"text":{"41":{}},"component":{}}],["transaction’",{"_index":1734,"title":{},"name":{},"text":{"20":{},"54":{},"65":{},"66":{},"68":{},"71":{},"72":{},"82":{}},"component":{}}],["transfer",{"_index":729,"title":{"39-3":{},"39-6":{},"39-7":{},"39-10":{}},"name":{},"text":{"5":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"31":{},"34":{},"36":{},"38":{},"39":{},"40":{},"44":{},"65":{},"66":{},"71":{},"77":{},"84":{}},"component":{}}],["transfer_from",{"_index":3714,"title":{},"name":{},"text":{"77":{}},"component":{}}],["transform",{"_index":3160,"title":{},"name":{},"text":{"64":{}},"component":{}}],["transit",{"_index":450,"title":{"70-1":{}},"name":{},"text":{"2":{},"29":{},"42":{},"44":{},"49":{},"68":{},"70":{},"77":{}},"component":{}}],["translat",{"_index":464,"title":{},"name":{},"text":{"2":{},"73":{}},"component":{}}],["transmit",{"_index":1171,"title":{},"name":{},"text":{"9":{},"71":{}},"component":{}}],["transport",{"_index":918,"title":{},"name":{},"text":{"8":{},"42":{}},"component":{}}],["travers",{"_index":3501,"title":{},"name":{},"text":{"70":{}},"component":{}}],["treasuri",{"_index":688,"title":{},"name":{},"text":{"5":{}},"component":{}}],["treat",{"_index":3181,"title":{},"name":{},"text":{"64":{},"75":{}},"component":{}}],["tree",{"_index":1659,"title":{},"name":{},"text":{"17":{},"44":{},"69":{},"70":{}},"component":{}}],["tri",{"_index":1727,"title":{},"name":{},"text":{"20":{},"63":{},"70":{}},"component":{}}],["trie",{"_index":2300,"title":{"70-3":{},"70-4":{},"70-5":{},"70-7":{},"70-8":{},"70-9":{}},"name":{},"text":{"41":{},"70":{}},"component":{}}],["trie’",{"_index":3491,"title":{},"name":{},"text":{"70":{}},"component":{}}],["trigger",{"_index":959,"title":{"39-5":{}},"name":{},"text":{"8":{},"34":{},"38":{},"39":{},"66":{}},"component":{}}],["triplet",{"_index":3496,"title":{},"name":{},"text":{"70":{}},"component":{}}],["trivial",{"_index":3823,"title":{},"name":{},"text":{"83":{}},"component":{}}],["troubleshoot",{"_index":1707,"title":{"21":{}},"name":{"21":{}},"text":{"20":{}},"component":{}}],["true",{"_index":353,"title":{},"name":{},"text":{"2":{},"11":{},"13":{},"14":{},"25":{},"34":{},"38":{},"59":{},"73":{},"75":{},"79":{},"85":{}},"component":{}}],["truncat",{"_index":2343,"title":{},"name":{},"text":{"42":{}},"component":{}}],["trust",{"_index":2467,"title":{},"name":{},"text":{"42":{},"53":{},"69":{}},"component":{}}],["truth",{"_index":1022,"title":{},"name":{},"text":{"9":{}},"component":{}}],["tsconfig.json",{"_index":1364,"title":{},"name":{},"text":{"13":{}},"component":{}}],["tupl",{"_index":2711,"title":{},"name":{},"text":{"44":{},"60":{},"80":{},"83":{},"85":{}},"component":{}}],["ture",{"_index":3603,"title":{},"name":{},"text":{"73":{}},"component":{}}],["turn",{"_index":778,"title":{},"name":{},"text":{"5":{},"9":{},"42":{}},"component":{}}],["tutori",{"_index":1548,"title":{"21":{}},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"19":{},"20":{}},"component":{}}],["tvl",{"_index":1988,"title":{},"name":{},"text":{"33":{}},"component":{}}],["twice",{"_index":3319,"title":{},"name":{},"text":{"65":{},"74":{}},"component":{}}],["two",{"_index":462,"title":{},"name":{},"text":{"2":{},"7":{},"8":{},"11":{},"13":{},"15":{},"16":{},"29":{},"33":{},"38":{},"44":{},"49":{},"54":{},"55":{},"57":{},"59":{},"64":{},"65":{},"67":{},"68":{},"69":{},"70":{},"71":{},"74":{},"77":{},"83":{},"84":{},"85":{}},"component":{}}],["tx",{"_index":3269,"title":{},"name":{},"text":{"65":{},"70":{},"82":{}},"component":{}}],["tx_hash",{"_index":3139,"title":{},"name":{},"text":{"63":{}},"component":{}}],["tx_info",{"_index":3804,"title":{},"name":{},"text":{"82":{}},"component":{}}],["tx_statu",{"_index":1188,"title":{"10-16":{}},"name":{},"text":{"10":{}},"component":{}}],["txinfo",{"_index":3801,"title":{"82-3":{}},"name":{},"text":{"82":{}},"component":{}}],["txn",{"_index":2183,"title":{},"name":{},"text":{"41":{}},"component":{}}],["txn_hash_not_found",{"_index":2403,"title":{},"name":{},"text":{"42":{}},"component":{}}],["txr",{"_index":1519,"title":{},"name":{},"text":{"14":{}},"component":{}}],["txr.finality_statu",{"_index":1523,"title":{},"name":{},"text":{"14":{}},"component":{}}],["txr.match",{"_index":1522,"title":{},"name":{},"text":{"14":{}},"component":{}}],["txr.statusreceipt",{"_index":1531,"title":{},"name":{},"text":{"14":{}},"component":{}}],["txr.transaction_failure_reason",{"_index":1525,"title":{},"name":{},"text":{"14":{}},"component":{}}],["type",{"_index":458,"title":{"72":{},"83":{},"59-4":{},"77-5":{},"83-1":{},"83-2":{}},"name":{"83":{}},"text":{"2":{},"4":{},"7":{},"13":{},"14":{},"16":{},"38":{},"41":{},"42":{},"44":{},"48":{},"54":{},"55":{},"56":{},"59":{},"61":{},"63":{},"65":{},"66":{},"69":{},"71":{},"72":{},"74":{},"76":{},"77":{},"81":{},"83":{},"84":{},"85":{}},"component":{}}],["typefac",{"_index":523,"title":{},"name":{},"text":{"4":{}},"component":{}}],["typeof",{"_index":1491,"title":{},"name":{},"text":{"14":{}},"component":{}}],["typescript",{"_index":3935,"title":{},"name":{},"text":{"86":{}},"component":{}}],["typic",{"_index":331,"title":{},"name":{},"text":{"2":{},"9":{},"57":{},"69":{}},"component":{}}],["u128",{"_index":1336,"title":{},"name":{},"text":{"12":{},"63":{},"77":{},"81":{},"82":{},"83":{}},"component":{}}],["u16",{"_index":3814,"title":{},"name":{},"text":{"83":{}},"component":{}}],["u256",{"_index":2088,"title":{"83-4":{}},"name":{},"text":{"38":{},"80":{},"83":{},"84":{},"85":{}},"component":{}}],["u256:1000000000000000000",{"_index":1822,"title":{},"name":{},"text":{"25":{}},"component":{}}],["u32",{"_index":2594,"title":{},"name":{},"text":{"44":{},"63":{},"82":{},"83":{},"85":{}},"component":{}}],["u512",{"_index":3811,"title":{"83-5":{}},"name":{},"text":{"83":{}},"component":{}}],["u64",{"_index":3085,"title":{},"name":{},"text":{"63":{},"82":{},"83":{},"85":{}},"component":{}}],["u8",{"_index":3787,"title":{},"name":{},"text":{"80":{},"83":{}},"component":{}}],["udc",{"_index":1592,"title":{"59":{},"59-1":{},"59-3":{},"59-7":{}},"name":{},"text":{"16":{},"56":{},"59":{}},"component":{}}],["udc.deploycontract",{"_index":2992,"title":{},"name":{},"text":{"59":{}},"component":{}}],["udc_address",{"_index":2975,"title":{},"name":{},"text":{"59":{}},"component":{}}],["udc_address.try_into",{"_index":2977,"title":{},"name":{},"text":{"59":{}},"component":{}}],["udc’",{"_index":2985,"title":{},"name":{},"text":{"59":{}},"component":{}}],["ui",{"_index":2857,"title":{},"name":{},"text":{"49":{},"77":{},"86":{}},"component":{}}],["uint256",{"_index":2031,"title":{},"name":{},"text":{"36":{},"38":{},"40":{},"64":{},"66":{},"67":{}},"component":{}}],["uint256.cairo",{"_index":2700,"title":{},"name":{},"text":{"44":{}},"component":{}}],["uint256_mul_div_mod",{"_index":2699,"title":{},"name":{},"text":{"44":{}},"component":{}}],["uint8",{"_index":2295,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ultim",{"_index":931,"title":{},"name":{},"text":{"8":{},"59":{},"72":{},"83":{}},"component":{}}],["umbrella",{"_index":1026,"title":{},"name":{},"text":{"9":{}},"component":{}}],["unabl",{"_index":1738,"title":{"21-2":{},"21-4":{}},"name":{},"text":{},"component":{}}],["unaffect",{"_index":2680,"title":{},"name":{},"text":{"44":{}},"component":{}}],["unaffili",{"_index":586,"title":{},"name":{},"text":{"5":{}},"component":{}}],["unanticip",{"_index":809,"title":{},"name":{},"text":{"5":{}},"component":{}}],["unbox",{"_index":2908,"title":{},"name":{},"text":{"54":{},"85":{}},"component":{}}],["unchang",{"_index":2552,"title":{},"name":{},"text":{"44":{}},"component":{}}],["unclaim",{"_index":1765,"title":{},"name":{},"text":{"22":{},"26":{},"31":{}},"component":{}}],["uncompress",{"_index":2546,"title":{},"name":{},"text":{"44":{}},"component":{}}],["uncoupl",{"_index":2955,"title":{},"name":{},"text":{"57":{}},"component":{}}],["undefin",{"_index":1474,"title":{},"name":{},"text":{"14":{}},"component":{}}],["undeleg",{"_index":1832,"title":{"26-2":{}},"name":{},"text":{"26":{},"31":{}},"component":{}}],["under",{"_index":599,"title":{},"name":{},"text":{"5":{},"9":{},"44":{},"49":{},"53":{},"59":{},"64":{},"66":{},"77":{},"81":{},"85":{}},"component":{}}],["underbrace{0",{"_index":3841,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{0\\cdots011}_{\\text{128",{"_index":3830,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{0\\cdots01}_{\\text{128",{"_index":3828,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{0\\cdots0}_{\\text{127",{"_index":3167,"title":{},"name":{},"text":{"64":{}},"component":{}}],["underbrace{0\\cdots0}_{\\text{128",{"_index":3186,"title":{},"name":{},"text":{"64":{},"83":{}},"component":{}}],["underbrace{0\\cdots0}_{\\text{188",{"_index":3573,"title":{},"name":{},"text":{"72":{}},"component":{}}],["underbrace{0\\cdots10100}_{\\text{128",{"_index":3831,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{0\\cdots10}_{\\text{128",{"_index":3827,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{10",{"_index":3837,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{20",{"_index":3839,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{3}_{\\textit{number_of_array_memb",{"_index":3836,"title":{},"name":{},"text":{"83":{}},"component":{}}],["underbrace{\\text",{"_index":3172,"title":{},"name":{},"text":{"64":{}},"component":{}}],["underbrace{\\textit{gas_pric",{"_index":3300,"title":{},"name":{},"text":{"65":{}},"component":{}}],["underbrace{\\textit{gas_price}\\left",{"_index":3298,"title":{},"name":{},"text":{"65":{}},"component":{}}],["underbrace{\\text{class",{"_index":3168,"title":{},"name":{},"text":{"64":{}},"component":{}}],["underbrace{\\text{fee_data_availability_mode}}_{\\text{32",{"_index":3575,"title":{},"name":{},"text":{"72":{}},"component":{}}],["underbrace{\\text{flag}}_{\\text{1",{"_index":2551,"title":{},"name":{},"text":{"44":{}},"component":{}}],["underbrace{\\text{l1_gas}}_{\\text{60",{"_index":3569,"title":{},"name":{},"text":{"72":{}},"component":{}}],["underbrace{\\text{l2_gas}}_{\\text{60",{"_index":3572,"title":{},"name":{},"text":{"72":{}},"component":{}}],["underbrace{\\text{max_amount}}_{\\text{64",{"_index":3570,"title":{},"name":{},"text":{"72":{}},"component":{}}],["underbrace{\\text{max_price_per_unit}}_{\\text{128",{"_index":3571,"title":{},"name":{},"text":{"72":{}},"component":{}}],["underbrace{\\text{n_updates_len}}_{\\text{1",{"_index":2550,"title":{},"name":{},"text":{"44":{}},"component":{}}],["underbrace{\\text{n_updates}}_{\\text{8",{"_index":2549,"title":{},"name":{},"text":{"44":{}},"component":{}}],["underbrace{\\text{new",{"_index":3170,"title":{},"name":{},"text":{"64":{}},"component":{}}],["underbrace{\\text{new_nonc",{"_index":2547,"title":{},"name":{},"text":{"44":{}},"component":{}}],["underbrace{\\text{nonce_data_availability_mode}}_{\\text{32",{"_index":3574,"title":{},"name":{},"text":{"72":{}},"component":{}}],["underdocu",{"_index":2398,"title":{},"name":{},"text":{"42":{}},"component":{}}],["undergo",{"_index":3553,"title":{},"name":{},"text":{"72":{},"76":{}},"component":{}}],["underli",{"_index":366,"title":{},"name":{},"text":{"2":{},"5":{},"69":{},"75":{}},"component":{}}],["understand",{"_index":561,"title":{},"name":{},"text":{"5":{},"12":{},"53":{},"73":{},"76":{},"83":{}},"component":{}}],["underw",{"_index":3745,"title":{},"name":{},"text":{"77":{}},"component":{}}],["unexpectedli",{"_index":2488,"title":{},"name":{},"text":{"42":{}},"component":{}}],["unfortun",{"_index":2485,"title":{},"name":{},"text":{"42":{}},"component":{}}],["unhappi",{"_index":3638,"title":{},"name":{},"text":{"73":{}},"component":{}}],["uni",{"_index":1982,"title":{},"name":{},"text":{"33":{}},"component":{}}],["unifi",{"_index":3795,"title":{},"name":{},"text":{"81":{}},"component":{}}],["uniform",{"_index":877,"title":{},"name":{},"text":{"7":{}},"component":{}}],["unilater",{"_index":595,"title":{},"name":{},"text":{"5":{}},"component":{}}],["uniniti",{"_index":3843,"title":{},"name":{},"text":{"83":{}},"component":{}}],["uninterrupt",{"_index":787,"title":{},"name":{},"text":{"5":{}},"component":{}}],["uniqu",{"_index":312,"title":{},"name":{},"text":{"2":{},"9":{},"16":{},"20":{},"33":{},"53":{},"54":{},"55":{},"59":{},"65":{},"70":{},"76":{},"78":{},"79":{},"89":{}},"component":{}}],["uniswap",{"_index":1981,"title":{},"name":{},"text":{"33":{}},"component":{}}],["unit",{"_index":317,"title":{"65-3":{}},"name":{},"text":{"2":{},"38":{},"72":{},"74":{},"82":{},"83":{}},"component":{}}],["univers",{"_index":693,"title":{"59":{},"87-3":{}},"name":{"59":{}},"text":{"5":{},"56":{},"59":{},"87":{},"89":{}},"component":{}}],["unix",{"_index":3089,"title":{},"name":{},"text":{"63":{},"82":{}},"component":{}}],["unknown",{"_index":838,"title":{},"name":{},"text":{"5":{},"38":{}},"component":{}}],["unless",{"_index":725,"title":{},"name":{},"text":{"5":{},"44":{},"69":{}},"component":{}}],["unlik",{"_index":1724,"title":{},"name":{},"text":{"20":{},"66":{},"70":{},"87":{}},"component":{}}],["unlimit",{"_index":2411,"title":{},"name":{},"text":{"42":{}},"component":{}}],["unlock",{"_index":704,"title":{},"name":{},"text":{"5":{}},"component":{}}],["unnecessari",{"_index":2735,"title":{},"name":{},"text":{"44":{}},"component":{}}],["unpaus",{"_index":1924,"title":{},"name":{},"text":{"30":{}},"component":{}}],["unprefix",{"_index":2399,"title":{},"name":{},"text":{"42":{}},"component":{}}],["unprocess",{"_index":889,"title":{},"name":{},"text":{"7":{}},"component":{}}],["unprov",{"_index":3612,"title":{},"name":{},"text":{"73":{}},"component":{}}],["unproven",{"_index":784,"title":{},"name":{},"text":{"5":{}},"component":{}}],["unrecover",{"_index":802,"title":{},"name":{},"text":{"5":{}},"component":{}}],["unregist",{"_index":2400,"title":{},"name":{},"text":{"42":{}},"component":{}}],["unrel",{"_index":3733,"title":{},"name":{},"text":{"77":{}},"component":{}}],["unsatisfi",{"_index":3598,"title":{"73-3":{}},"name":{},"text":{},"component":{}}],["unsign",{"_index":3810,"title":{"83-3":{}},"name":{},"text":{"83":{}},"component":{}}],["unstak",{"_index":1760,"title":{"26-1":{}},"name":{},"text":{"22":{},"26":{},"27":{},"29":{},"30":{}},"component":{}}],["unstake_act",{"_index":1772,"title":{},"name":{},"text":{"22":{},"26":{}},"component":{}}],["unstake_int",{"_index":1771,"title":{},"name":{},"text":{"22":{},"26":{}},"component":{}}],["unsuccess",{"_index":1530,"title":{},"name":{},"text":{"14":{}},"component":{}}],["unsupport",{"_index":17,"title":{"1-10":{},"72-15":{},"72-21":{}},"name":{},"text":{"1":{},"66":{},"72":{}},"component":{}}],["until",{"_index":935,"title":{},"name":{},"text":{"8":{},"29":{},"42":{},"66":{},"71":{},"79":{}},"component":{}}],["untouch",{"_index":3236,"title":{},"name":{},"text":{"65":{}},"component":{}}],["unus",{"_index":1304,"title":{},"name":{},"text":{"11":{}},"component":{}}],["unwrap",{"_index":2978,"title":{},"name":{},"text":{"59":{},"66":{}},"component":{}}],["unwrap_syscal",{"_index":3876,"title":{},"name":{},"text":{"84":{},"85":{}},"component":{}}],["up",{"_index":473,"title":{"17":{},"20-2":{},"21-1":{}},"name":{},"text":{"3":{},"5":{},"10":{},"15":{},"16":{},"17":{},"19":{},"33":{},"38":{},"39":{},"48":{},"54":{},"60":{},"65":{},"68":{},"69":{},"71":{},"73":{},"82":{},"86":{}},"component":{}}],["upcom",{"_index":904,"title":{"43":{},"44-5":{}},"name":{"43":{}},"text":{"7":{},"41":{},"42":{},"44":{}},"component":{}}],["updat",{"_index":23,"title":{"28-3":{},"41-15":{},"43-1":{},"44-3":{},"44-4":{},"44-20":{},"44-29":{},"65-19":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"9":{},"13":{},"14":{},"20":{},"22":{},"27":{},"28":{},"29":{},"30":{},"33":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"48":{},"54":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"76":{},"85":{},"88":{},"89":{}},"component":{}}],["update_commiss",{"_index":1844,"title":{},"name":{},"text":{"28":{}},"component":{}}],["update_total_suppli",{"_index":1794,"title":{},"name":{},"text":{"22":{}},"component":{}}],["updatest",{"_index":1178,"title":{},"name":{},"text":{"9":{}},"component":{}}],["updates}}_{\\text{64",{"_index":3173,"title":{},"name":{},"text":{"64":{}},"component":{}}],["upgrad",{"_index":1116,"title":{"22-6":{}},"name":{},"text":{"9":{},"22":{},"41":{},"42":{},"44":{},"49":{}},"component":{}}],["upload",{"_index":3954,"title":{},"name":{},"text":{"87":{}},"component":{}}],["upon",{"_index":449,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"24":{},"31":{},"34":{},"38":{},"56":{},"59":{},"66":{}},"component":{}}],["url",{"_index":11,"title":{"1-6":{}},"name":{},"text":{"4":{},"10":{},"42":{},"46":{},"50":{}},"component":{}}],["us",{"_index":194,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"45":{},"47":{},"48":{},"49":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"76":{},"77":{},"79":{},"80":{},"81":{},"82":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{}},"component":{}}],["usabl",{"_index":2702,"title":{},"name":{},"text":{"44":{},"53":{},"57":{}},"component":{}}],["usag",{"_index":559,"title":{"11-1":{},"76-2":{}},"name":{},"text":{"5":{},"41":{},"44":{},"65":{},"72":{},"82":{}},"component":{}}],["usd",{"_index":1966,"title":{},"name":{},"text":{"33":{}},"component":{}}],["usdc",{"_index":1938,"title":{"33-3":{}},"name":{},"text":{"33":{},"39":{},"40":{}},"component":{}}],["usdt",{"_index":1969,"title":{},"name":{},"text":{"33":{}},"component":{}}],["useaccount",{"_index":1430,"title":{},"name":{},"text":{"13":{}},"component":{}}],["useconnect",{"_index":1454,"title":{},"name":{},"text":{"13":{}},"component":{}}],["usecontract",{"_index":1461,"title":{},"name":{},"text":{"14":{}},"component":{}}],["usedisconnect",{"_index":1443,"title":{},"name":{},"text":{"13":{}},"component":{}}],["useeffect",{"_index":1460,"title":{},"name":{},"text":{"14":{}},"component":{}}],["useinjectedconnector",{"_index":1376,"title":{},"name":{},"text":{"13":{}},"component":{}}],["usenetwork",{"_index":1431,"title":{},"name":{},"text":{"13":{}},"component":{}}],["user",{"_index":290,"title":{"8-4":{}},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"8":{},"13":{},"22":{},"29":{},"33":{},"34":{},"36":{},"38":{},"39":{},"41":{},"42":{},"44":{},"47":{},"55":{},"57":{},"59":{},"65":{},"66":{},"69":{},"71":{},"72":{},"73":{},"75":{},"82":{}},"component":{}}],["usereadcontract",{"_index":1462,"title":{},"name":{},"text":{"14":{}},"component":{}}],["users//.starkli/env",{"_index":1743,"title":{},"name":{},"text":{"21":{}},"component":{}}],["user’",{"_index":2026,"title":{},"name":{},"text":{"36":{},"39":{},"57":{},"73":{}},"component":{}}],["usesendtransact",{"_index":1463,"title":{},"name":{},"text":{"14":{}},"component":{}}],["usest",{"_index":1442,"title":{},"name":{},"text":{"13":{},"14":{}},"component":{}}],["usetransactionreceipt",{"_index":1517,"title":{},"name":{},"text":{"14":{}},"component":{}}],["usher",{"_index":3432,"title":{},"name":{},"text":{"69":{}},"component":{}}],["usiz",{"_index":3815,"title":{},"name":{},"text":{"83":{}},"component":{}}],["usual",{"_index":1173,"title":{},"name":{},"text":{"9":{},"48":{},"60":{},"65":{},"83":{}},"component":{}}],["utc",{"_index":2087,"title":{},"name":{},"text":{"38":{},"54":{},"82":{}},"component":{}}],["utf",{"_index":3663,"title":{},"name":{},"text":{"75":{}},"component":{}}],["util",{"_index":779,"title":{"87-8":{}},"name":{},"text":{"5":{},"8":{},"13":{},"41":{},"42":{},"51":{},"53":{},"87":{},"88":{}},"component":{}}],["utils/constants.t",{"_index":1507,"title":{},"name":{},"text":{"14":{}},"component":{}}],["v",{"_index":767,"title":{"11-12":{}},"name":{},"text":{"5":{},"11":{},"41":{},"44":{},"65":{}},"component":{}}],["v.0.13.0",{"_index":613,"title":{},"name":{},"text":{"5":{}},"component":{}}],["v.0.3.0",{"_index":2289,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v0",{"_index":267,"title":{"49":{},"72-7":{},"72-15":{}},"name":{},"text":{"1":{},"33":{},"42":{},"49":{},"54":{},"66":{},"72":{},"77":{},"81":{}},"component":{}}],["v0.1",{"_index":2444,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v0.1.0",{"_index":2128,"title":{"41-46":{}},"name":{},"text":{},"component":{}}],["v0.1.0…​v0.2.0",{"_index":2298,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v0.10.0",{"_index":2528,"title":{"44-43":{}},"name":{},"text":{},"component":{}}],["v0.10.1",{"_index":2526,"title":{"44-42":{}},"name":{},"text":{"72":{}},"component":{}}],["v0.10.2",{"_index":2334,"title":{"42-72":{},"44-41":{}},"name":{},"text":{"42":{}},"component":{}}],["v0.10.3",{"_index":269,"title":{"44-40":{}},"name":{},"text":{"1":{},"41":{},"42":{}},"component":{}}],["v0.11",{"_index":2429,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v0.11.0",{"_index":197,"title":{"44-39":{},"64-3":{},"64-4":{},"64-5":{},"64-6":{},"64-7":{},"64-8":{}},"name":{},"text":{"1":{},"41":{},"42":{},"44":{},"73":{}},"component":{}}],["v0.11.1",{"_index":2394,"title":{"44-38":{}},"name":{},"text":{"42":{},"44":{}},"component":{}}],["v0.11.2",{"_index":2260,"title":{"44-37":{}},"name":{},"text":{"41":{},"42":{},"44":{}},"component":{}}],["v0.12",{"_index":2345,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v0.12.0",{"_index":2252,"title":{"44-36":{}},"name":{},"text":{"41":{},"42":{},"44":{},"85":{}},"component":{}}],["v0.12.1",{"_index":2227,"title":{"44-35":{}},"name":{},"text":{"41":{},"44":{}},"component":{}}],["v0.12.2",{"_index":2226,"title":{"44-34":{}},"name":{},"text":{"41":{},"44":{}},"component":{}}],["v0.12.3",{"_index":2129,"title":{"44-32":{}},"name":{},"text":{"41":{},"44":{}},"component":{}}],["v0.13.0",{"_index":65,"title":{"44-31":{}},"name":{},"text":{"1":{},"44":{}},"component":{}}],["v0.13.1",{"_index":2509,"title":{"44-18":{}},"name":{},"text":{"44":{},"65":{}},"component":{}}],["v0.13.1.1",{"_index":2508,"title":{"44-17":{}},"name":{},"text":{},"component":{}}],["v0.13.2",{"_index":2505,"title":{"44-9":{}},"name":{},"text":{"44":{},"68":{}},"component":{}}],["v0.13.3",{"_index":2504,"title":{"44-7":{}},"name":{},"text":{"44":{}},"component":{}}],["v0.13.4",{"_index":2502,"title":{"44-1":{}},"name":{},"text":{},"component":{}}],["v0.2",{"_index":2370,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v0.2.0",{"_index":2127,"title":{"41-41":{}},"name":{},"text":{},"component":{}}],["v0.2.0…​v0.2.1",{"_index":2282,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v0.2.1",{"_index":2126,"title":{"41-40":{}},"name":{},"text":{},"component":{}}],["v0.2.1…​v0.2.2",{"_index":2277,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v0.2.2",{"_index":2125,"title":{"41-38":{}},"name":{},"text":{},"component":{}}],["v0.3",{"_index":2371,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v0.3.0",{"_index":2124,"title":{"41-34":{}},"name":{},"text":{},"component":{}}],["v0.3.0…​v0.3.1",{"_index":2259,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v0.3.1",{"_index":2123,"title":{"41-30":{}},"name":{},"text":{"42":{}},"component":{}}],["v0.4",{"_index":2363,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v0.4.0",{"_index":2122,"title":{"41-27":{},"42-70":{}},"name":{},"text":{"41":{}},"component":{}}],["v0.4.1",{"_index":2121,"title":{"41-23":{},"42-61":{}},"name":{},"text":{"42":{}},"component":{}}],["v0.4.2",{"_index":2333,"title":{"42-58":{}},"name":{},"text":{},"component":{}}],["v0.4.3",{"_index":2332,"title":{"42-55":{}},"name":{},"text":{},"component":{}}],["v0.4.4",{"_index":2331,"title":{"42-50":{}},"name":{},"text":{"42":{}},"component":{}}],["v0.4.5",{"_index":2330,"title":{"42-46":{}},"name":{},"text":{},"component":{}}],["v0.5.0",{"_index":2120,"title":{"41-19":{},"42-37":{}},"name":{},"text":{"41":{}},"component":{}}],["v0.5.1",{"_index":2119,"title":{"41-17":{},"42-35":{}},"name":{},"text":{},"component":{}}],["v0.5.2",{"_index":2328,"title":{"42-32":{}},"name":{},"text":{"42":{}},"component":{}}],["v0.5.3",{"_index":2327,"title":{"42-29":{}},"name":{},"text":{},"component":{}}],["v0.5.4",{"_index":2326,"title":{"42-26":{}},"name":{},"text":{},"component":{}}],["v0.6.0",{"_index":2118,"title":{"41-12":{}},"name":{},"text":{"44":{}},"component":{}}],["v0.7.0",{"_index":2116,"title":{"41-6":{}},"name":{},"text":{"65":{}},"component":{}}],["v0.7.3",{"_index":2114,"title":{"41-1":{}},"name":{},"text":{},"component":{}}],["v0.8.0",{"_index":2580,"title":{},"name":{},"text":{"44":{}},"component":{}}],["v0.8.1",{"_index":1611,"title":{},"name":{},"text":{"16":{}},"component":{}}],["v0.9.0",{"_index":2531,"title":{"44-45":{}},"name":{},"text":{},"component":{}}],["v0.9.1",{"_index":2530,"title":{"44-44":{}},"name":{},"text":{},"component":{}}],["v0_4",{"_index":2173,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v0_5",{"_index":2172,"title":{},"name":{},"text":{"41":{}},"component":{}}],["v1",{"_index":2646,"title":{"81":{},"72-5":{},"72-6":{},"72-13":{},"72-14":{},"72-19":{},"72-20":{}},"name":{},"text":{"44":{},"56":{},"63":{},"72":{},"77":{},"81":{}},"component":{}}],["v1.0.0",{"_index":2677,"title":{},"name":{},"text":{"44":{}},"component":{}}],["v1.1.0",{"_index":2374,"title":{},"name":{},"text":{"42":{}},"component":{}}],["v1.4.0",{"_index":2656,"title":{},"name":{},"text":{"44":{}},"component":{}}],["v1.6.0",{"_index":2582,"title":{},"name":{},"text":{"44":{}},"component":{}}],["v2",{"_index":3182,"title":{"81":{},"72-11":{},"72-12":{}},"name":{},"text":{"64":{},"72":{},"77":{},"81":{}},"component":{}}],["v2.0.0",{"_index":228,"title":{"77-8":{}},"name":{},"text":{"1":{},"42":{},"77":{},"81":{}},"component":{}}],["v2.2.0",{"_index":3720,"title":{},"name":{},"text":{"77":{}},"component":{}}],["v2.3.0",{"_index":3687,"title":{"77-3":{}},"name":{},"text":{"77":{}},"component":{}}],["v2.4.0",{"_index":2658,"title":{},"name":{},"text":{"44":{}},"component":{}}],["v2.4.1",{"_index":1612,"title":{},"name":{},"text":{"16":{}},"component":{}}],["v2.7.0",{"_index":2581,"title":{},"name":{},"text":{"44":{}},"component":{}}],["v2.9.2",{"_index":1318,"title":{},"name":{},"text":{"12":{}},"component":{}}],["v3",{"_index":2652,"title":{"65-5":{},"72-3":{},"72-4":{},"72-9":{},"72-10":{},"72-17":{},"72-18":{}},"name":{},"text":{"44":{},"56":{},"65":{},"71":{},"72":{}},"component":{}}],["v_k",{"_index":3219,"title":{},"name":{},"text":{"65":{}},"component":{}}],["v_l",{"_index":3511,"title":{},"name":{},"text":{"70":{}},"component":{}}],["v_r",{"_index":3514,"title":{},"name":{},"text":{"70":{}},"component":{}}],["valid",{"_index":150,"title":{"25":{},"26-1":{},"28-1":{},"28-5":{},"28-6":{},"54-2":{},"69-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"8":{},"9":{},"11":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"39":{},"42":{},"44":{},"54":{},"55":{},"56":{},"57":{},"58":{},"64":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{}},"component":{}}],["validate/execut",{"_index":2701,"title":{},"name":{},"text":{"44":{}},"component":{}}],["validate_declar",{"_index":2705,"title":{},"name":{},"text":{"44":{}},"component":{}}],["validate’",{"_index":2913,"title":{},"name":{},"text":{"54":{}},"component":{}}],["validator/deleg",{"_index":1800,"title":{},"name":{},"text":{"23":{},"27":{}},"component":{}}],["validator’",{"_index":1775,"title":{},"name":{},"text":{"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"30":{},"31":{}},"component":{}}],["validator’s/delegator’",{"_index":1841,"title":{},"name":{},"text":{"27":{}},"component":{}}],["validli",{"_index":571,"title":{},"name":{},"text":{"5":{}},"component":{}}],["valu",{"_index":374,"title":{"83-4":{},"83-5":{},"85-5":{},"85-12":{},"85-19":{},"85-25":{},"85-31":{},"85-38":{},"85-44":{},"85-51":{},"85-57":{},"85-64":{},"85-69":{}},"name":{"61":{}},"text":{"2":{},"4":{},"5":{},"10":{},"12":{},"14":{},"21":{},"33":{},"38":{},"39":{},"41":{},"42":{},"44":{},"54":{},"56":{},"60":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"76":{},"77":{},"78":{},"79":{},"80":{},"82":{},"83":{},"84":{},"85":{},"87":{}},"component":{}}],["valuabl",{"_index":483,"title":{},"name":{},"text":{"3":{},"5":{},"8":{},"42":{}},"component":{}}],["value:u128",{"_index":1334,"title":{},"name":{},"text":{"12":{}},"component":{}}],["var.address",{"_index":3781,"title":{},"name":{},"text":{"80":{}},"component":{}}],["var.read",{"_index":3779,"title":{},"name":{},"text":{"80":{},"85":{}},"component":{}}],["var.writ",{"_index":3780,"title":{},"name":{},"text":{"80":{},"85":{}},"component":{}}],["var/lib/juno",{"_index":2217,"title":{},"name":{},"text":{"41":{}},"component":{}}],["var1",{"_index":3728,"title":{},"name":{},"text":{"77":{}},"component":{}}],["var2",{"_index":3739,"title":{},"name":{},"text":{"77":{}},"component":{}}],["vari",{"_index":1137,"title":{},"name":{},"text":{"9":{},"84":{}},"component":{}}],["variabl",{"_index":508,"title":{"80-3":{}},"name":{},"text":{"4":{},"10":{},"11":{},"14":{},"41":{},"42":{},"44":{},"80":{},"83":{},"85":{}},"component":{}}],["variable_nam",{"_index":3782,"title":{},"name":{},"text":{"80":{}},"component":{}}],["variable’",{"_index":3775,"title":{},"name":{},"text":{"80":{}},"component":{}}],["variant",{"_index":1711,"title":{"77-5":{},"77-6":{},"77-7":{}},"name":{},"text":{"20":{},"77":{},"81":{},"83":{}},"component":{}}],["variant’",{"_index":3851,"title":{},"name":{},"text":{"83":{}},"component":{}}],["varieti",{"_index":859,"title":{},"name":{},"text":{"7":{}},"component":{}}],["variou",{"_index":832,"title":{},"name":{},"text":{"5":{},"8":{},"9":{},"18":{},"28":{},"38":{},"39":{},"41":{},"51":{},"53":{},"68":{},"74":{},"76":{},"85":{},"88":{},"91":{}},"component":{}}],["vast",{"_index":1129,"title":{},"name":{},"text":{"9":{}},"component":{}}],["vastli",{"_index":2959,"title":{},"name":{},"text":{"57":{}},"component":{}}],["vector",{"_index":3234,"title":{},"name":{},"text":{"65":{}},"component":{}}],["ver",{"_index":2275,"title":{},"name":{},"text":{"41":{}},"component":{}}],["verbos",{"_index":2294,"title":{},"name":{},"text":{"41":{}},"component":{}}],["veri",{"_index":1321,"title":{},"name":{},"text":{"12":{},"16":{},"19":{},"42":{},"60":{},"73":{}},"component":{}}],["verif",{"_index":423,"title":{"9-7":{}},"name":{},"text":{"2":{},"8":{},"9":{},"41":{},"44":{},"54":{},"55":{},"65":{},"69":{},"71":{},"74":{},"76":{}},"component":{}}],["verifi",{"_index":5,"title":{"9":{},"1-3":{},"2-28":{},"9-2":{}},"name":{"9":{}},"text":{"2":{},"5":{},"8":{},"9":{},"14":{},"16":{},"17":{},"20":{},"39":{},"41":{},"42":{},"44":{},"65":{},"66":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"76":{}},"component":{}}],["verifyproofandregist",{"_index":1025,"title":{},"name":{},"text":{"9":{}},"component":{}}],["version",{"_index":13,"title":{"43":{},"1-7":{},"11-12":{},"21-4":{},"42-71":{},"43-1":{},"44-5":{},"48-2":{},"65-6":{},"72-1":{}},"name":{"41":{},"42":{},"43":{},"44":{}},"text":{"1":{},"2":{},"3":{},"11":{},"16":{},"17":{},"21":{},"29":{},"33":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{},"45":{},"48":{},"54":{},"59":{},"60":{},"63":{},"64":{},"65":{},"66":{},"68":{},"70":{},"72":{},"75":{},"76":{},"77":{},"81":{},"82":{},"87":{}},"component":{}}],["version.into",{"_index":2909,"title":{},"name":{},"text":{"54":{}},"component":{}}],["versioned_const",{"_index":74,"title":{},"name":{},"text":{"1":{}},"component":{}}],["vertic",{"_index":536,"title":{},"name":{},"text":{"4":{}},"component":{}}],["vi",{"_index":772,"title":{},"name":{},"text":{"5":{},"63":{}},"component":{}}],["via",{"_index":629,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"17":{},"39":{},"41":{},"42":{},"54":{},"57":{},"68":{},"70":{},"73":{},"75":{},"76":{},"77":{},"78":{},"81":{},"85":{},"87":{}},"component":{}}],["view",{"_index":865,"title":{},"name":{},"text":{"7":{},"11":{},"36":{},"38":{},"40":{},"42":{},"44":{},"67":{},"77":{},"81":{}},"component":{}}],["viewblock",{"_index":2884,"title":{},"name":{},"text":{"52":{}},"component":{}}],["viewblock.io/starknet",{"_index":2885,"title":{},"name":{},"text":{"52":{}},"component":{}}],["virtual",{"_index":337,"title":{},"name":{},"text":{"2":{},"69":{},"87":{}},"component":{}}],["visibl",{"_index":2036,"title":{"38-4":{},"38-12":{},"38-20":{},"38-29":{},"38-37":{},"38-46":{},"38-55":{},"38-63":{},"38-72":{},"38-81":{},"38-89":{},"38-97":{},"38-105":{},"38-113":{},"38-121":{}},"name":{},"text":{},"component":{}}],["visit",{"_index":1755,"title":{},"name":{},"text":{"22":{}},"component":{}}],["visual",{"_index":1146,"title":{},"name":{},"text":{"9":{},"87":{},"88":{}},"component":{}}],["vital",{"_index":851,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["vm",{"_index":277,"title":{"2-7":{}},"name":{},"text":{"2":{},"41":{},"42":{},"44":{},"61":{},"68":{},"69":{},"74":{},"83":{}},"component":{}}],["vn",{"_index":3124,"title":{},"name":{},"text":{"63":{}},"component":{}}],["voic",{"_index":487,"title":{},"name":{},"text":{"3":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{}},"component":{}}],["volit",{"_index":2654,"title":{},"name":{},"text":{"44":{}},"component":{}}],["volum",{"_index":3443,"title":{},"name":{},"text":{"69":{}},"component":{}}],["voluntarili",{"_index":573,"title":{},"name":{},"text":{"5":{}},"component":{}}],["vote",{"_index":8,"title":{"1-5":{}},"name":{},"text":{"1":{},"5":{},"33":{}},"component":{}}],["voyag",{"_index":1377,"title":{},"name":{},"text":{"13":{},"29":{},"40":{},"52":{}},"component":{}}],["voyager.onlin",{"_index":2880,"title":{},"name":{},"text":{"52":{}},"component":{}}],["voyager’",{"_index":1830,"title":{},"name":{},"text":{"25":{}},"component":{}}],["vs",{"_index":3207,"title":{"65-10":{},"87-2":{}},"name":{},"text":{"87":{},"89":{}},"component":{}}],["vstrk",{"_index":41,"title":{},"name":{},"text":{"1":{},"33":{}},"component":{}}],["vulner",{"_index":790,"title":{},"name":{},"text":{"5":{},"33":{},"91":{}},"component":{}}],["w",{"_index":2724,"title":{},"name":{},"text":{"44":{},"65":{}},"component":{}}],["w_k",{"_index":3220,"title":{},"name":{},"text":{"65":{}},"component":{}}],["wagmi",{"_index":3944,"title":{},"name":{},"text":{"86":{}},"component":{}}],["wait",{"_index":1489,"title":{},"name":{},"text":{"14":{},"18":{},"20":{},"22":{},"26":{},"29":{},"39":{},"42":{},"57":{},"66":{}},"component":{}}],["walk",{"_index":1550,"title":{},"name":{},"text":{"15":{},"19":{},"68":{}},"component":{}}],["wallet",{"_index":727,"title":{"13-1":{},"44-4":{}},"name":{},"text":{"5":{},"7":{},"10":{},"13":{},"14":{},"21":{},"25":{},"27":{},"29":{},"39":{},"41":{},"44":{},"55":{},"56":{},"57":{},"72":{},"86":{}},"component":{}}],["wallet<>dapp",{"_index":3945,"title":{},"name":{},"text":{"86":{}},"component":{}}],["wallet_nam",{"_index":1218,"title":{},"name":{},"text":{"10":{}},"component":{}}],["wallet_provid",{"_index":1234,"title":{},"name":{},"text":{"10":{}},"component":{}}],["walnut",{"_index":3972,"title":{"88-6":{}},"name":{},"text":{"88":{},"89":{}},"component":{}}],["want",{"_index":476,"title":{},"name":{},"text":{"3":{},"24":{},"25":{},"27":{},"30":{},"31":{},"32":{},"36":{},"38":{},"40":{},"46":{},"54":{},"66":{},"70":{},"77":{},"85":{}},"component":{}}],["warn",{"_index":2388,"title":{},"name":{},"text":{"42":{}},"component":{}}],["warranti",{"_index":785,"title":{},"name":{},"text":{"5":{}},"component":{}}],["wasn’t",{"_index":2109,"title":{},"name":{},"text":{"39":{}},"component":{}}],["watch",{"_index":1479,"title":{},"name":{},"text":{"14":{}},"component":{}}],["way",{"_index":478,"title":{},"name":{},"text":{"3":{},"10":{},"18":{},"30":{},"44":{},"56":{},"57":{},"59":{},"68":{},"69":{},"73":{},"77":{},"80":{},"87":{}},"component":{}}],["wbtc",{"_index":1965,"title":{},"name":{},"text":{"33":{},"39":{}},"component":{}}],["weak",{"_index":789,"title":{},"name":{},"text":{"5":{}},"component":{}}],["web",{"_index":2097,"title":{},"name":{},"text":{"39":{},"87":{}},"component":{}}],["web3",{"_index":1619,"title":{},"name":{},"text":{"16":{}},"component":{}}],["web3.j",{"_index":2067,"title":{},"name":{},"text":{"38":{}},"component":{}}],["websocket",{"_index":2168,"title":{},"name":{},"text":{"41":{},"42":{}},"component":{}}],["week",{"_index":3844,"title":{},"name":{},"text":{"83":{}},"component":{}}],["week::monday",{"_index":3852,"title":{},"name":{},"text":{"83":{}},"component":{}}],["week::sunday",{"_index":3850,"title":{},"name":{},"text":{"83":{}},"component":{}}],["wei",{"_index":2069,"title":{},"name":{},"text":{"38":{},"63":{},"65":{},"67":{}},"component":{}}],["weight",{"_index":3284,"title":{},"name":{},"text":{"65":{}},"component":{}}],["welcom",{"_index":1544,"title":{},"name":{},"text":{"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"48":{},"50":{}},"component":{}}],["well",{"_index":221,"title":{},"name":{},"text":{"1":{},"5":{},"16":{},"17":{},"20":{},"33":{},"42":{},"44":{},"69":{},"87":{},"90":{}},"component":{}}],["we’r",{"_index":3364,"title":{},"name":{},"text":{"66":{}},"component":{}}],["we’v",{"_index":2131,"title":{},"name":{},"text":{"41":{}},"component":{}}],["whatev",{"_index":3409,"title":{},"name":{},"text":{"68":{}},"component":{}}],["whatsoev",{"_index":820,"title":{},"name":{},"text":{"5":{}},"component":{}}],["what’",{"_index":2136,"title":{},"name":{},"text":{"41":{},"42":{},"73":{}},"component":{}}],["whenev",{"_index":3297,"title":{},"name":{},"text":{"65":{},"66":{},"68":{},"82":{}},"component":{}}],["wherea",{"_index":2410,"title":{},"name":{},"text":{"42":{},"59":{}},"component":{}}],["wherebi",{"_index":2953,"title":{},"name":{},"text":{"57":{}},"component":{}}],["whether",{"_index":415,"title":{},"name":{},"text":{"2":{},"21":{},"29":{},"30":{},"38":{},"42":{},"44":{},"53":{},"55":{},"56":{},"64":{},"65":{},"66":{},"74":{},"76":{},"85":{}},"component":{}}],["whitelist",{"_index":3644,"title":{},"name":{},"text":{"73":{}},"component":{}}],["whole",{"_index":744,"title":{},"name":{},"text":{"5":{},"59":{}},"component":{}}],["whose",{"_index":463,"title":{},"name":{},"text":{"2":{},"27":{},"30":{},"31":{},"44":{},"54":{},"63":{},"64":{},"65":{},"68":{},"70":{},"77":{},"83":{},"85":{}},"component":{}}],["wide",{"_index":3923,"title":{},"name":{},"text":{"85":{}},"component":{}}],["width",{"_index":514,"title":{},"name":{},"text":{"4":{}},"component":{}}],["will",{"_index":2030,"title":{},"name":{},"text":{"36":{},"65":{},"69":{},"71":{},"72":{},"82":{}},"component":{}}],["window",{"_index":1647,"title":{"17-5":{},"17-8":{}},"name":{},"text":{"17":{}},"component":{}}],["wish",{"_index":1807,"title":{},"name":{},"text":{"24":{},"25":{},"29":{},"31":{},"84":{}},"component":{}}],["with_attr",{"_index":1294,"title":{},"name":{},"text":{"11":{}},"component":{}}],["withdraw",{"_index":1905,"title":{"40":{},"33-5":{},"38-127":{},"39-7":{},"39-8":{},"39-9":{}},"name":{"40":{}},"text":{"29":{},"33":{},"38":{},"39":{},"40":{},"49":{}},"component":{}}],["withdrawallimit.sol",{"_index":1990,"title":{},"name":{},"text":{"33":{}},"component":{}}],["withdrawal’",{"_index":2090,"title":{},"name":{},"text":{"38":{},"39":{},"40":{}},"component":{}}],["withdrawn",{"_index":1781,"title":{},"name":{},"text":{"22":{},"38":{}},"component":{}}],["within",{"_index":84,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"8":{},"9":{},"22":{},"28":{},"33":{},"35":{},"38":{},"49":{},"54":{},"57":{},"65":{},"66":{},"68":{},"69":{},"70":{},"71":{},"72":{},"76":{},"85":{}},"component":{}}],["without",{"_index":262,"title":{"65-15":{}},"name":{},"text":{"1":{},"2":{},"3":{},"5":{},"7":{},"8":{},"9":{},"10":{},"16":{},"22":{},"29":{},"42":{},"44":{},"49":{},"65":{},"68":{},"69":{},"73":{},"74":{},"75":{},"79":{},"87":{},"91":{}},"component":{}}],["wizard",{"_index":3992,"title":{"91-3":{}},"name":{},"text":{"89":{},"91":{}},"component":{}}],["wojciecho",{"_index":2195,"title":{},"name":{},"text":{"41":{}},"component":{}}],["won’t",{"_index":995,"title":{},"name":{},"text":{"8":{}},"component":{}}],["word",{"_index":934,"title":{},"name":{},"text":{"8":{},"64":{},"65":{},"83":{}},"component":{}}],["work",{"_index":391,"title":{"68-2":{},"79-3":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"18":{},"28":{},"31":{},"38":{},"41":{},"42":{},"48":{},"53":{},"54":{},"58":{},"65":{},"66":{},"68":{},"69":{},"70":{},"73":{},"76":{},"87":{}},"component":{}}],["worker",{"_index":2230,"title":{},"name":{},"text":{"41":{}},"component":{}}],["workload",{"_index":3448,"title":{},"name":{},"text":{"69":{}},"component":{}}],["world",{"_index":3268,"title":{},"name":{},"text":{"65":{}},"component":{}}],["worth",{"_index":3408,"title":{},"name":{},"text":{"68":{},"69":{}},"component":{}}],["wrap",{"_index":1385,"title":{},"name":{},"text":{"13":{},"33":{},"59":{},"85":{}},"component":{}}],["wrapper",{"_index":2066,"title":{},"name":{},"text":{"38":{}},"component":{}}],["write",{"_index":180,"title":{"91":{},"12-1":{}},"name":{"91":{}},"text":{"1":{},"3":{},"8":{},"10":{},"14":{},"15":{},"16":{},"36":{},"40":{},"41":{},"44":{},"65":{},"68":{},"73":{},"74":{},"77":{},"80":{},"85":{},"87":{},"89":{},"90":{}},"component":{}}],["writer",{"_index":990,"title":{},"name":{},"text":{"8":{}},"component":{}}],["written",{"_index":304,"title":{},"name":{},"text":{"2":{},"3":{},"7":{},"8":{},"45":{},"48":{},"49":{},"66":{},"72":{},"73":{},"75":{},"77":{},"81":{}},"component":{}}],["wrong",{"_index":1436,"title":{},"name":{},"text":{"13":{},"42":{}},"component":{}}],["wsteth",{"_index":1973,"title":{},"name":{},"text":{"33":{}},"component":{}}],["www.abdk.consult",{"_index":2781,"title":{},"name":{},"text":{"46":{}},"component":{}}],["www.openzeppelin.com",{"_index":2792,"title":{},"name":{},"text":{"46":{}},"component":{}}],["www.trailofbits.com",{"_index":2798,"title":{},"name":{},"text":{"46":{}},"component":{}}],["www.zellic.io",{"_index":2800,"title":{},"name":{},"text":{"46":{}},"component":{}}],["x",{"_index":1124,"title":{},"name":{},"text":{"9":{},"44":{},"60":{},"62":{},"83":{},"84":{}},"component":{}}],["x^3",{"_index":3076,"title":{},"name":{},"text":{"62":{}},"component":{}}],["xor",{"_index":3657,"title":{},"name":{},"text":{"74":{}},"component":{}}],["y",{"_index":1125,"title":{},"name":{},"text":{"9":{},"44":{},"60":{},"84":{}},"component":{}}],["y^2",{"_index":3074,"title":{},"name":{},"text":{"62":{}},"component":{}}],["y^2=x^3+\\alpha",{"_index":3011,"title":{},"name":{},"text":{"60":{}},"component":{}}],["yearli",{"_index":1878,"title":{},"name":{},"text":{"29":{}},"component":{}}],["yearly_mint",{"_index":1791,"title":{},"name":{},"text":{"22":{}},"component":{}}],["yield",{"_index":3213,"title":{},"name":{},"text":{"65":{},"73":{},"76":{}},"component":{}}],["you'v",{"_index":1720,"title":{},"name":{},"text":{"20":{}},"component":{}}],["yourself",{"_index":2014,"title":{},"name":{},"text":{"35":{},"89":{}},"component":{}}],["you’ll",{"_index":1698,"title":{},"name":{},"text":{"18":{},"50":{},"77":{}},"component":{}}],["you’r",{"_index":1245,"title":{},"name":{},"text":{"10":{},"18":{},"36":{},"53":{}},"component":{}}],["you’v",{"_index":1689,"title":{},"name":{},"text":{"18":{}},"component":{}}],["z",{"_index":2723,"title":{},"name":{},"text":{"44":{}},"component":{}}],["zan",{"_index":2768,"title":{},"name":{},"text":{"45":{}},"component":{}}],["zellic",{"_index":2799,"title":{},"name":{},"text":{"46":{}},"component":{}}],["zeppelin",{"_index":2791,"title":{"91-3":{}},"name":{},"text":{"46":{},"89":{},"91":{}},"component":{}}],["zero",{"_index":438,"title":{},"name":{},"text":{"2":{},"3":{},"10":{},"41":{},"44":{},"54":{},"55":{},"56":{},"65":{},"68":{},"70":{},"72":{}},"component":{}}],["zk",{"_index":440,"title":{},"name":{},"text":{"2":{},"3":{},"60":{},"69":{}},"component":{}}],["zsh",{"_index":1740,"title":{},"name":{},"text":{"21":{}},"component":{}}],["zshrc",{"_index":1744,"title":{},"name":{},"text":{"21":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"You can get the latest updates delivered to your inbox by subscribing to the Starknet Devs Newsletter. Mainnet 0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4 Sepolia 0xE2Bb56ee936fd6433DC0F6e7e3b8365C906AA057 Mainnet 0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60 Sepolia 0x07ec0D28e50322Eb0C159B9090ecF3aeA8346DFe STRK 0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d ETH 0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7 For information on The Starknet voting token, see vSTRK overview on the Starknet Governance Hub. Mainnet 0x0782f0ddca11d9950bc3220e35ac82cf868778edb67a5e58b39838544bc4cd0f Sepolia 0x035c332b8de00874e702b4831c84b22281fb3246f714475496d74e644f35d492 Mainnet https://alpha-mainnet.starknet.io Sepolia https://alpha-sepolia.starknet.io Environment Starknet version Sierra version Cairo version Mainnet 0.13.3 1.6.0 2.0.0 - 2.8.2 Sepolia Testnet 0.13.3 1.6.0 2.0.0 - 2.8.2 The following limits are subject to revisions and change on a regular basis Starting from v0.13.0, blockifier-related constants and limits are defined for each Starknet version in a JSON file called versioned_constants in the blockifier’s resources directory. Entity Description Sepolia Mainnet Block time The maximum amount of time within which a pending block is closed, if no other limit is met. 30 seconds 30 seconds Block limit (Cairo steps) The maximum number of Cairo steps that can be completed within each block to ensure block production times remain consistent and predictable. 40,000,000 40,000,000 Block limit (gas) Certain Starknet operations, such as sending messages between L1 and L2, consume Ethereum gas. The current L1 state update mechanism involves an Ethereum transaction for each Starknet block. The gas limit for Starknet blocks is therefore inherited from the gas limit for Ethereum blocks. 5,000,000 5,000,000 Max transaction size (Cairo steps) The maximum number of computational steps, measured in Cairo steps, that a transaction can contain when processed on the Starknet network. This limit is important for ensuring the efficient execution of transactions and preventing potential congestion. 10,000,000 10,000,000 Max state updates per transaction The maximum number of storage updates that a single transaction can generate. This limit helps maintain network stability and predictable performance. 2,000 2,000 Max number of events per transaction The maximum number of events that a transaction can emit during its execution. 1,000 1,000 Max number of data felts per event The maximum number of felts that an event can contain in its data array. 300 300 Max number of key felts per event The maximum number of felts that an event can contain in its keys array. 50 50 Max Cairo steps for validate The maximum number of computational steps, measured in Cairo steps, for a validate function. 1,000,000 1,000,000 Max contract bytecode size The maximum size of the bytecode or program that a smart contract can have on Starknet. Bytecode is the low-level code that comprises smart contracts. Limiting this size helps manage the complexity of contracts and the overall efficiency of the network. 81,290 81,290 Max contract class size The maximum size for a contract class within Starknet. Contract classes are a fundamental building block for smart contracts, and limiting their size can have implications for the network’s scalability and security. 4,089,446 bytes 4,089,446 bytes IP address limits In order to reduce network spam, Starknet limits the amount of contract reads and writes that a single IP address can make. 200 per min per IP address 200 per min per IP address Signature length (felts) The maximum length of a signature 4,000 4,000 Calldata length (felts) The maximum length of a transaction calldata 4,000 4,000 A deprecated feature is a feature that is still supported, but support will be removed in a future release of Starknet. Name Description Starknet CLI Support for the Starknet CLI has been removed. Instead use Starkli. Support for Starknet CLI is removed in Starknet v0.13.0. Cairo 0 Starknet v0.11.0 introduces Cairo 1.0 smart contracts. An unsupported feature is a feature that is no longer supported. A removed feature is a feature that has been entirely removed. Name Description Goerli testnet Goerli testnet support was removed April 2, 2024. Sepolia testnet replaces Goerli testnet. Starknet started migrating to Sepolia testnet on November 15th, 2023. For more information on the Goerli deprecation, see the deprecation announcement on Ethereum’s site. Full nodes, API services, SDKs, and other Starknet developer tools have migrated to Sepolia as well. Sepolia’s state and history are relatively small. Sepolia supports declaring classes of CairoZero and Cairo v2.0.0 and higher. Starknet feeder gateway The Starknet feeder gateway, a temporary solution for querying the sequencer’s state, is being replaced by Starknet full nodes (Pathfinder, Juno, Deoxys, Papyrus) and RPC services. For more information, see Full nodes and API services. Support for the feeder gateway queries that are not required for full nodes to synchronize on the state of Starknet will stop according to the following schedule: Environment Date Integration 1 November 2023 Testnet 15 November 2023 Mainnet 19 December 2023 Queries that are required for full nodes to synchronize on the state of Starknet are still supported. For more information, see the Community Forum post Feeder Gateway Deprecation. Free L1→ L2 messaging Previously, sending a message from L1 to L2 had an optional fee associated. From Starknet v0.11.0, the fee mechanism is enforced and the ability to send L1→L2 messages without the corresponding L2 fee has been removed. See here for more details. invoke transaction v0 invoke transaction v0 has been removed since Starknet v0.11.0. declare transaction v0 declare transaction v0 has been removed since Starknet v0.11.0. deploy transaction The deploy transaction has been removed since Starknet v0.10.3. To deploy new contract instances, you can use the deploy system call.","title":"Chain information","component":"ROOT","version":"","name":"chain-info","url":"/chain-info/","titles":[{"text":"Important addresses","hash":"important_addresses","id":1},{"text":"Core contract","hash":"core_contract","id":2},{"text":"SHARP Verifier","hash":"sharp_verifier","id":3},{"text":"Fee tokens","hash":"fee_tokens","id":4},{"text":"Voting token","hash":"voting_token","id":5},{"text":"Sequencer base URL","hash":"sequencer_base_url","id":6},{"text":"Current versions","hash":"current_versions","id":7},{"text":"Current limits","hash":"current_limits","id":8},{"text":"Deprecated features","hash":"deprecated_features","id":9},{"text":"Unsupported and removed features","hash":"unsupported_and_removed_features","id":10}]},"2":{"id":2,"text":"Refers to the capability of users to define their own account logic instead of it being dictated by the protocol. An L2 smart contract, with programmable logic, that implements a user account on Starknet. An account contract implements special methods that enable initiating transactions. See also account abstraction The Starknet Node API uses the Remote Procedure Call (RPC) architectural style, written in JSON format. For complete information on the Starknet Node API in JSON RPC format, see starknet_api_openrpc.json on Github. See also RPC An ordered set of Starknet transactions. Blocks are built by the sequencer. A block has the following identifiers: block hash A unique identifier that can be used to query and refer to the block. block number A number representing the location of the block in the sequence of accepted blocks in Starknet. An optimized low-level execution unit that is added to the Cairo CPU board to perform predefined computations that are expensive to perform in standard Cairo, including range-checks, Pedersen hash calculations, and ECDSA. The smallest unit of execution within the Cairo VM, typically involving mathematical, logical, or control-flow operations that collectively define the behavior of a program. The Cairo Virtual Machine (VM) is software that knows how to execute compiled Cairo byte-code. The result of this execution is the program trace that can then be sent to a STARK prover in order to prove the validity of the instruction expressed in the Cairo code. The definition of a contract. It includes Cairo byte code, entry point names, and everything that defines its semantics. A deployed contract that corresponds to a class. Only contract instances act as true contracts, in that they have their own storage and can be called by transactions or other contracts. The smallest denomination of STRK. 1 fri = 10-18 STRK. A machine that runs the Starknet execution protocol. A full node stays synchronized with the latest state of the network, stores past blocks and transactions, and enables users to interact with the network, such as by querying its state or by broadcasting new transactions. The base layer of a blockchain network, such as Ethereum, where transactions are directly recorded and validated. It includes the underlying protocol and consensus mechanism that establish the foundational rules for the blockchain. Exists on top of an L1 blockchain, such as Ethereum, in order to add value to the L1, by providing features such as massive computation scale without compromising on Ethereum’s composability and security. A single transaction that executes multiple bundled transactions, which are signed once on Starknet. If one call fails, the entire operation is aborted. The entity that receives the output of Cairo programs and generates proofs to be verified. In the context of Starknet, the prover generates proofs of the computational integrity of the work performed by the sequencer. It then submits the proof to the verifier on L1, which registers the fact. See also SHARP verifier The Starknet RPC API provides clients an interface to retrieve information on the state of the chain and to interact with it, such as by posting transactions or estimating the fee of a transaction before it is sent. See also API A set of services that together receive transactions from the network, put them in order, check their validity, and build blocks. The Shared Prover (SHARP) is a mechanism used in Starknet that aggregates multiple Cairo programs from different users, each containing different logic. These Cairo programs are then executed together, generating a single proof common to all the programs. An intermediate representation between Cairo and Casm. Sierra code is then compiled into a Casm program with the property that, for any input, the program’s execution is provable. In particular, it ensures that the execution of a transaction is provable regardless of whether the execution succeeded or was reverted due to an error. Additional resources Cairo and Sierra A proof system that uses cryptography to provide polylogarithmic verification resources and proof size, with minimal and post-quantum-secure assumptions. A smart contract deployed on Ethereum. Its address is 0xc662c410c0ecf747543f5ba90660f6abebd9c8c4. It defines the state of Starknet by storing: The commitment to the L2 state. The Starknet OS program hash – effectively defines the version of Starknet the network is running. The committed state on the L1 Core Contract acts as the consensus mechanism of Starknet, that is, the system is secured by the L1 Ethereum consensus. In addition to maintaining the state, the Starknet L1 Core Contract is the main hub of operations for Starknet on L1. Specifically: It stores the list of allowed verifier contracts that can verify state update transactions It deals with cross-layer interaction between L1 and L2. A permissionless Validity-Rollup, also known as a zero-knowledge rollup (ZK rollup) for Ethereum. Starknet is a Layer 2 (L2) blockchain, enabling any dApp to achieve massive computation scale without compromising Ethereum’s composability and security. Starknet aims to achieve secure, low-cost transactions and high performance by using the STARK cryptographic proof system. Starknet contracts and the Starknet OS are written in Cairo, a custom-built and specialized programming language. The Cairo program that, upon receiving a set of transaction as input, executes the state transition. For more information, see Starknet state. The integrity of this computation is what is actually proven and verified. The set of all the contracts' code and all the memory slots and their values, in every contract’s storage. See also Starknet state A transaction can be seen as a message containing a set of instructions that describe a state transition. The Starknet protocol has the following types of transactions, which affect different parts of the state: DECLARE INVOKE DEPLOY_ACCOUNT See also Transaction types Starknet state The data describing the difference between two states. It contains information on every contract whose storage was updated and additional information on contract deployments. A unit of measurement of proving complexity. In the STARK protocol, a computation is translated into an execution trace that must satisfy a collection of constraints. Every Cairo step translates to ~50 trace cells. A set of L1 smart contracts whose purpose is to verify STARK proofs submitted by the Shared Prover (SHARP).","title":"Glossary","component":"ROOT","version":"","name":"glossary","url":"/glossary/","titles":[{"text":"account abstraction","hash":"account-abstraction","id":1},{"text":"account contract","hash":"account_contract","id":2},{"text":"API","hash":"api","id":3},{"text":"block","hash":"block","id":4},{"text":"builtin","hash":"builtin","id":5},{"text":"Cairo step","hash":"cairo-step","id":6},{"text":"Cairo VM","hash":"cairovm","id":7},{"text":"contract class","hash":"contract_class","id":8},{"text":"contract instance","hash":"contract_instance","id":9},{"text":"fri","hash":"fri","id":10},{"text":"full node","hash":"full-node","id":11},{"text":"Layer 1, L1","hash":"l1","id":12},{"text":"Layer 2, L2","hash":"l2","id":13},{"text":"multicall","hash":"multicall","id":14},{"text":"prover","hash":"prover","id":15},{"text":"RPC","hash":"rpc","id":16},{"text":"sequencer","hash":"sequencer","id":17},{"text":"SHARP","hash":"SHARP","id":18},{"text":"Sierra","hash":"sierra","id":19},{"text":"STARK","hash":"stark","id":20},{"text":"Starknet L1 Core Contract","hash":"starknet-l1-core-contract","id":21},{"text":"Starknet","hash":"starknet","id":22},{"text":"Starknet OS","hash":"starknet-os","id":23},{"text":"Starknet state","hash":"starknet-state","id":24},{"text":"transaction","hash":"transaction","id":25},{"text":"state diff","hash":"statediff","id":26},{"text":"trace cell","hash":"trace-cells","id":27},{"text":"verifier","hash":"verifier","id":28}]},"3":{"id":3,"text":"Starknet is a permissionless Validity-Rollup, also known as a zero-knowledge rollup (ZK rollup) for Ethereum. As a Layer 2 (L2) blockchain, Starknet enables any dApp to achieve massive computation scale without compromising on Ethereum’s composability and security. Starknet aims to achieve secure, low-cost transactions and high performance by using the STARK cryptographic proof system. Starknet contracts and the Starknet OS are written in Cairo, a custom-built and specialized programming language. Set up your environment and get started with Starknet. Explore > Learn about Starknet's architecture including contracts and accounts. Explore > Learn more about the current version of Starknet. Explore > Want to contribute to Starknet documentation? Get started here: See the different ways to contribute. Review these basic writing guidelines to help you write better and be a more valuable contributor. Use the Starknet documentation supplementary style guide to help you write with the Starknet voice.","title":"Overview","component":"ROOT","version":"","name":"index","url":"/","titles":[{"text":"Explore Starknet","hash":"explore_starknet","id":1},{"text":"Quick start","id":2},{"text":"Architecture","id":3},{"text":"Releases","id":4},{"text":"Contribute to the Starknet docs","hash":"contribute_to_the_starknet_docs","id":5}]},"4":{"id":4,"text":"Notation Explanation bold Indicates GUI elements, such as button text or menu names. Highlights text for added importance or to draw attention to it. italics Indicates the first occurrence of a new term, titles of documents or topics, and user-supplied or variable values. monospace Indicates code, commands, file paths, or other text that should be displayed in a fixed-width font to differentiate it from the surrounding text. Indicates user-supplied or variable values in code, commands, file paths, or other text that should be displayed in a monospace font. Can also refer to generic types. For example: List \\(\\text{string_in_math_notation}\\) A normal (non-italics) serif typeface indicates a fixed element or constant specified in mathematical notation. …​ An ellipsis indicates that the preceding element can repeat multiple times. [item, …​] Square brackets indicate that the enclosed items are optional. Also can indicate a range of numbers, where the enclosed items are included. For example, in [0,100], 0 and 100 are part of the specified range. (item1, item2) Parentheses indicate a range of numbers, where the enclosed items are not included. For example, in (0,100), 0 and 100 are not part of the specified range. item1 | item2 A vertical bar (|) indicates a choice between item1 and item2. {item1, item2} Curly brackets indicates a list or set of possible values. / A forward slash indicates a division operator or a path separator in URLs and file paths.","title":"Notational conventions","component":"ROOT","version":"","name":"notational-conventions","url":"/notational-conventions/","titles":[]},"5":{"id":5,"text":"Starknet is a developing decentralized protocol and the economic mechanisms described here, also known as tokenomics, are subject to change based on governance decisions made by the larger community of Starknet. For more details on Starknet’s governance processes see the Starknet Governance Hub. This document describes certain economic fundamentals of the Starknet token. This document is intended for informational purposes only and is meant to outline the usage and functionalities of the asset within Starknet. It is important to understand that the primary purpose of the Starknet token, STRK, is to facilitate operations and activities on Starknet and it is not intended to serve as an investment. Blockchains work through a combination of cryptography and economic incentives. Cryptography limits what actors in the system can do, for example, transactions must be validly signed to be included in the chain. Economic incentives encourage actors to voluntarily perform actions that maintain the network’s capabilities when spending their own resources, for example, miners or stakers actively publish new blocks to the chain because they can receive fees and new tokens as a reward. Blockchains are valuable because they are data structures maintained by diverse and, ideally, large groups of otherwise unaffiliated persons. This gives them resilience: Any one participant can disappear, but the data structure is preserved. This also gives them censorship resistance: No single person can unilaterally decide to forbid certain persons from using the network. Starknet operates as a Layer 2 (L2) network on top of Ethereum. Today, Starknet achieves secure low-cost transactions by using the STARK cryptographic proof system to reduce the size of transaction data while preserving and verifying the integrity of that data. Still under development, Starknet will achieve resilience and censorship resistance by using a token, the Starknet token (STRK), to incentivize network participants to sequence transactions for users of the network and to ensure that there is a provably fair mechanism, a proof-of-stake mechanism, to determine who should sequence and submit a proof for the network blocks. A proof-of-stake mechanism might also be used to facilitate data availability solutions and other significant services required for network operations. STRK is the mechanism for paying fees to enable operation of the network, maintaining and securing the network by enabling staking for consensus, and deciding on Starknet’s values and technology goals by voting for governance proposals. Transaction fees: Originally, fees in Starknet were paid only in Ether (ETH). As of v.0.13.0, fees for transactions on the network can be paid using STRK, as well as ETH. A portion of the fees paid in STRK are converted to ETH by the receiving sequencer, in order to cover Ethereum L1 gas costs, which, due to the specifications of the Ethereum protocol, must be paid in ETH. Staking: Certain services that are critical to the liveness and security of Starknet may require the staking of Starknet tokens. These services might be offered by multiple providers, and could include sequencing, reaching temporary L2 consensus before L1 finality is reached, STARK-proving services, and data availability provisioning, to name a few examples. These protocol changes are still under discussion within the larger governance community and are targeted for 2024 -2025. Governance: Proposals for improving Starknet might require a minimal token support threshold. Voting, either directly or via delegation, will be required for changes to the protocol that are essential to Starknet’s liveness, security, and maintenance. Today, for example, major updates to the Starknet Operating System require the approval of token holders. For more information about Governance see the Starknet Governance Hub As discussed above, the Starknet tokens are digital assets intended to support the operation and usage of Starknet and are not offered as an investment. As such, the Starknet tokens do not represent any equity in StarkWare or the Starknet Foundation, nor do they provide any participation right in StarkWare or grant any right of claim from StarkWare or the Starknet Foundation. Ten billion Starknet tokens were initially created by StarkWare in May 2022 and minted onchain on November 30, 2022. The existing ten billion tokens have been or are planned to be distributed according to the following: 20.04%: Early Contributors Tokens allocated for StarkWare’s team members and early contributors. These tokens are subject to a lock-up schedule, as further detailed below. 18.17%: Investors Tokens allocated for StarkWare’s investors. These tokens are subject to a lock-up schedule, as further detailed below. 10.76%: StarkWare Tokens allocated for StarkWare for operation services such as to pay fees, provide other services on Starknet, and engage other service providers. 12.93%: Grants including Development Partners (aka DPs) Tokens allocated for grants for research or work done to develop, test, deploy and maintain the Starknet protocol. The process for applications and allocations related to Starknet Foundation Grants will be outlined in a post at a later date. 9.00%: Community Provisions Tokens distributed to those who contributed to Starknet and powered or developed its underlying technology. 9.00%: Community Rebates Tokens allocated for rebates in Starknet tokens to partially cover the costs of onboarding to Starknet from Ethereum. Community rebates are not yet available and will be announced in 2024 in a subsequent post. 10.00%: Foundation Strategic Reserves Tokens allocated for the Starknet Foundation to fund ecosystem activities that are aligned with the Foundation’s mission. 8.10%: Foundation Treasury Token allocated for the Starknet Foundation’s treasury available for operations and other future initiatives by the Starknet Foundation. 2.00%: Donations Tokens reserved for donations to institutions and organizations, such as universities, NGOs, etc, as decided by the Starknet Foundation. To align long-term incentives of the Investors and Early Contributors with the interests of the Starknet community, and following common practice in decentralized ecosystems, all tokens allocated to Investors and Early Contributors is subject to the following lock-up schedule, where percentages are based on the total token supply: Up to 0.64% (64 million tokens) will be unlocked on the 15th of each month, starting April 15, 2024, and going through March 15, 2025, for a total of 7.68% (768 million tokens) unlocked by March 15, 2025. Up to 1.27% (127 million tokens) will be unlocked on the 15th of each month, starting April 15, 2025, and going through March 15, 2027, for a total of 30.48% (3.048 billion tokens) unlocked by March 15, 2027. Figure 1. Estimated supply of STRK in circulation The graph, Estimated supply of STRK in circulation, excludes newly circulating tokens resulting from inflation or staking (see below). Token allotments currently retained by the Starknet Foundation, while contractually unlocked, are not considered circulating unless granted, donated, or otherwise allocated out of originating wallets through future grants, provisions, donations, developer initiatives, or other programs. Through this lock-up period, token holders cannot transfer, sell, or pledge their STRK tokens. Delegation of voting is permitted with locked tokens and, when available, staking might also be permitted. The total circulating supply of tokens is planned to increase over time with the minting of new tokens by the protocol, as staking rewards, block rewards, or other rewards associated with the staking process. Such minting will be made pursuant to a schedule that will be determined with the community at a later point, not before Starknet services are more decentralized. The supply in circulation might not, therefore, remain fixed. However, as long as StarkWare is the sole operator of the Starknet sequencer, there will be no issuance of new tokens for the purpose of block rewards. For more information, see A token-minting proposal to manage inflation. Starknet is a developing decentralized protocol and the economic mechanisms described herein are subject to change based on decisions made by the larger community of Starknet builders and users. Starknet relies upon third parties to adopt and implement software and protocols as users and contributors of Starknet. It also relies, in whole or partly, on third parties to develop, supply and otherwise support it. There is no assurance or guarantee that such third parties will continue to participate in the network or that the network will continue to function as intended. The technical documents provided herein describe certain planned and specified economic fundamentals of a digital asset, STRK. These materials are intended for informational purposes only and are meant to outline the usage and functionalities of the asset within Starknet. It is important to understand that the primary purpose of STRK is to pay for fees, provide a mechanism for securing consensus, and allow for decentralized governance on Starknet; it is not intended to serve as an investment. Starknet relies upon third parties to adopt and implement the software and protocols as users of Starknet. It also relies, in whole or partly, on third parties to develop, supply and otherwise support it. As a Layer 2 network over Ethereum, Starknet also relies upon third parties maintaining and operating the Ethereum network. There is no assurance or guarantee that those third parties will complete their work, properly carry out their obligations, and/or otherwise meet anyone’s needs. STRK, as the native token of Starknet, may be subject to the risks of the Starknet network, including, without limitation, the following: (i) the technology associated with Starknet may not function as intended; (ii) the details of the Starknet token economics including the total supply and distribution schedule may be changed due to decisions made by the consensus of participants of the Starknet network; (iii) Starknet may fail to attract sufficient interest from key stakeholders or users; (iv) Starknet may not progress satisfactorily and Starknet tokens may not be useful or valuable; (v) Starknet may suffer from attacks by hackers or other individuals; and (vi) Starknet is comprised of open-source technologies that depend on a network of computers to run certain software programs to process transactions, and because of this model StarkWare and the Starknet Foundation have limited control over Starknet. Risks related to blockchain technology in general and Starknet in particular may impact the usefulness of Starknet, and, in turn, the utility or value of STRK. The software and hardware, technology and technical concepts and theories applicable to Starknet and STRK are still in an early development stage and unproven, there is no warranty that Starknet will achieve any specific level of functionality or success, nor that the underlying technology will be uninterrupted or error-free, and there is an inherent risk that the technology could contain weaknesses, vulnerabilities or bugs causing, potentially, the complete loss of any Starknet tokens held by Starknet users. As with most commonly used public blockchains, STRK is accessed using a private key that corresponds to the address at which they are stored. If the private key, or the \"seed\" used to create the address and corresponding private key are lost or stolen, the tokens associated with that address might be unrecoverable and will be permanently lost. Public blockchain-based systems, including Starknet and the underlying Ethereum network, depend on independent verifiers, and therefore may be vulnerable to consensus attacks including, but not limited to, double-spend attacks, majority voting power attacks, race condition attacks, and censorship attacks. These attacks, if successful, could result in the permanent loss of STRK. Starknet, STRK, and blockchain technology are nascent, and there may be additional risks not described above or that may be new or unanticipated. We recommend only using Starknet or holding STRK if you are familiar with the technology and aware of the risks. This document and its contents are not, and should not be construed as, an offer to sell, or the solicitation of an offer to buy, any tokens, nor should it or any part of it form the basis or be relied on in connection with any contract or commitment whatsoever. This document is not advice of any kind, including legal, investment, financial, tax, or any other professional advice. Nothing in this document should be read or interpreted as a guarantee or promise of how the Starknet network or its STRK will develop, be utilized, or accrue value. All information in this document is provided on an “as is” basis without any representation or warranty of any kind. This document only outlines current plans, which could change at the discretion of various parties, and the success of which will depend on many factors outside of Starknet Foundation’s control. Such future statements necessarily involve known and unknown risks, which may cause actual performance and results in future periods to differ materially from what we have described or implied in this document. StarkWare and the Starknet Foundation disclaim all warranties, express or implied, to the fullest extent permitted by law with respect to the functionality of Starknet and STRK.","title":"The token economics of Starknet","component":"ROOT","version":"","name":"economics-of-starknet","url":"/architecture-and-concepts/economics-of-starknet/","titles":[{"text":"Why are economics relevant?","hash":"why_are_economics_relevant","id":1},{"text":"The purpose of the STRK token","hash":"purpose_of_the_token","id":2},{"text":"Supply and distribution","hash":"supply_and_distribution","id":3},{"text":"Risks and disclaimers","hash":"risks_and_disclaimers","id":4}]},"6":{"id":6,"text":"","title":"Architecture","component":"ROOT","version":"","name":"index","url":"/architecture-and-concepts/","titles":[]},"7":{"id":7,"text":"This topic previously appeared in the Starknet Book. This topic explores the role and functionality of nodes in the Starknet ecosystem, their interactions with sequencers, and their overall importance. A node in the Starknet ecosystem is a computer equipped with Starknet software, contributing significantly to the network’s operation. Nodes are vital for the Starknet ecosystem’s functionality, security, and overall health. Without nodes, the Starknet network would not be able to function effectively. Nodes in Starknet are categorized into two types: Full nodes: Store the entire Starknet state and validate all transactions, crucial for the network’s integrity. Light nodes: Do not store the entire Starknet state but rely on full nodes for information. Light nodes are faster and more efficient but offer less security than full nodes. Nodes are fundamental to the Starknet network, performing a variety of critical functions: Transaction validation: Nodes ensure transactions comply with Starknet’s rules, helping prevent fraud and malicious activities. Block Creation and Propagation: Nodes create and circulate blocks to maintain a consistent blockchain view across the network. State maintenance: Nodes track the Starknet network’s current state, including user balances and smart contract code, essential for transaction processing and smart contract execution. API endpoint provision: Nodes provide API endpoints, aiding developers in creating applications, wallets, and tools for network interaction. Transaction relay: Nodes relay user transactions to other nodes, improving network performance and reducing congestion. Nodes and sequencers are interdependent: Nodes and block production: Nodes depend on sequencers to create blocks and update the network state. Sequencers integrate the transactions validated by nodes into blocks, maintaining a consistent and current Starknet state. Sequencers and transaction validation: Sequencers rely on nodes for transaction validation and network consensus. Prior to executing transactions, sequencers work with nodes to confirm transaction legitimacy, deterring fraudulent activities. Nodes also contribute to the consensus mechanism, ensuring uniformity in the blockchain state. The relationship between nodes and clients in the Starknet ecosystem is characterized by a client-server model: Client requests and node responses: Clients send requests, like transaction submissions or state queries. Nodes process these requests, validating transactions, updating the network state, and providing clients with the requested data. Client experience: Clients receive node responses, updating their local view with the latest network information. This loop enables user interaction with Starknet DApps, with nodes maintaining network integrity, while clients provide a user-friendly interface. The mempool acts as a holding area for unprocessed transactions: Transaction validation and mempool storage: Upon receiving a transaction, a node validates it. Valid transactions are added to the mempool and broadcast to other network nodes. Transaction selection and block inclusion: Nodes select transactions from the mempool for processing, incorporating them into blocks that are added to the blockchain. Each Starknet node implementation has its own strengths: Pathfinder, by Equilibrium: Pathfinder is a full node written in Rust. Pathfinder excels in high performance, scalability, and aligns with the Starknet Cairo specification. Juno, by Nethermind: Juno, is a full node written in Golang. Juno is known for user-friendliness, ease of deployment, and compatibility with Ethereum tools. Papyrus, by StarkWare: Papyrus is also a full node written in Rust. Papyrus focuses on security and robustness. It’s integral to the upcoming Starknet Sequencer, expected to boost network throughput. These implementations are continuously being improved, with new features and enhancements. The choice of implementation depends on user or developer preferences and requirements. Key characteristics of each node implementation are summarized below: Node Implementation Language Strengths Pathfinder Rust High performance, scalability, Cairo specification adherence Papyrus Rust Security, robustness, Starknet Sequencer foundation Juno Golang User-friendliness, ease of deployment, Ethereum compatibility","title":"Nodes","component":"ROOT","version":"","name":"nodes","url":"/architecture-and-concepts/nodes/","titles":[{"text":"Overview of nodes in the Starknet ecosystem","hash":"overview-of-nodes-in-the-starknet-ecosystem","id":1},{"text":"Core functions of nodes","hash":"core-functions-of-nodes","id":2},{"text":"Interplay of nodes, sequencers, clients, and the mempool in Starknet","hash":"interplay-of-nodes-sequencers-clients-and-mempool-in-the-starknet-network","id":3},{"text":"Nodes and sequencers","hash":"nodes-and-sequencers","id":4},{"text":"Nodes and clients","hash":"nodes-and-clients","id":5},{"text":"Nodes and the mempool","hash":"nodes-and-the-mempool","id":6},{"text":"Node implementations in Starknet","hash":"node-implementations-in-starknet","id":7}]},"8":{"id":8,"text":"This topic previously appeared in the Starknet Book. The only Prover in use on Starknet as of this writing is SHARP. SHARP is like public transportation for proofs on Starknet, aggregating multiple Cairo programs to save costs and boost efficiency. It uses recursive proofs, enabling parallelization and optimization, making it more affordable for all users. Critical services like the gateway, validator, and Prover work together with a stateless design for flexibility. SHARP’s adoption by StarkEx and Starknet highlights its significance and potential for future optimization. This topic discusses SHARP, how it has evolved to incorporate recursive proofs, and its role in reducing costs and improving efficiency within the Starknet network. SHARP, which stands for Shared Prover, is a mechanism that aggregates multiple Cairo programs from different users, each containing different logic. These Cairo programs are then executed together, generating a single proof common to all the programs. Rather than sending the proof directly to the Solidity Verifier in Ethereum, it is initially sent to a STARK Verifier program written in Cairo. The STARK Verifier generates a new proof to confirm that the initial proofs were verified, which can be sent back into SHARP and the STARK Verifier. Details for this recursive proof process appear below. Ultimately, the last proof in the series is sent to the Solidity Verifier on Ethereum. In other words, there are many proofs generated until we reach Ethereum and the Solidity Verifier. The primary benefit of SHARP lies in its ability to decrease costs and enhance efficiency within the Starknet network. It achieves this by aggregating multiple Cairo jobs, which are individual sets of computation. This aggregation enables the protocol to leverage the exponential amortization offered by STARK proofs. Exponential amortization means that as the computational load of the proofs increases, the cost of verifying those proofs rises at a slower logarithmic rate than the computation increase. As a result, the cost of each transaction within the aggregated set is significantly reduced, making the overall process more cost-effective and accessible for users. In the context of SHARP and Cairo context, a jobs refer to the individual Cairo programs or tasks submitted by different users. These jobs contain specific logic or computations that must be executed on the Starknet network. Additionally, SHARP enables smaller users with limited computation to benefit from joining other jobs and share the cost of generating the proofs. This collaborative approach is similar to using public transportation instead of a private car, where the cost is distributed among all participants, making it more affordable for everyone. One of the most powerful features of SHARP is its use of recursive proofs. Rather than directly sending the generated proofs to the Solidity Verifier, they are first sent to a STARK Verifier program written in Cairo. This Verifier, which is also a Cairo program, receives the proof and creates a new Cairo job that is sent to the Prover. The Prover then generates a new proof to confirm that the initial proofs were verified. These new proofs can be sent back into SHARP and the STARK Verifier, restarting the process. This process continues recursively, with each new proof being sent to the Cairo Verifier until a trigger is reached. At this point, the last proof in the series is sent to the Solidity Verifier on Ethereum. This approach enables greater parallelization of the computation and reduces the time and cost associated with generating and verifying proofs. Generated Proofs ￬ STARK Verifier program (in Cairo) ￬ Cairo Job ￬ Prover ￬ New Proof Generated ￬ Repeat Process ￬ Trigger Reached (last proof) ￬ Solidity Verifier At first glance, recursive proofs may seem more complex and time-consuming. However, there are several benefits to this approach: Parallelization: Recursive proofs enable work parallelization, reducing user latency and improving SHARP efficiency. Cheaper onchain costs: Parallelization enables SHARP to create larger proofs, which were previously dependent on the limited availability of large cloud machines. As a result, onchain costs are reduced. Lower cloud costs: Since each job is shorter, the required memory for processing is reduced, resulting in lower cloud costs. Optimization: Recursive proofs enable SHARP to optimize for various factors, including latency, onchain costs, and time to proof. Cairo support: Recursive proofs only require support in Cairo, without the need to add support in the Solidity Verifier. Latency in Starknet encompasses the time taken for processing, confirming, and including transactions in a block. Latency is affected by factors like network congestion, transaction fees, and system efficiency. Minimizing latency ensures faster transaction processing and user feedback. Time to proof, however, specifically pertains to the amount of time required to generate and verify cryptographic proofs for transactions or operations. SHARP’s backend architecture consists of several services that work together to process Cairo jobs and generate proofs. These services include: Gateway: Cairo jobs enter SHARP through the gateway. Job Creator: This service prevents job duplication and ensures that the system operates consistently, regardless of multiple identical requests. Validator: The validator service runs validation checks on each job, ensuring they meet the requirements and can fit within the Prover machines. Invalid jobs are tagged as such and do not proceed to the Prover. Scheduler: The scheduler service creates trains that aggregate jobs and send them to the Prover. Recursive jobs are paired and sent to the Prover together. Cairo Runner: This service runs Cairo for the Prover’s needs. The Cairo Runner service runs Cairo programs, executing the necessary computations and generating the execution trace as an intermediate result. The Prover then uses this execution trace. Prover: The Prover computes the proofs for each train. Dispatcher: The Dispatcher serves two functions in the SHARP system. In the case of a recursive proof, the Dispatcher runs the Cairo Verifier program on the proof it has received from the Prover, resulting in a new Cairo job that goes back to the Validator. In the case of a proof that is to be published onchain, the Dispatcher creates packages from the proof, which can then be sent to the Blockchain Writer. Blockchain Writer: Once the packages have been created by the Dispatcher, they are sent to the Blockchain Writer. The Blockchain Writer is responsible for sending the packages to the appropriate blockchain, such as Ethereum, for verification. This step in the SHARP system ensures that the proofs are properly verified and that the transactions are securely recorded on the blockchain. Catcher: The Catcher monitors onchain transactions to ensure that they have been accepted. While the Catcher is relevant for internal monitoring purposes, be aware that if a transaction fails, the fact won’t be registered onchain in the Fact Registry. As a result, the soundness of the system is still preserved even without the Catcher. SHARP is designed to be stateless. That is, each Cairo job is executed in its own context and has no dependency on other jobs, enabling greater flexibility in processing jobs. Currently, the primary users of SHARP include: StarkEx Starknet Optimizing the Prover involves the numerous challenges and potential projects on which the Starkware team and the community are currently working, including: Exploring more efficient hash functions for Cairo, the Prover, and Solidity. Investigating smaller fields for recursive proof steps could lead to more efficient computations. Adjusting various parameters of the STARK protocol, such as FRI parameters and block factors. Optimizing the Cairo code to make it faster, resulting in a faster recursive Prover. Developing dynamic layouts, which should enable Cairo programs to scale resources as needed. Improving scheduling algorithm. This optimization path is external to the Prover. Dynamic layouts enable SHARP to determine and scale the required resources for a specific job and adjust the layout accordingly, instead of relying on predefined layouts with fixed resources. Scaling resources can lead to more efficient computation and better resource utilization. This approach can provide tailored solutions for each job, improving overall efficiency. In conclusion, SHARP is a critical component of Starknet’s architecture, providing a more efficient and cost-effective solution for processing Cairo programs and verifying their proofs. By leveraging the power of STARK technology and incorporating recursive proofs, SHARP plays a vital role in improving the overall performance and scalability of the Starknet network. The stateless nature of SHARP and the reliance on the cryptographic soundness of the STARK proving system make it an innovative and valuable addition to the blockchain ecosystem.","title":"Provers","component":"ROOT","version":"","name":"provers-overview","url":"/architecture-and-concepts/provers-overview/","titles":[{"text":"What is SHARP?","hash":"what-is-sharp","id":1},{"text":"Recursive proofs in SHARP","hash":"recursive-proofs-in-sharp","id":2},{"text":"SHARP backend architecture and data pipeline","hash":"sharp-backend-architecture-and-data-pipeline","id":3},{"text":"Current SHARP users","hash":"current-sharp-users","id":4},{"text":"Challenges and optimization","hash":"challenges-and-optimization","id":5},{"text":"Conclusion","hash":"conclusion","id":6}]},"9":{"id":9,"text":"This topic previously appeared in the Starknet Book. Starknet’s Solidity verifier ensures the truth of transactions and smart contracts. The Solidity verifier is an L1 Solidity smart contract, designed to validate STARK proofs from SHARP. The current Verifier is a set of multiple smart contracts, rather than being a singular, monolithic structure. Some key smart contracts associated with the Verifier are: GpsStatementVerifier: This is the primary contract of the SHARP verifier. It verifies a proof and then registers the related facts using verifyProofAndRegister. It acts as an umbrella for various layouts, each named CpuFrilessVerifier. Every layout has a unique combination of built-in resources. Figure 1. Verifier layouts The system routes each proof to its relevant layout. MemoryPageFactRegistry: This registry maintains facts for memory pages, primarily used to register outputs for data availability in rollup mode. The Fact Registry is a separate smart contract ensuring the verification and validity of attestations or facts. The verifier function is separated from the main contract to ensure each segment works optimally within its limits. The main proof segment relies on other parts, but these parts operate independently. MerkleStatementContract: This contract verifies Merkle paths. FriStatementContract: It focuses on verifying the FRI layers. The SHARP Verifier Contract Map contains roughly 40 contracts, detailing various components of the Solidity verifier. The images below display the contracts and their Ethereum Mainnet addresses. SHARP verifier contract map These are currently the entire stack of contracts that comprise the SHARP verifier, with their Ethereum Mainnet addresses. Proxy 0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60 CallProxy 0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458 GpsStatementVerifier 0x6cB3EE90C50a38A0e4662bB7e7E6e40B91361BF6 MemoryPageFactRegistry 0xFD14567eaf9ba941cB8c8a94eEC14831ca7fD1b4 MerkleStatementContract 0x5899Efea757E0Dbd6d114b3375C23D7540f65fa4 FriStatementContract 0x3E6118DA317f7A433031F03bB71ab870d87dd2dd CairoBootloaderProgram 0x5d07afFAfc8721Ef3dEe4D11A2D1484CBf6A9dDf PedersenHashPointsXColumn 0xc4f21318937017B8aBe5fDc0D48f58dBc1d18940 PedersenHashPointsYColumn 0x519DA5F74503dA351EbBED889111377d33096002 EcdsaHashPointsXColumn 0x593a71DC43e9B67FE009d7C76B6EfA925FB329B1 EcdsaHashPointsYColumn 0xcA59f6FD499ffF50c78Ffb420a9bcd0d273abf29 CpuFrilessVerifier0 0x217750c27bE9147f9e358D9FF26a8224F8aCC214 CpuOods0 0x3405F644F9390C3478f42Fd205CE6920CcAF3280 CpuConstraintPoly0 0x943248dA0FFd5834Da56c5AD5308E2E2991378EB CpuFrilessVerifier1 0x630A97901Ac29590DF83f4A64B8D490D54caf239 CpuOods1 0x8518F459A698038B4CCED66C042c48C6bB5B17fe CpuConstraintPoly1 0x4CF5c11321d54b83bDAE84bBbd018c26621d2950 CpuFrilessVerifier2 0x8488e8f4e26eBa40faE229AB653d98E341cbE57B CpuOods2 0x52314e0b25b024c34480Ac3c75cfE98c2Ed6aa4a CpuConstraintPoly2 0xBE8bd7a41ba7DC7b995a53368e7fFE30Fd2BC447 CpuFrilessVerifier3 0x9E614a417f8309575fC11b175A51599661f2Bd21 CpuOods3 0xED219933b58e9c00E66682356588d42C7932EE8E CpuConstraintPoly3 0x297951a67D1BF7795500C3802d21a8C846D9C962 CpuFrilessVerifier4 0xC879aF7D5eD80e4676C203FD300E640C297F31e3 CpuOods4 0x4bf82e627D57cB3F455E740bcDA25848cDbd2FF7 CpuConstraintPoly4 0x0C099caf7a87e4eB28bcd8D0608063f8a69bb434 CpuFrilessVerifier5 0x78Af2BFB12Db15d35f7dE8DD77f29C299C78c590 CpuOods5 0x43A1C0bBa540e1C98d4b413F876250bdCFd0b9e0 CpuConstraintPoly5 0x691ca565B7416B681e4f9Fb56A1283Ae8b34E55e CpuFrilessVerifier6 0xe9664D230490d5A515ef7Ef30033d8075a8D0E24 CpuOods6 0x68293272FEA2D6e74572BC18ffaD11F21344e090 CpuConstraintPoly6 0xd0aAdECA2d25AEFde0da214d27b04b6ea20D7418 PoseidonPoseidonFullRoundKey0Column6 0x37070Fd8051f63E5A6D7E87026e086Cc19db1aBe PoseidonPoseidonFullRoundKey1Column6 0xb4711a4614368516529d6118C97905aB4B28e267 PoseidonPoseidonFullRoundKey 2Column6 0x4FB05b7CC348C5a72C59a3f307baf66e3CA1F835 PoseidonPoseidonPartialRoundKey0Column6 0x812c2AD2161D099724A99C8114c539b9e5b449cd PoseidonPoseidonPartialRoundKey1Column6 0x4d0E80AB34ee2B19295F2CaC3101d03452D874b8 CpuFrilessVerifier7 0x03Fa911dfCa026D9C8Edb508851b390accF912e8 CpuOods7 0xc9E067AF5d00eb4aA2E73843ac36AfF83C5CeeD3 CpuConstraintPoly7 0x89B7a7276cBc8Cb35Ec11fAE9da83b20Db3edf20 These contracts function as follows: Proxy: This contract facilitates upgradability. It interacts with the GpsStatementVerifier contract using the delegate_call method. Notably, the state resides in the GpsStatementVerifier contract, not in the proxy. CallProxy: Positioned between the Proxy and the GpsStatementVerifier contracts, it functions like a typical proxy. However, it avoids the delegate_call method and calls the function in the implementation contract directly. CairoBootloaderProgram: Comprising numerical Cairo programs, it validates the Cairo program of a statement. The bootloader manages the logic executing Cairo programs to generate proof and program hash. PedersenHashPoints (X & Y Columns): These lookup tables store vast amounts of data. Validation functions consult them to compute the Pedersen hash. EcdsaPoints (X & Y Column): Similar to the Pedersen hash, these tables assist in calculating the elliptic curve. CpuFrilessVerifier/CpuOods/CpuConstantPoly (0 - 7): These Verifier contracts vary in layout as shown in the GpsStatementVerifier layout image. Each layout encompasses resources, built-ins, constraints, and more, designed for a specific task. Each has unique parameters for its constructor. PoseidonPoseidon: These contracts back the new Poseidon built-in and contain Poseidon-specific lookup tables. When constructing the primary Verifier contracts, specific parameters are employed to facilitate functionality. These parameters reference other auxiliary contracts, decentralizing the logic and ensuring the main contract remains under the 24kb deployment limit. Below is a visual representation of these parameters in relation to key contracts CpuFrilessVerifiers and GpsStatementVerifier: CpuFrilessVerifiers is designed to handle a diverse range of tasks. Its parameters encompass: Auxiliary Polynomial Contracts: These include CpuConstraintPoly, PedersenHashPointsxColumn, PedersenHashPointsYColumn, EcdsaPointsXColumn, and EcdsaPointsYColumn. Poseidon-Related Contracts: Several PoseidonPoseidonFullRoundKey and PoseidonPoseidonPartialRoundKey contracts. Sampling and Memory: The contract uses CpuOods for out-of-domain sampling and MemoryPageFactRegistry for memory-related tasks. Verification: It integrates with MerkleStatementContract for Merkle verification and FriStatementContract for Fri-related tasks. Security: The num_security_bits and min_proof_of_work_bits contracts ensure secure operation. For instances like CpuFrilessVerifier0, specific contracts (e.g., CpuConstraintPoly0, PoseidonPoseidonFullRoundKeyColumn0, CpuOods0) become particularly relevant. The GpsStatementVerifier functions as the hub of verifier operations, necessitating various parameters for effective functioning: Bootloader: It references the CairoBootloaderProgram to initiate the system. Memory Operations: This is facilitated by the MemoryPageFactRegistry contract. Sub-Verifiers: It integrates a series of sub-verifiers (CpuFrilessVerifier0 through CpuFrilessVerifier7) to decentralize tasks. Verification: The hashes, hashed_supported_cairo_verifiers and simple_bootloader_program_hash, are essential for validation processes. The GpsStatementVerifier serves as the primary verifier contract, optimized for minimal logic to fit within deployment size constraints. To function effectively: It relies on smaller verifier contracts, which are already deployed and contain varied verification logic. These smaller contracts, in turn, depend on other contracts, established during their construction. In essence, while the diverse functionalities reside in separate contracts for clarity and size efficiency, they are all interlinked within the GpsStatementVerifier. For future enhancements or adjustments, the proxy and callproxy contracts facilitate upgradability, allowing seamless updates to the GpsStatementVerifier without compromising its foundational logic. The SHARP dispatcher transmits all essential transactions for verification, including: MemoryPages (usually many). MerkleStatements (typically between 3 and 5). FriStatements (generally ranging from 5 to 15). The SHARP dispatcher then forwards the proof using verifyProofAndRegister. Applications, such as the Starknet monitor, validate the status. Once verification completes, they send an updateState transaction.","title":"Solidity verifier","component":"ROOT","version":"","name":"solidity-verifier","url":"/architecture-and-concepts/solidity-verifier/","titles":[{"text":"Current architecture: Multiple smart contracts","hash":"current_architecture_multiple_smart_contracts","id":1},{"text":"SHARP Verifier contract map","hash":"sharp_verifier_contract_map","id":2},{"text":"Constructor parameters of key contracts","hash":"constructor_parameters_of_key_contracts","id":3},{"text":"CpuFrilessVerifier constructor parameters","hash":"cpufrilessverifier_constructor_parameters","id":4},{"text":"GpsStatementVerifier constructor parameters","hash":"gpsstatementverifier_constructor_parameters","id":5},{"text":"Interconnection of contracts","hash":"interconnection_of_contracts","id":6},{"text":"SHARP verification flow","hash":"sharp_verification_flow","id":7}]},"10":{"id":10,"text":"The Starknet CLI is deprecated. Instead, use link: StarkLi CLI. To enter a Starknet command, use the following syntax: $ starknet Where: represents a single command that executes an operation on Starknet. represents zero or more command line options, each of which modifies the operation of the command. You need to set your Starknet network environment to use either testnet or Mainnet. You can set the environment using either a command-line option or an environment variable. Possible values are: sepolia Sets the Starknet network to testnet mainnet Sets the Starknet network to Mainnet Setting the network environment using a command-line option When you enter any command, include the --network option. For example to use Mainnet, enter a command as follows: $ starknet --network alpha-mainnet You can place the --network option before or after any other option. Setting the network environment using an environment variable Set the STARKNET_NETWORK environment variable as follows: $ export STARKNET_NETWORK= For example, to use testnet, enter the following command: $ export STARKNET_NETWORK=sepolia When working with the CLI, you can manually set the endpoints for the gateways that enable you to interact with Starknet, by including the following options: --feeder_gateway_url Sets the custom endpoint for read commands. --gateway_url Sets the custom endpoint for write commands. The following are the endpoints for Starknet testnet and Mainnet: Testnet feeder gateway URL: https://alpha4.starknet.io/feeder_gateway/ Mainnet feeder gateway URL: https://alpha-mainnet.starknet.io/feeder_gateway/ Testnet gateway URL: https://alpha4.starknet.io/gateway/ Mainnet gateway URL: https://alpha-mainnet.starknet.io/gateway/ Example: Setting a custom read endpoint The following command returns the ABI using the Mainnet feeder gateway. $ starknet get_code --feeder_gateway_url https://alpha-mainnet.starknet.io/feeder_gateway/ Example: Setting a custom write endpoint The following command sends a transaction to the Starknet sequencer using the Mainnet gateway. $ starknet invoke --gateway_url https://alpha-mainnet.starknet.io/gateway/ starknet call --address --abi --function --inputs --block_hash --block_number --signature --wallet --nonce Calls a Starknet contract without affecting the state, accepts the following arguments: contract_address* - address of the contract being called contract_abi* - a path to a JSON file that contains the abi of the contract being called function_name* - name of the function which is called arguments* - inputs to the function being called, represented by a list of space-delimited values block_hash - the hash of the block used as the context for the call operation. If this argument is omitted, the latest block is used block_number - same as block_hash, but specifies the context block by number or tag signature_information - list of field elements as described here wallet_name - the name of the desired wallet, use deploy_account to set-up new accounts in the CLI nonce - account nonce, only relevant if the call is going through an account Block Tag A block context can be specified via the latest or pending tags, where the former refers to the latest accepted on L2 block and the latter refers to the pending block. starknet declare --contract Declares a new contract class on Starknet, accepts the following argument: contract_class - path to a JSON file containing the contract’s compiled code starknet deploy --salt --contract --inputs --token Deploys a new contract, accepts the following arguments: salt - a seed that is used in the computation of the contract’s address (if not specified, the sequencer will choose a random string) contract_definition* - path to a JSON file containing the contract’s bytecode and abi (can be obtained by executing starknet-compile) constructor_inputs* - the arguments given to the contract’s constructor, represented by a list of space-delimited values token - a token allowing contract deployment (can be obtained by applying here). Only used in the Alpha stages and will be deprecated in the future The deploy token is a temporary measure which will be deprecated when fees are incorporated in the system. Only relevant for Mainnet. starknet deploy_account --wallet --account Deploys an account contract, accepts the following arguments: account_name - the name given to the account, used for managing multiple accounts from the CLI (if not specified, the name __default__ is used. wallet_provider* - the path to module which manages the account (responsible for key generation, signing, etc.) Today, the Starknet CLI only works with the OpenZeppelin account contract. The CLI uses this specific wallet provider. To use this provider, either set up the following environment variable or pass the same value directly to the wallet_provider parameter: $ export STARKNET_WALLET=starkware.starknet.wallets.open_zeppelin.OpenZeppelinAccount Using the built-in wallet providers that are part of the cairo-lang package (starkware.starknet.wallets…​) is not secure (for example, the private key may be kept not encrypted and without backup in your home directory). You should only use them if you’re not overly concerned with losing access to your accounts (for example, for testing purposes). starknet estimate_fee --address --abi --function --inputs Returns the fee estimation for a given contract call. Accepts the following arguments: address* - the address of the contract being called contract_abi* - a path to a JSON file that contains the abi of the contract being called function_name*- the name of the function being called arguments* - inputs to the function being called, represented by a list of space-delimited values` starknet estimate_message_fee --from_address --to_address --function --inputs Returns the fee estimation for a given L1 handler application. Accepts the following arguments: from_address* - the L1 address of the sender to_address* - the L2 address of the recipient contract_abi* - a path to a JSON file containing the abi of the receiving contract on L2 function_name*- the name of the desired L1 handler arguments* - inputs to the called handler, represented by a list of space-delimited values starknet get_block --hash --number Returns the requested block, exactly one of the following arguments must be given: block_hash - hash of the requested block block_number - number or tag of the requested block starknet get_code --contract_address --block_hash --block_number Returns the ABI and the byte code of the requested contract, accepts the following arguments: contact_address* - address of the requested contract block_hash - the hash of the block used as the context for the operation. If this argument is omitted, the latest block is used block_number - same as block_hash, but specifies the context block by number or tag starknet get_storage_at --contract_address --key --block_hash --block_number Queries a contract’s storage at a specific key, accepts the following arguments: contract_address *- address of the requested contract key* - the requested key from the given contract’s storage block_hash - the hash of the block relative to which the storage will be provided. In case this argument is not given, the latest block is used block_number - same as block_hash, but specifies the context block by number or tag starknet get_transaction --hash Returns the requested transaction, expects the following argument: transaction_hash* - hash of the requested transaction starknet get_transaction_receipt --hash Returns the receipt associated with the transaction, expects the following argument: transaction_hash* - hash of the requested transaction starknet invoke starknet tx_status starknet invoke --address --abi --function --inputs --signature --wallet --nonce Sends a transaction to the Starknet sequencer, accepts the following arguments: address* - the address of the contract being called contract_abi* - a path to a JSON file that contains the abi of the contract being called function_name*- the name of the function being called arguments* - inputs to the function being called, represented by a list of space-delimited values signature_information - list of field elements as described here wallet_name - the name of the desired wallet, use deploy_account to set-up new accounts in the CLI. nonce - account nonce, only relevant if the call is going through an account Today, interaction with Starknet may be done either via account or by a direct call. The signature argument can only be provided in the case of a direct call, since otherwise providing the signature is the responsibility of the account module. To use an account you must specify wallet_name, otherwise a direct call will be used (you may also explicitly perform a direct call by adding --no_wallet to the command). Note that in the future direct calls will be deprecated and the only way to interact with the system would be through accounts. starknet tx_status --hash --contract --error_message Returns the transaction status, accepts the following arguments: transaction_hash* - hash of the requested transaction contract_definition - path to a JSON file containing the compiled contract to which the transaction was addressed. If supplied, the debug information from the compiled contract will be used to add error locations. error_message - if specified, only the error message will be returned (or empty response in case the transaction was successful) The possible statuses of a transaction are: NOT_RECEIVED RECEIVED PENDING REJECTED ACCEPTED_ON_L2 ACCEPTED_ON_L1 For more information, see Transaction lifecycle.","title":"Legacy Starknet CLI reference","component":"ROOT","version":"","name":"starkli","url":"/cli/starkli/","titles":[{"text":"Basic command line syntax","hash":"basic_command_line_syntax","id":1},{"text":"Setting the Starknet network environment","hash":"setting_the_starknet_network_environment","id":2},{"text":"Setting custom endpoints","hash":"setting_custom_endpoints","id":3},{"text":"starknet call","hash":"starknet_call","id":4},{"text":"starknet declare","hash":"starknet_declare","id":5},{"text":"starknet deploy","hash":"starknet_deploy","id":6},{"text":"starknet deploy_account","hash":"starknet_deploy_account","id":7},{"text":"starknet estimate_fee","hash":"starknet-estimate_fee","id":8},{"text":"starknet estimate_message_fee","hash":"starknet_estimate_message_fee","id":9},{"text":"starknet get_block","hash":"starknet_get_block","id":10},{"text":"starknet get_code","hash":"starknet_get_code","id":11},{"text":"starknet get_storage_at","hash":"starknet_get_storage_at","id":12},{"text":"starknet get_transaction","hash":"starknet_get_transaction","id":13},{"text":"starknet get_transaction_receipt","hash":"starknet_get_transaction_receipt","id":14},{"text":"starknet invoke","hash":"starknet_invoke","id":15},{"text":"starknet tx_status","hash":"starknet_tx_status","id":16}]},"11":{"id":11,"text":"When the Starknet compiler is installed, you can view this command-line help in a terminal by entering the following command: starknet-compile --help starknet-compile [-h] [--abi ABI] [--disable_hint_validation] [--account_contract] [--dont_filter_identifiers] [-v] [--prime PRIME] [--cairo_path CAIRO_PATH] [--preprocess] [--output OUTPUT] [--no_debug_info] [--debug_info_with_source] [--cairo_dependencies CAIRO_DEPENDENCIES] [--no_opt_unused_functions] file [file ...] The following example compiles the file contract.cairo. It generates two files: contract_compiled.json The contract class. This file contains the bytecode and all other information necessary to execute a contract. For information on contract classes, see Contract classes and instances. contract_abi.json The contract’s ABI. starknet-compile contract.cairo \\ --output contract_compiled.json \\ --abi contract_abi.json A tool to compile Starknet contracts. File names. Show this help message and exit. Output the contract’s ABI. Disable the hint validation. Compile as account contract. Disable the filter-identifiers-optimization.If True, all the identifiers will be kept, instead of just the ones mentioned in hints or 'with_attr' statements. show program’s version number and exit The size of the finite field. A list of directories, separated by \":\" to resolve import paths. The full list will consist of directories defined by this argument, followed by the environment variable CAIRO_PATH, the working directory and the standard library path. Stop after the preprocessor step and output the preprocessed program. The output file name (default: stdout). Don’t include debug information in the compiled file. Include debug information with a copy of the source code. Output a list of the Cairo source files used during the compilation as a CMake file. Disables unused function optimization.","title":"Legacy compiler CLI reference","component":"ROOT","version":"","name":"starknet-compiler-options","url":"/cli/starknet-compiler-options/","titles":[{"text":"Usage","hash":"usage","id":1},{"text":"Example","hash":"example","id":2},{"text":"Description","hash":"description","id":3},{"text":"Positional arguments","hash":"positional_arguments","id":4},{"text":"file","hash":"file","id":5},{"text":"Optional arguments","hash":"optional_arguments","id":6},{"text":"-h, --help","hash":"h_help","id":7},{"text":"--abi ABI","hash":"abi_abi","id":8},{"text":"--disable_hint_validation","hash":"disable_hint_validation","id":9},{"text":"--account_contract","hash":"account_contract","id":10},{"text":"--dont_filter_identifiers","hash":"dont_filter_identifiers","id":11},{"text":"-v, --version","hash":"v_version","id":12},{"text":"--prime PRIME","hash":"prime_prime","id":13},{"text":"--cairo_path CAIRO_PATH","hash":"cairo_path_cairo_path","id":14},{"text":"--preprocess","hash":"preprocess","id":15},{"text":"--output OUTPUT","hash":"output_output","id":16},{"text":"--no_debug_info","hash":"no_debug_info","id":17},{"text":"--debug_info_with_source","hash":"debug_info_with_source","id":18},{"text":"--cairo_dependencies CAIRO_DEPENDENCIES","hash":"cairo_dependencies_cairo_dependencies","id":19},{"text":"--no_opt_unused_functions","hash":"no_opt_unused_functions","id":20}]},"12":{"id":12,"text":"The goal of this document is to provide a step-by-step guide to create a small React DAPP powered by Starknet. This DAPP has been deployed here and is using the Starknet Sepolia Testnet network. To access to the source code, just follow the link in the lower banner of the DAPP. Pre-required skills: Javascript/Typescript basic understanding of node.js / Next.js framework React/JSX minimal understanding of html/css Useful documentations: starknet-react starknet.js First, install Starkli & Scarb (at least v2.9.2), as detailed here. If necessary, create an account in Starknet Sepolia Testnet, as described here. If you need some ETH/STRK to pay the fees, you can use the Starknet testnet faucet This \"counter-DAPP\" uses a very simple smart-contract that stores, reads & increments a counter. Initialize, compile, and if necessary, declare the contract as explained here. The source code is: lib.cairo #[starknet::interface] trait ITestSession { fn increase_counter(ref self: TContractState,value:u128); fn get_counter(self: @TContractState)->u128; } #[starknet::contract] mod test_session { use starknet::storage::StoragePointerWriteAccess; use starknet::storage::StoragePointerReadAccess; #[storage] struct Storage { count: u128, } #[abi(embed_v0)] impl TestSession of super::ITestSession { fn increase_counter(ref self: ContractState,value:u128) { self.count.write(self.count.read() + value) } fn get_counter(self: @ContractState)->u128 { self.count.read() } } } Then, deploy this contract, as detailed here. Note the address of the contract ; it will be necessary in the DAPP.","title":"\"counter-DAPP\" guide","component":"ROOT","version":"","name":"counter-contract","url":"/counter-dapp/counter-contract/","titles":[{"text":"Write a smart-contract","hash":"write_a_smart_contract","id":1}]},"13":{"id":13,"text":"Once the contract deployed, install in your browser a Starknet wallet extension. The most common wallets are ArgentX & Braavos. If you don’t have Node.js installed, install it from here. Now, create a Next.js project: npx create-next-app@latest counter-dapp --use-npm To be able to install starknet-react, change these lines in the package.json file : \"react\": \"^18.3.1\", \"react-dom\": \"^18.3.1\", To be able to use the bigint type, change a line in tsconfig.json: \"target\": \"ESNext\", Now, install the necessary libs: npm i starknet @starknet-react/chains @starknet-react/core Create in src/app/ a components directory. Then create inside this directory a file named Starknet-provider.tsx, with the following code, to configure the Starknet provider: Starknet-provider.tsx \"use client\"; import React from \"react\"; import { sepolia, mainnet } from \"@starknet-react/chains\"; import { StarknetConfig, publicProvider, argent, braavos, useInjectedConnectors, voyager } from \"@starknet-react/core\"; /** * Initialization of Starknet-React */ export function StarknetProvider({ children }: { children: React.ReactNode }) { const { connectors } = useInjectedConnectors({ // Show these connectors if the user has no connector installed. recommended: [ argent(), braavos(), ], includeRecommended: \"onlyIfNoConnectors\", order: \"random\" }); return ( {children} ); } Wrap your app in the provider just created, in layout.tsx: layout.tsx import { StarknetProvider } from './components/Starknet-provider' import './globals.css' export const metadata = { title: 'Starknet-counter-DAPP', description: 'Minimalistic DAPP using Starknet', icons: { icon: \"./favicon.ico\", }, } export default function RootLayout({ children, }: { children: React.ReactNode }) { return ( {children} ) } You can now use the Starknet-react hooks from any component wrapped by the root provider. Replace the content of page.tsx, with: page.tsx \"use server\"; import Image from 'next/image' import * as CSS from 'csstype'; import \"./custom.css\"; import starknetReactImg from \"./Images/starknet-logo.svg\"; import { DisplayConnected } from './components/DisplayConnected'; import LowerBanner from './components/LowerBanner'; export default async function Page() { const align: \"left\" | \"center\" | \"right\" = \"center\"; const titleStyle: CSS.Properties = { color: 'rgb(20, 14, 75)', fontSize: \"24px\", fontFamily: 'sans-serif', fontWeight: '500', textAlign: align, padding: \"20px\", } return ( counter APP Please connect to Sepolia Testnet network ) } Non essential files of this project (images, css, LowerBanner, utils, …​) have to be copied from the repo. Create a DisplayConnected.tsx file in components, that includes: DisplayConnected.tsx \"use client\"; import { constants } from \"starknet\"; import { useAccount, useNetwork } from \"@starknet-react/core\"; import ConnectWallet from \"./ConnectWallet\"; import PlayWithCairo from \"./PlayWithCairo\"; export function DisplayConnected() { const { chain } = useNetwork(); const { address } = useAccount(); return ( <> {address && ( <> { chain.id === BigInt(constants.StarknetChainId.SN_SEPOLIA) ? <> : Wrong network. Change to Sepolia Testnet network. } ) } ) } We have here our two first Starknet-react hooks: useNetwork() const { chain } = useNetwork(); Once a wallet connected, you will have a chain object, that can be used to get the current chain (Mainnet or Testnet). If you change the current network in the browser wallet extension, this chain object is updated immediately. This hook is used in this component to check that you have selected the right network. useAccount() const { address } = useAccount(); Once a wallet connected, you will have the address of the current account. Here also, it’s automatically updated if you change the current account in the wallet. address is used here to be sure that the wallet has been selected before showing the PlayWithCairo component. Now, create a ConnectWallet.tsx file in components directory, with: ConnectWallet.tsx \"use client\"; import { useState } from 'react'; import { useAccount, useDisconnect } from \"@starknet-react/core\"; import SelectWallet from './SelectWallet'; export default function ConnectWallet() { const [displaySelectWalletUI,setSelectWalletUI]=useState(false); const { disconnect } = useDisconnect(); const { address, isConnected } = useAccount(); return ( <> {!isConnected ? ( <> { setSelectWalletUI(true); }} > Connect Wallet {displaySelectWalletUI && } ) : ( <> {address ? { disconnect(); setSelectWalletUI(false) }} > {`Your wallet : ${address?.slice(0, 7)}...${address?.slice(-4)} is connected` } : \"No address\" } ) } ) } In this code we have 2 Starknet hooks : useAccount() const { isConnected } = useAccount(); isConnected becomes true once you have accepted in the wallet to use this DAPP. useDisconnect() const { disconnect } = useDisconnect(); disconnect is a command to use to end the connection with the wallet. Now, create the SelectWallet component, that will show a list of the wallets available in your browser. SelectWallet.tsx \"use client\"; import { useConnect } from \"@starknet-react/core\"; export default function SelectWallet() { const { connect, connectors, status } = useConnect(); return ( {connectors.map((connector) => ( { connect({ connector }); }} disabled={status === \"pending\"} > {connector.name} ))} ); } Here is an important hook to select a wallet: const { connect, connectors } = useConnect(); connect is a command to select a wallet. connectors is a list of available wallets in the browser.","title":"","component":"ROOT","version":"","name":"counter-dapp","url":"/counter-dapp/counter-dapp/","titles":[{"text":"Connect a wallet","hash":"counter-dapp","id":1}]},"14":{"id":14,"text":"After the creation of the code to select a wallet, let’s create a PlayWithCairo component, that will read and write the contract: PlayWithCairo.jsx \"use client\"; import { useEffect, useState } from 'react'; import { type Call } from \"starknet\"; import { useContract, useReadContract, useSendTransaction } from '@starknet-react/core'; import TransactionStatus from './TransactionStatus'; import { counterAbi } from \"../contracts/counter-abi\"; import { addrTestContract, qtyForIncrease } from '@/app/utils/constants'; export default function PlayWithCairo() { const [transactionHash, setTransactionHash] = useState(\"\"); const [getCounter, setCounter] = useState(undefined); const { contract } = useContract({ abi: counterAbi, address: addrTestContract }); const { sendAsync, data, status, isSuccess } = useSendTransaction({ calls: [] }); const { data: counter } = useReadContract({ address: addrTestContract, abi: counterAbi, functionName: \"get_counter\", args: [], // watch: true, // refreshed each block, or `refetchInterval` refetchInterval: 30_000 // ms }); async function increaseCounter() { if (contract) { const myCall: Call = contract.populate(\"increase_counter\", [qtyForIncrease]); const response = await sendAsync([myCall]); setTransactionHash(response.transaction_hash); // Do not wait to update the display setCounter((getCounter ?? 0n) + BigInt(qtyForIncrease)); } } useEffect( () => { setCounter(typeof counter === undefined ? undefined : BigInt(counter ?? 0n)); return () => { } }, [counter] ); return ( { typeof getCounter === undefined ? ( Fetching data ... ) : ( <> Counter = {(getCounter ?? \"???\").toString()} { increaseCounter(); }} > Increase counter (+{qtyForIncrease.toString()}) {!!transactionHash && ( ) } ) } ) } We have here 3 important hooks : useReadContract() const { data } = useReadContract({ address: addrTestContract, abi: counterAbi, functionName: \"get_counter\", args: [], refetchInterval: 30_000 // ms }); This hook is calling a contract function that returns data from the blockchain. You needs in this hook the ABI of the contract ; you will find it inside the Sierra file generated by the compilation of the contract. In our project, find the ABI section in target/dev/counter_test_session.contract_class.json, at the end of the file. Create in the DAPP project a new file contracts/counter-abi.ts. Start the file with export const counterAbi = Then paste the array that includes all the elements of the ABI. The result is something like this : counter-abi.ts export const counterAbi = [ { \"type\": \"impl\", \"name\": \"TestSession\", \"interface_name\": \"counter::ITestSession\" }, { \"type\": \"interface\", \"name\": \"counter::ITestSession\", \"items\": [ { \"type\": \"function\", \"name\": \"increase_counter\", \"inputs\": [ { \"name\": \"value\", \"type\": \"core::integer::u128\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, ...... ...... } ] The result of the reading of the Starknet contract is in the data variable. This hook is executed at the opening of the component. With the watch: true option, the request is repeated each block. With the refetchInterval: value option, the request is repeated each value milliseconds. To use with caution, to not overload your Starknet access. This hook needs also the address of the contract. Create a utils/constants.ts file including: constants.ts export const addrTestContract =\"0x363d42397f536706e7b2a9883ec8d4db739f062ac6aab8ade02b7db8cede731\" as const; // sepolia testnet export const qtyForIncrease: number = 10 as const; Adapt the address to your contract deployment. useContract() const { contract } = useContract({ abi: counterAbi, address: addrTestContract }); This hook is useful to create a Call, that will be used to write in Starknet network: const myCall: Call = contract.populate(\"increase_counter\", [qtyForIncrease]); useSendTransaction() const { sendAsync } = useSendTransaction({ calls: [] }); This hook executes the functions of the contract that are writing in Starknet. sendAsync needs as input one or several Calls, created with the previous hook. const response = await sendAsync([myCall]); Finally, create a last TransactionStatus component, that will verify if the transaction has been properly processed: TransactionStatus.tsx \"use client\"; import { GetTransactionReceiptResponse, json, type RejectedTransactionReceiptResponse, type RevertedTransactionReceiptResponse, type SuccessfulTransactionReceiptResponse } from \"starknet\"; import { useTransactionReceipt } from '@starknet-react/core'; type Props = { transactionHash: string }; export default function TransactionStatus({ transactionHash }: Props) { const { data: txR } = useTransactionReceipt({ hash: transactionHash, refetchInterval: 5_000 }); function formatTxR(txR: GetTransactionReceiptResponse): string { let finality: string = \"\"; txR.match({ success: (txR: SuccessfulTransactionReceiptResponse) => { finality = txR.finality_status; }, rejected: (txR: RejectedTransactionReceiptResponse) => { finality = json.stringify(txR.transaction_failure_reason); }, reverted: (txR: RevertedTransactionReceiptResponse) => { finality = txR.finality_status; }, error: (err: Error) => { finality = err.message; }, _: () => { console.log('Unsuccessful'); }, }); return txR.statusReceipt + \"→\" + finality; } return ( <> Transaction is : {\" \"} {!txR ? <>Processing : formatTxR(txR)} ) } Our last Starknet hook: const { data } = useTransactionReceipt({ hash: transactionHash, refetchInterval: 5_000 }); The useTransactionReceipt hook will report each 5 seconds in data a refreshed transaction report object. The DAPP code is ready. Test it with: npm run dev and open the displayed link in your browser. Connect an installed wallet, click on the button to increase the counter, approve the transaction in the wallet, and you have the result on the screen: You just built a fullstack dapp on Starknet! Here is the repo for this project If you run into any problems, a good first step is to compare your code to this repo and resolve any differences. If necessary, you can contact the assistance team in the Starknet Discord here.","title":"","component":"ROOT","version":"","name":"counter-interact","url":"/counter-dapp/counter-interact/","titles":[{"text":"Interact with contract","hash":"interact-contract","id":1}]},"15":{"id":15,"text":"Welcome to the second installment of the \"Hello, Starknet!\" quickstart series, the official tutorial for starting your journey as a Starknet developer! 🚀 Before a contract can be deployed on Starknet, its compiled code needs to be submitted to the network (also known as declaring it). This installment of the series will therefore walk you though compiling Scarb’s default HelloStarknet contract, which will be used throughout the following installments. To learn more about Starknet smart contracts, see the Contracts section. Scarb’s default HelloStarknet contract can be generated by simply running: scarb new hello_starknet and selecting to set up the Starknet Foundry (default) test runner. For the purpose of this tutorial, you can ignore all files in the hello_starknet directory other than hello_starknet/src/lib.cairo, which holds the contract’s code: /// Interface representing `HelloContract`. /// This interface allows modification and retrieval of the contract balance. #[starknet::interface] pub trait IHelloStarknet { /// Increase contract balance. fn increase_balance(ref self: TContractState, amount: felt252); /// Retrieve contract balance. fn get_balance(self: @TContractState) -> felt252; } /// Simple contract for managing balance. #[starknet::contract] mod HelloStarknet { use core::starknet::storage::{StoragePointerReadAccess, StoragePointerWriteAccess}; #[storage] struct Storage { balance: felt252, } #[abi(embed_v0)] impl HelloStarknetImpl of super::IHelloStarknet { fn increase_balance(ref self: ContractState, amount: felt252) { assert(amount != 0, 'Amount cannot be 0'); self.balance.write(self.balance.read() + amount); } fn get_balance(self: @ContractState) -> felt252 { self.balance.read() } } } As its comments read, this is a simple contract with two basic functions: get_balance, which reads the contract’s current balance from storage. increase_balance, which reads the contract’s current balance from storage, increases it by amount and writes the new balance to storage. To compile the HelloStarknet contract, navigate into the newly created hello_starknet directory and run: scarb build The first time a project is built, some components of Scarb are compiled locally with the Rust toolchain. This process may take a few minutes, but will not happen in subsequent builds. The compiled contract should now be saved inside the hello_starknet/target/dev/ directory as hello_starknet_HelloStarknet.contract_class.json.","title":"Compiling the HelloStarknet contract","component":"ROOT","version":"","name":"compiling-hellostarknet","url":"/quick-start/compiling-hellostarknet/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Generating HelloStarknet","hash":"generating_hellostarknet","id":2},{"text":"Compiling HelloStarknet","hash":"compiling_hellostarknet","id":3}]},"16":{"id":16,"text":"Welcome to the third installment of the \"Hello, Starknet!\" quickstart series, the official tutorial for starting your journey as a Starknet developer! 🚀 Local networks, also known as development networks or devnets, enable a fast and private development process, making them ideal for taking your first Starknet steps. This installment of the series will therefore guide you through the steps necessary to declare, deploy, and interact with the HelloStarknet contract on your very own local instance of Starknet. A local Starknet instance can be easily initialized using Starknet Devent by simply running: starknet-devnet --seed=0 The --seed option is used to force consistent addresses of predeployed account (see more details below). If successful, the result should resemble the following: Predeployed FeeToken ETH Address: 0x49D36570D4E46F48E99674BD3FCC84644DDD6B96F7C741B1562B82F9E004DC7 STRK Address: 0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d Class Hash: 0x046ded64ae2dead6448e247234bab192a9c483644395b66f2155f2614e5804b0 Predeployed UDC Address: 0x41A78E741E5AF2FEC34B695679BC6891742439F7AFB8484ECD7766661AD02BF Class Hash: 0x7B3E05F48F0C69E4A65CE5E076A66271A527AFF2C34CE1083EC6E1526997A69 Chain ID: SN_SEPOLIA (0x534e5f5345504f4c4941) ... To learn more about Starknet accounts, check out the Accounts section. To interact with your local Starknet instance, you first need an account. Luckily, the result of initializing a local Starknet instance using Starknet Devnet should also include a list of predeployed accounts that resembles the following: | Account address | 0x064b48806902a367c8598f4f95c305e8c1a1acba5f082d294a43793113115691 | Private key | 0x0000000000000000000000000000000071d7bb07b9a64f6f78ac4c816aff4da9 | Public key | 0x039d9e6ce352ad4530a0ef5d5a18fd3303c3606a7fa6ac5b620020ad681cc33b | Account address | 0x078662e7352d062084b0010068b99288486c2d8b914f6e2a55ce945f8792c8b1 | Private key | 0x000000000000000000000000000000000e1406455b7d66b1690803be066cbe5e | Public key | 0x007a1bb2744a7dd29bffd44341dbd78008adb4bc11733601e7eddff322ada9cb ... This allows to avoid creating and deploying new accounts, and instead simply fetching them into Starkli. To fetch your local node’s first predeployed account, run: starkli account fetch \\ 0x064b48806902a367c8598f4f95c305e8c1a1acba5f082d294a43793113115691 \\ --output=account.json \\ --rpc=http://127.0.0.1:5050 http://127.0.0.1:5050 are the local node’s default host and port (which can be configured on initialization using the --host and --port options). If successful, the result should resemble the following: Account contract type identified as: OpenZeppelin Description: OpenZeppelin account contract v0.8.1 compiled with cairo v2.4.1 Downloaded new account config file: account.json To finish setting up the account, a corresponding Starkli signer, used by Starkli to sign transactions, is also required. In this tutorial, we will use an encrypted keystores signer. Encrypted keystores are JSON files that follow the Web3 secret storage definition and require a password when created and used, preventing your private key from being stored as plain text on your computer. To create an encrypted keystore signer for your fetched account, run: starkli signer keystore from-key keystore.json and enter 0x0000000000000000000000000000000071d7bb07b9a64f6f78ac4c816aff4da9 as its private key, along with a password of your choosing that will be used to encrypt it. If successful, the result should resemble the following: Created new encrypted keystore file: keystore.json Public key: 0x039d9e6ce352ad4530a0ef5d5a18fd3303c3606a7fa6ac5b620020ad681cc33b To avoid specifying the account and keystore files in every subsequent Starkli command, export their paths by running: export STARKNET_ACCOUNT=$(pwd)/account.json export STARKNET_KEYSTORE=$(pwd)/keystore.json To declare the HelloStarknet contract, navigate into the hello_starknet directory created in Compiling the HelloStarknet contract, run: starkli declare \\ target/dev/hello_starknet_HelloStarknet.contract_class.json \\ --rpc=http://127.0.0.1:5050 \\ and enter your password. If successful, the output of the declaration should resemble the following: ... Declaring Cairo 1 class: 0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c Compiling Sierra class to CASM with compiler version 2.9.1... CASM class hash: 0x00a3b109389575a420cd0c5ccbd14e9bf2f5b56d50f6085d08202d15ee2b3222 Contract declaration transaction: 0x0498dd3035e000f91c4f02af54e564a99e87e6a765525d92a4c112b0bc44cfc7 Class hash declared: 0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c where Class hash declared is the contract’s class hash, which can then be used to deploy an instance of it. Class hashes are unique per contract and compiler, and may change if either one changes. To learn more about the class hashes, check out Compiled class hash. With HelloStarknet declared, you can now deploy an instance of it by running: starkli deploy \\ 0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c \\ --rpc=http://127.0.0.1:5050 \\ --salt=0 The --salt option is used to force a consistent address for the deployed contract. and entering your password. If successful, the result should resemble the following: Deploying class 0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c with salt 0x0000000000000000000000000000000000000000000000000000000000000000... The contract will be deployed at address 0x02ceb6da76e2b2b80f2a23ff2910edf1dcc12e1b9d6a27d1da43d7db943e568c Contract deployment transaction: 0x068b5b84d03fd725433e93e406abdccc577fb49a7a7fa7c9013493c1d5ad9811 Contract deployed: 0x02ceb6da76e2b2b80f2a23ff2910edf1dcc12e1b9d6a27d1da43d7db943e568c Now that your instance of HelloStarknet is deployed, you can interact with via its functions. Starkli enables interaction with smart contracts via two primary commands, invoke and call. The call command is used for read functions that don’t modify their contract’s storage, and allows querying a smart contract function without sending a transaction. For example, you can call HelloStarknet's get_balance function by running: starkli call \\ 0x02ceb6da76e2b2b80f2a23ff2910edf1dcc12e1b9d6a27d1da43d7db943e568c \\ get_balance \\ --rpc=http://127.0.0.1:5050 If successful, the result should resemble the following: [ \"0x0000000000000000000000000000000000000000000000000000000000000000\" ] The invoke command is used for write functions that modify their contract’s storage, and submits a transaction to the network that changes its state. For example, you can invoke HelloStarknet's increase_balance function by running: starkli invoke \\ 0x02ceb6da76e2b2b80f2a23ff2910edf1dcc12e1b9d6a27d1da43d7db943e568c \\ increase_balance 42 \\ --rpc=http://127.0.0.1:5050 and entering your password. If successful, the result should resemble the following: Invoke transaction: 0x05be8823fc9b0c8605374d54f23f38badbd1b8ab4cbb680512cfde3f5662947b You can verify that the state of your local Starknet instance has indeed changed by calling get_balance again: starkli call \\ 0x02ceb6da76e2b2b80f2a23ff2910edf1dcc12e1b9d6a27d1da43d7db943e568c \\ get_balance \\ --rpc=http://127.0.0.1:5050 If all goes well, the result should resemble the following (4210 = 2a16): [ \"0x000000000000000000000000000000000000000000000000000000000000002a\" ]","title":"Declaring, deploying, and interacting with the HelloStarknet contract locally","component":"ROOT","version":"","name":"devnet","url":"/quick-start/devnet/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Initializing a local Starknet instance","hash":"initializing_a_local_starknet_instance","id":2},{"text":"Fetching a predeployed account","hash":"fetching_a_predeployed_account","id":3},{"text":"Declaring HelloStarknet locally","hash":"declaring_hellostarknet_locally","id":4},{"text":"Deploying HelloStarknet locally","hash":"deploying_hellostarknet_locally","id":5},{"text":"Interacting with HelloStarknet locally","hash":"interacting_with_hellostarknet_locally","id":6}]},"17":{"id":17,"text":"Welcome to the first installment of the \"Hello, Starknet!\" quistart series, the official tutorial for starting your journey as a Starknet developer! 🚀 As a popular phrase (often attributed to Abraham Lincoln) says, \"Give me six hours to chop down a tree, and I will spend the first four sharpening the axe\". The first installment of the series will therefore guide you through setting up your development environment, which will include the four most recommended tools to begin developing on Starknet: Scarb, a build toolchain and package manager for Cairo and Starknet ecosystems Starknet Foundry, the go-to framework for building and testing Starknet Smart Contracts Starknet Devnet, a Rust implementation of a local Starknet node Starkli, a command-line interface that allows you to interact with Starknet To review these tools in more detail, as well as all other Starknet developer tools, check out the Tooling section. Installing Scarb, Starknet Foundry, Starkent Devnet, and Starkli require Rust to be installed. You can verify that Rust is installed and up-to-date by running: rustc --version or install the latest Rust version by following the instructions in the Rust documentation. It is highly recommended to install Scarb, Starknet Foundry, and Starknet Devnet on MacOS and Linux via the asdf version manager, as it allows to easily switch between their different versions, both globally and per project (see full details in the asdf documentation or by running asdf --help). Procedure Verify that asdf is installed: asdf --version or install it by following the instructions in the asdf documentation. Install the asdf Scarb, Starknet Foundry, and Starknet Devnet plugins: asdf plugin add scarb asdf plugin add starknet-foundry asdf plugin add starknet-devnet Install the latest versions of Scarb, Starknet Foundry, and Starknet Devnet: asdf install scarb latest asdf install starknet-foundry latest asdf install starknet-devnet latest Set global versions for Scarb, Starknet Foundry, and Starknet Devnet: asdf global scarb latest asdf global starknet-foundry latest asdf global starknet-devnet latest Restart the terminal and verify that Scarb, Starknet Foundry, and Starknet Devnet are installed correctly: scarb --version snforge --version && sncast --version starknet-devnet --version Both Scarb’s, Starknet Foundry’s, and Starknet Devnet’s installations on Windows requires manual setup. Procedure Follow the instructions in the Scarb documentation, Starknet Foundry documentation, and Starknet Devnet documentation. Restart the terminal and verify that Scarb, Starknet Foundry, and Starknet Devnet are installed correctly: scarb --version snforge --version && sncast --version starknet-devnet --version It is highly recommended to install Starkli on MacOS and Linux using the starkliup portable script. starkliup manages shell configuration for you, and using any other installation method requires to manually set up shell completions. Procedure Download starkliup: curl https://get.starkli.sh | sh Restart the terminal and install Starkli: starkliup Restart the terminal and verify that Starkli is installed correctly: starkli --version Starknet Foundry’s installation on Windows requires manually setting up shell completions. Procedure Install Starkli: cargo install --locked --git https://github.com/xJonathanLEI/starkli Restart the terminal and verify that Starkli is installed correctly: starkli --version Set up Starkli’s shell completions by following the instructions in the Starkli documentation.","title":"Setting up your Starknet development environment","component":"ROOT","version":"","name":"environment-setup","url":"/quick-start/environment-setup/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Installing Rust","hash":"installing-rust","id":2},{"text":"Installing Scarb, Starknet Foundry, and Starknet Devnet","hash":"installing-scarb-and-snfoundry","id":3},{"text":"MacOS and Linux","hash":"macos_and_linux","id":4},{"text":"Windows","hash":"windows","id":5},{"text":"Installing Starkli","hash":"installing-starkli","id":6},{"text":"MacOS and Linux","hash":"macos_and_linux_2","id":7},{"text":"Windows","hash":"windows_2","id":8}]},"18":{"id":18,"text":"Welcome to the fifth and final installment of the \"Hello, Starknet!\" quickstart series, the official tutorial for starting your journey as a Starknet developer! 🚀 By now you’ve successfully declared, deployed, and interacted with the HelloStarknet, both on Starknet Sepolia and locally (way to go!). This last installment of the series will therefore list the various next steps you can take on your Starknet journey: If you’re interested in following more hands-on tutorials for Starknet, go to Starknet by Example If you’re interested in diving deep into Starknet’s inner workings, go to Architecture If you’re interested in exploring Starknet’s toolchain, go to Tooling If you’re interested in reviewing Starknet’s specifications, go to Release information Good luck! We can’t wait to see the new and innovative things you’ll bring to Starknet 🌟","title":"Recommended next steps on your Starknet journey","component":"ROOT","version":"","name":"next-steps","url":"/quick-start/next-steps/","titles":[]},"19":{"id":19,"text":"Welcome to the \"Hello, Starknet!\" quickstart series, the official tutorial for starting your journey as a Starknet developer! 🚀 This series will walk you though all the steps necessary to deploy your very own HelloStarknet contract, including: Setting up your Starknet development environment Compiling the HelloStarknet contract Declaring, deploying, and interacting with the HelloStarknet contract locally Deploying and interacting with the HelloStarknet contract on Starknet Sepolia Recommended next steps for your Starknet journey Good luck! We can already feel this this is the beginning of a beautiful friendship 🤜🤛","title":"\"Hello, Starknet!\" quickstart series overview","component":"ROOT","version":"","name":"overview","url":"/quick-start/overview/","titles":[]},"20":{"id":20,"text":"Welcome to the fourth installment of the \"Hello, Starknet!\" quickstart series, the official tutorial for starting your journey as a Starknet developer! 🚀 Starknet Sepolia is Starknet’s testnet environment designed to provide developers with a testing ground that mirrors the behavior of the Starknet Mainnet while being connected to the Ethereum Sepolia testnet, making it ideal for debugging and optimizing your code before deploying it to production. This installment of the series will therefore guide you through the steps necessary to deploy and interact with the HelloStarknet contract on Starknet Sepolia. Similar to interacting with a Starknet Devnet instance, to interact with Starknet Sepolia you first need an account. However, instead fetching a predeployed Sepolia account, we will create a new account and deploy a new Starkli ourselves. To learn how to fetch a predeployed Sepolia account, check out Troubleshooting. Creating a new Starkli account requires first creating a Starkli signer, which will again be an encrypted keystore signer. To create a new encrypted keystore signer, run: starkli signer keystore new keystore.json and enter a password that will be used to encrypt your private key. If successful, the result should resemble the following: Created new encrypted keystore file: keystore.json Public key: 0x03dfdb739fbd3ddab0f851bf1131079e31ca266c7af94f05cef4d9481f837509 To avoid specifying the keystore file in every subsequent Starkli command, export the keystore path by running: export STARKNET_KEYSTORE=$(pwd)/keystore.json Now that you have a Starkli signer, you can create a new account by running: starkli account oz init account.json oz stand for OpenZeppelin, which, along with Argent and Braavos, are the accounts variants supported by Starkli. The result should resemble the following: Created new account config file: account.json Once deployed, this account will be available at: 0x01cf4d57ba01109f018dec3ea079a38fc08b789e03de4df937ddb9e8a0ff853a Deploy this account by running: starkli account deploy account.json To avoid specifying the account file in every subsequent Starkli command, export the account path by running: export STARKNET_ACCOUNT=$(pwd)/account.json Finally, to deploy your account run: starkli account deploy account.json \\ --network=sepolia \\ --strk This command sends a DEPLOY_ACCOUNT transaction, which requires the account to contain enough STRK to pay for the transaction fee. When run, the command shows instructions on how to fund the account before proceeding, which can easily be done using the Starknet Sepolia faucet. If the account was funded and deployed successfully, the output of the deployment should resemble the following: The estimated account deployment fee is 0.000615910614837578 STRK. However, to avoid failure, fund at least: 0.001358626332416775 STRK to the following address: 0x01cf4d57ba01109f018dec3ea079a38fc08b789e03de4df937ddb9e8a0ff853a Press [ENTER] once you've funded the address. Waiting for transaction 0x06a9a08208084ac376f10657c745a3020362fa65e7730b13e08ec03d0cd7e59d to confirm. If this process is interrupted, you will need to run `starkli account fetch` to update the account file. Transaction not confirmed yet... Transaction 0x06a9a08208084ac376f10657c745a3020362fa65e7730b13e08ec03d0cd7e59d confirmed and you should be able to see the deployed account on one of Starknet Sepolia’s block explorers by searching for its address. Unlike when using a Starknet Devnet instance, there’s no need for us to declare HelloStarknet on Sepolia as it has already been declared before (remember: declaration is a one-time process for each unique contract code). To verify that, you can try declaring it by navigating into the hello_starknet directory created in Compiling the HelloStarknet contract, running: starkli declare \\ target/dev/hello_starknet_HelloStarknet.contract_class.json \\ --network=sepolia --strk and entering your password. The result should resemble to the following: Not declaring class as it's already declared. Class hash: 0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c With HelloStarknet already declared, you can deploy an instance of it by running: starkli deploy \\ 0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c \\ --network=sepolia \\ --strk and entering your password. If successful, the result should resemble the following: Deploying class 0x0785c92bf4aa7a89fb62371802aef2f58e2333d8df7e2aadf938efa83735431c with salt 0x07154f9d7e9602d3d3dd0034168be00f044ba15caf80b6fe09f6fef8f2568f57... The contract will be deployed at address 0x00ed474ec67f690901bcc56ee69491163c4203ededf473198e08c24fe2ab0a29 Contract deployment transaction: 0x066ccbbbdd2c3967620a039d7579bf5e03a5c15c77819d53a8b21dbdee705f8d Contract deployed: 0x00ed474ec67f690901bcc56ee69491163c4203ededf473198e08c24fe2ab0a29 and you should be able to see your deployed contract on one of Starknet Sepolia’s block explorers by searching for its contract address. Your deployed contract’s address will be different the than one listed above. Make sure to use the address of your own deployed contract when searching for it in a block explorer and interacting with it. Now that your instance of HelloStarknet is deployed, you can invoke its increase_balance function by running: starkli invoke \\ 0x00ed474ec67f690901bcc56ee69491163c4203ededf473198e08c24fe2ab0a29 \\ increase_balance 66 \\ --network=sepolia \\ --strk and entering your password. If successful, the result should resemble the following: Invoke transaction: 0x063b85d93491e678fe051952c39575c80ea397fa1be4076fe28616356d673595 and you should be able to see the INVOKE transaction on one of Starknet Sepolia’s block explorers by searching for its hash. Your transaction’s hash will be different the than one listed above. Make sure to use the hash of your own invoke transaction when searching for it in a block explorer. After the transaction’s status is changed to Accepted on L2, you can confirm that the state of Starknet Sepolia has indeed changed by calling your deployed contract’s get_balance function by running: starkli call \\ 0x00ed474ec67f690901bcc56ee69491163c4203ededf473198e08c24fe2ab0a29 \\ get_balance \\ --network=sepolia and entering your password. If all goes well, the result should resemble the following (6610 = 4216): [ \"0x0000000000000000000000000000000000000000000000000000000000000042\" ]","title":"Deploying and interacting with the HelloStarknet contract on Starknet Sepolia","component":"ROOT","version":"","name":"sepolia","url":"/quick-start/sepolia/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Deploying up a new Sepolia account","hash":"deploying_up_a_new_sepolia_account","id":2},{"text":"Deploying HelloStarknet on Sepolia","hash":"deploying_hellostarknet_on_sepolia","id":3},{"text":"Interacting with HelloStarknet on Sepolia","hash":"interacting_with_hellostarknet_on_sepolia","id":4}]},"21":{"id":21,"text":"Procedure Detect whether your shell is zsh or bash: echo $SHELL Add: . /Users//.starkli/env to either ~/.zshrc or ~/.bashrc. Restart the terminal, and run either: source ~/.zshrc or: source ~/.bashrc When using starkli declare, Starkli will do its best to identify the compiler version of the declared class. In case it fails, the --compiler-version flag can be used to specify the version of the compiler. Procedure Find the compiler versions supported by Starkli by running: starkli declare --help and looking for the possible values of the --compiler-version flag. Find the current Scarb version in use: scarb --version In case a different compiler version is required, switch to a different Scarb version using asdf: Install the desired Scarb version: asdf install scarb Select the desired Scarb version as the local version for the project: asdf local scarb Procedure Export the private key from your wallet by: For Argent wallets: navigating to Settings → → Export Private Key. For Braavos wallets: navigating to Settings → Privacy and Security → Export Private Key. Create a keystore file by running: starkli signer keystore from-key keystore.json and entering the private key of your smart wallet, along with a password that will be used to encrypt it. Fetch the account by running: starkli account fetch \\ \\ --output account.json --network=sepolia","title":"\"Hello, Starknet!\" quickstart tutorial troubleshooting","component":"ROOT","version":"","name":"troubleshooting","url":"/quick-start/troubleshooting/","titles":[{"text":"Setting up your environment","hash":"setting_up_your_environment","id":1},{"text":"Starkli unable to detect shell","hash":"starkli_unable_to_detect_shell","id":2},{"text":"Declaring, deploying, and interacting with HelloStarknet locally","hash":"declaring_deploying_and_interacting_with_hellostarknet_locally","id":3},{"text":"starkli declare unable to identify compiler version","hash":"starkli_declare_unable_to_identify_compiler_version","id":4},{"text":"Deploying and interacting with HelloStarknet on Sepolia","hash":"deploying_and_interacting_with_hellostarknet_on_sepolia","id":5},{"text":"Fetching a predeployed Sepolia account","hash":"fetching-a-predeployed-sepolia-account","id":6}]},"22":{"id":22,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Staking on Starknet is designed to enhance network security and decentralization by allowing users to stake their STRK tokens directly or delegate them to other validators. The architecture is modular, with different contracts handling specific responsibilities to ensure flexibility, security, and ease of upgrades. For more details on the staking architecture, visit the following link: Starknet Staking Repository. Staking is divided into several key components, each responsible for different aspects of the staking process. Table 1. Contracts of the Staking Architecture Contract Description Staking Contract The central contract that manages the staking process, which handles direct staking, rewards distribution, and interactions with delegation pools. Validators interact with this contract to stake their tokens, claim rewards, and initiate unstaking. Delegation Pooling Contract This contract manages the delegation process, allowing delegators to assign their tokens to a validator for staking. The contract is responsible for tracking each delegator’s share, calculating their rewards, and managing the delegation and unstaking processes. Reward Supplier Contract A dedicated contract that calculates and supplies the rewards for validators and delegators. It interfaces with the staking contract to distribute rewards based on the defined minting curve. Minting Curve Contract A contract responsible for implementing the minting curve logic that governs the reward distribution mechanism. It adjusts rewards dynamically based on the total staked amount and the overall supply of STRK tokens. The following data structures are stored within the contracts and play a crucial role in managing validators' and delegators' information within the staking protocol: Table 2. Key Structures in the Staking Architecture Structure Description StakerInfo Structure A data structure stored within the staking contract that holds detailed information about each validator, including their staked amount, unclaimed rewards, delegation details, and operational parameters. This structure ensures that validators' information is accurately tracked and updated. PoolMemberInfo Structure A data structure stored within the delegation pooling contract that holds information about each delegator’s contributions, rewards, and status within the pool. This structure helps manage and calculate the delegation and reward distribution processes for pool members. For more technical details, you can refer to the full staking specification document available in: Staking Repository Spec. The staking contract is the core of the staking system. It manages the entire lifecycle of staking, from initial staking to claiming rewards and unstaking. *Key Functions and Responsibilities *: stake: Allows users to stake their STRK tokens. increase_stake: Lets existing validators increase their stake. unstake_intent: Initiates the unstaking process, which can be finalized using unstake_action if sufficient time has passed. unstake_action: Finalizes the unstaking process after the waiting period, returning tokens to the validator address. claim_rewards: Allows users to claim rewards. The delegation pooling contract enables users to delegate their tokens. All interactions, such as entering or exiting the pool, are enabled through this contracts, which tracks each delegator’s contribution, calculates their rewards, and manages the delegation lifecycle. Key Functions and Responsibilities: enter_delegation_pool: Allows users to delegate their tokens to the pool associated with a validator. This function transfers the tokens, updates the delegator’s record, and integrates them into the validator’s pool. add_to_delegation_pool: Enables existing delegators to increase their delegation amount. The contract updates the pool’s total and recalculates the member’s rewards. exit_delegation_pool_intent: Initiates the process for a delegator to exit the pool. Similar to validators, the delegator’s funds are locked for a period before they can be withdrawn. exit_delegation_pool_action: Finalizes the exit process for a delegator, returning their tokens and any unclaimed rewards. switch_delegation_pool: Allows a delegator to transfer their delegated stake from one validator’s pool to another, facilitating dynamic delegation strategies. claim_rewards: Transfers the delegator’s earned rewards to their specified reward address. The reward supplier contract is responsible for calculating and supplying the staking rewards based on the minting curve. It ensures that the rewards are distributed fairly and in accordance with the protocol’s economic parameters. Key Functions and Responsibilities: calculate_staking_rewards: Computes the rewards based on the current staking rate and the minting curve, updating the staking contract with the amount to be distributed. claim_rewards: Handles the transfer of rewards to the staking contract, ensuring that the correct amount is distributed to validators and delegators. The minting curve contract defines the economic model that governs reward distribution. It ensures that the network’s inflation is managed while incentivizing participation in staking. Key Functions and Responsibilities: yearly_mint: Returns the amount of STRK tokens to be minted annually based on the current staking rate. This function uses a square root formula to balance rewards and inflation. update_total_supply: Updates the total supply of STRK tokens, ensuring that the minting calculations remain accurate. The staking architecture on Starknet is designed with security and upgradability in mind. Each contract is modular, allowing for targeted upgrades and improvements without affecting the entire system. Access control mechanisms are in place to ensure that only authorized parties can make critical changes, further enhancing the security of the staking process.","title":"Staking Architecture","component":"ROOT","version":"","name":"architecture","url":"/staking/architecture/","titles":[{"text":"Components of the Staking Architecture","hash":"components_of_the_staking_architecture","id":1},{"text":"Staking Contract","hash":"staking_contract","id":2},{"text":"Delegation Pooling Contract","hash":"delegation_pooling_contract","id":3},{"text":"Reward Supplier Contract","hash":"reward_supplier_contract","id":4},{"text":"Minting Curve Contract","hash":"minting_curve_contract","id":5},{"text":"Security and Upgradability","hash":"security_and_upgradability","id":6}]},"23":{"id":23,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Staking rewards on Starknet accumulate over time as your staked STRK tokens contribute to network security. To claim these rewards, you need to interact with the staking contract (if you are a validator) or the specific delegation pooling contract associated with the validator you have staked with (if you are a delegator) and execute the appropriate functions. Prerequisites The validator or delegator address must have an existing stake in the respective contract. The caller must be either the validator/delegator or their respective reward address. Procedure Using a Starknet block explorer, navigate to the appropriate contract: For validators: Navigate to the staking contract. For delegators: Navigate to the delegation pooling contract associated with the validator you have staked with. In the contract interface, locate and select the claim_rewards function. Enter the following parameters: In staker_address or pool_member, enter the address of the validator or delegator for whom you are claiming the rewards. Submit the transaction to initiate the rewards claim. Ensure that the address entered is either the validator’s or delegator’s main address or their respective reward address. If the address is not authorized, the function will fail. Once the transaction is successful, the rewards will be transferred to the designated reward address associated with the staked tokens.","title":"Claiming Rewards","component":"ROOT","version":"","name":"claiming-rewards","url":"/staking/claiming-rewards/","titles":[]},"24":{"id":24,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Delegating your stake on Starknet involves adding your stake to a validator’s delegation pool managed by the staking contract. This approach offers the advantage of lower capital requirements and relieves you of the need to manage the operational aspects of staking, as the validator handles these responsibilities. The delegation process includes joining a validator’s delegation pool by interacting with the enter_delegation_pool function. Procedure Pre-approve the delegation pooling contract associated with the validator for the transfer of the requested amount of STRK tokens from your address. Using a Starknet block explorer, navigate to the delegation pooling contract associated with the validator you want to delegate to. In the contract interface, locate and select the enter_delegation_pool function. Enter the following parameters: In amount, enter the number of STRK tokens you want to delegate to the validator. In reward_address, enter the address where you wish to receive your staking rewards. Submit the transaction to join the delegation pool. Upon successful execution, your STRK tokens will be added to the validator’s delegation pool, and you will begin earning rewards as part of the pooled staking process.","title":"Delegating Stake","component":"ROOT","version":"","name":"delegating-stake","url":"/staking/delegating-stake/","titles":[]},"25":{"id":25,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Using the Starknet staking contract to stake STRK tokens requires interacting with the stake function. The stake function does the following: Locks the specified amount of STRK tokens from the validator’s account into the staking contract. Records the validator’s details, including reward and operational addresses, in the staking contract. If pooling is enabled, deploys a new delegation pool contract associated with the validator. Subsequently, the validator’s tokens will be locked in the staking contract, and the validator will begin earning rewards based on their stake. For more information on what happens during the staking process, see Staking Architecture. Prerequisites Validators are required to run full nodes in preparation for the following stages of the protocol. You can use any full node implementation you choose: Juno by Nethermind: juno.nethermind.io/hardware-requirements Pathfinder by Equilibrium: github.com/eqlabs/pathfinder?tab=readme-ov-file#hardware-requirements Madara by Madara Alliance: docs.madara.build/Installation/requirements A Starknet-compatible block explorer or CLI tool. Sufficient STRK token balance in your wallet. For validators who wish to use a secure hardware wallet, the Ledger hardware wallet is supported by both Argent and Braavos wallets. Procedure If you are using a block explorer: Navigate to the STRK contract by searching for its address In the contract interface, locate and select the approve function. Pre-approve the STRK ERC20 contract for the transfer of tokens from your address to the staking contract by invoking its approve function with the following parameters: In the first parameter (spender), enter the staking contract’s address. In the second parameter (amount), enter the number of STRK tokens you want to stake (note the minimum stake for validators and that STRK has 18 decimals). If you using Starkli as CLI tool, the following example, which approves the STRK contract to transfer 1 STRK to the staking contract on Sepolia, can be used as reference: starkli invoke 0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d approve \\ 0x03745ab04a431fc02871a139be6b93d9260b0ff3e779ad9c8b377183b23109f1 u256:1000000000000000000 \\ --network=sepolia If you are using a block explorer: Navigate to the staking contract by searching for its address. In the contract interface, locate and select the stake function. Invoke the staking contract’s stake function with the following parameters: In the first parameter (reward_address), enter the address where the rewards will be sent. In the second parameter (operational_address), enter the address that in the future will be used for block attestations and sequencing. In the third parameter (amount), enter the number of STRK tokens you want to stake (note the minimum stake for validators and that STRK has 18 decimals). In the fourth parameter (pool_enabled), enter 1 (true) if you wish to enable delegation pooling, otherwise enter 0 (false). In the fifth parameter (commission), enter the commission rate for any delegated staking. The rate should be entered as a percentage with precision, where 10000 represents 100%. For example, to set a 5% commission, you would enter 500. If you are using Starkli as CLI tool, the following example, which stakes 1 STRK with delegation pooling enabled and 1% commission on Sepolia, can be used as reference: starkli invoke 0x03745ab04a431fc02871a139be6b93d9260b0ff3e779ad9c8b377183b23109f1 stake \\ 1000000000000000000 1 100 \\ --network=sepolia Register your validator on Karnot’s, Staking Rewards', and Voyager’s dashboards.","title":"Becoming a Validator","component":"ROOT","version":"","name":"entering-staking","url":"/staking/entering-staking/","titles":[]},"26":{"id":26,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Exiting the staking protocol involves either unstaking your STRK tokens as a validator or undelegating your stake as a delegator. Both processes require you to first signal your intent to exit, followed by an action to finalize the process after a waiting period. Validators can unstake their STRK tokens, which involves pausing rewards and exiting the staking contract. Prerequisites The validator must not currently be in the unstake process. Procedure Signal Unstake Intent: Using a Starknet block explorer, navigate to the staking contract. In the contract interface, locate and select the unstake_intent function. Submit the transaction to initiate the unstake process. This will record the unstake intent, pause rewards collection, and set a waiting period. Finalize Unstake: After the waiting period has passed, return to the staking contract. In the contract interface, locate and select the unstake_action function. Enter the following parameters: In staker_address, enter the validator’s address. Submit the transaction to finalize the unstaking process and transfer the staked STRK tokens back to the validator’s account. Any address can initiate the unstake_action function once the waiting period has passed. Ensure that enough time has passed since signaling your unstake intent. If the waiting period has not expired, the unstake_action function will fail. Delegators can undelegate part or all of their stake from a validator’s delegation pool by following a similar process. The amount parameter determines how much of the stake will be undelegated, and it must be less than or equal to the total delegated amount. Prerequisites A Starknet-compatible block explorer or CLI tool. The delegator must not currently be in the undelegation process. The contract address of the delegation pooling contract. Procedure Signal Undelegation Intent: Using a Starknet block explorer, navigate to the delegation pooling contract. In the contract interface, locate and select the exit_delegation_pool_intent function. Enter the amount parameter, which determines the size of the undelegation. The amount must be less than or equal to your total delegated amount. Submit the transaction to initiate the undelegation process. This will record the undelegation intent for the specified amount, pause rewards collection, and set a waiting period. Finalize Undelegation: After the waiting period has passed, return to the delegation pooling contract. In the contract interface, locate and select the exit_delegation_pool_action function. Enter the following parameters: In pool_member, enter the delegator’s address. Submit the transaction to finalize the undelegation process and transfer the undelegated STRK tokens (based on the amount previously specified) back to the delegator’s account. Any address can initiate the exit_delegation_pool_action function once the waiting period has passed. Ensure that enough time has passed since signaling your undelegation intent. If the waiting period has not expired, the exit_delegation_pool_action function will fail. Additionally, ensure the amount provided in the initial intent matches the intended undelegation size. When a validator unstakes, any unclaimed rewards are automatically transferred to the reward address before the stake is returned. Similarly, when a delegator undelegates, any unclaimed rewards are automatically transferred to the delegator’s reward address. For more details on the staking and delegation processes, see Staking Contract Architecture.","title":"Exiting the Staking Protocol","component":"ROOT","version":"","name":"exiting-staking","url":"/staking/exiting-staking/","titles":[{"text":"Unstaking as a Validator","hash":"unstaking_as_a_validator","id":1},{"text":"Undelegating as a Delegator","hash":"undelegating_as_a_delegator","id":2},{"text":"Additional Notes","hash":"additional_notes","id":3}]},"27":{"id":27,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 The staking and pooling contracts allow validators and delegators to increase their existing stake. Validators use the increase_stake function, which is called from the Staking contract, while delegators use the add_to_delegation_pool function, which is called from the delegation pooling contract. These functions add the specified amount of STRK tokens to the current stake, recalculate rewards before the staked amount is updated, and update the total staked amount. Prerequisites Sufficient STRK token balance in your Starknet wallet. The caller must be either the validator/delegator or their respective reward address. Procedure Pre-approve the STRK ERC20 contract for the transfer of tokens from your address to the relevant contract: Validators: Pre-approve the staking contract for the transfer of tokens from your address. Delegators: Pre-approve the delegation pooling contract for the transfer of tokens from your address. Using a Starknet block explorer, navigate to the relevant contract (Staking contract for validators, delegation pooling contract for delegators). In the contract interface, locate and select the increase_stake function (for validators) or the add_to_delegation_pool function (for delegators). Enter the following parameters: In address, enter the address of the validator (for increase_stake) or the delegator (for add_to_delegation_pool) whose stake you want to increase. This can be either the validator’s/delegator’s address or their respective reward address. In amount, enter the number of STRK tokens you want to add to the existing stake. Submit the transaction to execute the stake increase. Ensure that the validator is not in an unstake process before attempting to increase the stake. If they are currently unstaking, this function will fail.","title":"Increasing Stake","component":"ROOT","version":"","name":"increasing-staking","url":"/staking/increasing-staking/","titles":[]},"28":{"id":28,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 This guide outlines how both validators and delegators can manage various aspects of their staking and delegation activities on Starknet. Validators can perform operations such as opening delegation pools and updating commission rates. Delegators can manage their participation by changing their reward addresses associated with delegation pools. Validators have several functions available to effectively manage their staking and delegation settings. Prerequisites An existing stake in the staking contract. An existing delegation pool if updating pool-specific settings. If a validator does not yet have a delegation pool, they can open one by calling the set_open_for_delegation function. Procedure Using a Starknet block explorer, navigate to the staking contract. In the contract interface, locate and select the set_open_for_delegation function. Enter the following parameter: commission: Enter the commission rate for the delegation pool, expressed as a percentage with precision (where 10000 represents 100%). For example, to set a 5% commission, enter 500. Submit the transaction to create the delegation pool. Once created, the delegation pool will be associated with the validator’s staking contract, allowing delegators to delegate their stake to the validator. Validators can update the commission rate of their delegation pool using the update_commission function. Note: The commission rate can only be decreased or kept the same; it cannot be increased. Procedure Using a Starknet block explorer, navigate to the staking contract. In the contract interface, locate and select the update_commission function. Enter the following parameter: commission: Enter the new commission rate, which must be equal to or less than the current rate, expressed as a percentage with precision (where 10000 represents 100%). For example, to set a 5% commission, enter 500. Submit the transaction to update the commission rate. Both validators and delegators can update their associated addresses within their staking and delegation contracts. This section outlines how to change the reward and operational addresses. Validators can update their operational address using the change_operational_address function. Procedure Using a Starknet block explorer, navigate to the Staking contract. Declare the new operational address: In the contract interface, locate and select the declare_operational_address function. Enter the following parameter: staker_address: Enter the your Staker address. Submit the transaction using your new operational address. Update the existing operational address: In the contract interface, locate and select the change_operational_address. Enter the following parameter: operational_address: Enter the new operational address. Submit the transaction (using your regular staker address). Both validators and delegators can update their reward address using the change_reward_address function. Procedure Using a Starknet block explorer, navigate to the appropriate contract: For validators: Navigate to the staking contract. For delegators: Navigate to the delegation pooling contract. In the contract interface, locate and select the change_reward_address function. Enter the following parameter: reward_address: Enter the new reward address. Submit the transaction to update the reward address. For more information on how the staking and delegation pooling systems work, refer to the Staking Contract Architecture.","title":"Managing Staking and Delegation Operations","component":"ROOT","version":"","name":"managing-staking-and-delegation-operations","url":"/staking/managing-staking-and-delegation-operations/","titles":[{"text":"Managing Staking Operations as a Validator","hash":"managing_staking_operations_as_a_validator","id":1},{"text":"Opening a Delegation Pool","hash":"opening_a_delegation_pool","id":2},{"text":"Updating Commission Rate","hash":"updating_commission_rate","id":3},{"text":"Address Management","hash":"address_management","id":4},{"text":"Changing the Operational address (Validators)","hash":"changing_the_operational_address_validators","id":5},{"text":"Changing the Reward Address (Validators and Delegators)","hash":"changing_the_reward_address_validators_and_delegators","id":6},{"text":"Additional Information","hash":"additional_information","id":7}]},"29":{"id":29,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Staking on Starknet involves locking STRK tokens in the staking protocol, contributing to network security and performance. Anyone holding STRK in their wallets can stake their tokens on Starknet either directly or by delegating their tokens to others, with rewards based on their level of participation and contribution. Stake: Locking STRK tokens into the staking protocol. Delegate: Assigning STRK tokens to a validator to participate indirectly. Reward: Earnings from participating in staking. Staking page on starknet.io starknet-staking Github repository (deployed tag) Staking dashboards: Voyager Staking Rewards Endur In the future, validators will be responsible for maintaining and securing the network by producing, attesting, and proving blocks, as part of Starknet’s consensus protocol. However, handing over these responsibilities all in one day is neither feasible nor desirable. Instead, the first stage of staking on Starknet will only require validators to run full nodes and test the protocol’s economic incentive structure and some of its key smart contract components. In the first phase of staking on Starknet, validators are required to run a full node in preparation for future staking phases Over time, validators' responsibilities will gradually increase, with each phase bringing additional tasks until validators fully maintain and secure the network. This incremental approach is necessary, as it allows for the following: Gradual implementation: introducing features in small and manageable milestones, ensuring each step is carefully implemented and easily integrated, and allowing to refine the process and address issues as they arise Validators preparation: giving validators time to adapt to their new responsibilities and critical roles, maximizing the network’s stability during the transition Proven reliability: having a proven set of sequencers that reliably produce and attest to blocks by the time validators perform their full responsibilities, cementifying the network’s decentralization The staking protocol features two main options: Staking: Users can stake any amount of STRK, with a minimum threshold set at 20,000 STRK. Validators are expected to run full nodes and eventually handle additional responsibilities as the protocol evolves. Validators can choose whether to allow delegation. Stake Delegation: Users can delegate their STRK to validators without running their own nodes, if the validator allows delegation. Delegators share in the rewards earned by the validators they choose. Validators and delegators can both unstake their funds, subject to network-defined latencies for security. The minting curve balances participation and inflation by adjusting rewards based on the total STRK locked in the protocol. It is defined by the formula: \\[M = \\frac{C}{10} \\times \\sqrt{S}\\] where: \\(S\\) is the staking rate as a percentage of the total token supply \\(M\\) is the annual minting rate as a percentage of the total token supply \\(C\\) is the maximum theoretical inflation percentage For the first stage, \\(C\\) is proposed to be 1.6%. Rewards are distributed based on the amount staked and the commission policy constant \\(CP\\) set by the validator. The yearly reward percentages are calculated using the following formulas: \\[\\begin{align} \\text{Validators: } & \\; \\left[\\text{self_stake} + \\text{total_stake_delegated} \\times CP\\right] \\times \\frac{M}{S} \\\\ \\text{Stake Delegators: } & \\; \\text{stake_delegated} \\times (1 - CP) \\times \\frac{M}{S} \\end{align}\\] where \\(M\\) and \\(S\\) are the same as described in the minting curve section. Current version: Immediate entry and exit from the staking protocol. However, funds are subject to a 21-day security lockup after signaling unstake intent. Future versions: Introduction of epochs to determine entry/exit latencies and continued 21-day lockup after signaling unstake intent. Stake delegators can switch between validators without waiting for the full lockup period, promoting a competitive delegation market. Mainnet 0xCa1406D57eD09947E68DE121316C87113fBE9ff5 Sepolia 0xE58d25681B9d290D60e4d7f379a05d5BFD973fFB Mainnet 0xCa14076A3cec95448BaD179cc19B351A4204B88B Sepolia 0x648D1B35a932F5189e7ff97b2F795E03734DE4ce Mainnet 0x009035556d1ee136e7722ae4e78f92828553a45eed3bc9b2aba90788ec2ca112 Sepolia 0x02ebbebb8ceb2e07f30a5088f5849afd4f908f04f3f9c97c694e5d83d2a7cc61 Mainnet 0x00ca1705e74233131dbcdee7f1b8d2926bf262168c7df339004b3f46015b6984 Sepolia 0x0351c67dc2d4653cbe457be59a035f80ff1e6f6939118dad1b7a94317a51a454 Mainnet 0x00ca1702e64c81d9a07b86bd2c540188d92a2c73cf5cc0e508d949015e7e84a7 Sepolia 0x03745ab04a431fc02871a139be6b93d9260b0ff3e779ad9c8b377183b23109f1 Parameter Mainnet Sepolia Minimum stake for validators 20K STRK 1 STRK Withdrawal security lockup 21 days 5 minutes Minting curve yearly inflation cap (\\(C\\)) 1.6 1.6 For developers who wish to dive deep, the index update interval parameter is set to a minimum of 1 minute in Starknet Sepolia and 30 minutes in Starknet mainnet.","title":"Staking Overview","component":"ROOT","version":"","name":"overview","url":"/staking/overview/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Key terms","hash":"key_terms","id":2},{"text":"Important links","hash":"important-links","id":3},{"text":"First stage","hash":"first_stage","id":4},{"text":"Protocol details","hash":"protocol_details","id":5},{"text":"Overview","hash":"overview","id":6},{"text":"Minting curve","hash":"minting-curve","id":7},{"text":"Staking rewards","hash":"staking_rewards","id":8},{"text":"Latencies","hash":"latencies","id":9},{"text":"Contract addresses","hash":"contract-addresses","id":10},{"text":"L1 addresses","hash":"l1_addresses","id":11},{"text":"Reward supplier contract","hash":"reward_supplier_contract","id":12},{"text":"Mint manager contract","hash":"mint_manager_contract","id":13},{"text":"L2 addresses","hash":"l2_addresses","id":14},{"text":"Reward supplier contract","hash":"reward_supplier_contract_2","id":15},{"text":"Minting curve contract","hash":"minting_curve_contract","id":16},{"text":"Staking contract","hash":"staking_contract","id":17},{"text":"Economic parameters","hash":"economic_parameters","id":18}]},"30":{"id":30,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Staking events provide critical information about changes in the staking process, such as balance updates, delegation pool creation, and exit intents. Read functions allow you to query important staking details. For a complete list of events and read functions, including keys and data, please refer to the official Starknet staking repository (Starknet Staking Repo) and the spec file (spec.md). Staking events provide a way to track the state and actions of the staking process in real time. The following are the relevant events: StakeBalanceChanged: Emitted when a staker’s balance changes, either through direct staking or delegation. NewDelegationPool: Emitted when a new delegation pool is created by a validator, marking the pool’s deployment. StakerExitIntent: Emitted when a staker signals their intent to unstake, setting a future timestamp for exit. StakerRewardAddressChanged: Emitted when a staker changes their reward address. OperationalAddressChanged: Emitted when a staker changes their operational address. GlobalIndexUpdated: Emitted when the global index used to calculate staking rewards is updated. NewStaker: Emitted when a new staker joins the protocol and locks their tokens in the staking contract. CommissionChanged: Emitted when a validator updates the commission rate for their delegation pool. StakerRewardClaimed: Emitted when a staker or delegation pool claims their rewards. DeleteStaker: Emitted when a staker is removed from the protocol. RewardsSuppliedToDelegationPool: Emitted when rewards are supplied to a validator’s delegation pool. Paused: Emitted when the staking contract is paused. Unpaused: Emitted when the staking contract is unpaused. These events help to track changes and facilitate automations or actions based on the state of the staking contract. These read functions allow you to query essential information from the staking contract. Use these functions to retrieve details about stakers, staking parameters, and the total amount staked. Procedure Using a Starknet block explorer, navigate to the staking. In the contract interface, locate and select the relevant read function. Enter the required parameters (if applicable). Submit the query to retrieve the requested information. The following read functions are available: state_of: Retrieves the staking details of a given staker, including their balance and reward address. Enter the following parameter: staker_address - The address of the staker whose details you want to query. contract_parameters: Retrieves the parameters of the staking contract, including the minimum stake amount and the reward supplier contract. get_total_stake: Returns the total amount of STRK tokens currently staked in the protocol. is_paused: Checks whether the staking contract is currently paused.","title":"Staking Events and Read Functions","component":"ROOT","version":"","name":"staking-events-and-read-functions","url":"/staking/staking-events-and-read-functions/","titles":[{"text":"Staking Events","hash":"staking_events","id":1},{"text":"Read Functions","hash":"read_functions","id":2}]},"31":{"id":31,"text":"The first ever Starknet validator survey is now live! Make your voice heard and help improve Starknet and its ecosystem together 🤜🤛 Switching your delegated stake from one validator’s delegation pool to another allows you to optimize your staking strategy by moving your funds to a different validator. This process involves interacting with the switch_delegation_pool function in the delegation pooling contract, which coordinates with the staking contract to move your stake. Prerequisites An existing delegation in a validator’s pool with a STRK token balance equal to or greater than the amount you wish to switch. The delegator must have initiated an undelegation process before attempting to switch pools. The target validator must have an active delegation pool associated with their staking contract. Procedure Using a Starknet block explorer, navigate to the delegation pooling contract associated with the validator from whose pool you wish to switch. In the contract interface, locate and select the switch_delegation_pool function. Enter the following parameters: In to_staker, enter the address of the validator whose pool you want to switch to. In to_pool, enter the address of the target delegation pooling contract associated with the new validator. In amount, enter the number of STRK tokens you want to move to the new delegation pool. Submit the transaction to execute the delegation pool switch. Ensure that you have initiated the undelegation process before attempting to switch pools. If the undelegation intent has not been set, this function will fail. Upon successfully switching pools, any unclaimed rewards from your previous delegation pool will be transferred to your designated reward address. Your subsequent rewards will be based on the performance of the new validator’s delegation pool. For more details on the staking architecture and how delegation pools work, see Staking Contract Architecture.","title":"Switching Delegation Pools","component":"ROOT","version":"","name":"switching-delegation-pools","url":"/staking/switching-delegation-pools/","titles":[]},"32":{"id":32,"text":"StarkGate supports permissionless bridging. Want to learn how to enroll a token bridge on StarkGate? Check out this Community Guide. enrollTokenBridge in the StarkGate function reference StarkGate architecture","title":"Adding a token to StarkGate","component":"ROOT","version":"","name":"adding-a-token","url":"/starkgate/adding-a-token/","titles":[{"text":"Additional resources","hash":"additional_resources","id":1}]},"33":{"id":33,"text":"While StarkGate is referred to as a bridge, technically, each supported token has its own bridge, each of which is defined in a corresponding pair of L1 and L2 contracts, as described in Components of a bridge for an individual token. Table 1. Components of a bridge for an individual token L1 ERC-20 contract that defines the token on Ethereum. This contract must exist before you can bridge it. Bridge functionality for ERC-20 tokens is supported in StarknetTokenBridge.sol. L2 StarkGate Cairo bridge contract instance of the token_bridge.cairo contract class. ERC-20 Cairo token contract instance of a standard ERC-20 Cairo token contract class. Each new contract uses the hash of this class to define its inheritance. StarkGate creates this contract automatically when creating the bridge in StarkGate. StarkGate 2.0 provides a contract that enables seamless backward compatibility with the previous version of StarkGate. When you update the code in your contract, make sure that you use the most up-to-date versions of all StarkGate contracts. You can check if a token is currently supported with the L1 function getBridge. You can permissionlessly add support for ERC-20 tokens to the multi-token bridge using the enrollTokenBridge function. StarkGate includes the following administration components: The StarkGate Manager is responsible for adding bridges The StarkGate Registry contains the addresses to all supported bridges enables a bridge developer to stop servicing an existing bridge All token bridges that existed prior to StarkGate 2.0 (Mainnet: January 2024) besides supporting all StarkGate 2.0 functionality, are backward compatible. Each token was bridged with a unique, custom pair of L1 and L2 bridge contracts. The L1 bridge is an instance of LegacyBridge.sol, and the L2 bridge is an instance of legacy_bridge_eic.cairo. L1 ERC-20 contract address: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 L2 ERC-20 contract address: 0x053c91253bc9682c04929ca02ed00b3e423f6710d2ee7e0d5ebb06f3ecf368a8 L1 bridge contract address: 0xF6080D9fbEEbcd44D89aFfBFd42F098cbFf92816 L2 bridge contract address: 0x05cd48fccbfd8aa2773fe22c217e808319ffcc1c5a6a463f7d8fa2da48218196 Consider the deposit functions for the L1 bridge contract for USDC on Etherscan: 0xf6080d9fbeebcd44d89affbfd42f098cbff92816#writeProxyContract This contract has the following two deposit functions: deposit (0x0efe6a8b) and deposit (0xe2bbb158), which shows that the bridge includes support for the legacy functionality as well as the modern functionality: deposit (0x0efe6a8b) The StarkGate 2.0 contract, which includes support for all tokens within a single contract, requiring that you enter the address of the token in the deposit function. deposit (0xe2bbb158) The legacy contract, which is labeled Support Legacy ABI. This function does not include the token (address) parameter, because the contract that contains this function only supports USDC. Therefore, the address of the token is superfluous. The following tokens have legacy contracts as well as StarkGate 2.0 contracts: Starknet Token (STRK) Starknet Voting Token (vSTRK) Wrapped BTC (WBTC) USD Coin (USDC) Tether USD (USDT) Ether (ETH) Dai Stablecoin (DAI) Dai Stablecoin (DAI) (Dai v0) Wrapped liquid staked Ether 2.0 (wstETH) Rocket Pool ETH (rETH) R Stablecoin (R) Frax (FRAX) Frax Share (FXS) Staked Frax Ether (sfrxETH) LUSD Stablecoin (LUSD) Uniswap (UNI) For complete details, see the bridged_tokens directory on GitHub. By default, StarkGate imposes no limit on withdrawals. However, in order to mitigate risks associated with critical vulnerabilities that could result in the loss of user funds, StarkGate can enable a withdrawal limit. If a serious security issue arises, the security agent in the StarkGate contract can limit withdrawals to 5% of the Total Value Locked (TVL) per day for any affected token by calling the setWithdrawLimitPCT() function in the WithdrawalLimit.sol contract. A dedicated team can then investigate and resolve the issue. Only a security admin quorum can disable the withdrawal limit. The quorum will consist of Starknet Foundation members, Starknet ecosystem contributors, and StarkWare representatives. This diverse group will ensure that decisions reflect the Starknet community’s broad interests. This approach, blending manual oversight with automated detection, aims to minimize potential losses. Adding a token to StarkGate The StarkGate function reference. Lists functions exposed by the Registry, Manager, and the bridge itself, including: getBridge enrollTokenBridge L1 contracts on GitHub L2 contracts on GitHub","title":"StarkGate architecture","component":"ROOT","version":"","name":"architecture","url":"/starkgate/architecture/","titles":[{"text":"The StarkGate Manager and Registry","hash":"StarkGate_manager_and_registry","id":1},{"text":"Legacy bridges","hash":"legacy_bridge","id":2},{"text":"Example: USDC contracts","hash":"example","id":3},{"text":"List of legacy bridges","hash":"legacy_bridges","id":4},{"text":"Withdrawal limit","hash":"stark_gate_withdrawal_limit","id":5},{"text":"Additional resources","hash":"additional_resources","id":6}]},"34":{"id":34,"text":"A Smart Deposit is a deposit that moves funds from L1 to L2 and then triggers subsequent actions. For example, a user can deposit funds and transfer those funds to another recipient, such as an exchange. The depositWithMessage function enables a Smart Deposit. depositWithMessage is similar to the deposit function, with an additional 256-bit message, which can contain instructions for executing additional actions. Upon completion, the depositWithMessage function triggers a call to a callback function, named on_receive, on the L2 contract that receives the deposit. The on_receive function receives the deposit message as input. on_receive must return true for the deposit to succeed. If on_receive returns false, or if the recipient contract does not include the on_receive function, the depositWithMessage function’s L1 handler fails. The user can recover their funds using the depositWithMessageCancelRequest function. To enable Smart Deposits in your application: Implement the on_receive function in the L2 contract that should receive deposits. Use the depositWithMessage function to transfer funds from L1 to L2. depositWithMessageCancelRequest depositWithMessage depositWithMessageReclaim L1 handler","title":"Performing a Smart Deposit","component":"ROOT","version":"","name":"automated-actions-with-bridging","url":"/starkgate/automated-actions-with-bridging/","titles":[{"text":"Additional resources","hash":"additional_resources","id":1}]},"35":{"id":35,"text":"To ensure self-custody, StarkGate enables you to cancel a deposit if, after depositing funds with the deposit function on L1, you don’t see your funds appear on L2 within a reasonable amount of time. You can only cancel a deposit that you yourself deposited. In order to guard against an attack, it takes approximately five days to cancel a deposit. From the moment StarkGate receives the cancellation request, a counter begins. When exactly five days have passed, and the funds still do not appear on L2, you can reclaim the deposit. Procedure To cancel a deposit, call the depositCancelRequest request function. When StarkGate receives the cancellation request, a counter begins to count five days. When exactly five days have passed, and the funds still do not appear on L2, you can reclaim the deposit by calling depositReclaim. As long as the depositReclaim was not performed, the deposit may be processed, even if the cancellation delay time has already passed. Only the depositor is allowed to cancel a deposit, and only before depositReclaim was performed. depositCancelRequest in the StarkGate function reference. depositReclaim in the StarkGate function reference.","title":"Cancelling a deposit","component":"ROOT","version":"","name":"cancelling-a-deposit","url":"/starkgate/cancelling-a-deposit/","titles":[{"text":"Additional resources","hash":"additional_resources","id":1}]},"36":{"id":36,"text":"Using StarkGate to deposit L1 funds into the L2 Starknet requires StarkGate’s deposit function. The deposit function does the following: Transfers the funds from the user’s Ethereum account to the StarkGate L1 contract. Emits a Deposit event that includes the L1 and L2 addresses of the user, and the amount deposited. Sends a message to the corresponding L2 bridge with the amount deposited, and the recipient’s address. Subsequently, the funds should be transferred to Starknet so that you can begin using them. For more information on what happens during the transfer process, see L1→L2 transfer (deposit). Prerequisites An Ethereum block explorer, such as Etherscan. Funds to transfer from L1 to L2, including enough to pay the fees required for the transfer. The L1 address of the StarkGate bridge for the token you want to deposit. To view the token addresses for tokens on Mainnet or Sepolia testnet, see Bridged tokens and addresses. Procedure Using an Ethereum block explorer, go to the StarkGate contract and click Write as Proxy. For example, using Etherscan, go to 0xae0ee0a63a2ce6baeeffe56e7714fb4efe48d419 Click the StarkGate 2.0 deposit function (0x0efe6a8b). Enter the following: In payableAmount, enter the maximum amount of ETH that you’re willing to pay for the deposit transaction fee. In token (address), enter the address of the L1 contract for the token that you want to deposit to L2. In amount (uint256), enter an integer for the amount of the token that you want to deposit to L2. In l2Recipient (uint256), enter the address of the recipient on L2. Click Write. The deposit function initiates a deposit.","title":"Depositing funds with StarkGate","component":"ROOT","version":"","name":"depositing","url":"/starkgate/depositing/","titles":[]},"37":{"id":37,"text":"StarkGate enforces a minimum fee for all transactions to account for the L1 → L2 message costs. For more information, see L1 → L2 message fees. You can estimate the fee using the following L1 functions: estimateDepositFeeWei Estimates the fee for a deposit transaction. estimateEnrollmentFeeWei Estimates the fee for an enrollment transaction. Additional resources estimateDepositFeeWei estimateEnrollmentFeeWei","title":"Estimating StarkGate fees","component":"ROOT","version":"","name":"estimating-fees","url":"/starkgate/estimating-fees/","titles":[]},"38":{"id":38,"text":"The StarkGate smart contracts include functions that you use to implement various flows in a dApp. For information on the movement of funds between Ethereum and Starknet, see StarkGate bridge overview. StarkGate 2.0 provides a contract that enables seamless backward compatibility with the previous version of StarkGate. When you update the code in your contract, make sure that you use the most up-to-date versions of all StarkGate contracts. The L1 functions and their interfaces, where available, are defined in the following smart contracts: Contract Name Functions StarkgateManager.sol The StarkGate Manager. Use the Manager to enroll a new token. An interface is available through IStarkgateManager.sol. enrollTokenBridge StarkgateRegistry.sol The StarkGate Registry. Use the Registry to view the addresses of existing bridges and to stop servicing a specific token. An interface is available through IStarkgateRegistry.sol. getBridge getWithdrawalBridges StarknetTokenBridge.sol The primary StarkGate bridge contract. The functions and events in this reference that provide the main user bridge functionality are defined in this contract. deposit depositCancelRequest depositReclaim depositWithMessage depositWithMessageCancelRequest depositWithMessageReclaim getStatus withdraw IStarkgateService.sol An interface to check if a contract is servicing a token. isServicingToken The L2 functions and their interfaces, where available, are defined in the following smart contracts: Contract Description Functions token_bridge.cairo The StarkGate bridge implementation on L2. This contract includes the standard functions for a token bridge. An interface is available through token_bridge_interface.cairo. get_erc20_class_hash get_identity get_l1_token get_l2_token get_remaining_withdrawal_quota get_version initiate_token_withdraw on_receive Functions are listed in alphabetical order. Deposits the specified amount of an ERC-20 token to the L1 StarkGate bridge contract. The deposit function does the following: Transfers the funds from the caller’s account to the Starknet bridge contract Emits the Deposit event with the sender’s address on L1, the recipient’s address on L2, and the amount external payable address token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 l2Recipient The L2 address of the recipient. None. Deposit Event attributes address indexed sender The L1 address of the account that sent the deposit. address indexed token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 indexed l2Recipient The L2 address of the recipient. The L2 address of the recipient. uint256 nonce The nonce for the L1 transaction. uint256 fee The Starknet fee sent with the transaction. Contract: StarknetTokenBridge.sol Function: deposit Event: Deposit Sends a request to StarkGate to cancel a deposit. You can send a cancellation request if the funds you transfer from L1 to L2 do not appear on L2 within a reasonable amount of time. In order to guard against an attack on Starknet, it takes approximately five days to cancel a deposit. When StarkGate receives the cancellation request, a counter begins. When exactly five days have passed, and the funds still do not appear on L2, you can reclaim the deposit using the depositReclaim function. The depositReclaim function can only be used once for any deposit cancellation request. external nonpayable address token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 l2Recipient The L2 address of the recipient. uint256 nonce The nonce of the deposit. None. DepositCancelRequest Event attributes address indexed sender The L1 address of the account that sent the deposit. address indexed token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 indexed l2Recipient The L2 address of the recipient. The L2 address of the recipient. uint256 nonce The nonce of the deposit. Contract: StarknetTokenBridge.sol Function: depositCancelRequest Event: DepositCancelRequest Reclaims a deposit after a five day period has passed from the time that StarkGate received a deposit cancellation request from the depositCancelRequest function. external nonpayable address token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 l2Recipient The L2 address of the recipient. uint256 nonce The nonce of the deposit. None. event DepositReclaimed Event attributes address indexed sender The L1 address of the account that sent the deposit. address indexed token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 indexed l2Recipient The L2 address of the recipient. The L2 address of the recipient. uint256 nonce The nonce of the deposit. Contract: StarknetTokenBridge.sol Function: depositReclaim Event: DepositReclaimed depositCancelRequest Similar to deposit, with a message attached. With this function, a deposit transaction can trigger subsequent actions. For example, you can deposit funds and include a message to transfer those funds to another address. depositWithMessage lets you execute these two separate transactions with a single user action. After depositing to another recipient, the L1 handler in token_bridge.cairo calls the on_receive function in the contract of the recipient. If on_receive returns true, then the on_receive function succeeded. If it returns false, or if it doesn’t return any value because the on_receive function is not implemented in the recipient contract, the operation fails and the transaction is reverted. external payable address token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 l2Recipient The L2 address of the recipient. uint256[] calldata message The message attached to the deposit. None. DepositWithMessage Event attributes address indexed sender The L1 address of the account that sent the deposit. address indexed token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 indexed l2Recipient The L2 address of the recipient. The L2 address of the recipient. uint256[] message The message attached to the deposit. uint256 nonce The nonce for the L1 transaction. uint256 fee The Starknet fee sent with the transaction. Contract: StarknetTokenBridge.sol Function: depositWithMessage Event: DepositWithMessage Sends a request to StarkGate to cancel a deposit sent with depositWithMessage. Similar to depositCancelRequest. external nonpayable address token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 l2Recipient The L2 address of the recipient. uint256[] calldata message The message attached to the deposit. uint256 nonce The nonce of the deposit. None. DepositWithMessageCancelRequest Event attributes address indexed sender The L1 address of the account that sent the deposit. address indexed token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 indexed l2Recipient The L2 address of the recipient. The L2 address of the recipient. uint256[] message The message attached to the deposit. uint256 nonce The nonce for the L1 transaction. Contract: StarknetTokenBridge.sol Function: depositWithMessageCancelRequest Event: DepositWithMessageCancelRequest depositWithMessage depositCancelRequest Sends a request to StarkGate to cancel a deposit sent with depositWithMessage. Similar to depositCancelRequest. Reclaims a deposit sent with a message after a five day period has passed from the time that StarkGate received a deposit cancellation request from the depositWithMessageCancelRequest function. external nonpayable address token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 l2Recipient The L2 address of the recipient. uint256 nonce The nonce of the deposit. None. DepositWithMessageCancelRequest Event attributes address indexed sender The L1 address of the account that sent the deposit. address indexed token The address of the contract for the desired token. uint256 amount The amount of the deposit. uint256 indexed l2Recipient The L2 address of the recipient. The L2 address of the recipient. uint256[] message The message attached to the deposit. uint256 nonce The nonce for the L1 transaction. Contract: StarknetTokenBridge.sol Function: depositWithMessageReclaim Event: DepositWithMessageReclaimed depositCancelRequest depositReclaim depositWithMessageCancelRequest Creates a Starknet bridge for the specified ERC-20 token contract address in the multi-token bridge contracts and adds the token to the StarkGate Registry. Does not work for any ERC-20 token bridge’s contract address that is already in the registry. Enrolling a new bridge creates a new ERC-20 contract on L2. You can see the class hash for this contract using get_erc20_class_hash. Enrolling a new bridge does not add it to the StarkGate GUI. You can use a block explorer to use the newly created bridge. external payable The message payload needs to include funds to cover the Starknet (L2) fee for executing this transaction. You can include this payload using a standard wrapper such as web3.js. address token The address of the contract for the desired ERC-20 token. None. TokenEnrollmentInitiated Function: enrollTokenBridge in StarkgateManager.sol Event: TokenEnrollmentInitiated in StarknetTokenBridge.sol Returns an estimate of the fee, in Wei, for depositing funds to the L1 StarkGate bridge contract. external view None. uint256 An estimate of the fee, in Wei, for depositing funds to the L1 StarkGate bridge contract. None. estimateDepositFeeWei in StarknetTokenBridge.sol deposit depositWithMessage Returns an estimate of the fee, in Wei, for creating and registering a new bridge using the enrollTokenBridge function. external view None. uint256 An estimate of the fee, in Wei, for creating and registering a new bridge. None. estimateEnrollmentFeeWei in StarknetTokenBridge.sol enrollTokenBridge Returns the address of the bridge for the specified token, or a value indicating if the bridge does not exist, is blocked, or is deactivated. external view address token The address of the contract for the desired ERC-20 token. address address The address of the bridge for the specified token. Address(0) The bridge does not exist. Address(1) The bridge is blocked or deactivated. None. getBridge in IStarkgateRegistry.sol Returns the address of the StarkGate Registry contract. Only the Manager uses this function. external view None address The address of the Registry contract. None. getRegistry in StarkgateManager.sol Returns the status of a token in StarkGate. deploy transaction triggered by the enrollTokenBridge API. external view address token The address of the contract for the desired ERC-20 token. TokenStatus One of the following values: 0 Unknown. The bridge does not recognize the token. 1 Pending. The token has been enrolled to StarkGate, but the deploy transaction has not yet successfully completed. You can deposit funds. 2 Active. The deploy transaction for this token has completed successfully and StarkGate recognizes the token. 3 Deactivated. The token has been removed from StarkGate. You cannot deposit funds. None. getStatus in StarknetTokenBridge.sol Retrieves a list of all bridge addresses that have ever facilitated withdrawals for the specified token. In a case where an inactive bridge for a specific token might still have funds locked, you can use this function to identify all bridges that ever serviced that token. If you used a bridge for a given token that subsequently was replaced with a new or updated bridge, but you still have funds locked on the first bridge, you might not know the address of the old bridge. This function returns external view address token The address of the contract for the desired token. address[] memory bridges An array of addresses of all bridges that ever serviced token. None. getWithdrawalBridges in StarkgateRegistry.sol. Returns the name and version of the StarknetTokenBridge.sol contract. external pure None. string memory The name and version of the StarknetTokenBridge.sol contract. None. identify in StarknetTokenBridge.sol Checks whether the calling contract is currently providing a service for the specified token. external view address token The address of the contract for the desired token. true The calling contract is currently providing a service for the token. false The calling contract is not currently providing a service for the token. None. isServicingToken in IStarkgateService.sol. Transfers the specified amount of the specified token to the address of the recipient specified in the l1_recipient parameter of the initiate_token_withdraw function on L2. Anyone can call this function, but only after the withdraw message has been recorded on the Starknet Core Contract. address token The address of the contract for the desired token. uint256 amount The amount of the withdrawal. address recipient (Optional) The recipient. If you don’t specify this parameter, the withdraw function uses the sender’s address. nonpayable None. Withdrawal Event attributes address indexed recipient The recipient. address indexed token The address of the contract for the desired token. uint256 amount The amount of the withdrawal. Contract: StarknetTokenBridge.sol Function: withdraw Event: Withdrawal Functions are listed in alphabetical order. Returns the current class hash of the implementation used by the ERC-20 contract. Use the class hash as the type when deploying the ERC-20 contract on L2. If StarkWare changes the class hash such that it is no longer the class hash that you used when deploying your bridge contract, this function returns the new class hash. If you want to refer to the class hash that you used when deploying your contract, see your deployed contract on Starknet. None. ClassHash The class hash of the ERC-20 token contract. get_erc20_class_hash in token_bridge.cairo. Returns a string in a felt252 type with the identity of StarkGate. None. felt252 The identity of StarkGate. get_identity in token_bridge_interface.cairo. Returns the L1 address that corresponds to the matching L2 address of an ERC-20 token contract. l2_token_address: ContractAddress The L2 address of the ERC-20 token contract. EthAddress The L1 address of the ERC-20 token contract. EthAddressZeroable::zero() The token is not found in the bridge. get_l1_token in token_bridge_interface.cairo. Returns the L2 address that corresponds to the matching L1 address of an ERC-20 token contract. If the token is not found in the bridge, this function returns 0. l1_token_address The L1 address of the ERC-20 token contract. ContractAddress address The L2 address of the ERC-20 token contract. ContractAddressZeroable::zero() The token is not found in the bridge. get_l2_token in token_bridge_interface.cairo. Returns the amount that the user can withdraw within the current 24-hour time period. The time period begins at 00:00 UTC. l1_token_address The L1 address of the ERC-20 token contract. u256 The amount that can currently be withdrawn from the bridge, in units defined by the ERC-20 token contract. get_remaining_withdrawal_quota in token_bridge_interface.cairo Returns the current version of StarkGate. None. felt252 The current version of StarkGate. get_version in token_bridge_interface.cairo. Initiates a withdrawal from L2. After initiating the withdrawal, the function does the following: Burns the transferred amount of tokens from the balance of the withdrawal’s initiator. Sends a message to the relevant L1 bridge with the amount to be transferred, and the recipient’s address. l1_token: EthAddress The L1 address of the ERC-20 token contract. l1_recipient: EthAddress The L1 address of the recipient. amount uint256 The amount to transfer. None. initiate_token_withdraw in token_bridge_interface.cairo. An interface to an implementation of the on_receive function that you must provide in your L2 contract in order to enable the depositWithMessage function to succeed. The L2 contract that receives the message that is sent with the depositWithMessage function must implement a callback function named on_receive. Upon completion, the depositWithMessage function triggers a call to the on_receive callback function on the receiving L2 contract. The on_receive function receives the deposit message as input, and it must return true for the deposit to succeed. If on_receive returns false, or if the receiving contract does not implement on_receive, the depositWithMessage L1 handler fails, and the user can only recover their funds using the depositWithMessageCancelRequest function. l2_token: ContractAddress The L2 address of the ERC-20 token contract. amount: uint256 The amount deposited. depositor: EthAddress L1 address of the deposit sender. message: Span The message that was sent with the depositWithMessage function. true The on_receive function completed successfully. false The on_receive function did not complete successfully. The transaction is reverted. No value If the recipients’s smart contract does not implement the on_receive function, the call fails to execute, and the transaction is reverted. on_receive in receiver_interface.cairo.","title":"StarkGate function and event reference","component":"ROOT","version":"","name":"function-reference","url":"/starkgate/function-reference/","titles":[{"text":"L1 function reference","hash":"l1_function_reference","id":1},{"text":"deposit","hash":"deposit","id":2},{"text":"Description","hash":"description","id":3},{"text":"Visibility","hash":"visibility","id":4},{"text":"State Mutability","hash":"state_mutability","id":5},{"text":"Parameters","hash":"parameters","id":6},{"text":"Returns","hash":"returns","id":7},{"text":"Emitted event","hash":"emitted_event","id":8},{"text":"Function and event definitions","hash":"function_and_event_definitions","id":9},{"text":"depositCancelRequest","hash":"depositCancelRequest","id":10},{"text":"Description","hash":"description_2","id":11},{"text":"Visibility","hash":"visibility_2","id":12},{"text":"State Mutability","hash":"state_mutability_2","id":13},{"text":"Parameters","hash":"parameters_2","id":14},{"text":"Returns","hash":"returns_2","id":15},{"text":"Emitted event","hash":"emitted_event_2","id":16},{"text":"Function and event definitions","hash":"function_and_event_definitions_2","id":17},{"text":"depositReclaim","hash":"depositReclaim","id":18},{"text":"Description","hash":"description_3","id":19},{"text":"Visibility","hash":"visibility_3","id":20},{"text":"State Mutability","hash":"state_mutability_3","id":21},{"text":"Parameters","hash":"parameters_3","id":22},{"text":"Returns","hash":"returns_3","id":23},{"text":"Emitted event","hash":"emitted_event_3","id":24},{"text":"Function and event definitions","hash":"function_and_event_definitions_3","id":25},{"text":"See also","hash":"see_also","id":26},{"text":"depositWithMessage","hash":"depositWithMessage","id":27},{"text":"Description","hash":"description_4","id":28},{"text":"Visibility","hash":"visibility_4","id":29},{"text":"State Mutability","hash":"state_mutability_4","id":30},{"text":"Parameters","hash":"parameters_4","id":31},{"text":"Returns","hash":"returns_4","id":32},{"text":"Emitted event","hash":"emitted_event_4","id":33},{"text":"Function and event definitions","hash":"function_and_event_definitions_4","id":34},{"text":"depositWithMessageCancelRequest","hash":"depositWithMessageCancelRequest","id":35},{"text":"Description","hash":"description_5","id":36},{"text":"Visibility","hash":"visibility_5","id":37},{"text":"State Mutability","hash":"state_mutability_5","id":38},{"text":"Parameters","hash":"parameters_5","id":39},{"text":"Returns","hash":"returns_5","id":40},{"text":"Emitted event","hash":"emitted_event_5","id":41},{"text":"Function and event definitions","hash":"function_and_event_definitions_5","id":42},{"text":"See also","hash":"see_also_2","id":43},{"text":"depositWithMessageReclaim","hash":"depositWithMessageReclaim","id":44},{"text":"Description","hash":"description_6","id":45},{"text":"Visibility","hash":"visibility_6","id":46},{"text":"State Mutability","hash":"state_mutability_6","id":47},{"text":"Parameters","hash":"parameters_6","id":48},{"text":"Returns","hash":"returns_6","id":49},{"text":"Emitted event","hash":"emitted_event_6","id":50},{"text":"Function and event definitions","hash":"function_and_event_definitions_6","id":51},{"text":"See also","hash":"see_also_3","id":52},{"text":"enrollTokenBridge","hash":"enrollTokenBridge","id":53},{"text":"Description","hash":"description_7","id":54},{"text":"Visibility","hash":"visibility_7","id":55},{"text":"State Mutability","hash":"state_mutability_7","id":56},{"text":"Parameters","hash":"parameters_7","id":57},{"text":"Returns","hash":"returns_7","id":58},{"text":"Emitted event","hash":"emitted_event_7","id":59},{"text":"Function and event definition","hash":"function_and_event_definition","id":60},{"text":"estimateDepositFeeWei","hash":"estimateDepositFeeWei","id":61},{"text":"Description","hash":"description_8","id":62},{"text":"Visibility","hash":"visibility_8","id":63},{"text":"State Mutability","hash":"state_mutability_8","id":64},{"text":"Parameters","hash":"parameters_8","id":65},{"text":"Returns","hash":"returns_8","id":66},{"text":"Emitted event","hash":"emitted_event_8","id":67},{"text":"Function definition","hash":"function_definition","id":68},{"text":"Additional resources","hash":"additional_resources","id":69},{"text":"estimateEnrollmentFeeWei","hash":"estimateEnrollmentFeeWei","id":70},{"text":"Description","hash":"description_9","id":71},{"text":"Visibility","hash":"visibility_9","id":72},{"text":"State Mutability","hash":"state_mutability_9","id":73},{"text":"Parameters","hash":"parameters_9","id":74},{"text":"Returns","hash":"returns_9","id":75},{"text":"Emitted event","hash":"emitted_event_9","id":76},{"text":"Function definition","hash":"function_definition_2","id":77},{"text":"Additional resource","hash":"additional_resource","id":78},{"text":"getBridge","hash":"getBridge","id":79},{"text":"Description","hash":"description_10","id":80},{"text":"Visibility","hash":"visibility_10","id":81},{"text":"State Mutability","hash":"state_mutability_10","id":82},{"text":"Parameters","hash":"parameters_10","id":83},{"text":"Returns","hash":"returns_10","id":84},{"text":"Emitted event","hash":"emitted_event_10","id":85},{"text":"Function definition","hash":"function_definition_3","id":86},{"text":"getRegistry","hash":"getRegistry","id":87},{"text":"Description","hash":"description_11","id":88},{"text":"Visibility","hash":"visibility_11","id":89},{"text":"State Mutability","hash":"state_mutability_11","id":90},{"text":"Parameters","hash":"parameters_11","id":91},{"text":"Returns","hash":"returns_11","id":92},{"text":"Emitted event","hash":"emitted_event_11","id":93},{"text":"Function definition","hash":"function_definition_4","id":94},{"text":"getStatus","hash":"getStatus","id":95},{"text":"Description","hash":"description_12","id":96},{"text":"Visibility","hash":"visibility_12","id":97},{"text":"State Mutability","hash":"state_mutability_12","id":98},{"text":"Parameters","hash":"parameters_12","id":99},{"text":"Returns","hash":"returns_12","id":100},{"text":"Emitted event","hash":"emitted_event_12","id":101},{"text":"Function definition","hash":"function_definition_5","id":102},{"text":"getWithdrawalBridges","hash":"getWithdrawalBridges","id":103},{"text":"Description","hash":"description_13","id":104},{"text":"Visibility","hash":"visibility_13","id":105},{"text":"State Mutability","hash":"state_mutability_13","id":106},{"text":"Parameters","hash":"parameters_13","id":107},{"text":"Returns","hash":"returns_13","id":108},{"text":"Emitted event","hash":"emitted_event_13","id":109},{"text":"Function definition","hash":"function_definition_6","id":110},{"text":"identify","hash":"identify","id":111},{"text":"Description","hash":"description_14","id":112},{"text":"Visibility","hash":"visibility_14","id":113},{"text":"State Mutability","hash":"state_mutability_14","id":114},{"text":"Parameters","hash":"parameters_14","id":115},{"text":"Returns","hash":"returns_14","id":116},{"text":"Emitted event","hash":"emitted_event_14","id":117},{"text":"Function definition","hash":"function_definition_7","id":118},{"text":"isServicingToken","hash":"isServicingToken","id":119},{"text":"Description","hash":"description_15","id":120},{"text":"Visibility","hash":"visibility_15","id":121},{"text":"State Mutability","hash":"state_mutability_15","id":122},{"text":"Parameters","hash":"parameters_15","id":123},{"text":"Returns","hash":"returns_15","id":124},{"text":"Emitted event","hash":"emitted_event_15","id":125},{"text":"Function definition","hash":"function_definition_8","id":126},{"text":"withdraw","hash":"withdraw","id":127},{"text":"Description","hash":"description_16","id":128},{"text":"Parameters","hash":"parameters_16","id":129},{"text":"State mutability","hash":"state_mutability_16","id":130},{"text":"Returns","hash":"returns_16","id":131},{"text":"Emitted event","hash":"emitted_event_16","id":132},{"text":"Function and event definition","hash":"function_and_event_definition_2","id":133},{"text":"L2 function reference","hash":"l2_function_reference","id":134},{"text":"get_erc20_class_hash","hash":"get_erc20_class_hash","id":135},{"text":"Description","hash":"description_17","id":136},{"text":"Parameters","hash":"parameters_17","id":137},{"text":"Returns","hash":"returns_17","id":138},{"text":"Function definition","hash":"function_definition_9","id":139},{"text":"get_identity","hash":"get_identity","id":140},{"text":"Description","hash":"description_18","id":141},{"text":"Parameters","hash":"parameters_18","id":142},{"text":"Returns","hash":"returns_18","id":143},{"text":"Function definition","hash":"function_definition_10","id":144},{"text":"get_l1_token","hash":"get_l1_token","id":145},{"text":"Description","hash":"description_19","id":146},{"text":"Parameters","hash":"parameters_19","id":147},{"text":"Returns","hash":"returns_19","id":148},{"text":"Function definition","hash":"function_definition_11","id":149},{"text":"get_l2_token","hash":"get_l2_token","id":150},{"text":"Description","hash":"description_20","id":151},{"text":"Parameters","hash":"parameters_20","id":152},{"text":"Returns","hash":"returns_20","id":153},{"text":"Function definition","hash":"function_definition_12","id":154},{"text":"get_remaining_withdrawal_quota","hash":"get_remaining_withdrawal_quota","id":155},{"text":"Description","hash":"description_21","id":156},{"text":"Parameters","hash":"parameters_21","id":157},{"text":"Returns","hash":"returns_21","id":158},{"text":"Function definition","hash":"function_definition_13","id":159},{"text":"get_version","hash":"get_version","id":160},{"text":"Description","hash":"description_22","id":161},{"text":"Parameters","hash":"parameters_22","id":162},{"text":"Returns","hash":"returns_22","id":163},{"text":"Function definition","hash":"function_definition_14","id":164},{"text":"initiate_token_withdraw","hash":"initiate_token_withdraw","id":165},{"text":"Description","hash":"description_23","id":166},{"text":"Parameters","hash":"parameters_23","id":167},{"text":"Returns","hash":"returns_23","id":168},{"text":"Function definition","hash":"function_definition_15","id":169},{"text":"on_receive","hash":"on_receive","id":170},{"text":"Description","hash":"description_24","id":171},{"text":"Parameters","hash":"parameters_24","id":172},{"text":"Returns","hash":"returns_24","id":173},{"text":"Function definition","hash":"function_definition_16","id":174}]},"39":{"id":39,"text":"StarkGate, developed by StarkWare, bridges ETH and ERC-20 tokens between Ethereum and Starknet. Each supported token is associated with an L1 and L2 bridge contract that communicates via Starknet’s messaging mechanism. To use the StarkGate web app, go to https://starkgate.starknet.io. A bridge enables you to fund your L2 wallet with ETH and ERC-20 tokens that reside on L1. The terms deposit, transact, and transfer refer to various operations involving a bridge, even though ETH and ERC-20 tokens never actually leave Ethereum. StarkGate 2.0 provides a contract that enables seamless backward compatibility with the previous version of StarkGate. When you update the code in your contract, make sure that you use the most up-to-date versions of all StarkGate contracts. L1 and L2 addresses for StarkGate bridges and supported tokens are listed in the JSON files shown in the table StarkGate bridged tokens and their addresses. Table 1. StarkGate bridged tokens and their addresses Network StarkGate bridged tokens JSON file Mainnet tokens.json Sepolia tokens.json StarkGate supports many tokens, including ETH, WBTC, USDC, DAI, and many more. For a comprehensive list of tokens that StarkGate supports, including their L1 and L2 addresses, see the JSON files shown in the table StarkGate bridged tokens and their addresses. Previously, StarkGate placed limitations for each supported token on the amount that could be deposited and the total value locked in the L1 bridge contract on Mainnet. These limits have been removed. A call to the L1 deposit function initiates a deposit. The function does the following: Transfers the funds from the user’s account to the Starknet bridge. Emits a Deposit event that includes the L1 and L2 addresses of the user, and the amount deposited. Sends a message to the corresponding L2 bridge with the amount deposited, and the recipient’s address. Starknet’s sequencer is now aware of the deposit transaction. The sequencer waits for enough L1 block confirmations to fill its quota to run before the corresponding deposit transaction is initiated on L2. During this period of time, the status of the L2 deposit transaction is NOT_RECEIVED. The sequencers refer to the deposit request by triggering the L1 handler using the handle_deposit function on the L2 bridge. The handle_deposit function verifies that the deposit indeed came from the corresponding L1 bridge. It then calls the relevant token’s contract on Starknet and mints the specified amount of the token on L2 for the user. The sequencers complete constructing the block. The status of the deposit request is now ACCEPTED_ON_L2. Starknet’s provers prove the validity of the block and submit a state update to L1. The message confirming transfer of the funds is cleared from the Starknet Core Contract, and the fact that the user has transferred their funds is part of the now finalized state of Starknet. If the message wasn’t on L1 to begin with, that is, if the deposit request was fraudulently created on Starknet, the state update fails. A call to the L2 initiate_token_withdraw function initiates a withdrawal. The function does the following: Burns the transferred amount of tokens from the balance of the withdrawal’s initiator. Sends a message to the relevant L1 bridge with the amount to be transferred and the recipient’s address. The sequencer completes the block construction Starknet’s provers prove the validity of the block and submit a state update to L1. The message from the previous step is stored in the Starknet Core Contract. After the withdrawal message has been recorded on the Starknet Core Contract, anyone can finalize the transfer on L1 from the bridge back to the user, by calling the withdraw function. This step is permissionless, anyone can do it. The recipient’s address is part of the recorded message on L1, so they receive the funds regardless of who calls the withdraw function on L1. L1-L2 messaging The StarkGate developer’s reference: deposit function, Deposit event withdraw initiate_token_withdraw handle_deposit function on the L2 bridge","title":"StarkGate bridge overview","component":"ROOT","version":"","name":"overview","url":"/starkgate/overview/","titles":[{"text":"StarkGate addresses","hash":"starkgate_addresses","id":1},{"text":"Supported tokens in StarkGate","hash":"starkgate_supported_tokens","id":2},{"text":"L1→L2 transfer (deposit)","hash":"l1l2_transfer_deposit","id":3},{"text":"Step 1: Call the deposit function on L1","hash":"step_1_call_the_deposit_function_on_l1","id":4},{"text":"Step 2: Deposit triggered on Starknet","hash":"step_2_deposit_triggered_on_starknet","id":5},{"text":"Step 3: The block that includes the transfer is proved","hash":"step_3_the_block_that_includes_the_transfer_is_proved","id":6},{"text":"L2→L1 transfer (withdrawal)","hash":"l2l1_transfer_withdraw","id":7},{"text":"Step 1: Initiate a withdrawal from L2","hash":"step_1_call_the_withdraw_function_on_l2","id":8},{"text":"Step 2: Proving the block that includes the withdrawal transaction","hash":"proving_the_block_that_includes_the_withdrawal_transaction","id":9},{"text":"Step 3: Transferring the funds on L1","hash":"step_3_transferring_the_funds_on_l1","id":10},{"text":"Additional resources","hash":"additional_resources","id":11}]},"40":{"id":40,"text":"Using StarkGate to withdraw funds from Starknet requires StarkGate’s initiate_token_withdraw function to initiate a withdrawal. The function does the following: Burns the transferred amount of tokens from the L2 balance of the withdrawal’s initiator. Sends a message to the relevant L1 bridge with the amount to be transferred and the recipient’s Ethereum address. Subsequently, the funds should be transferred to the recipient’s Ethereum address. For more information on what happens during the transfer process, see L2→L1 transfer (withdrawal). Prerequisites A Starknet block explorer. For a list of Starknet block explorers, see Block explorers, indexers & Enhanced API on the Starknet site. An Ethereum block explorer, such as Etherscan. Funds to transfer from L2 to L1, including enough to pay the fees required for the transfer. The L2 address of the StarkGate bridge for the token you want to withdraw. To view the token addresses for tokens on Mainnet or Sepolia testnet, see Bridged tokens and addresses. Procedure Using a Starknet block explorer, go to the StarkGate contract for the token you want to withdraw. For example, to withdraw USDC: If using Voyager, go to the USDC StarkGate bridge and click Write Contract. If using StarkScan, go to the USDC StarkGate bridge and click Read/Write Contract Write. Click the initiate_token_withdraw function and enter the following: In l1_token, enter the L1 address of the ERC-20 contract for the token you want to withdraw, in this case, USDC. In l1_recipient, enter the L1 address of the recipient. In amount, enter the amount to transfer. Click Transact for Voyager, or Write for StarkScan. The function initiates a withdrawal. Using an Ethereum block explorer, go to the StarkGate contract and click Write as Proxy. For example, using Etherscan, go to 0xae0ee0a63a2ce6baeeffe56e7714fb4efe48d419 Click the StarkGate 2.0 withdraw (0x69328dec) function. Enter the following: recipient (address) The recipient. token (address) The address of the contract for the desired token. amount (uint256) The amount of the withdrawal. Click Write. The withdraw function withdraws the funds to the recipient’s L1 address. The funds should be available after the next L1 state update.","title":"Withdrawing funds with StarkGate","component":"ROOT","version":"","name":"withdrawing","url":"/starkgate/withdrawing/","titles":[]},"41":{"id":41,"text":"Juno is a golang Starknet node implementation by Nethermind with the aim of decentralizing Starknet. See the official Juno GitHub repository for more details. Support for upcoming Starknet v0.12.3, improved RPC performance with a new global class cache, allowing for higher request throughput and optimized resource usage. We’ve updated blockifier, which includes an important wallet integration fix. On top of that, expect new metrics and ongoing enhancements to the P2P layer, among other improvements. Here’s what’s new: Support for Starknet v0.12.3 A global class cache to the VM that enhances overall RPC throughput. PR by @omerfirmak in 1401 A new flag, max-vms, to control the maximum number of VM instances for concurrent RPC calls, optimizing resource usage PR by @omerfirmak in #1378. The blockifier library has been updated, now supporting the query bit in the version field for transactions. PR by @joshklop in #1401. Subscription handling has been moved to the synchronizer for improved efficiency. PR by @joshklop in #1373. Ongoing enhancements to the P2P layer, including the implementation of a Receipt Handler and Adapter and a new GetBlockBodies feature. PRs by @IronGauntlets in #1352 and by @kirugan in #1359. Prometheus metrics have been expanded to include version information, latency on Transaction.Commit(), and read metrics on blockchain operations. PRs by @omerfirmak in #1394, #1396, and #1395. Kubernetes pods now have a correctly set GOMAXPROCS setting, aligning performance with CPU resources. PR by @omerfirmak in #1397. Fallback to feeder traces for blocks ⇐ 0.12.2. PR by @omerfirmak in #1405. Resolved an issue with event emission on sync step failure for more reliable synchronization. PR by @aminsato in #1387. Refactored websocket error conditions for improved stability and error handling. PR by @joshklop in #1400. You can pull the Docker image for this release with the following command: docker pull nethermind/juno:v0.7.3 The primary goal of this release is to introduce support for Starknet JSON-RPC v0.5.0. Juno now supports multiple versions via /v0_5 and /v0_4 endpoints. The default version at the root / endpoint has been updated from 0.4.0 to 0.5.0. Starknet v0.5.0 Compatibility: Implemented starknet_specVersion @omerfirmak Renamed juno_getTransactionStatus to starknet_getTransactionStatus. @omerfirmak Removed pendingTransactions endpoint for cleanup. @omerfirmak Added new fields like execution resources and message hash to RPC receipt. @omerfirmak Building and calculating state diffs. @omerfirmak Make starknet_traceBlockTransactions get a block id @kirugan Add txn type to traces Add message_hash field for L1_HANDLER_TXN_RECEIPT Add starknet_getTransactionStatus and remove starknet_pendingTransactions Support multiple RPC versions: v0.4.0 and v0.5.0 @omerfirmak Performance Metrics: Moved metric counting out of various components for cleaner code. @omerfirmak Websocket Enhancements: Full-duplex comms and fixes related to over-reading websocket requests. @joshklop RPC Optimization: Reduced allocations in RPC requests for better performance. @joshklop Refactored Error Handling: Improved global error usage and better error handling in various components. @omerfirmak Websocket Reading: Fixed over-reading issues in Websocket requests.@joshklop Error Handling: Resolved potential nil pointer dereferences and panic issues. @omerfirmak Various CI/CD pipeline improvements for better automation. @wojciechos and @ToluwalopeAyo You can pull the Docker image for this release with: docker pull nethermind/juno:v0.7.0 New Trace RPC Methods: starknet_traceTransaction starknet_traceBlockTransactions starknet_simulateTransactions Juno RPC Schema: A dedicated schema to streamline RPC interactions for Juno’s method. Juno Console Enhancement: Pretty printing of Juno console logs for an enriched user experience. Comprehensive Documentation: Official documentation now hosted on GitHub Pages. RPC Schema Consistency: Revised to ensure our RPC schema is consistent with the Starknet specification. Command-line switches have been restructured to provide clearer access control: docker run -d --name juno -p $httpPort:$httpPort -p $metricsPort:$metricsPort -v /root/juno:/var/lib/juno nethermind/juno:v0.6.0 --db-path /var/lib/juno --http --http-port $httpPort --metrics --metrics-port $metricsPort --eth-node (Note: Ensure to adjust the variables like $httpPort, $metricsPort and others as per your configuration.) Database Migration: This version introduces database changes due to our work focus on peer-to-peer (p2p) communication. These changes may result in extended migration times. For faster sync, we recommend users to utilize snapshots. This release adds support for the Starknet v0.12.2. Support for Starknet v0.12.2 This release adds support for the upcoming Starknet v0.12.1 upgrade and includes compatibility with v0.4.0 of the RPC specification. Support for Starknet v0.12.1 Compatibility with v0.4.0 of the RPC specification New RPC method: starknet_estimateMessageFee Health Check Endpoint: A GET request to the / endpoint will now return a 200 status code for a healthy Juno node Added Prometheus metrics support: Use --metrics and --metrics-port to enable this feature Adjusted worker number for sync process, improving performance Updated blockifier for starknet v0.12.1 Resolved issues causing context canceled errors in writing RPC methods Mapped gateway errors to write API RPC errors, improving error handling Log the incoming RPC requests in Pull Request #907 Update types for 0.12.1 in Pull Request #895 Parallelize per-contract storage updates in Pull Request #900 Add missing From field to rpc.MsgToL1 in Pull Request #908 This release has breaking changes and database is not compatible with the previous version. New RPC Methods: starknet_call starknet_estimateFee starknet_addDeclareTransaction starknet_addDeployAccountTransaction starknet_addInvokeTransaction juno_getTransactionStatus juno_version L1 Verifier: Verification of state from Layer 1 has been implemented. Block Reorg Detection and Handling: A feature to detect and handle block reorganizations has been implemented. gRPC Service: To accommodate users requiring direct access to the database, a gRPC service has been exposed. Database Migration: The system has been improved to handle database changes more gracefully. It’s no longer necessary to sync from the start when some database changes occur. Starknet v0.12.0 support: includes integration with the Rust VM. Performance Enhancements: Several adjustments and improvements have been made to increase the performance. These changes have resulted in ~30% reduction in sync time. Fetch and store compiled classes for each Sierra class. Updated the behavior of synced nodes, which will now return false to starknet_syncing. Resolved issue with NumAsHex(0) being omitted in RPC. Fixed a Goerli sync issue by relaxing decoder max array elements limit. Full Changelog: [v0.3.0…​v0.3.1] Starknet v0.11.2 support History for contracts, nonce, and class hash. Implemented StateSnapshot. New RPC endpoints: starknet_syncing starknet_getNonce starknet_getStorageAt starknet_getClassHashAt starknet_getClass starknet_getClassAt starknet_getEvents For new RPC endpoints to fully work with data before the new version, the node needs to be resynced. Optimized TransactionStorage encoding and refactored memStorage. Refactored RPC implementation for better organization and maintainability. Parallelized and refactored sync tests for faster execution, improved readability, and maintainability. Updated handling of non-existent keys to return a zero value. Full Changelog: v0.3.0…​v0.3.1 This patch release fixes handling of block versioning and ensures compatibility with non-sem-ver compliant Starknet. Ignore or add digits to block version string as necessary. Full Changelog: v0.2.1…​v0.2.2 This minor release introduces an important optimization that enhances sync performance. Update gnark-crypto version: Implement precomputed point multiplication results for Pedersen hash operations. Full Changelog: v0.2.0…​v0.2.1 This release adds support for Starknet v0.11.0. This release has breaking changes and database is not compatible with the previous version. Starknet v0.11.0 support: Add Poseidon hash for new state commitment. Add DeclareTransaction version 2. Add and Store Cairo 1/Sierra class definition and hash calculations. pprof option is added for profiling and monitoring. Verify Class Hashes. Starknet v0.11.0 support: Update InvokeTransaction version 1’s contract address to sender address. Update current JSON RPC endpoints to [v.0.3.0-rc1](https://github.com/starkware-libs/starknet-specs/tree/v0.3.0-rc1). Rename the verbosity option to log-level and log-level accepts string instead of uint8. See help for details. network option accepts string instead of uint8. See help for details. Database table is updated to account for Starknet v0.11.0 changes. Remove metrics and eth-node options since they are not used. Graceful shutdown: ensure all services have returned before exiting. Full Changelog: v0.1.0…​v0.2.0 This is Juno’s first release (compatible with Starknet v0.10.3) with the following features: Starknet state construction and storage using a path-based Merkle Patricia trie. Pedersen and starknet_keccak hash implementation over starknet field. Feeder gateway synchronization of Blocks, Transactions, Receipts, State Updates and Classes. Block and Transaction hash verification. JSON-RPC Endpoints: starknet_chainId starknet_blockNumber starknet_blockHashAndNumber starknet_getBlockWithTxHashes starknet_getBlockWithTxs starknet_getTransactionByHash starknet_getTransactionReceipt starknet_getBlockTransactionCount starknet_getTransactionByBlockIdAndIndex starknet_getStateUpdate","title":"Juno release notes","component":"ROOT","version":"","name":"juno-versions","url":"/starknet-versions/juno-versions/","titles":[{"text":"v0.7.3","hash":"v0_7_3","id":1},{"text":"Added","hash":"added","id":2},{"text":"Changed","hash":"changed","id":3},{"text":"Fixed","hash":"fixed","id":4},{"text":"Docker Image","hash":"docker_image","id":5},{"text":"v0.7.0","hash":"v0_7_0","id":6},{"text":"🌟 Added","hash":"added_2","id":7},{"text":"🔄 Changed","hash":"changed_2","id":8},{"text":"🛠 Fixed","hash":"fixed_2","id":9},{"text":"🚀 Deployment and CI/CD","hash":"deployment_and_cicd","id":10},{"text":"⚙️ Docker Image","hash":"docker_image_2","id":11},{"text":"v0.6.0","hash":"v0_6_0","id":12},{"text":"🌟 Added","hash":"added_3","id":13},{"text":"🛠 Fixed","hash":"fixed_3","id":14},{"text":"⚙️ Command-line Switches Update","hash":"command_line_switches_update","id":15},{"text":"🔍 Migration Notes","hash":"migration_notes","id":16},{"text":"v0.5.1","hash":"v0_5_1","id":17},{"text":"Added","hash":"added_4","id":18},{"text":"v0.5.0","hash":"v0_5_0","id":19},{"text":"Added","hash":"added_5","id":20},{"text":"Changed","hash":"changed_3","id":21},{"text":"Fixed","hash":"fixed_4","id":22},{"text":"v0.4.1","hash":"v0_4_1","id":23},{"text":"Added","hash":"added_6","id":24},{"text":"Changed","hash":"changed_4","id":25},{"text":"Fixed","hash":"fixed_5","id":26},{"text":"v0.4.0","hash":"v0_4_0","id":27},{"text":"Added","hash":"added_7","id":28},{"text":"Changed","hash":"changed_5","id":29},{"text":"v0.3.1","hash":"v0_3_1","id":30},{"text":"Added","hash":"added_8","id":31},{"text":"Changed","hash":"changed_6","id":32},{"text":"Fixed","hash":"fixed_6","id":33},{"text":"v0.3.0","hash":"v0_3_0","id":34},{"text":"Added","hash":"added_9","id":35},{"text":"Changed","hash":"changed_7","id":36},{"text":"Fixed","hash":"fixed_7","id":37},{"text":"v0.2.2","hash":"v0_2_2","id":38},{"text":"Fixed","hash":"fixed_8","id":39},{"text":"v0.2.1","hash":"v0_2_1","id":40},{"text":"v0.2.0","hash":"v0_2_0","id":41},{"text":"Added","hash":"added_10","id":42},{"text":"Changed","hash":"changed_8","id":43},{"text":"Removed","hash":"removed","id":44},{"text":"Fixed","hash":"fixed_9","id":45},{"text":"v0.1.0","hash":"v0_1_0","id":46}]},"42":{"id":42,"text":"Pathfinder is a Starknet full node giving you a safe view into Starknet. It provides the following features: Access the full Starknet state history Verifies state using Ethereum Implements the Starknet JSON-RPC API Run Starknet functions without requiring a Starknet transaction Ability to do fee estimation for transactions See the official Pathfinder GitHub repository for more details. stack overflow while compiling Sierra to CASM pending data from the gateway is inconsistent this could exhibit as RPC data changing status between pending | L2 accepted | not found, especially noticeable for transactions. substantially increase the character limit of execution errors previously, the RPC would return a highly truncated error message from the execution vm Pending data is not polled for starknet v0.12 due to an HTTP error code change from the gateway. Transaction receipts missing from_address in MSG_TO_L1. Sierra class hash not in declared classes sync bug use all libfunc list instead of experimental for sierra compilation starknet_estimateMessageFee for JSON-RPC v0.3.1 to estimate message fee from L1 handler. sync-related metrics current_block: the currently sync’d block height of the node highest_block: the height of the blockchain block_time: timestamp difference between the current block and its parent block_latency: delay between current block being published and sync’d locally block_download: time taken to download current block’s data excluding classes block_processing: time taken to process and store the current block configuration for new block polling interval: --sync.poll-interval Starknet v0.12.0 support sierra v2.0.0 support cairo-lang upgraded to 0.12.0a0 reorgs fail if a class declaration is included in the reorg sync can fail if db connection pool is held saturated by rpc queries uses finalized (reorg-safe) L1 state instead of latest starknet_getEvents times out for queries involving a large block range dropped upgrade support for pathfinder v0.4 and earlier separate db connection pools rpc, sync and storage increased the number of rpc db connections class hash mismatch for cairo 0 classes with non-ascii text starknet_simulateTransaction requires transactions instead of transaction as input field. gateway’s error message is hidden when submitting a failed transaction starknet_getEvents is very slow for certain filter combinations default RPC API version changed from v0.2 to v0.3 disallow JSON-RPC notification-style requests Starknet v0.11.2 support Sierra compiler v1.1.0-rc0 cairo-lang upgraded to 0.11.2a0 Subscription to newHead events via websocket using the method pathfinder_subscribe_newHeads, which can be managed by the following command line options rpc.websocket, which enables websocket transport rpc.websocket.capacity, which sets the maximum number of websocket subscriptions per subscription type Authors: [Shramee Srivastav](https://github.com/shramee) and [Matthieu Auger](https://github.com/matthieuauger) cairo-lang upgraded to 0.11.1.1 RPC emits connection logs and warnings Fee estimate mismatch between gateway and pathfinder Gateway uses a new gas price sampling algorithm which was incompatible with pathfinders. Fee estimate returns error when submitting Cairo 1.0.0-rc0 classes. Historic L1 handler transactions are served as Invoke V0 Older databases contain L1 handler transactions from before L1 handler was a specific transaction type. These were stored as Invoke V0. These are now correctly identified as being L1 Handler transactions. RPC emits connection logs and warnings Fee estimate mismatch between gateway and pathfinder Gateway uses a new gas price sampling algorithm which was incompatible with pathfinders. Historic L1 handler transactions are served as Invoke V0 Older databases contain L1 handler transactions from before L1 handler was a specific transaction type. These were stored as Invoke V0. These are now correctly identified as being L1 Handler transactions. The primary focus of this release is to provide support for Starknet v0.11.1, and will continue to work for v0.11.0. Since this release is required for v0.11.1, you should update your node before the network is updated. Starknet v0.11.1 support CORS support via the rpc.cors-domains configuration option Transaction hashes are now verified as part of the sync process. Previously, these were not verified as the exact algorithm was underdocumented and the transaction format was still evolving. RPC server panic for unprefixed unregistered method names Data can temporarily appear to go missing when transitioning from PENDING to ACCEPTED ON L2 This was commonly seen when rapidly monitoring a new transaction, which would go from PENDING to TXN_HASH_NOT_FOUND to ACCEPTED_ON_L2 as pathfinder moved the ephemeral pending data to latest data on disk. Fixes for minor issues and inconsistencies. max-rpc-connections command-line argument. This sets the maximum number incoming RPC connections the pathfinder node will accept. This defaults to 1024 if not specified. cairo-lang upgraded to 0.11.0.2 starknet_simulateTransaction data model inconsistency poll-pending default value restored to false incoming RPC connections limited to 100. This limit was accidentally introduced in v0.5.2 as part of a dependency upgrade, whereas before it was unlimited. The default is now 1024 and can be configured using --max-rpc-connections. handling of invalid JSON-RPC requests This release fixes a few RPC bugs and adds support for bulk fee estimation and transaction simulation (traces) as part of v0.3 RPC specification. In addition it also adds a pathfinder_getTransactionStatus endpoint which lets you track a transactions status — including REJECTED and RECEIVED — in the same fashion as the gateway. support starknet_estimateFee in the JSON-RPC v0.3 API supports estimating multiple transactions this includes declaring and immediately using a class (not currently possible via the gateway) support starknet_simulateTransaction for JSON-RPC v0.3 supports simulating multiple transactions this includes declaring and immediately using a class (not currently possible via the gateway) support pathfinder_getTransactionStatus which is exposed on all RPC routes this enables querying a transactions current status, including whether the gateway has received or rejected it RPC returns int for entrypoint offsets instead of hex RPC rejects Fee values with more than 32 digits RPC does not expose pathfinder_getProof on v0.3 route This is a minor bugfix release, primarily to fix an issue with syncing on testnet2. pathfinder sometimes spams nethermind L1 nodes pathfinder stops syncing testnet2 at block 95220 due to a Sierra class compilation issue starknet v0.11.0 support RPC API v0.3 partial support removed several deprecated config options requires python 3.9 or 3.10 (no longer 3.8) support for state commitment and class commitment in pathfinder_getProof support for starknet v0.11 partial support for RPC specification v0.3 exposed on /rpc/v0.3/ route missing support for starknet_estimateFee and starknet_simulate starknet_call and starknet_estimateFee JSON-RPC methods return more detailed error messages python version requirement has changed to 3.9 or 3.10 (was 3.8 or 3.9 previously) RPC accepts hex inputs for Felt without '0x' prefix. This led to confusion especially when passing in a decimal string which would get silently interpreted as hex. using a Nethermind Ethereum endpoint occasionally causes errors such as could not be found to be logged. sync can miss new block events by getting stuck waiting for pending data. --config configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) --integration configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) --sequencer-url configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) --testnet2 configuration option (deprecated in [v0.4.1](https://github.com/eqlabs/pathfinder/releases/tag/v0.4.1)) starknet_addDeployTransaction as this is no longer an allowed transaction since starknet v0.10.3 RPC api version 0.1, which used to be served on path /rpc/v0.1 We added support for v0.3 and removed v0.1. We still support v0.2 at both /rpc/v0.2 and /rpc (default) routes. In summary: / # serves v0.2 /rpc/v0.2/ # serves v0.2 /rpc/v0.3/ # serves v0.3 We are missing starknet_estimateFee and starknet_simulate support for v0.3, which will be added in an upcoming release. Note: this only applies if you are building from source. This does not impact docker users. Pathfinder requires python to support the starknet VM used to simulate starknet transactions and function calls. Previous versions of the VM only worked with python 3.8 or 3.9 which was a hassle because most operating systems no longer directly support it. The new version of the VM bundled with starknet v0.11 now requires python version 3.9 or 3.10. Several configuration options are now removed, after they were deprecated in pathfinder v0.4.1. Here is a migration guide: --testnet2: use --network testnet2 instead --integration: use --network integration instead --sequencer-url: use --network custom in combination with --feeder-gateway-url and gateway-url --config: use environment variables or env files as an alternative Hotfix for a bug introduced in the previous version v0.4.4, which prevented a new node from syncing on blocks near genesis. Added Newton FAQ links to readme Node fails to sync old blocks @SecurityQQ made their first contribution in #799 This minor release contains some nice performance improvements for starknet_call and starknet_estimateFee as well as some minor bug fixes. Also included is a major new feature: storage proofs - big thanks @pscott for his hard work on this feature! This is available via the pathfinder_getProof method which is served from both the pathfinder and Starknet endpoints for convenience: /rpc/pathfinder/v0.1/pathfinder_getProof /rpc/v0.2/pathfinder_getProof The method is specified here. Its results can be used to formally verify what a contract’s storage values are without trusting the pathfinder node. This is achieved by validating the merkle-proof that pathfinder returns and confirming that it correctly matches the known Starknet state root. storage proofs via pathfinder_getProof by @pscott starknet_getEvents returns all events when from_block=\"latest\" v0.1 starknet_getStateUpdate does not contain nonces Improved performance for starknet_call and starknet_estimateFee by caching classes Improved performance for starknet_call and starknet_estimateFee by using Rust for hashing @pscott made their first contribution in #726 The primary purpose of this release is to properly support testnet2 after the Starknet v0.10.3 update. The v0.10.3 update changed the testnet2 chain ID which impacts transaction signatures which in turn meant that starknet_estimateFee would fail for any signed transaction. This release updates pathfinder to use the correct chain ID. Testnet2 and integration flags are ignored starknet_estimateFee uses wrong chain ID for testnet2 Updated to cairo-lang 0.10.3 Contains several bug fixes, mostly hotfixes for bugs introduced in v0.4.1. Document that --chain-id expects text as input Testnet2 and integration L1 addresses are swapped (bug introduced in v0.4.1) Proxy network setups can’t sync historical blocks (bug introduced in v0.4.1) ABI serialization for starknet_estimateFee for declare transactions Soft deprecation of some configuration options Support custom Starknet gateways Pathfinder RPC extensions at /rpc/pathfinder/ with pathfinder_version method starknet_events optimisations fix block timestamp in pending calls Custom Starknet gateway support This release introduces support for custom Starknets. You can select this network by setting --network custom and specifying the --gateway-url and --feeder-gateway-url options. Several configuration options have been soft deprecated. This means using them will continue to work as before (no breaking change), but they will emit a warning when used. They will be removed in a future version, so please migrate to the newer options. To re-emphasize: your current configuration setup will continue to work as is. --testnet2 and --integration have been deprecated in favor of --network testnet2 and --network integration. --sequencer-url has been deprecated in favor of --network custom along with --gateway-url, --feeder-gateway-url and --chain-id. In addition, you will need to rename your existing database file to custom.sqlite as this will be the expected filename for custom networks. --config has been deprecated and will not be supported in the future. The utility this provided was valuable. Unfortunately it is starting to severely hinder how fast we can implement configuration changes and we decided to remove it. We suggest using environment variables along with environment files to configure pathfinder in a similar fashion. The following configuration options are now marked as deprecated: --testnet2, --integration, --config, --sequencer-url Optimized starknet_events for queries with both a block range and a from address Block timestamps for pending in starknet_call and starknet_estimateFee were using the latest timestamp instead of the pending one. This meant contracts relying on accurate timestamps could sometimes fail unexpectedly. Custom Starknet support Pathfinder specific RPC extensions hosted at /rpc/pathfinder/v0.1. Currently, this only contains pathfinder_version which returns the pathfinder version of the node. This release contains a breaking change, and also adds support for Starknet v0.10.2. The changes themselves are quite simple, but please read through each section as there are some caveats which might impact you when you apply this update. This release changes the version of the RPC that is served at the root route, from v0.1 to v0.2 of the RPC specification. Version v0.1 is still available at the /rpc/v0.1/ endpoint. This is the only breaking change in this release. Here is a summary of what routes are currently available, and what’s changed: / serves v0.2 (changed from v0.1) /rpc/v0.1 serves v0.1 (no change) /rpc/v0.2 serves v0.2 (no change) If possible, we recommend that you use the version specific routes as this will prevent such breaking changes from impacting you. This release includes an update to the cairo-vm embedded in pathfinder in order to support the upcoming v0.10.2 Starknet release. This bundled vm is a pre-release and may therefore contain differences to the final version used once Starknet updates testnet and mainnet. We will of course issue a new release if / when there is a new vm. Since these changes are not yet live on testnet nor mainnet, this means upgrading to this release will cause deviations between what pathfinder outputs and what can be expected on the network. More specifically, starknet_estimateFee will compute different fees until the network has upgraded to Starknet v0.10.2. If you don’t need the RPC route changes, it may be pertinent to delay updating until closer to the v0.10.2 release dates on testnet and mainnet. The expected timeline for these upgrades is ~17/11 for testnets and ~24/11 for mainnet.","title":"Pathfinder  release notes","component":"ROOT","version":"","name":"pathfinder-versions","url":"/starknet-versions/pathfinder-versions/","titles":[{"text":"[0.6.6] - 2023-07-10  (latest)","hash":"0_6_6_2023_07_10_latest","id":1},{"text":"Fixed","hash":"fixed","id":2},{"text":"[0.6.5] - 2023-07-07","hash":"0_6_5_2023_07_07","id":3},{"text":"Fixed","hash":"fixed_2","id":4},{"text":"Changed","hash":"changed","id":5},{"text":"[0.6.4] - 2023-07-05","hash":"0_6_4_2023_07_05","id":6},{"text":"Fixed","hash":"fixed_3","id":7},{"text":"[0.6.3] - 2023-06-29","hash":"0_6_3_2023_06_29","id":8},{"text":"Fixed","hash":"fixed_4","id":9},{"text":"Changed","hash":"changed_2","id":10},{"text":"[0.6.2] - 2023-06-29","hash":"0_6_2_2023_06_29","id":11},{"text":"Added","hash":"added","id":12},{"text":"Fixed","hash":"fixed_5","id":13},{"text":"Changed","hash":"changed_3","id":14},{"text":"[0.6.1] - 2023-06-18","hash":"0_6_1_2023_06_18","id":15},{"text":"Fixed","hash":"fixed_6","id":16},{"text":"[0.6.0] - 2023-06-14","hash":"0_6_0_2023_06_14","id":17},{"text":"Fixed","hash":"fixed_7","id":18},{"text":"Changed","hash":"changed_4","id":19},{"text":"[0.5.6] - 2023-05-25","hash":"0_5_6_2023_05_25","id":20},{"text":"Added","hash":"added_2","id":21},{"text":"[0.5.5] - 2023-05-18","hash":"0_5_5_2023_05_18","id":22},{"text":"Added","hash":"added_3","id":23},{"text":"Fixed","hash":"fixed_8","id":24},{"text":"Fixed","hash":"fixed_9","id":25},{"text":"v0.5.4","hash":"v0_5_4","id":26},{"text":"Added","hash":"added_4","id":27},{"text":"Fixed","hash":"fixed_10","id":28},{"text":"v0.5.3","hash":"v0_5_3","id":29},{"text":"Added","hash":"added_5","id":30},{"text":"Fixed","hash":"fixed_11","id":31},{"text":"v0.5.2","hash":"v0_5_2","id":32},{"text":"Added","hash":"added_6","id":33},{"text":"Fixed","hash":"fixed_12","id":34},{"text":"v0.5.1","hash":"v0_5_1","id":35},{"text":"Fixed","hash":"fixed_13","id":36},{"text":"v0.5.0","hash":"v0_5_0","id":37},{"text":"Highlights","hash":"highlights","id":38},{"text":"Added","hash":"added_7","id":39},{"text":"Changed","hash":"changed_5","id":40},{"text":"Fixed","hash":"fixed_14","id":41},{"text":"Removed","hash":"removed","id":42},{"text":"RPC API","hash":"rpc_api","id":43},{"text":"Python requirement","hash":"python_requirement","id":44},{"text":"Configuration changes","hash":"configuration_changes","id":45},{"text":"v0.4.5","hash":"v0_4_5","id":46},{"text":"Added","hash":"added_8","id":47},{"text":"Fixed","hash":"fixed_15","id":48},{"text":"New contributors","hash":"new_contributors","id":49},{"text":"v0.4.4","hash":"v0_4_4","id":50},{"text":"Added","hash":"added_9","id":51},{"text":"Fixed","hash":"fixed_16","id":52},{"text":"Changed","hash":"changed_6","id":53},{"text":"New contributors","hash":"new_contributors_2","id":54},{"text":"v0.4.3","hash":"v0_4_3","id":55},{"text":"Fixed","hash":"fixed_17","id":56},{"text":"Changed","hash":"changed_7","id":57},{"text":"v0.4.2","hash":"v0_4_2","id":58},{"text":"Added","hash":"added_10","id":59},{"text":"Fixed","hash":"fixed_18","id":60},{"text":"v0.4.1","hash":"v0_4_1","id":61},{"text":"Highlights","hash":"highlights_2","id":62},{"text":"Configuration option deprecation","hash":"configuration_option_deprecation","id":63},{"text":"Network selection","hash":"network_selection","id":64},{"text":"Gateway proxy","hash":"gateway_proxy","id":65},{"text":"Configuration file","hash":"configuration_file","id":66},{"text":"Changed","hash":"changed_8","id":67},{"text":"Fixed","hash":"fixed_19","id":68},{"text":"Added","hash":"added_11","id":69},{"text":"v0.4.0- (breaking release)","hash":"v0_4_0_breaking_release","id":70},{"text":"Default RPC version change","hash":"default_rpc_version_change","id":71},{"text":"Starknet v0.10.2 support","hash":"starknet_v0_10_2_support","id":72}]},"43":{"id":43,"text":"You can subscribe to get the latest version updates delivered to your inbox at Starknet Roadmap & version updates. For information on the current version of Starknet, see the Starknet release notes.","title":"Upcoming Starknet versions","component":"ROOT","version":"","name":"upcoming-versions","url":"/starknet-versions/upcoming-versions/","titles":[{"text":"Roadmap and version updates","hash":"what_to_expect","id":1}]},"44":{"id":44,"text":"You can get the latest updates delivered to your inbox by subscribing to the Starknet Devs Newsletter. Testnet: Feb 17-24 Mainnet: March 10-24 Termination of RPC versions Dapp API forum post SNIP-16 Blob gas on Starknet is now 5x cheaper (!) using: Squashing discount factor: Users pay for the expected marginal contribution of their transaction to the blobs sent to L1 State diff compression: Starknet submits compressed state diffs to L1. To better lends itself to the new compression scheme as well as allow its construction to be based on the state diff alone, the uncompressed encoding of contract diff headers changes to: \\[\\underbrace{\\text{new_nonce (if changed)}}_{\\text{64 bits}} | \\underbrace{\\text{n_updates}}_{\\text{8 or 64 bits}} | \\underbrace{\\text{n_updates_len}}_{\\text{1 bit}} | \\underbrace{\\text{flag}}_{\\text{1 bit}}\\] where: The semantics of flag is unchanged (i.e., it indicates whether or not the class was replaced) n_updates_len is 0 if the number of updates is less than 256 (and therefore can fit in 8 bits), and 1 otherwise n_updates can spread over 8 or 64 bits, depending on n_updates_len If the nonce of the contract is unchanged, the value of new_nonce is zero (and not the unchanged nonce) Starknet v0.13.3 post in the Starknet community forum Fall roadmap updates post on the Starknet community forum Optimistic parallelization in the sequencer. Applicative recursion (\"blockpacking\"): pack a contiguous sequence of blocks into a single L1 state update, instead of just one block. This change also affects the Starknet core contract on L1 and the structure of data availability: The contract will store also the hash of the \"aggregator\" program, alongside the hash of the Starknet OS. The LogStateUpdate event will be emitted once for every sequence of blocks in an applicative tree, rather than for every block. The data posted on L1 is now the output of the aggregator, instead of the OS. The OsOutputHeader struct will contain four new fields: prev_block_number, prev_block_hash, os_program_hash, full_output. New block hash definition: see the reference implementation here. All objects containing the block hash will use the new block hash computation. Receipts will contain a new property total_gas_consumed, only for transactions after v0.13.2. Three new builtins can appear in the builtin_instance_counter property of execution_resources in the transaction receipts: add_mod, mul_mod and range_check96. End support for the endpoints get_block_traces and get_transaction_trace. No changes in v0.13.2. The new JSON RPC version v0.8.0 will be released alongside Starknet v0.13.3. A new compiler version will be released for v0.13.2, Cairo v2.7.0. This includes a Sierra upgrade to v1.6.0, i.e. contracts compiled with the new compiler will only be accepted on Starknet v0.13.2 onwards. The Starknet-related features that will be added in this Cairo version include: sha256 syscall - syscall for computing sha256 on an arbitrary length input: High level code for using sha256/ Syscall cost - the dominant part of the syscall is ~1.1k bitwise builtin applications which today costs ~180 L1 gas (the 2k steps are negligible in comparison). The syscall is applied once for ~14 u32. Circuit builtin - the new compiler version will introduce a way to define ad-hoc algebraic circuits in Cairo. Circuits use the new mul_mod and add_mod builtins under the hood. Example usage can be found in circuit_test.cairo. Errors prettifying: execution errors are becoming more structured, which will be the basis for better error handling in the next JSON RPC version, resulting in nice error displays by wallets. Community Forum Posts: Starknet v0.13.2 pre-release notes Optimistic parallelization revived Upcoming Feature: Starknet Applicative Recursion Cairo v2.7.0 is coming! In response to community feedback, Starknet 0.13.1.1 reduces class declaration fees and increases the calldata limit: Resource Gas cost (0.13.1) Gas cost (0.13.1.1) CASM bytecode 28 gas/felt 1 gas/felt Sierra bytecode 28 gas/felt 1 gas/felt ABI 0.875 gas/character 0.032 gas/character Entity Limit (0.13.1) Limit (0.13.1.1) Calldata length (felts) 4,000 5,000 Cheaper data availability (DA): Starknet uses EIP-4844. State diffs are now blobs, rather than calldata, requiring the addition of data_gas to the Starknet block header. Time-related syscalls when called from an account contract’s __validate__, __validate_deploy__, __validate_declare__, or constructor function: block_timestamp returns the hour, rounded down. block_number returns the block number, rounded down to the nearest multiple of 100. Optimization: Load into memory only the functions in a contract that are actually used when generating the proof. The block header includes the following new fields: l1_da_mode: A string enum that takes the value CALLDATA or BLOB, and indicates whether EIP-4844 is the data availability solution that is used for the block. Also appears in pending block. l1_data_gas_price: Contains price_in_wei and price_in_fri, where 1 fri is 10-18 STRK. Also appears in pending block. l1_gas_price: Replaces eth_l1_gas_price and strk_l1_gas_price. Contains the data gas price (EIP-4844) in addition to the regular gas price. Starknet 0.13.1 is backward compatible with starknet_api_openrpc.json v0.6.0. Responses from 0.13.1 can be mapped naturally into v0.6.0 objects. A new version of starknet_api_openrpc.json, 0.7.0, accommodates the changes introduced by Starknet using EIP-4844. BLOCK_HEADER includes two new fields to support EIP-4844: l1_data_gas_price: contains price_in_wei and price_in_fri (10-18 denominations, similar to v0.6.0). l1_da_mode: An enum that indicates whether this block will use calldata or blobdata and can take the following values: CALLDATA BLOB FEE_ESTIMATE Includes two new fields: data_gas_consumed data_gas_price overall_fee is now: gas_consumed × gas_price + data_gas_consumed × data_gas_price Fee estimates will change depending on the data availability solution used by current Starknet blocks. For example, if you estimate the fee against the pending block, and it’s currently using CALLDATA, then nodes are expected to return data_gas_consumed=0 and compute the fee similarly to today, that is, get higher estimates. Receipts and traces now include data availability resources COMMON_RECEIPT_PROPERTIES, the main receipt object, now includes a new entry: execution_resources. The EXECUTION_RESOURCES object now includes the field data_availability. Note that the resources of internal calls will remain the same/ For more information, see the PR for the API JSON RPC specs EXECUTION_RESOURCES Computation resources are separated from data availability resources. This is done by introducing the data_availability property, which includes l1_gas and l1_data_gas, which were consumed due to DA requirements. One of these will always be zero, depending on whether or not the block uses calldata or blobs, as specified by the l1_da_mode field in the block header. Syscall costs are now included in the execution resources of traces and receipts. These are costs that are already being paid for but were not reported so far. A Cairo step now costs 0.0025 gas/step, a 50% reduction. All builtins costs are accordingly reduced by 50%. Each felt in the calldata and signature arrays of all transaction types now costs 0.128 gas/felt. Each felt of a sierra_program in the contract class and of bytecode in the compiled contract class now costs 28 gas/felt. v1 DECLARE transactions only include bytecode. Each character in the ABI costs 0.875 gas. An additional felt to the data array of an event now costs 0.128 gas/felt, similar to calldata. An additional felt to the keys array now costs 0.256 gas/felt. Starknet now supports multiple L1 providers. Community Forum Posts: Starknet v0.13.1: EIP4844 Support, More Fee Reductions, Stability, Quality of Life Starknet v0.13.1: Fee Reduction Data availability with EIP4844 Starknet v0.13.1 pre-release notes Starknet v0.13.0 is live on Mainnet. Starknet 0.13.0 includes the following changes: v3 transactions, including: Fee payment in STRK Reserved fields for future features, such as Volition and payment master get_block API: The gas_price field is replaced by the eth_l1_gas_price and strk_l1_gas_price fields. This change applies also to existing blocks. For more information on the new fields, see the JSON RPC API Spec on GitHub Sierra v1.4.0. This new version of Sierra is part of Crate v2.4.0, in the Cairo 2.4.0 package. For more information, see Cairo v2.4.0 is out! on the Community forum. Improved performance of secp256k1_mul and secp256r1_mul syscalls Computation cost is reduced by approximately 50% as a result of reduced Cairo steps and increased use of builtins. L1 data availability cost is reduced by approximately 10%-25%. For an ERC-20 transfer, the DA fee reduction is 25%. Starknet v0.12.3 is live on Mainnet. This release partially removes support for the Starknet feeder gateway. For details, see Feeder Gateway Deprecation in Development Proposals on the Starknet community forum. Additionally, this version includes the following changes: Performance optimizations in the gateway, the computation of the Patricia storage root, and block hash Support for secp256r1 syscalls in the Starknet OS. Restriction for __validate__ and the constructor of DeployAccount transactions: Restrict access to sequencer_address in the get_execution_info syscall by returning 0's for the address. Restrict access to the following syscalls: Cairo contracts: get_block_hash Cairo 0 contracts: get_sequencer_address This version is available on both Goerli and Sepolia testnets. Move structs that are common to secp256k1 and secp256r1 to a separate file. Starknet v0.12.2 is live on Mainnet. This version includes the following changes: Enabling P2P Authentication: An additional endpoint in the sequencer gateway to provide a signature on the state diff commitment and block hash. Resolving Mismatches in Queries: An extension to the get_state_update endpoint in the sequencer gateway that returns both the pending state diff and the pending block together. Increased maximum Cairo steps per transaction from 1 million to 3 million. Starknet v0.12.1 is live on Mainnet. This version includes the following changes: Mempool Validation. Inclusion of Failed Transactions. Keccak builtin. Starknet v0.12.0 is live on Mainnet. This version contains the following changes: Use the rust blockifier and LambdaClass’s Cairo VM to accelerate the sequencer’s time to handle transactions. Support version 2.0.0 of the Cairo compiler. Replace the PENDING status of transactions to ACCEPTED_ON_L2 - once a transaction is in that status it means that it will be included in a block, this applies to transactions - blocks still have the PENDING status. Add an experimental get_block_hash syscall. Change HTTP error code from 500 to 400 on API errors. Starknet v0.11.2 is live on Mainnet. This version contains the following changes: Upgrade Cairo 1.0 version to v1.0.0-rc0 (Cairo 1.0 activated on Starknet!) Starknet v0.11.1 is live on Mainnet. This version contains the following changes: Upgrade Cairo 1.0 version to v1.0.0-rc0. Charged transaction fee is now based on an average Ethereum gas price instead of a single sample (estimation API is unaffected). API changes: Remove the state root in get_state_update for pending blocks to allow faster responses in future versions. Testing framework: Allow declaring (and interacting with) Cairo 1.0 contracts. Currently, the Cairo 1.0 ABI is not supported yet, so a Cairo 0 ABI should be supplied to declare() manually. Split deploy() to two phases declare and deploy: deprecated_declare() (for Cairo 0 contract) or declare() (for Cairo 1.0 contracts) and deploy() (for both). Add current block hash to the Starknet Core Contract (currently not verified by the Starknet OS): Breaking change: The LogStateUpdate event’s data is changed to include blockHash. Starknet v0.11.0 is live on Mainnet. invoke and declare transactions of version 0 are no longer supported on this version. In Starknet v0.11.0, you can declare, deploy and run Cairo 1.0 smart contracts. We also introduce a new system call that allows a smooth transitioning of existing contracts to a Cairo 1.0 implementation. Historically, contract classes have been defined in terms of Cairo assembly, or Casm for short (the class definition also included more information needed for execution, e.g., hint data). The novelty of Cairo 1.0 is the introduction of Sierra (Safe Intermediate Representation), an intermediate layer between Cairo 1.0 and Casm. The introduction of Cairo 1.0 and Sierra has several effects on the system. Below we list the effects on each component; of particular note are: A new version of the declare transaction, which allows sending the new class structure The state commitment will now include contract classes Changes to the onchain data format New system call - replace_class The deploy transaction is no longer supported on this version. This version contains the following changes: Starknet Performance - Separate the state commitment computation from the execution of the transactions Add starknet-class-hash command to compute the class hash of a compiled Starknet contract Cairo: Autoformatter: Automatically break lines inside expressions This version introduces sequencer parallelization! This is the first step in our roadmap of performance upgrades. Details about the specific mechanism of parallelization and the roadmap in general are described in this medium post. A new endpoint, estimate_fee_bulk, is added to the feeder gateway. This will allow estimating the fee of several transactions at once, where each transaction is executed relative to the resulting state from applying the previous one. Sequencing performance improvements Builtin ratio changes, which affects builtin costs Add estimate_fee_bulk API that computes the fee of multiple transactions that will be executed consecutively As part of this version, we will also increase the finality of transactions in the pending block, by fixing the timestamp at the time of the block creation. This will solve the issue of transactions moving from pending to rejected on account of too old timestamp This version contains the following changes: Starknet: Add DeployAccount transaction (which will replace the Deploy transaction for deploying account contracts). To use it, you should first add enough funds to your account address to pay the transaction fee, and then you can invoke DeployAccount Split the starknet deploy_account CLI command into starknet new_account and starknet deploy_account Account contracts that are expected to be deployed this way should implement the`validate_deploy()` entry point, which should check the signature of the DeployAccount transaction Improve L1 fee computation: the fee is computed according to the diff of the storage state API: Remove entry_point_type field from transaction information Cairo: Add uint256_mul_div_mod to uint256.cairo This version introduces the next step in Starknet’s account abstraction design, specifically the validate/execute separation. See here for more information. This version contains the following changes: Starknet: Contract (breaking changes): @external and @view functions should be imported directly by the main compiled file. Otherwise, they will not be usable as external functions Forbid using the same storage variable name in two modules New transaction version (version 1) for invoke and declare transactions: Transactions of version 0 are deprecated and will not be supported in Starknet from the next version (v0.11.0). Please update your systems to use the new version In order to use transactions of version 1 you will need to upgrade your account contracts Add nonce field to the transactions. Nonce validation is now part of the Starknet protocol and is enforced to be executed sequentially Invoke: Split execute to two functions:` validate` (only validates the transaction) and execute (only executes the transaction) Remove the selector (which is now always execute) field, following the above change. Declare: declare transaction should now be sent from an account (and is validated using validate_declare in the account contract) Support fee for sending L1 messages. At this point, it’s not mandatory and messages with no fee will still be handled. Starting from the next version it will become mandatory. Cairo: Syntax changes in Cairo (to make it more similar to rust and C++): You can use the cairo-migrate script to convert old code to the new syntax. Use the -i flag to apply the changes to the files End statements with ; New lines are still part of the language at this point, and you cannot put more than one instruction per line. This will change in Cairo1.0. Use { … } for code blocks (instead of : and end) Add () around the condition of if statements Remove the member keyword in structs Change comment to use // instead of # Use …​, ap` instead of `...; ap in low level Cairo code Support return types that are not tuples. For example, func foo() → felt (instead of func foo() → (r: felt)) As a result, it’s now mandatory to specify return types. func foo() → (res) should be replaced by func foo() → (res: felt). The cairo-migrate tool does that automatically. Return statement accepts expressions, rather than only tuples. For example, you can write let x = (5,); return x; A few standard library functions were changed to return felt. The cairo-migrate script also fixes calls to those functions Support using functions as expressions This only applies to functions with → felt signature`, whose ap change is known at compile-time (e.g., recursive functions cannot be used this way) Fix a bug in the secp signature verification code that allowed a malicious prover to ignore the value of v (this does not let the prover fake a signature, but allows it to claim that a valid signature is invalid). Add Cairo code for the recursive STARK verifier Technical changes: * Move from python3.7 to python3.9 This version contains the following changes: Starknet: API changes: Add get_block_traces API - returns all the transaction traces of a given block Add a list of declared contracts in get_state_update Add a 0x prefix for class hash in the API Add starknet_version field for blocks (only applies to new blocks) Starknet CLI: Change the default block number to pending Using a wallet is the default, --no_wallet must be specified explicitly to override this Deploying contracts: Add deploy_contract function to the account contract created by starknet deploy_account Use this function to deploy contract (unless using --no_wallet). In particular, deploy should be used after declaring the contract (it expects the contract class hash) Support --dry_run to get the transaction information without signing or sending it Support deploy_from_zero in the deploy syscall to deploy a contract to an address that does not depend on the deployer Cairo: * Support and in if statements (if x == y and z == w). At the moment other boolean combinations are not supported This version introduces the contract class/instance paradigm into Starknet. See here for more information. This version contains the following changes: Starknet: Enforce fees - max_fee must not be set to zero, and selector must be execute Split the concepts of contract class and contract instance. Add declare transaction type New API and CLI commands: declare - Declares a contract class get_class_by_hash - Returns the contract class given its hash get_class_hash_at - Returns the class hash for a given contract instance address Rename delegate_call to library_call, and change the contract address argument to class hash. Add a deploy system call. Rename ContractDefinition to ContractClass Reduce the compiled contract file’s size by removing unnecessary identifiers (this optimization can be disabled using --dont_filter_identifiers) Cairo: Initial support for the EC-op builtin (scalar multiplication over the STARK curve). Not supported in Starknet yet. Add additional helper methods to blake2s.cairo, including big-endian support Technical changes: * Change function’s return type from a struct to a named tuple. In particular, foo.Return.SIZE is no longer supported.","title":"Release notes","component":"ROOT","version":"","name":"version-notes","url":"/starknet-versions/version-notes/","titles":[{"text":"Starknet v0.13.4 (Pre-release)","hash":"version0.13.4","id":1},{"text":"Rough timelines","hash":"rough_timelines","id":2},{"text":"RPC updates","hash":"rpc_updates","id":3},{"text":"Wallet ⇄ DApp API update","hash":"wallet_dapp_api_update","id":4},{"text":"Upcoming termination of old transaction versions","hash":"upcoming_termination_of_old_transaction_versions","id":5},{"text":"Additional resources","hash":"additional_resources","id":6},{"text":"Starknet v0.13.3 (November 20, 24)","hash":"version0.13.3","id":7},{"text":"Additional resources","hash":"additional_resources_2","id":8},{"text":"Starknet v0.13.2 (August 28, 24)","hash":"version0.13.2","id":9},{"text":"New features and enhancements","hash":"new_features_and_enhancements","id":10},{"text":"API changes","hash":"api_changes","id":11},{"text":"Feeder gateway","hash":"feeder_gateway","id":12},{"text":"JSON RPC","hash":"json_rpc","id":13},{"text":"Cairo","hash":"cairo","id":14},{"text":"Others","hash":"others","id":15},{"text":"Additional resources","hash":"additional_resources_3","id":16},{"text":"Starknet v0.13.1.1 (April 15, 24)","hash":"version0.13.1.1","id":17},{"text":"Starknet v0.13.1 (March 13, 24)","hash":"version0.13.1","id":18},{"text":"New features and enhancements","hash":"new_features_and_enhancements_2","id":19},{"text":"Block header updates","hash":"block_header_updates","id":20},{"text":"API: JSON RPC","hash":"api_json_rpc","id":21},{"text":"Starknet API JSON RPC 0.6.0","hash":"starknet_api_json_rpc_0_6_0","id":22},{"text":"Starknet API JSON RPC 0.7.0","hash":"starknet_api_json_rpc_0_7_0","id":23},{"text":"Pricing changes","hash":"pricing_changes","id":24},{"text":"Computation","hash":"computation","id":25},{"text":"Calldata and signatures","hash":"calldata_and_signatures","id":26},{"text":"Class declaration","hash":"class_declaration","id":27},{"text":"Events","hash":"events","id":28},{"text":"Infrastructure updates","hash":"infrastructure_updates","id":29},{"text":"Additional resources","hash":"additional_resources_4","id":30},{"text":"Starknet v0.13.0 (Jan 10, 24)","hash":"version0.13.0","id":31},{"text":"Starknet v0.12.3 (Nov 19, 23)","hash":"version0.12.3","id":32},{"text":"Cairo 0","hash":"cairo_0","id":33},{"text":"Starknet v0.12.2 (Sep 04, 23)","hash":"version0.12.2","id":34},{"text":"Starknet v0.12.1 (Aug 21, 23)","hash":"version0.12.1","id":35},{"text":"Starknet v0.12.0 (July 12, 23)","hash":"version0.12.0","id":36},{"text":"Starknet v0.11.2 (May 31, 23)","hash":"version0.11.2","id":37},{"text":"Starknet v0.11.1 (May 23, 23)","hash":"version0.11.1","id":38},{"text":"Starknet v0.11.0 (Mar 29, 23)","hash":"version0.11.0","id":39},{"text":"Starknet v0.10.3 (Dec 12, 22)","hash":"version0.10.3","id":40},{"text":"Starknet v0.10.2 (Nov 29, 22)","hash":"version0.10.2","id":41},{"text":"Starknet v0.10.1 (Oct 25, 22)","hash":"version0.10.1","id":42},{"text":"Starknet v0.10.0 (Sept 05, 22)","hash":"version0.10.0","id":43},{"text":"Starknet v0.9.1 (July 20, 22)","hash":"version0.9.1","id":44},{"text":"Starknet v0.9.0 (June 06, 22)","hash":"version0.9.0","id":45}]},"45":{"id":45,"text":"A list of recommended full-nodes, open API endpoints, and API providers. For complete information on the Starknet Node API in JSON RPC format, see starknet_api_openrpc.json on GitHub. Table 1. API providers Provider Open API endpoint, where relevant Version support, where relevant Alchemy Starknet API FAQ All That Node Blast API https://blastapi.io/public-api/starknet Starknet Public API - Blast API BlockPI https://starknet.blockpi.network/v1/rpc/public Chainbase Chainstack Getting started > Starknet JSON-RPC version endpoints dRPC https://drpc.org/chainlist/starknet Dwellir https://www.dwellir.com/networks/starknet GetBlock Use the /rpc/vX_Y suffix, as explained in JSON-RPC API in Pathfinder’s README. Infura Lava Protocol https://www.lavanet.xyz/get-started/starknet Use the /rpc/vX_Y suffix, as explained in JSON-RPC API in Pathfinder’s README. Nethermind https://data.voyager.online RPC spec versions NOWNodes OMNIA QuickNode Supporting Multiple Versions Reddio Zan https://zan.top/service/public-rpc/starknet Use the /rpc/vX_Y suffix, as explained in JSON-RPC API in Pathfinder’s README. Table 2. Node providers Provider name Description More information Madara Madara is a powerful Starknet client written in Rust. github.com/madara-alliance/madara Juno A Starknet full-node written in go-lang by Nethermind. You can use the Juno Node runner on AWS. github.com/NethermindEth/juno Papyrus A Starknet full-node written in Rust by StarkWare github.com/starkware-libs/papyrus Pathfinder A Starknet full-node written in Rust by Equilibrium github.com/eqlabs/pathfinder","title":"Full nodes and API services","component":"ROOT","version":"","name":"api-services","url":"/tools/api-services/","titles":[]},"46":{"id":46,"text":"Building a Starknet project and want your contract to be audited? The companies listed below have designated teams that provide auditing services to Starknet contracts. Table 1. A list of companies providing contract audits for Starknet Company name URL ABDK www.abdk.consulting Beosin beosin.com Chain Security chainsecurity.com Consensys Diligence consensys.net/diligence Extropy security.extropy.io Nethermind nethermind.io Open Zeppelin www.openzeppelin.com OtterSec osec.io PeckShield peckshield.com Trail of Bits www.trailofbits.com Zellic www.zellic.io Ginger Security gingersec.xyz","title":"Audit providers","component":"ROOT","version":"","name":"audit","url":"/tools/audit/","titles":[]},"47":{"id":47,"text":"The tokens that are currently bridged to Starknet, including their L1 and L2 addresses, are listed in the following .json files: mainnet.json The addresses of the tokens currently bridged to Starknet Mainnet. sepolia.json The addresses of the tokens currently bridged to Starknet Sepolia testnet. Each token has the following parameters: name Token name. symbol Token symbol. decimals Number of decimal places used to get the user representation. l1_token_address Address of the L1 ERC-20 contract. l2_token_address Address of the L2 ERC-20 contract. l1_bridge_address Address of the L1 bridge contract. l2_bridge_address Address of the L2 bridge contract.","title":"Bridged tokens and addresses","component":"ROOT","version":"","name":"bridged-tokens","url":"/tools/bridged-tokens/","titles":[]},"48":{"id":48,"text":"The Starknet development ecosystem consists of tools built to work and support the latest version of Starknet. As Starknet evolves, these tools are updated to support its latest features. Each version of Starknet is usually coupled with an update of all or some of: Starknet API Cairo Sierra The following tables provide an overview of the compatibility between Starknet updates and the tools in the ecosystem. Currently this page is being manually updated. Contributions with more up-to-date information are more than welcome. The following tables specifies the latest version of Starknet API, Cairo and Sierra supported by each Starknet version. The Pathfinder and Juno versions represent the recommended versions for running a full node with the relevant Starknet version. Starknet 0.13.2 Starknet 0.13.1 Starknet 0.13.0 RPC Version 0.7 0.7 0.6 Cairo Version 2.8.0 2.6.0 2.4.0 Sierra Version 1.6.0 1.5.0 1.4.0 Pathfinder 0.14.1 0.11.0 0.10.0 Juno 0.12.0 0.11.0 0.8 The following table specifies: For the latest API version: the recommended version for working with the respective API version. If a newer version exist, the newest version should be used instead. For older API versions: the last recommended version of the tool that worked with the respective API version. RPC 0.7 RPC 0.6 starknet.js ≥ 6.11.0 5.14.0 starknet.py ≥ 0.21.0 0.20.0 starknet-rs ≥ 0.11.0 0.10.0 starknet.go ≥ 0.7.0 0.6.1 starknet-jvm ≥ 0.11.0 0.10.0 starknet.swift ≥ 0.9.0 0.8.0 Starkli ≥ 0.3.0 0.2.0 Pathfinder ≥ 0.11.0 0.10.2 Juno ≥ 0.11.0 0.8.0 Starknet Foundry ≥ 0.27.0 0.20.0 Starknet Devnet RS ≥ 0.1.2 0.0.2 The following tables specifies: For SDKs: the version that support the respective Cairo version types and can declare and deploy contracts written in that version. For Starknet Foundry and Scarb: the version that can compile, declare, and deploy contracts written in the respective Cairo version. For Starknet Devnet: the version that contracts written in the respective Cairo version can be declared and deployed on. For Starkli: the version that can declare and deploy contracts written in the respective Cairo version. Cairo 2.8.0 Cairo 2.7.0 Cairo 2.6.0 starknet.js 6.11.0 - - starknet.py ≥ 0.24.1 ≥ 0.24.1 0.19.0 starknet-jvm ≥ 0.11.1 ≥ 0.11.1 ≥ 0.11.1 starknet.swift ≥ 0.9.0 ≥ 0.9.0 ≥ 0.9.0 starkli 0.3.4 0.3.4 0.3.3 Scarb 2.8.1 2.7.1 2.6.5 Starknet Foundry ≥ 0.28.0 ≥ 0.28.0 0.27.0 Starknet Devnet RS 0.2.0-rc.3 0.2.0-rc.3 0.1.2","title":"Starknet Compatibility Tables","component":"ROOT","version":"","name":"compatibility","url":"/tools/compatibility/","titles":[{"text":"Overview","hash":"overview","id":1},{"text":"Starknet versions","hash":"starknet_versions","id":2},{"text":"Starknet API","hash":"starknet_api","id":3},{"text":"Cairo","hash":"cairo","id":4}]},"49":{"id":49,"text":"Following Maker DAO’s announcement on Jan 25th, StarkWare launched a new DAI contract and bridge on Starknet. The new DAI token and bridge are a part of StarkGate and compatible with StarkGate 2.0 features. You can withdraw old DAI tokens (DAI v0) without any limitation. Depositing using the DAI v0 bridge are disabled. You are encouraged to migrate to the new DAI token. You can use swap services on Starknet to swap DAI v0 for DAI. Maker DAO’s DAI token on Starknet is written in Cairo0 and is not upgradeable. Without upgradability, it cannot support StarkGate’s latest features, such as Smart Deposits and Withdrawal Limits, and over time it will stop being compatible with Starknet altogether (Regenesis). This means that a transition plan is necessary. On January 25th, StarkWare launched a new set of DAI bridge and token contracts under StarkGate, written in Cairo. This new DAI token will retain the same contract ’symbol’ and ’name’ as the existing one. To differentiate between the two on Apps and other UIs, we refer to the old DAI as “DAI v0” and the new DAI simply as “DAI.” Procedure Use one of the following methods: Swap your DAI v0 for DAI using an L2 swap app or aggregator within the Starknet ecosystem, such as the following: LayerSwap Ekubo AVNU Fibrous JediSwap Haiko Nostra StarkDeFi Use StarkGate: Withdraw your current DAI (DAI v0) to L1 using StarkGate Re-deposit your L1 DAI using StarkGate. StarkGate automatically issues the new DAI.","title":"Migrating DAI v0 to DAI","component":"ROOT","version":"","name":"dai-token-migration","url":"/tools/dai-token-migration/","titles":[]},"50":{"id":50,"text":"Welcome to the data indexers page! Here, you’ll find all the information related to indexers and data services available on Starknet. Table 1. Starknet data indexers, in alphabetical order Data indexer name URL DipDup https://dipdup.io/docs/quickstart-starknet","title":"Data indexers","component":"ROOT","version":"","name":"data-indexers","url":"/tools/data-indexers/","titles":[]},"51":{"id":51,"text":"This reference guide presents various Oracles that you can utilize while building on Starknet. Oracles supply offchain data to the blockchain, enabling smart contracts to access a diverse range of information. Table 1. Starknet oracles, in alphabetical order Oracle Integration guide Chainlink docs.chain.link/data-feeds/starknet Pragma docs.pragma.build/v1/Resources/ConsumingDataFeed Pyth Network docs.pyth.network/price-feeds/use-real-time-data/starknet","title":"Oracles","component":"ROOT","version":"","name":"oracles","url":"/tools/oracles/","titles":[]},"52":{"id":52,"text":"A block explorer, or blockchain explorer, enables you to see transactions, blockchain metrics and other information. The following block explorers provide information on Starknet. Name Mainnet explorer Sepolia explorer Voyager voyager.online sepolia.voyager.co Starkscan starkscan.co sepolia.starkscan.co ViewBlock viewblock.io/starknet N/A OKLink oklink.com/starknet N/A NFTScan (NFT explorer) starknet.nftscan.com N/A","title":"Block explorers","component":"ROOT","version":"","name":"ref-block-explorers","url":"/tools/ref-block-explorers/","titles":[]},"53":{"id":53,"text":"The Starknet Book serves as a comprehensive guide to understanding Starknet, Cairo, and introduces you to the Starknet ecosystem. The Starknet Book caters to various objectives and interests. Mix and match these chapters to customize your learning experience based on your unique interests and requirements. Whether you’re exploring smart contract development, frontend integration, or learning about the core architecture, The Starknet Book is your trusted companion on the journey of deepening your understanding of Starknet. Chapter Description Chapter 1 Introduction to Starknet and Cairo How to quickly get started with Starknet and Cairo development. Chapter 2 Starknet tooling An overview of the available tooling for Starknet. Chapter 3 Starknet architecture Learn how Starknet works under the hood. Learn how sequencer, prover and nodes interact. chapter 4 Account abstraction Account abstraction is one of the main usability features of Starknet. Learn how this works and how you can utilize it.","title":"About the Starknet Book","component":"ROOT","version":"","name":"starknet-book","url":"/tools/starknet-book/","titles":[{"text":"Table of Contents","hash":"table_of_contents","id":1}]},"54":{"id":54,"text":"The functions in the table Starknet account interface functions are part of account contracts. Where required, you must include these functions within your account contract. The logic of these functions can be mostly arbitrary, with a few limitations. For information on these limitations, see Limitations on validation. Table 1. Starknet account interface functions Function name When required __validate__ Always required __execute__ Always required. The signatures of __validate__ and __execute__ must be identical. Two critical validations must happen in __execute__, and their absence can lead to draining of the account’s funds: (1) assert!(get_caller_address().is_zero()) This asserts that the account’s __execute__ is not called from another contract, thus skipping validations (in later versions we may disallow calling execute from another contract at the protocol level) (2) assert!(get_tx_info().unbox().version.into() >= 1_u32) This asserts that the transaction’s version is at least 1, preventing the account from accepting INVOKE v0 transactions. It is critical to explicitly disallow the deprecated v0 transaction type, as v0 transactions assume that the signature verification happens in __execute__, and are thus skipping __validate__ entirely. __validate_declare__ Required for the account to be able to send a DECLARE transaction. This function must receive exactly one argument, which is the class hash of the declared class. __validate_deploy__ Required to allow deploying an instance of the account contract with a DEPLOY_ACCOUNT transaction. The arguments of __validate_deploy__ must be the class hash of the account to be deployed, the salt used for computing the account’s contract address, followed by the constructor arguments. You can only use the __validate_deploy__ function in an account contract to validate the DEPLOY_ACCOUNT transaction for that same contract. That is, this function runs at most once throughout the lifecycle of the account. constructor All contracts have a constructor function. It can be explicitly defined in the contract, or if not explicitly defined, the sequencer uses a default constructor function, which is empty. When the sequencer receives a transaction, it calls the corresponding validation function with the appropriate input from the transaction’s data, as follows: For an INVOKE transaction, the sequencer calls the __validate__ function with the transaction’s calldata as input. The transaction’s calldata will be deserialized to the arguments in the __validate__ function’s signature, it is up to the sender to make sure that the calldata is encoded appropriately according to validate’s signature. After successfully completing validation, the sequencer calls the __execute__ function with the same arguments. For a DEPLOY_ACCOUNT transaction, the sequencer calls the constructor function with the transaction’s constructor_calldata as input (as above, it is expected that the constructor’s calldata successfully deserializes to the arguments in the constructor signature). After the successful execution of the constructor, the sequencer validates the transaction by calling the __validate_deploy__ function. For a DECLARE transaction, the sequencer validates the transaction by calling the __validate_declare__ function. For more information on the available transaction types and their fields, see Transaction types. For more information on the validation and execution stages, see Transaction lifecycle. Separating the validation and execution stages guarantees payment to sequencers for work completed and protects them from Denial of Service (DoS) attacks. The following validation functions: __validate__, __validate_deploy__, and __validate_declare__. A constructor, when run in a DEPLOY_ACCOUNT transaction (in particular, not when an account is deployed from an existing class via the deploy syscall) are subject to the following limitations: You cannot call functions in external contracts, only in your account contract. This restriction enforces a single storage update being able to invalidate only transactions from a single account. However, be aware that an account can always invalidate its own past transactions by e.g. changing its public key. This limitation implies that the fees you need to pay to invalidate transactions in the mempool are directly proportional to the number of unique accounts whose transactions you want to invalidate. The maximum number of Cairo steps in each of the three validation functions is 1,000,000. The get_execution_info syscall behaves differently When raised from one of the validate functions: sequencer_address is set to zero block_timestamp returns the time (in UTC), rounded to the most recent hour. block_number returns the block number, rounded down to the nearest multiple of 100. The following syscalls cannot be called: get_block_hash get_sequencer_address (this syscall is only supported for Cairo 0 contracts). These limitations are designed to prevent the following DoS attacks on the sequencer: An attacker could cause the sequencer to perform a large amount of work before a transaction fails validation. Two examples of such attacks are: Spamming INVOKE transactions whose __validate__ requires many steps, but eventually fails Spamming DEPLOY_ACCOUNT transactions that are invalid as a result of the constructor or __validate_deploy__ failing. The above attacks are solved by making sure that the validation step is not resource-intensive, e.g. by keeping the maximal number of steps low. However, even if the validation is simple, the following \"mempool pollution\" attack could still be possible: An attacker fills the mempool with transactions that are valid at the time they are sent. The sequencer is ready to execute them, thinking that by the time it includes them in a block, they will still be valid. Shortly after the transactions are sent, the attacker sends one transaction that somehow invalidates all the previous ones and makes sure it’s included in a block, e.g. by offering higher fees for this one transaction. An example of such an attack is having the implementation of __validate__ checks that the value of a storage slot is 1, and the attacker’s transaction later sets it to 0. Restricting validation functions from calling external contracts prevents this attack. When the __validate__, __validate_deploy__, or __validate_declare__, function fails, the account in question does not pay any fee, and the transaction’s status is REJECTED. A transaction has the status REVERTED when the __execute__ function fails. A reverted transaction is included in a block, and the sequencer is eligible to charge a fee for the work done up to the point of failure, similar to Ethereum. Thanks to account abstraction, the logic of __execute__ and the different validation functions is up to the party implementing the account. To see a concrete implementation, see OpenZeppelin’s account component. This implementation adheres to SNIP6, which defines a standard for account interfaces.","title":"Account interface function reference","component":"ROOT","version":"","name":"account-functions","url":"/architecture-and-concepts/accounts/account-functions/","titles":[{"text":"Overview","hash":"overview","id":1},{"text":"Limitations on validation","hash":"limitations_of_validation","id":2},{"text":"Invalid transactions","hash":"invalid_transactions","id":3},{"text":"Reverted transactions","hash":"reverted_transactions","id":4},{"text":"Implementation reference","hash":"implementation_reference","id":5}]},"55":{"id":55,"text":"Starknet’s account structure is inspired by Ethereum’s EIP-4337, where instead of EOAs, you use smart contract accounts with arbitrary verification logic. While not mandatory at the protocol level, you can use a richer standard interface for accounts, defined in Starknet Improvement Proposal #6 (SNIP-6). SNIP-6 was developed by community members at OpenZeppelin, in close collaboration with wallet teams and other Core Starknet developers. A valid account contract includes specific functions, depending on the type of the contract. For more information, see Account interface function reference. In Starknet, similar to Ethereum, every contract has a nonce, including an account contract. This nonce is sequential. The nonce of a transaction sent from an account must match the nonce of that account. After the transaction is executed, whether or not it is reverted, the nonce is incremented by one. In Starknet, only the nonce of account contracts, that is, those adhering to the above structure, can be non-zero. In contrast, in Ethereum, regular smart contracts, known as Contract Accounts, as opposed to Externally Owned Accounts can increment their nonce by deploying smart contracts, that is, executing the CREATE and CREATE2 opcodes. For more information on accounts in Ethereum, see Ethereum Accounts in the Ethereum documentation. A nonce serves two important roles: It guarantees transaction hash uniqueness, which is important for a good user experience. It provides replay protection to the account: Because the signature is bound to a particular nonce, a malicious party cannot replay the transaction. Starknet currently determines the nonce structure at the protocol level to be sequential. In the future, Starknet will consider a more flexible design, extending account abstraction to nonce management, previously referred to as nonce abstraction.","title":"Starknet’s account interface","component":"ROOT","version":"","name":"approach","url":"/architecture-and-concepts/accounts/approach/","titles":[{"text":"Account functions","hash":"account_functions","id":1},{"text":"Replay protection","hash":"replay_protection","id":2}]},"56":{"id":56,"text":"You can deploy a new account in the following ways: Send a DEPLOY_ACCOUNT transaction. This method does not require a preexisting account. Using the Universal Deployer Contract (UDC). This method requires an existing account to send the INVOKE transaction. Upon receiving one of these transactions, the sequencer performs the following steps: Runs the respective validation function in the contract, as follows: When deploying with the DEPLOY_ACCOUNT transaction type, the sequencer executes the __validate_deploy__ function in the deployed contract. When deploying using the UDC, the sequencer executes the __validate__ function in the contract of the sender’s address. Executes the constructor with the given arguments. Charges fees from the new account address. If you use a DEPLOY_ACCOUNT transaction, the fees are paid from the address of the deployed account. If you use the UDC, which requires an INVOKE transaction, the fees are paid from the sender’s account. For information on the differences between V1 and V3 INVOKE transactions, see INVOKE transaction in Transaction types. Sets the account’s nonce as follows: 1, when deployed with a DEPLOY_ACCOUNT transaction 0, when deployed with the UDC Starkli simplifies account creation, whether you create an account as a Starknet wallet account, or using the UDC. To create and deploy a new account, use Starkli’s starkli account command. For more information on creating a new account as a Starknet wallet account with a DEPLOY_ACCOUNT transaction, or by using the UDC with an INVOKE transaction , see Accounts in the Starkli Book. The constructor of the DEPLOY_ACCOUNT transaction has the following limitations: Restricted access to sequencer_address in the get_execution_info syscall. The syscall returns zero values for sequencer_address Restricted access to the following syscalls: get_block_hash for Cairo contracts get_sequencer_address for Cairo 0 contracts Accounts in the Starkli Book Universal Deployer Contract (UDC) Transaction types","title":"Deploying a new account","component":"ROOT","version":"","name":"deploying-new-accounts","url":"/architecture-and-concepts/accounts/deploying-new-accounts/","titles":[{"text":"Deploying a new account with Starkli","hash":"deploying_a_new_account_with_starkli","id":1},{"text":"DEPLOY_ACCOUNT constructor restrictions","hash":"DEPLOY_ACCOUNT_restrictions","id":2},{"text":"Additional resources","hash":"additional_resources","id":3}]},"57":{"id":57,"text":"An account represents a user onchain, and enables that user to interact with the blockchain. Through an account, you can send transactions and interact with other contracts. In order for you to own an onchain asset, such as an ERC-20 token or an NFT, that asset must be associated with your account address. Within Ethereum individual user accounts are known as Externally Owned Accounts (EOAs). EOAs differ from smart contracts in that EOAs are not controlled by code, but rather by a pair of private and public keys. The account’s address is derived from those keys and only by possessing the private key can you initiate transactions from an account. While Ethereum contracts are passive, that is, they can only change if they were called inside a transaction, EOAs can initiate transactions. While simple, because the signature scheme is fixed, EOAs have some drawbacks, including the following: Control over the private key gives complete control over the account, so you must keep your seed phrase secure yet accessible. Limited flexibility surrounding wallet functionality EIP-4337 is a design proposal for Ethereum that outlines account abstraction, whereby all accounts are managed via a dedicated smart contract on the Ethereum network, as a way to increase flexibility and usability. You can add custom logic on top of the basic EOA functionality, thereby bringing account abstraction into Ethereum. Account abstraction enables more flexible account management. Rather than the protocol determining an account’s behavior, an account contract, which is a smart contract with programmable logic, defines a user’s account. Using account abstraction you can now program how your account functions. For example, you can: Determine what it means for a signature to be valid, or what contracts your account is allowed to interact with. This is known as signature abstraction. Pay transaction fees in different tokens. This is known as fee abstraction. Design your own replay protection mechanism and allow sending multiple uncoupled transactions in parallel. In Ethereum, you cannot send two transactions in parallel, you must wait for confirmation of the first before sending the second. Otherwise, the second transaction can be rejected due to an invalid nonce. With account abstraction, a sequential nonce is not required. This is known as nonce abstraction. Today, Starknet offers signature abstraction. In the future, we will enrich the current account abstraction design. For example, see the paymaster proposal for fee abstraction in the Starknet Community Forum. Two examples of how you might program an account to function using account abstraction are: Social recovery A process where if you lose your wallet, you are able to retrieve it via a selected social network, vastly improving the typical experience of wallet recovery. Operating your account via facial recognition With signature abstraction, you can use your phone’s native hardware to sign transactions, making it practically impossible to take control of another user’s account, even if your phone is stolen.","title":"What is an account?","component":"ROOT","version":"","name":"introduction","url":"/architecture-and-concepts/accounts/introduction/","titles":[{"text":"Ethereum account structure","hash":"ethereum_account_structure","id":1},{"text":"What is Account Abstraction?","hash":"account_abstraction","id":2},{"text":"Examples of customizing account functionality","hash":"examples","id":3}]},"58":{"id":58,"text":"The key stages of transaction lifetime are: The sequencer selects a transaction from the mempool and calls the __validate__ function. If the transaction is valid, the sequencer calls the __execute__ function. If __execute__ runs successfully, the sequencer includes the transaction in the block, charges the fee, and proceeds to work on the next transaction. After completing the block, the sequencer sends the block to the prover. The sequencer receives fees in ETH in return for including transactions in a block. For more details on how the transaction fee is computed, see Gas and transaction fees.","title":"Simplified transaction flow","component":"ROOT","version":"","name":"simplified-transaction-flow","url":"/architecture-and-concepts/accounts/simplified-transaction-flow/","titles":[{"text":"The payment mechanism","hash":"a_payment_mechanism","id":1}]},"59":{"id":59,"text":"The Universal Deployer Contract (UDC) is a singleton smart contract that wraps the deploy syscall to expose it to any contract that doesn’t implement it, such as account contracts. You can think of it as a standardized generic factory for Starknet contracts. And since Starknet has no deployment transaction type, it offers a standardized way to deploy smart contracts by following the standard deployer interface and emitting a ContractDeployed event. For more information see the proposal for the standard deployer interface. For details on the motivation and the decision making process, see the Universal Deployer Contract proposal. The UDC address is 0x041a78e741e5af2fec34b695679bc6891742439f7afb8484ecd7766661ad02bf in Mainnet, Sepolia testnet, and starknet-devnet. This address might change in the future when it is migrated to a modern version of Cairo. trait IUniversalDeployer { fn deployContract( class_hash: ClassHash, salt: felt252, unique: bool, calldata: Span ) -> ContractAddress; } Procedure Declare the contract with a DECLARE transaction, or ensure that the contract has been declared. For more information, see the DECLARE transaction. Call the deployContract function in the UDC. Example implementation in Cairo: #[starknet::interface] trait IUniversalDeployer { fn deployContract( ref self: TContractState, class_hash: ClassHash, salt: felt252, unique: bool, calldata: Span ) -> ContractAddress; } const UDC_ADDRESS: felt252 = 0x041a78e741e5af2fec34b695679bc6891742439f7afb8484ecd7766661ad02bf; fn deploy() -> ContractAddress { let dispatcher = IUniversalDeployerDispatcher { contract_address: UDC_ADDRESS.try_into().unwrap() }; // deployment parameters let class_hash = class_hash_const::(); let salt = 1234567879; let unique = false; let mut calldata = array![]; // the UDC returns the deployed contract address dispatcher.deployContract(class_hash, salt, unique, calldata.span()) } The Universal Deployer Contract offers two types of addresses to deploy: origin-dependent and origin-independent. As the names suggest, the origin-dependent type includes the deployer’s address in the address calculation, whereas, the origin-independent type does not. The unique boolean parameter ultimately determines the type of deployment. When deploying a contract that uses get_caller_address in the constructor calldata, remember that the UDC, not the account, deploys that contract. Therefore, querying get_caller_address in a contract’s constructor returns the UDC’s address, not the account’s address. By making deployments dependent upon the origin address, users can reserve a whole address space to prevent someone else from taking ownership of the address. Only the owner of the origin address can deploy to those addresses. Achieving this type of deployment necessitates that the origin sets unique to true in the deployContract call. Under the hood, the function call leverages the origin’s address and creates a hashchain by hashing the origin’s address with the given salt. To deploy a unique contract address pass: let deployed_addr = udc.deployContract(class_hash, salt, true, calldata.span()); Origin-independent contract deployments create contract addresses independent of the deployer and the UDC instance. Instead, only the class hash, salt, and constructor arguments determine the address. This type of deployment enables redeployments of accounts and known systems across multiple networks. To deploy a reproducible deployment, set unique to false. let deployed_addr = udc.deployContract(class_hash, salt, false, calldata.span()); The UDC has already been deployed on most networks and development environments. The standard requires the UDC to be deployed passing deploy_from_zero=true and salt=0 as arguments to the deploy syscall. This results in a deterministic and predictable address across all instances of Starknet, facilitating SDK integration and reproducibility of deployments. Deploy a contract through the Universal Deployer Contract. fn deployContract( classHash: ClassHash, salt: felt252, unique: bool, calldata: Span ) -> ContractAddress Emitted when deployer deploys a contract through the Universal Deployer Contract. #[derive(Drop, starknet::Event)] struct ContractDeployed { address: ContractAddress, deployer: ContractAddress, unique: bool, classHash: ClassHash, calldata: Span, salt: felt252, }","title":"Universal Deployer Contract (UDC)","component":"ROOT","version":"","name":"universal-deployer","url":"/architecture-and-concepts/accounts/universal-deployer/","titles":[{"text":"UDC address","hash":"udc_address","id":1},{"text":"Interface","hash":"interface","id":2},{"text":"Deploying a contract with the UDC","hash":"deploying_a_contract_with_the_udc","id":3},{"text":"Deployment types","hash":"deployment_types","id":4},{"text":"Origin-dependent","hash":"origin_dependent","id":5},{"text":"Origin-independent","hash":"origin_independent","id":6},{"text":"Deploying the UDC","hash":"deploying_the_udc","id":7},{"text":"API specification","hash":"api_specification","id":8},{"text":"deployContract method","hash":"deploycontract_method","id":9},{"text":"ContractDeployed event","hash":"contractdeployed_event","id":10}]},"60":{"id":60,"text":"All hashes outputs are eventually mapped to elements in \\(\\mathbb{F}_P\\), where \\(P=2^{251}+17\\cdot 2^{192}+1\\). There are three hash functions used throughout Starknet’s specifications: \\(\\text{sn_keccak}: \\{0,1\\}^* \\rightarrow \\mathbb{F}_P\\) \\(\\text{pedersen}: \\mathbb{F}_P^2\\rightarrow\\mathbb{F}_P\\) \\(\\text{poseidon}: \\mathbb{F}_P^*\\rightarrow \\mathbb{F}_P\\) Starknet Keccak, usually denoted by \\(\\text{sn_keccak}\\), is defined as the low 250 bits of the Keccak256 hash. For Starknet Keccak, Keccak256 is augmented in order to fit into a field element. Pedersen hash makes use of the following STARK friendly elliptic curve over \\(\\mathbb{F}_P\\): \\[y^2=x^3+\\alpha x +\\beta\\] where \\(\\alpha=1\\) \\(\\beta = 3141592653589793238462643383279502884197169399375105820974944592307816406665\\) Given an input \\((a,b)\\in\\mathbb{F}_P^2\\), we begin by breaking it into \\(a_{low}, a_{high}, b_{low}, b_{high}\\), where the low part consists of the low 248 bits of the element and the high part consists of the high 4 bits of the element. Our Pedersen hash is then defined by: \\[h(a,b) = \\left[\\text{shift_point} + a_{low} \\cdot P_0 + a_{high} \\cdot P1 + b_{low} \\cdot P2 + b_{high} \\cdot P3\\right]_x\\] where the values of the constants \\(shift\\_point, P_0, P_1, P_2, P_3\\) can be found in fast_pedersen_hash.py, and \\([P]_x\\) denotes the \\(x\\) coordinate of the point \\(P\\). For more information, see STARK curve. Poseidon is a family of hash functions designed to be very efficient as algebraic circuits. As such, they can be very useful in ZK-proving systems such as STARKs. Poseidon is a sponge construction based on the Hades permutation. Starknet’s version of Poseidon is based on a three-element state permutation. A Poseidon hash of up to 2 elements is defined as follows. \\[\\text{poseidon_1}(x) := \\left[\\text{hades_permutation}(x,0,1)\\right]_0\\] \\[\\text{poseidon_2}(x,y) := \\left[\\text{hades_permutation}(x,y,2)\\right]_0\\] Where \\([\\cdot]_j\\) denotes taking the \\(j\\)'th coordinate of a tuple. Additional resources Poseidon hash with an arbitrary number of inputs Parameters for defining the Poseidon permutation used in Starknet Reference implementation in C and assembly of the above by CryptoExperts Let \\(h\\) denote the pedersen hash function, then given an array \\(a_1,...,a_n\\) of \\(n\\) field elements we define \\(h(a_1,...,a_n)\\) to be: \\[h(...h(h(0, a_1),a_2),...,a_n),n)\\] Let \\(\\text{hades}:\\mathbb{F}_P^3\\rightarrow\\mathbb{F}_P^3\\) denote the Hades permutation, with Starknet’s parameters, then given an array \\(a_1,...,a_n\\) of \\(n\\) field elements we define \\(\\text{poseidon}(a_1,...,a_n)\\) to be the first coordinate of \\(H(a_1,...,a_n;0,0,0)\\), where: \\[H(a_1,...,a_n;s_1,s_2,s_3)=\\begin{cases} H\\big(a_3,...,a_n;\\text{hades}(s_1+a_1, s_2+a_2, s_3)\\big), & \\text{if } n\\ge 2 \\\\ \\text{hades}(s_1+a_1,s_2+1,s_3), & \\text{if } n=1 \\\\ \\text{hades}(s_1+1,s_2,s_3), & \\text{if } n=0 \\\\ \\end{cases}\\] For an implementation of the above in Python, see poseidon_hash.py, and for an equivalent Cairo implementation, see poseidon.cairo in the cairo-lang GitHub repository.","title":"Hash functions","component":"ROOT","version":"","name":"hash-functions","url":"/architecture-and-concepts/cryptography/hash-functions/","titles":[{"text":"Domain and range","hash":"domain_and_range","id":1},{"text":"Starknet Keccak","hash":"starknet_keccak","id":2},{"text":"Pedersen hash","hash":"pedersen_hash","id":3},{"text":"Definition","hash":"definition","id":4},{"text":"Poseidon hash","hash":"poseidon_hash","id":5},{"text":"Array hashing","hash":"array_hashing","id":6},{"text":"Pedersen","hash":"pedersen_array_hash","id":7},{"text":"Poseidon","hash":"poseidon_array_hash","id":8}]},"61":{"id":61,"text":"The STARK field is the finite field \\(\\mathbb{F}_P\\), where \\(P\\) is a prime number, calculated as follows: \\[P = 2^{251} + 17*2^{192} + 1\\] The Cairo VM uses the STARK field, referred to as a field element, or felt. The felt252 type in Cairo refers to elements of this field.","title":"The STARK field","component":"ROOT","version":"","name":"p-value","url":"/architecture-and-concepts/cryptography/p-value/","titles":[]},"62":{"id":62,"text":"The STARK curve is an elliptic curve defined as follows: \\[y^2 \\equiv x^3 + \\alpha \\cdot x + \\beta \\pmod{p}\\] where: \\[\\begin{align*} \\alpha &= 1 \\\\ \\beta &= 3141592653589793238462643383279502884197169399375105820974944592307816406665 \\\\ p &= 3618502788666131213697322783095070105623107215331596699973092056135872020481\\\\ &= 2^{251} + 17 \\cdot 2^{192} + 1 \\end{align*}\\] The Generator point used in the ECDSA scheme is: \\[\\begin{split}G = (874739451078007766457464989774322083649278607533249481151382481072868806602, \\\\ 152666792071518830868575557812948353041420400780739481342941381225525861407)\\end{split}\\] The STARK curve is commonly used in smart contracts but not distinguished by the Starknet protocol.","title":"The STARK curve","component":"ROOT","version":"","name":"stark-curve","url":"/architecture-and-concepts/cryptography/stark-curve/","titles":[]},"63":{"id":63,"text":"A Starknet block is a list of transactions and a block header that contains the following fields: Name Type Description block_number u64 The number of this block (i.e., its height) parent_block_hash felt252 The hash of the block’s parent global_state_root felt252 A commitment to the new state sequencer_address ContractAddress The Starknet address of the sequencer that created the block block_timestamp Timestamp The time at which the sequencer began building the block, in seconds since the Unix epoch transaction_count u32 The number of transactions in the block events_count u32 The number of events in the block. state_diff_length u32 The total amount of storage diffs, nonce updates, deployed contracts, and declared classes state_diff_commitment felt252 A commitment to the state diff of the block transactions_commitment felt252 A commitment to the transactions included in the block events_commitment felt252 A commitment to the events included in the block receipts_commitment felt252 A commitment to the receipts of the transactions included in the block l1_gas_price (u128, u128) The price of L1 gas that was used while constructing the block, where the first value is the price in wei and the second is the price in fri (see Fee mechanism for more details) l1_data_gas_price (u128, u128) The price of L1 blob gas that was used while constructing the block, where the first value is the price in wei and the second is the price in fri (see Fee mechanism for more details) l1_da_mode String CALLDATA or BLOB, depending on how Starknet state diffs are sent to L1 protocol_version String The version of the Starknet protocol used when creating the block A block hash is defined by: h( \"STARKNET_BLOCK_HASH0\", block_number, global_state_root, sequencer_address, block_timestamp, transaction_count || event_count || state_diff_length || l1_da_mode, state_diff_commitment, transactions_commitment events_commitment, l1_gas_price_in_wei, l1_gas_price_in_fri, l1_data_gas_price_in_wei, l1_data_gas_price_in_fri receipts_commitment 0, parent_block_hash ) Where: h is the Poseidon hash function transaction_count || event_count || state_diff_length || l1_da_mode is the concatenation of the 64-bit representations of transaction_count, event_count, and state_diff_length with 0 if l1_da_mode is CALLDATA and 1 if l1_da_mode is BLOB For a reference implementation, see block_hash_calculator.rs in the Starknet sequencer’s GitHub repository The state diff commitment is defined by: h( \"STARKNET_STATE_DIFF0\", s + r, deployed_address1, deployed_class_hash1, ... , deployed_addresss, deployed_class_hashs, replaced_contract_address1, new_class_hash1, ... , replaced_contract_addressr, new_class_hashr, d, declared_class_hash1, declared_compiled_class_hash1, ... , declared_class_hashd, declared_compiled_class_hashd, 1, 0, n, c1, k1,1, v1,1, ... ,k1,m1, v1,m1, ... ,cn, kn,1, vn,1, ... ,kn,mn, vn,mn, k, account1, new_nonce1, ... ,accountk, new_noncek ) Where: h is the Poseidon hash function 1 and 0 are placeholders that may be used in the future ci,ki,1, vi,1, …​ , ki,mi,vi,mi are mi updates (ki,1, vi,1), …​ ,(ki,mi, vi,mi) to contract addresses ci The commitment to transactions, the commitment to events and the commitment to receipts are all roots of height-64 binary Merkle Patricia tries where the leaf at index i corresponds to: For transactions: h(transaction_hash, signature) for the i'th transaction included in the block, where h is the Poseidon hash function For events: The event hash of the i'th emitted event included in the block For receipts: The receipt hash of the i'th transaction receipt included in the block The hash of an event emitted by a contract whose address is emitter_address and a transaction whose hash is tx_hash is defined by: h( emitter_address, tx_hash, h(keys), h(data) ) Where h is the Poseidon hash function. The hash of a transaction receipt is defined by: h( transaction_hash, actual_fee, h(messages), sn_keccak(revert_reason), h(l2_gas_consumed, l1_gas_consumed, l1_data_gas_consumed) ) Where: h is the Poseidon hash function h(messages) for messages = (from1, to1, payload1), …​ , (fromn, ton, payloadn) is defined by: h( n, from1, to1, h(len(payload1) || payload1), ... , fromn, ton, h(len(payloadn) || payloadn) )","title":"Block structure","component":"ROOT","version":"","name":"block-structure","url":"/architecture-and-concepts/network-architecture/block-structure/","titles":[{"text":"Block hash","hash":"block_hash","id":1},{"text":"State diff commitment","hash":"state_diff_hash","id":2},{"text":"Transactions, events, and receipts commitments","hash":"transactions_events_receipts_commitments","id":3},{"text":"Event hash","hash":"event_hash","id":4},{"text":"Receipt hash","hash":"receipt_hash","id":5}]},"64":{"id":64,"text":"Starknet is a Validity Rollup, which means that after consolidating and proving a set of Layer 2 changes, it updates, on L1, the latest proven L2 state. Alongside the proof, it publishes the state diff on L1. The state diff is the difference between the previous and new states. Anyone monitoring Ethereum can use this data to reconstruct the current state of Starknet. To update the Starknet state on L1, you only need to send a valid proof along with the state difference, and there is no need to include additional details, such as transactions and events. Therefore, depending on the use case, you might need more information to track Starknet’s state. Starting with Starknet version 0.13.1, the sequencer determines whether to publish the state difference on Ethereum as calldata or blobdata. In extreme situations where blob prices significantly exceed those of calldata, the Starknet sequencer can switch to publish the state diff as calldata. Under normal conditions, blobs are the default method for publishing Starknet’s state differences. The format for state diffs remains the same as in version 0.11.0, but the data sent to Ethereum is a Fast Fourier Transform (FFT) of the original data. To recover Starknet’s state diff based on blobs published onchain, you must first perform an Inverse Fast Fourier Transform (IFFT) on the raw blob, and then proceed with decoding according to the format described below. Additional resources Data availability with EIP-4844 on the Starknet Community Forum An example blob published on Ethereum by the Starknet sequencer in a state update transaction The state diffs contain information on every contract whose storage was updated and additional information on contract deployments. For each affected contract, the following information is sent as calldata on L1: The contract address A single 32-byte word that includes the nonce and the following meta information about the update: class information flag, whose value is one of the following: 0 Storage updates only. 1 The contract was deployed or replaced in this state update. When this flag is set to 1, the new class hash occupies an additional word before the storage updates section. number of storage updates The expected format of this 32-byte word is as follows: \\[\\underbrace{0\\cdots0}_{\\text{127 bits}}| \\underbrace{\\text{class information flag}}_{\\text{1 bit}}| \\underbrace{\\text{new nonce}}_{\\text{64 bits}}|{ \\underbrace{\\text{# of storage updates}}_{\\text{64 bits}}}_{\\text{LSB}}\\] Each storage update includes the following: key - the address inside the contract’s storage where the value is updated value - the new value Newly declared classes include the following: The number of Cairo classes that were declared in the block Each class includes the following: The class hash The compiled class hash Consider the following onchain data that was extracted from L1: [ 1, (1) 2019172390095051323869047481075102003731246132997057518965927979101413600827, (2) 18446744073709551617, (3) 100, (4) 200, (4) 1, (5) 1351148242645005540004162531550805076995747746087542030095186557536641755046, (6) 558404273560404778508455254030458021013656352466216690688595011803280448032 (7) ] 1 The number of contracts whose state was updated. 2 The address of the first, and only, contract whose state changed. 3 18446744073709551617, which is 264+1, encodes the following: The class information flag is 0, that is, the contract was not deployed or replaced just now, so you shouldn’t treat the next word as the class hash. The new nonce is 1. One storage cell was updated. 4 These two elements, 100 and 200, encode the storage update, where the value of key 100 is set to 200. 5 The new declare section: 1 includes a single declare v2 transaction in this state update. 6 Encoding of the class hash. 7 Encoding of the compiled class hash of the declared class. The state diffs contain information on every contract whose storage was updated and additional information on contract deployments. Those differences are sent as uint256[] array as part of the calldata, and are encoded as follows: Number of cells that encode contract deployments Each deployed contract has the following: contract_address - the address of the deployed contract. See also Data availability. contract_hash - the hash of the class Number of contracts whose storage is updated. Each such contract has the following: contract_address - the address of the contract num_of_storage_updates - number of storage updates nonce, num of storage updates - a uint256 value that encodes both the number of storage updates for that contract and the updated nonce: \\[\\underbrace{0\\cdots0}_{\\text{128 bits}} | \\underbrace{\\text{new nonce}}_{\\text{64 bits}} | {\\underbrace{\\text{# of storage updates}}_{\\text{64 bits}}}_{\\text{LSB}}\\] For each storage update: key - the address inside the contract’s storage where the value is updated value - the new value The example below shows onchain data that was extracted from L1. An explanation follows, according to the above format. [ 2, 2472939307328371039455977650994226407024607754063562993856224077254594995194, 1336043477925910602175429627555369551262229712266217887481529642650907574765, 5, 2019172390095051323869047481075102003731246132997057518965927979101413600827, 18446744073709551617, 5, 102, 2111158214429736260101797453815341265658516118421387314850625535905115418634, 2, 619473939880410191267127038055308002651079521370507951329266275707625062498, 1471584055184889701471507129567376607666785522455476394130774434754411633091, 619473939880410191267127038055308002651079521370507951329266275707625062499, 541081937647750334353499719661793404023294520617957763260656728924567461866, 2472939307328371039455977650994226407024607754063562993856224077254594995194, 1, 955723665991825982403667749532843665052270105995360175183368988948217233556, 2439272289032330041885427773916021390926903450917097317807468082958581062272, 3429319713503054399243751728532349500489096444181867640228809233993992987070, 1, 5, 1110, 3476138891838001128614704553731964710634238587541803499001822322602421164873, 6, 59664015286291125586727181187045849528930298741728639958614076589374875456, 600, 221246409693049874911156614478125967098431447433028390043893900771521609973, 400, 558404273560404778508455254030458021013656352466216690688595011803280448030, 100, 558404273560404778508455254030458021013656352466216690688595011803280448031, 200, 558404273560404778508455254030458021013656352466216690688595011803280448032, 300, 1351148242645005540004162531550805076995747746087542030095186557536641755046, 500 ] The first element, 2, is the number of cells that encode contracts deployment. The next two elements describe a single contract deployment with the following parameters: contract_address: 2472939307328371039455977650994226407024607754063562993856224077254594995194 contract_hash: 1336043477925910602175429627555369551262229712266217887481529642650907574765 The next element, 5 (index 3 in the array), is the number of contracts whose storage was updated. We will take only the first contract as an example. contract_address: 2019172390095051323869047481075102003731246132997057518965927979101413600827 Following the above contract address, we have 18446744073709551617 (index 8 in the array), which is \\(2^{64}+1\\), thus: The new contract nonce is 1 One storage key is updated The value at key 5 was changed to 102 The next 4 contract storage updates are interpreted in the same manner. The data described above is sent across several Ethereum transactions, each holding a part of this array as calldata. Each new Starknet block has its associated state diff transactions. You can find the code for extracting this data from Ethereum in Pathfinder’s repo. Pathfinder is the first Starknet full node implementation. You may also take a look at the Python script which extracts the same information.","title":"Data availability","component":"ROOT","version":"","name":"data-availability","url":"/architecture-and-concepts/network-architecture/data-availability/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"Data availability: EIP-4844, Starknet 0.13.1 and forward","hash":"data_availability_eip_4844_starknet_0_13_1_and_forward","id":2},{"text":"Data availability: v0.11.0 and forward","hash":"data_availability_v0_11_0_and_forward","id":3},{"text":"v0.11.0 format","hash":"v0.11.0_format","id":4},{"text":"v0.11.0 example of onchain data","hash":"v0.11.0_example","id":5},{"text":"Data availability: pre v0.11.0","hash":"data_availability_pre_v0_11_0","id":6},{"text":"Pre v0.11.0 format","hash":"pre_v0.11.0_format","id":7},{"text":"Pre v0.11.0 example","hash":"pre_v0.11.0_example","id":8},{"text":"Extract from Ethereum","hash":"extract_from_ethereum","id":9}]},"65":{"id":65,"text":"This section describes fees that are paid on L2 starting in Starknet 0.13.0. For information about messaging fees that are paid on L1, see L1 → L2 message fees. At the time of writing, the following components are contributing to the transaction fee: Computational complexity: The marginal cost of verifying the transaction on L1, measured in L1 gas. Onchain data: The cost of posting the state diffs induced by the transaction to L1 (for more details, see data availability). This is measured in L1 gas or L1 data gas, depending on whether or not the L2 block in which the transaction was included uses calldata or blobs. L2→L1 messages: Messages sent to L1 are eventually sent to the Starknet core contract as L1 calldata by the sequencer; therefore L2 transaction that send L2→L1 messages incur an additional L1 gas cost. L2 calldata, events and code: From Starknet 0.13.1 onwards, there is a per-byte (or per felt) price for L2 payloads. For more details, see L2 payloads. The fee is charged atomically with the transaction execution on L2. The Starknet OS injects a transfer of the fee-related ERC-20, with an amount equal to the fee paid, the sender equal to the transaction submitter, and the sequencer as a receiver. Each transaction is associated with an estimate of the amount of gas used. Combining this estimate with the price of gas yields the estimated fee. For transactions prior to v3, the fee is denominated in WEI. For transactions v3 and later, the fee is denominated in STRK. With v3 transactions, users specify the max amount and max price for each resource. At the time of writing, the only available resource is L1 gas. In the future, we will introduce L2 gas which will be used to price L2 work (as opposed to only charging for the proof verification in L1 gas, which is what happens today). With older transaction versions, users specify the maximum fee that they are willing to pay for a transaction. The only limitation on the sequencer, which is enforced by the Starknet OS, is that the actual fee charged is bounded by max_fee. While not enforced in the proof, the Starknet sequencer usually charges less than max_fee, as it charges in accordance with the above fee formula. The fee of transactions can be estimated with using starknet_estimateFee API call, which is part of Starknet’s API v0.7.0 and above. For more information, see the Starknet JSON RPC specification. For more information on how to construct the appropriate resource_bounds based on the response of starknet_estimateFee, see How to use the new fee estimates? on the Starknet community forum. This section shows the formula for determining a transaction’s fee. The following sections describe how this formula was derived. Starting with Starknet v0.13.1, Starknet distinguishes between blocks whose state diffs are sent to L1 as calldata and blocks whose state diffs are sent to L1 as blobs. The l1_da_mode property in the Starknet block header contains this information. The cost of computation remains the same on both options, but the cost related to data availability differs. The following formula describes the overall fee, \\(F\\), for a transaction in blocks whose state diffs are sent to L1 as blobs: \\[\\begin{align} F = \\; & gas\\_price \\cdot \\Bigg(\\max_k v_k w_k + \\\\ & \\quad + \\; \\text{message_calldata_cost}\\cdot 3t + (\\text{message_calldata_cost} + \\text{l1_log_data_cost})\\cdot \\sum\\limits_{i=1}^t q_i \\; + \\\\ & \\quad + \\; \\left(\\text{l1_storage_write_cost}+\\text{log_message_to_l1_cost}\\right)\\cdot t + \\; \\\\ & \\quad + \\; \\text{l2_payload_costs}\\Bigg) + \\\\ & data\\_gas\\_price\\cdot\\text{felt_size_in_bytes}\\cdot\\bigg(2(n-1)+2(m-1) + \\ell +2D \\bigg) \\end{align}\\] where: \\(v\\) is a vector that represents resource usage, where each of its entries, \\(v_k\\), corresponds to different resource types: Cairo steps and number of applications of each builtin. For more information see Calculation of computation costs. \\(w\\) is the CairoResourceFeeWeights vector. \\(n\\) is the number of unique contracts updated, which also includes changes to classes of existing contracts and contract deployments, even if the storage of the newly deployed contract is untouched. In other words, \\(n\\ge\\ell\\). Notice that \\(n\\ge 1\\) always holds, because the fee token contract is always updated, which does not incur any fee. \\(m\\) is the number of values updated, not counting multiple updates for the same key. Notice that \\(m\\ge 1\\) always holds, because the sequencer’s balance is always updated, which does not incur any fee. \\(t\\) is the number of L2→L1 messages sent, where the corresponding payload sizes are denoted by \\(q_1,...,q_t\\). \\(\\ell\\) is the number of contracts whose class was changed, which happens on contract deployment and when applying the replace_class syscall. \\(D\\) is 1 if the transaction is of type DECLARE and 0 otherwise. Declare transactions need to post on L1 the new class hash and compiled class hash which are added to the state. L2→L1 messaging constants: \\(\\text{message_calldata_cost}\\) is 1124 gas per 32-byte word. \\(\\text{l1_log_data_cost}\\) is 256 gas. \\(\\text{l1_storage_write_cost}\\) is the cost of writing to a new storage slot on Ethereum, which is 20,000 gas. \\(\\text{log_message_to_l1_cost}\\) is 1637 gas. For more information, see L2→L1 messages. \\(\\text{l2_payload_costs}\\) is the gas cost of data sent over L2. This includes calldata, code, and event emission. For more details see L2 payloads. \\(\\text{felt_size_in_bytes}\\) is 32, which is the number of bytes required to encode a single STARK field element. The following formula describes the overall fee, \\(F\\), for a transaction in blocks whose state diffs are sent to L1 as calldata: \\[\\begin{align} F = gas\\_price\\cdot&\\Bigg(\\max_k v_k w_k + \\\\ & + \\; \\text{da_calldata_cost}\\left(2(n-1)+2(m-1) + \\ell + 2D + 3t + \\sum\\limits_{i=1}^t q_i\\right)\\\\ & - \\; \\text{contract_update_discount}\\cdot (n-1) - 240 \\\\ & + \\; \\text{message_calldata_cost}\\cdot 3t + (\\text{message_calldata_cost} + \\text{l1_log_data_cost})\\cdot\\sum\\limits_{i=1}^t q_i \\\\ & + \\; \\left(\\text{l1_storage_write_cost}+\\text{log_message_to_l1_cost}\\right)\\cdot t \\\\ & + \\; \\text{l2_payload_costs}\\Bigg) \\end{align}\\] where: The following constants are defined in the same manner as in the blob-based formula: \\(v, w, n, m, t, \\ell, D\\) \\(\\text{message_calldata_cost}, \\; \\text{l1_log_data_cost}, \\; \\text{log_message_to_l1_cost}, \\; \\text{l1_storage_write_cost}\\) \\(\\text{l2_payload_costs}\\) \\(\\text{da_calldata_cost}\\) is 551 gas per 32-byte word. This cost is derived as follows: 512 gas per 32-byte word for calldata. ~100 gas for onchain hashing that happens for every sent word. a 10% discount, because the sequencer does not incur additional costs for repeated updates to the same storage slot within a single block. \\(240\\) is the gas discount for updating the sender’s balance, for the derivation of this number see Storage updates. \\(\\text{contract_update_discount}\\) is 312 gas, for the derivation of this discount see Storage updates. Every 60 seconds, Starknet samples the base price of gas and data gas on L1. The price of gas on Starknet is set to the average of the last 60 gas price samples, plus 1 gwei. The price of data gas on Starknet is set to the average of the last 60 data gas price samples. The data gas price on Ethereum is derived from the value of excess_blob_gas. For more information, see EIP-4844. Let’s analyze the correct metric for measuring transaction complexity. For simplicity, we will ignore Cairo’s builtins, and address them later. A Cairo program execution yields an execution trace. When proving a Starknet block, we aggregate all the transactions appearing in that block to the execution trace. Starknet’s prover generates proofs for execution traces, up to some maximal length \\(L\\), derived from the specs of the proving machine and the desired proof latency. Tracking the execution trace length associated with each transaction is simple. Each assertion over field elements, such as verifying addition/multiplication over the field, requires the same, constant number of trace cells, which is where our \"no-builtins\" assumption kicks in: Pedersen occupies more trace cells than addition. Therefore, in a world without builtins, the fee of the transaction \\(tx\\) is correlated with \\(\\text{TraceCells}[tx]/L\\). In the Cairo execution trace each builtin has its own slot, which is important to consider when determining the fee. For example, consider that the prover can process a trace with the following limits: up to 500,000,000 Cairo Steps up to 20,000,000 Pedersen hashes up to 4,000,000 signature verifications up to 10,000,000 range checks The proof is closed and sent to L1 when any of these slots is filled. Suppose that a transaction uses 10,000 Cairo steps and 500 Pedersen hashes. At most 40,000 such transactions can fit into the hypothetical trace (20,000,000/500). Therefore, its gas price correlates with 1/40,000 of the cost of submitting proof. Notice that this estimate ignores the number of Cairo steps, as it is not the limiting factor, since 500,000,000/10,000 > 20,000,000/500. With this example in mind, it is possible to formulate the exact fee associated with L2 computation. The allocation of resources among builtin operations must be predetermined; it is not possible to decide, post-execution, to include only 20,000,001 Pedersen hashes without additional components. This safeguards fairness and prevents manipulation, ensuring integrity in proof generation and fee determination. For each transaction, the sequencer calculates a vector, CairoResourceUsage, that contains the following: The number of Cairo steps. The number of applications of each Cairo builtin. For example, five range checks and two Pedersen hashes. The sequencer crosses this information with the CairoResourceFeeWeights vector. For each resource type, either a Cairo step or a specific builtin application, CairoResourceFeeWeights has an entry that specifies the relative gas cost of that component in the proof. Going back to the above example, if the cost of submitting a proof with 20,000,000 Pedersen hashes is roughly 5m gas, then the weight of the Pedersen builtin is 0.25 gas per application (5,000,000/20,000,000). The sequencer has a predefined weights vector, in accordance with the proof parameters. The sequencer charges only according to the limiting factor. Therefore the fee is correlated with: \\[\\max_k[\\text{CairoResourceUsage}_k \\cdot \\text{CairoResourceFeeWeights}_k]\\] where \\(k\\) enumerates the Cairo resource components, that is the number of Cairo steps and builtins used. The weights are listed in the following table: Resource Gas cost Cairo step 0.0025 gas/step Pedersen 0.08 gas/application Poseidon 0.08 gas/application Range check 0.04 gas/application ECDSA 5.12 gas/application Keccak 5.12 gas/application Bitwise 0.16 gas/application EC_OP 2.56 gas/application The onchain data associated with a transaction is composed of three parts Storage updates L2→L1 messages Deployed contracts Declared classes (only relevant for DECLARE transactions, and adds two additional words) Whenever a transaction updates some value in the storage of some contract, the following data is sent to L1: two 32-byte words per contract two 32-byte words for every updated storage value For information on the exact data and its construction, see Data availability. Only the most recent value reaches L1. So the transaction’s fee only depends on the number of unique storage updates. If the same storage cell is updated multiple times within the transaction, the fee remains that of a single update. The following formula describes the storage update fee for a transaction: \\[\\underbrace{\\textit{gas_price}\\left(\\text{da_calldata_cost} \\cdot 2(n-1) - \\text{contract_update_discount}\\cdot (n-1)\\right)}_{\\text{contract addresses + new nonce and number of storage updates }} \\\\ + \\\\ \\underbrace{\\textit{gas_price} \\cdot \\left(\\text{da_calldata_cost}(2(m-1))-240\\right)}_{\\text{storage updates}}\\] where: \\(n\\) is the number of unique contracts updated, which also includes changes to classes of existing contracts and contract deployments, even if the storage of the newly deployed contract is untouched. In other words, \\(n\\ge\\ell\\). Notice that \\(n\\ge 1\\) always holds, because the fee token contract is always updated at the end of each transaction, in order to update the sequencer’s and the sender’s balances. The fee token contract update is not taken into account when computing the fee. \\(m\\) is the number of values updated, not counting multiple updates for the same key. Notice that \\(m\\ge 1\\) always holds, because the sequencer’s balance is updated at the end of each transaction. The sequencer’s balance update is not taken into account when computing the fee. \\(\\text{contract_update_discount}\\) is 312 gas, which is discounted for every updated contract. This discount is a result of the fact that out of the \\(2n\\) words caused by updating contracts, \\(n\\) words are short, including at most 6 non-zero bytes: three bytes for the nonce two bytes for the number of storage updates one byte for the class information flag Taking into account that zero bytes only cost 4 gas, the cost difference between a full 32-byte word, which does not contain zeros, and a word with only six non-zero bytes is \\(32\\cdot16-(6\\cdot16+26\\cdot4)=312\\). \\(240\\) is the gas discount for updating the sender’s balance, and is derived by assuming the balance requires at most 12 non-zero bytes, which is enough for 1.2B ETH or STRK, resulting in the following discount: \\(512-(20\\cdot4+12\\cdot16)=240\\). Improvements to the above pessimistic estimation might be gradually implemented in future versions of Starknet. For example, if different transactions within the same block update the same storage cell, there is no need to charge for both transactions, because only the last value reaches L1. In the future, Starknet might include a refund mechanism for such cases. When a transaction that raises the send_message_to_l1 syscall is included in a state update, the following data reaches L1: L2 sender address L1 destination address Payload size Payload (list of field elements) Consequently, the gas cost associated with a single L2→L1 message is: \\[\\begin{align} \\text{MESSAGE_COST} = & \\; \\text{message_calldata_cost}\\cdot\\left(3+\\text{payload_size}\\right) \\; + \\\\ & + \\text{l1_log_data_cost}\\cdot\\text{payload_size} \\; + \\\\ & + \\text{log_message_to_l1_cost} \\; + \\\\ & + \\text{l1_storage_write_cost} \\end{align}\\] Where: \\(\\text{message_calldata_cost}\\) is 1124 gas. This is the sum of the 512 gas paid to the core contract on submitting the state update, and 612 gas paid for the submitting of the same word to the verifier contract (which incurs ~100 additional gas for hashing). That is, messages are sent to Ethereum twice. \\(\\text{log_message_to_l1_cost}\\) is 1637 gas. This is the fixed cost involved in emitting a LogMessageToL1 event. This event has two topics and a data array, which adds two data words to the event, resulting in a total of \\(375+2\\cdot 375+2\\cdot 256\\) gas (log opcode cost, topic cost, and two data words cost). \\(\\text{l1_log_data_cost}\\) is 256 gas, which is paid for every payload element during the emission of the LogMessageToL1 event. \\(\\text{l1_storage_write_cost}\\) is 20,000 gas per message which is paid in order to store the message hash on the Starknet core contract. This recording of the message is what later enables the intended L1 contract to consume the message. When a transaction that raises the deploy syscall is included in a state update, the following data reaches L1: contract address number of storage updates and the new nonce class hash The first two elements are counted in the number of unique modified contracts, denoted by \\(n\\) throughout this page. So the only additional word comes from publishing the class hash, which adds 551 gas. For more information, see \\(\\text{da_calldata_cost}\\) in the final formula. As of Starknet v0.13.1 onwards, L2 data is taken into account during pricing. This includes: calldata: this includes transaction calldata (in the case of INVOKE transactions or L1_HANDLER), constructor calldata (in the case of DEPLOY_ACCOUNT transactions), and signatures events: data and keys of emitted events ABI: classes abi in DECLARE transactions (relevant only for DECLARE transactions of version ≥ 2) CASM bytecode (for all available DECLARE transactions, where in version ≥ 2 this refers to the compiled class) Sierra bytecode (relevant only for DECLARE transactions of version ≥ 2) The pricing of the above components in terms of L1 gas is given by the following table: Resource Gas cost Event key 0.256 gas/felt Event data 0.128 gas/felt Calldata 0.128 gas/felt CASM bytecode 1 gas/felt Sierra bytecode 1 gas/felt ABI 0.032 gas/character","title":"Fee mechanism","component":"ROOT","version":"","name":"fee-mechanism","url":"/architecture-and-concepts/network-architecture/fee-mechanism/","titles":[{"text":"What do we price?","hash":"what_do_we_pay_for","id":1},{"text":"When is the fee charged?","hash":"when_is_the_fee_charged","id":2},{"text":"Fee units","hash":"fee_units","id":3},{"text":"Transaction Fee limits","hash":"fee_limitations","id":4},{"text":"v3 transactions","hash":"v3_fee_limitations","id":5},{"text":"Deprecated transactions (version < 3)","hash":"deprecated_fee_limitations","id":6},{"text":"Estimating fees","hash":"v3-fee-estimation","id":7},{"text":"Fee calculation","hash":"fee_calculation","id":8},{"text":"Overall","hash":"overall_fee","id":9},{"text":"Blobs vs. calldata","hash":"blobs-vs-calldata","id":10},{"text":"Overall fee with blobs","hash":"overall_fee_blob","id":11},{"text":"Overall fee with calldata","hash":"overall_fee_calldata","id":12},{"text":"Gas","hash":"calculation_of_gas_costs","id":13},{"text":"Computation","hash":"computation","id":14},{"text":"Without builtins","hash":"computation_without_builtins","id":15},{"text":"With builtins","hash":"computation_with_builtins","id":16},{"text":"Overall","hash":"calculation_of_computation_costs","id":17},{"text":"Onchain data","hash":"onchain_data_components","id":18},{"text":"Storage updates","hash":"storage_updates","id":19},{"text":"L2→L1 messages","hash":"l_2-l_1_messages","id":20},{"text":"Deployed contracts","hash":"deployed_contracts","id":21},{"text":"L2 payloads","hash":"l2_calldata","id":22}]},"66":{"id":66,"text":"Starknet’s ability to interact with L1 is crucial. Messaging is the mechanism that enables this interaction. For example, you can perform computations on L2 and use the result on L1. Bridges on Starknet use the L1-L2 messaging mechanism. Consider that you want to bridge tokens from Ethereum to Starknet. You deposit your tokens in the L1 bridge contract, which automatically triggers the minting of the same token on L2. Another good use case for L1-L2 messaging is Defi pooling. For more information, see DeFi pooling on StarkWare’s site and dApps on https://www.starknet.io. Be aware that the messaging mechanism is asynchronous and asymmetric. Asynchronous: Your contract code, whether Cairo or Solidity, cannot await the result of the message being sent on the other layer within your contract code’s execution. Asymmetric: Sending a message from Ethereum to Starknet, L1→L2, is fully automated by the Starknet sequencer, so the message is automatically delivered to the target contract on L2. However, when sending a message from Starknet to Ethereum, L2→L1, the sequencer only sends the hash of the message. You must then consume the message manually using a transaction on L1. Contracts on L2 can interact asynchronously with contracts on L1 using the L2→L1 messaging protocol. The protocol consists of the following stages: During the execution of a transaction, a contract on Starknet sends a message from L2 to L1 by calling the send_message_to_L1 syscall. The sequencer attaches the message parameters to the block that includes the syscall invocation. The message parameters include the address of the sender on L2, the address of the recipient contract on L1, and the message data. For example: let mut payload: Array = ArrayTrait::new(); let to_address: EthAddress = 1_felt252.try_into().unwrap(); payload.append(1); // potentially add more elements to payload (payload[1], payload[2], etc.) send_message_to_l1_syscall(to_address: to_address.into(), payload: payload.span()); The prover proves the state update that includes this transaction. The sequencer updates the L1 state. The message is stored on L1 in the Starknet Core Contract and a counter on the Core Contract increases by one. The processMessage function, which is part of the Starknet Core Contract, emits the LogMessageToL1 event, which contains the message parameters. The message recipient on L1 can access and consume the message by calling the consumeMessageFromL2 function, which includes the message parameters within the transaction. This function, which is part of the Starknet Core Contract, verifies the following: The hashes of the L2 sent message parameters, now stored on the Core Contract, and the L1 received message parameters, are the same. The entity calling the function is indeed the recipient on L1. In such a case, the counter corresponding to the message hash in the Starknet Core Contract decreases by one. For more information, see the consumeMessageFromL2 function in StarknetMessaging.sol. L2→L1 Messaging mechanism illustrates this flow: Figure 1. L2→L1 Messaging mechanism The structure of an L2 → L1 message is described as follows under MSG_TO_L1 in the Starknet API JSON RPC specification: from_address (felt252) The address of the L2 contract sending the message. to_address (EthAddress) The target L1 address the message is sent to. payload (Array) The payload of the message. The hash of an L2 → L1 message is computed on L1 as follows: keccak256( abi.encodePacked( FromAddress, uint256(ToAddress), Payload.length, Payload ) ); Sending an L2 to L1 message always incurs a fixed cost of 20,000 gas, because the hash of the message being sent must be written to L1 storage in the Starknet Core Contract. Contracts on L1 can interact asynchronously with contracts on L2 using the L1→L2 messaging protocol. The protocol consists of the following stages: An L1 contract induces a message to an L2 contract on Starknet by calling the sendMessageToL2 function on the Starknet Core Contract with the message parameters. The Starknet Core Contract hashes the message parameters and updates the L1→L2 message mapping to indicate that a message with this hash was indeed sent. The L1 contract records the fee that the sender paid. For more information, see L1 → L2 message fees. The message is then decoded into a Starknet transaction that invokes a function annotated with the l1_handler decorator on the target contract. Transactions like this on L2 are called L1 handler transactions. The Starknet sequencer, upon receiving enough L1 confirmations for the transaction that sent the message, initiates the corresponding L2 transaction. The L2 transaction invokes the relevant l1_handler function. The L1 Handler transaction that was created in the previous step is added to a proof. The Core Contract receives the state update. The message is cleared from the Core Contract’s storage to consume the message. Clearing the Core Contract’s storage does the following: incurs a fixed cost of 5,000 gas emits an L1 event logging the message consumption At this point, the message is handled. An L1→L2 message consists of the following: L1 sender’s address L2 recipient’s contract address Function selector Calldata array Message nonce The message nonce is maintained on the Starknet Core Contract on L1, and is incremented whenever a message is sent to L2. The nonce is used to avoid a hash collision between different L1 handler transactions that is caused by the same message being sent on L1 multiple times. For more information, see L1→L2 structure. The flow described here should only be used in edge cases such as bugs on the Layer 2 contract preventing message consumption. Consider that Alice sends an L1 asset to a Starknet bridge to transfer it to L2, which generates the corresponding L1→L2 message. Now, consider that the L2 message consumption doesn’t function, which might happen due to a bug in the dApp’s Cairo contract. This bug could result in Alice losing custody of their asset forever. To mitigate this risk, the contract that initiated the L1→L2 message can cancel it by declaring the intent to cancel, waiting five days, and then completing the cancellation. This delay protects the sequencer from a DoS attack in the form of repeatedly sending and canceling a message before it is included in L1, rendering the L2 block which contains the activation of the corresponding L1 handler invalid. The steps in this flow are as follows: The user that initiated the L1→L2 message calls the startL1ToL2MessageCancellation function in the Starknet Core Contract. The user waits five days until she can finalize the cancellation. The user calls the cancelL1ToL2Message function. An L1 → L2 message induces a transaction on L2, which, unlike regular transactions, is not sent by an account. This calls for a different mechanism for paying the transaction’s fee, for otherwise the sequencer has no incentive of including L1 handler transactions inside a block. To avoid having to interact with both L1 and L2 when sending a message, L1 → L2 messages are payable on L1, by sending ETH with the call to the payable function sendMessageToL2 on the Starknet Core Contract. The sequencer takes this fee in exchange for handling the message. The sequencer charges the fee in full upon updating the L1 state with the consumption of this message. The fee itself is calculated in the same manner as \"regular\" L2 transactions. You can use the CLI to get an estimate of an L1 → L2 message fee. For completeness, L1 → L2 structure describes the precise structure of both the message as it appears on L1 and the induced transaction as it appears on L2. Table 1. L1 → L2 message structure FromAddress ToAddress Selector Payload Nonce EthereumAddress FieldElement FieldElement List FieldElement The hash of the message is computed on L1 as follows: keccak256( abi.encodePacked( uint256(FromAddress), ToAddress, Nonce, Selector, Payload.length, Payload ) ); Version ContractAddress Selector Calldata Nonce FieldElement FieldElement FieldElement List FieldElement The hash of the corresponding L1 handler transaction on L2 is computed as follows: l1_handler_tx_hash = _h_( \"l1_handler\", version, contract_address, entry_point_selector, _h_(calldata), 0, chain_id, nonce ) Where: l1_handler is a constant prefix, encoded in bytes (ASCII), as big-endian. version is the transaction version. Only version 0 is currently supported. chain_id is a constant value that specifies the network to which this transaction is sent. h is the Pedersen hash (note that since we’re hashing an array, the # of inputs needs to be appended to the hash). 0 indicates that L1 to L2 message fees are charged on L1. In an L1 handler transaction, the first element of the calldata is always the sender’s Ethereum address. Since L1 handler transactions are not initiated by an account, invoking get_caller_address() or similar account-related functions returns the address 0x0. Table 2. Supported versions of the L1HandlerTransaction transaction type Current version Deprecated versions Unsupported versions v0 N/A N/A send_message_to_L1 syscall sendMessageToL2 function on the Starknet Core Contract For more information on how messaging works within the Starknet Core Contract, including details on coding, see L1-L2 Messaging in The Cairo Book: The Cairo Programming Language","title":"L1-L2 messaging mechanism","component":"ROOT","version":"","name":"messaging-mechanism","url":"/architecture-and-concepts/network-architecture/messaging-mechanism/","titles":[{"text":"L2 → L1 messages","hash":"l2-l1_messages","id":1},{"text":"L2 → L1 message structure","hash":"l2_l1_message_structure","id":2},{"text":"L2 → L1 message hashing","hash":"hashing_l2-l1","id":3},{"text":"L1 → L2 messages","hash":"l1-l2-messages","id":4},{"text":"L1 → L2 message cancellation","hash":"l2-l1_message_cancellation","id":5},{"text":"L1 → L2 message fees","hash":"l1-l2-message-fees","id":6},{"text":"L1 → L2 structure","hash":"l1_l2_message_structure","id":7},{"text":"L1 → L2 hashing","hash":"hashing_l1-l2","id":8},{"text":"L1 handler transaction","hash":"l1_handler_transaction","id":9},{"text":"Additional resources","hash":"additional_resources","id":10}]},"67":{"id":67,"text":"The StarknetMessaging smart contracts include functions and events that are required when sending messages between L1 and L2. For information on the messaging mechanism, see Messaging mechanism. The L1 functions, where available, are defined in the following smart contract: Contract Description Functions StarknetMessaging.sol The contract that implements messaging functions. Interfaces are available through IStarknetMessaging.sol. cancelL1ToL2Message consumeMessageFromL2 getMaxL1MsgFee l1ToL2MessageCancellations l1ToL2MessageNonce l1ToL2Messages l2ToL1Messages messageCancellationDelay sendMessageToL2 startL1ToL2MessageCancellation The L1 events, where available, are defined in the following smart contract: Contract Description Events IStarknetMessagingEvents.sol The contract that defines messaging events. ConsumedMessageToL1 ConsumedMessageToL2 LogMessageToL1 LogMessageToL2 MessageToL2Canceled MessageToL2CancellationStarted Functions are listed in alphabetical order. Cancels an L1 to L2 message. Call this function after calling the startL1ToL2MessageCancellation function. The time between the calls to these two functions must be at least the number of seconds defined by the messageCancellationDelay function. Only a sender can cancel a message. If the message is missing, the call reverts. Be aware that the message fee is not refunded. None. uint256 toAddress The address of the L2 contract. uint256 selector The function, in the recipient L2 contract, that the message called. uint256[] calldata payload The payload of the message. uint256 nonce The nonce of the message. bytes32 msgHash The hash of the canceled message. MessageToL2Canceled Contract: StarknetMessaging.sol Function: cancelL1ToL2Message Consumes a message that was sent from an L2 contract. Returns the hash of the message. None. uint256 fromAddress The address of the L2 contract sending the message. uint256[] calldata payload The payload of the message. bytes32 msgHash The hash of the consumed message. ConsumedMessageToL1 Contract: StarknetMessaging.sol Function: consumeMessageFromL2 Returns the maximum fee, in Wei, that Starknet accepts for a single message. If the fee passed is higher than this value, the transaction is not accepted. pure None. uint256 MAX_L1_MSG_FEE The maximum fee, in Wei, that Starknet accepts for a single message. Contract: StarknetMessaging.sol Function: getMaxL1MsgFee Returns the timestamp of the cancellation request. view bytes32 msgHash The message hash. uint256 result The Ethereum block timestamp. Returns 0 if cancelL1ToL2Message was not called with the message hash msgHash. Contract: StarknetMessaging.sol Function: l1ToL2MessageCancellations Returns the nonce of the next message sent to the L2 contract. So if If n messages have been sent to Starknet, this function returns n + 1. view None. uint256 nonce The nonce of the next message sending to L2 contract. Contract: StarknetMessaging.sol Function: l1ToL2MessageNonce Indicates if a pending message is associated with a given message hash. view bytes32 msgHash The message hash. Returns uint256 result, where result is one of the following: message_fee + 1 A pending message is associated with the msgHash parameter. 0 No pending message is associated with the msgHash parameter. Contract: StarknetMessaging.sol Function: l1ToL2Messages Indicates the number of pending messages associated with a given message hash. view bytes32 msgHash The message hash. Returns uint256 result, where result is the number of pending messages associated with the msgHash parameter. Contract: StarknetMessaging.sol Function: l2ToL1Messages Returns the time interval, in seconds, after which you can cancel a message starting from the moment of calling the startL1ToL2MessageCancellation function. You can get the real value by calling the messageCancellationDelay function on a block explorer, such as Etherscan. view None. uint256 result The time interval. Contract: StarknetMessaging.sol Function: messageCancellationDelay Sends a message to an L2 contract. The message fee is the cost of executing this function. payable uint256 toAddress The address of the L2 contract. uint256 selector The function, in the recipient L2 contract, that the message called. uint256[] calldata payload The payload of the message. bytes32 msgHash The hash of the message. uint256 nonce The nonce of the message. LogMessageToL2 Contract: StarknetMessaging.sol Function: sendMessageToL2 Starts the cancellation of a message from L1 to L2. You can cancel a message after a predefined about of time from the moment this function is called. The amount of time is set by the messageCancellationDelay function. You can only call this function for a message that is currently pending, and the caller must be the sender of that message. None. uint256 toAddress The address of the L2 contract. uint256 selector The function, in the recipient L2 contract, that the message called. uint256[] calldata payload The payload of the message. uint256 nonce The nonce of the message. bytes32 msgHash The hash of the cancellation message. MessageToL2CancellationStarted Contract: StarknetMessaging.sol Function: startL1ToL2MessageCancellation Events are listed in alphabetical order. This event is emitted when a message from L2 to L1 is consumed by the consumeMessageFromL2 function. uint256 indexed fromAddress The address of the sender on L2. address indexed toAddress The address of the receiver on L1. uint256[] payload The payload of the consumed message. Contract: IStarknetMessagingEvents Event: ConsumedMessageToL1 This event is emitted when a message is sent from L1 to L2 by the sendMessageToL2 function. address indexed fromAddress The address of the sender on L1. uint256 indexed toAddress The address of the receiver on L2. uint256 indexed selector The function, in the recipient L2 contract, that the message called. uint256[] payload The payload of the message. uint256 nonce The nonce of the message. uint256 fee The fee associated with the message. Contract: IStarknetMessagingEvents Event: LogMessageToL2 This event is emitted when an L1 to L2 message is canceled by the cancelL1ToL2Message function. address indexed fromAddress The address of the sender on L1. uint256 indexed toAddress The address of the receiver on L2. uint256 indexed selector The function, in the recipient L2 contract, that the message called. uint256[] payload The payload of the canceled message. uint256 nonce The nonce of the canceled message. Contract: IStarknetMessagingEvents Event: MessageToL2Canceled This event is emitted when the cancellation of an L1 to L2 message is started by the startL1ToL2MessageCancellation function. address indexed fromAddress The address of the sender on L1. uint256 indexed toAddress The address of the receiver on L2. uint256 indexed selector The function, in the recipient L2 contract, that the message called. uint256[] payload The payload of the message to be canceled. uint256 nonce The nonce of the message to be canceled. Contract: IStarknetMessagingEvents Event: MessageToL2CancellationStarted","title":"Messaging function and event reference","component":"ROOT","version":"","name":"messaging-reference","url":"/architecture-and-concepts/network-architecture/messaging-reference/","titles":[{"text":"L1 function reference","hash":"l1_function_reference","id":1},{"text":"cancelL1ToL2Message","hash":"cancelL1ToL2Message","id":2},{"text":"Description","hash":"description","id":3},{"text":"State Mutability","hash":"state_mutability","id":4},{"text":"Parameters","hash":"parameters","id":5},{"text":"Returns","hash":"returns","id":6},{"text":"Emitted event","hash":"emitted_event","id":7},{"text":"Function definition","hash":"function_definition","id":8},{"text":"consumeMessageFromL2","hash":"consumeMessageFromL2","id":9},{"text":"Description","hash":"description_2","id":10},{"text":"State Mutability","hash":"state_mutability_2","id":11},{"text":"Parameters","hash":"parameters_2","id":12},{"text":"Returns","hash":"returns_2","id":13},{"text":"Emitted event","hash":"emitted_event_2","id":14},{"text":"Function definition","hash":"function_definition_2","id":15},{"text":"getMaxL1MsgFee","hash":"getMaxL1MsgFee","id":16},{"text":"Description","hash":"description_3","id":17},{"text":"State Mutability","hash":"state_mutability_3","id":18},{"text":"Parameters","hash":"parameters_3","id":19},{"text":"Returns","hash":"returns_3","id":20},{"text":"Function definition","hash":"function_definition_3","id":21},{"text":"l1ToL2MessageCancellations","hash":"l1ToL2MessageCancellations","id":22},{"text":"Description","hash":"description_4","id":23},{"text":"State Mutability","hash":"state_mutability_4","id":24},{"text":"Parameters","hash":"parameters_4","id":25},{"text":"Returns","hash":"returns_4","id":26},{"text":"Function definition","hash":"function_definition_4","id":27},{"text":"l1ToL2MessageNonce","hash":"l1ToL2MessageNonce","id":28},{"text":"Description","hash":"description_5","id":29},{"text":"State Mutability","hash":"state_mutability_5","id":30},{"text":"Parameters","hash":"parameters_5","id":31},{"text":"Returns","hash":"returns_5","id":32},{"text":"Function definition","hash":"function_definition_5","id":33},{"text":"l1ToL2Messages","hash":"l1ToL2Messages","id":34},{"text":"Description","hash":"description_6","id":35},{"text":"State Mutability","hash":"state_mutability_6","id":36},{"text":"Parameters","hash":"parameters_6","id":37},{"text":"Returns","hash":"returns_6","id":38},{"text":"Function definition","hash":"function_definition_6","id":39},{"text":"l2ToL1Messages","hash":"l2ToL1Messages","id":40},{"text":"Description","hash":"description_7","id":41},{"text":"State Mutability","hash":"state_mutability_7","id":42},{"text":"Parameters","hash":"parameters_7","id":43},{"text":"Returns","hash":"returns_7","id":44},{"text":"Function definition","hash":"function_definition_7","id":45},{"text":"messageCancellationDelay","hash":"messageCancellationDelay","id":46},{"text":"Description","hash":"description_8","id":47},{"text":"State Mutability","hash":"state_mutability_8","id":48},{"text":"Parameters","hash":"parameters_8","id":49},{"text":"Returns","hash":"returns_8","id":50},{"text":"Function definition","hash":"function_definition_8","id":51},{"text":"sendMessageToL2","hash":"sendMessageToL2","id":52},{"text":"Description","hash":"description_9","id":53},{"text":"State Mutability","hash":"state_mutability_9","id":54},{"text":"Parameters","hash":"parameters_9","id":55},{"text":"Returns","hash":"returns_9","id":56},{"text":"Emitted event","hash":"emitted_event_3","id":57},{"text":"Function definition","hash":"function_definition_9","id":58},{"text":"startL1ToL2MessageCancellation","hash":"startL1ToL2MessageCancellation","id":59},{"text":"Description","hash":"description_10","id":60},{"text":"State Mutability","hash":"state_mutability_10","id":61},{"text":"Parameters","hash":"parameters_10","id":62},{"text":"Returns","hash":"returns_10","id":63},{"text":"Emitted event","hash":"emitted_event_4","id":64},{"text":"Function definition","hash":"function_definition_10","id":65},{"text":"L1 event reference","hash":"l1_event_reference","id":66},{"text":"ConsumedMessageToL1","hash":"ConsumedMessageToL1","id":67},{"text":"Description","hash":"description_11","id":68},{"text":"Event attributes","hash":"event_attributes","id":69},{"text":"Event definition","hash":"event_definition","id":70},{"text":"LogMessageToL2","hash":"LogMessageToL2","id":71},{"text":"Description","hash":"description_12","id":72},{"text":"Event attributes","hash":"event_attributes_2","id":73},{"text":"Event definition","hash":"event_definition_2","id":74},{"text":"MessageToL2Canceled","hash":"MessageToL2Canceled","id":75},{"text":"Description","hash":"description_13","id":76},{"text":"Event attributes","hash":"event_attributes_3","id":77},{"text":"Event definition","hash":"event_definition_3","id":78},{"text":"MessageToL2CancellationStarted","hash":"MessageToL2CancellationStarted","id":79},{"text":"Description","hash":"description_14","id":80},{"text":"Event attributes","hash":"event_attributes_4","id":81},{"text":"Event definition","hash":"event_definition_4","id":82}]},"68":{"id":68,"text":"SNOS is a key element in Starknet’s architecture, but also one of its more complicated components. This page’s aim is to gradually walk you through what SNOS is, how does it work and interact with the Starknet Core contract, and where its implementations can be found. Some parts may require reading more than once, but don’t hesitate to reach out if you feel further clarification is needed. As an L2 validity rollup, Starknet’s state on Ethereum can’t be updated without proving that all the blocks between the current state and the new state are valid. But what does \"proving that a block is valid\" mean exactly? Technically, only statements of the form \"Cairo program \\(P\\) ran successfully with output \\(O\\)\" can be proven, which means that the statement \"Blocks \\(B\\) is valid\" needs to expressed in the form of a Cairo program. This is where SNOS comes in: it is a Cairo Zero program that verifies the validity of blocks by getting an initial state \\(S\\) and a list of transactions (i.e., block) \\(B\\) as input and outputting the state that is the result of applying \\(B\\) on \\(S\\). SNOS is the program required for updating Starknet’s state on Ethereum (up to some caveats). As such, is it also the final arbiter on what does it mean for a transaction to execute correctly. For example, while a malicious sequencer can deviate from the INVOKE transaction’s behavior by skipping the execution of __validate__ before __execute__ in the calling account contract, this specification is enforced by SNOS and therefore this sequencer will not be able to produce the proof for the block in which this transaction was included. The following is a rough sketch of the SNOS program, starting at os.cairo's main function: In broad strokes, SNOS’s execution consists of the following steps: Preprocessing: preparing the SNOS’s inputs, which include the various hints that will be needed throughout the execution (for example, the Merkle path of every accessed storage slot and the code of every accessed contract) Running the transactions: the bulk of SNOS’s execution, where transactions are executed sequentially such that for each transaction: The associated account contract is loaded into the memory and called Inner contracts are called, such that the entry (contract_address, class_hash) is added to a global state updates dictionary for each loaded contract (which is needed to assert that the loaded code corresponds to the class hash that is part of the state commitment) Contract calls are in fact done non-deterministically, i.e. the contract’s response are guessed and verified later. For more details, see Syscall mechanism. State updates are accumulated in the global state updates dictionary Verifying that the new commitment corresponds to applying the updates accumulated in the global state updates dictionary to the old commitment (for more details, see the state_update function in state.cairo). Encoding the state diff and adding it to the output segment for data availability purposes (for more details, see the serialize_os_output function in output.cairo) A contract can invoke system calls throughout its execution, which pass the control from the currently executing contract to SNOS itself. Such operations are required when a contract needs information that does not exist within its code, e.g. accessing the Starknet state to read a storage value or to call another contract. SNOS’s code heavily relies on non-determinism to handle system calls. Whenever a contract invokes some syscall, the request, alongside the guessed response, is recorded in a syscalls array. At the end of every entry point execution, we go over the syscalls array and verify that the responses were correct (for more details, see the execute_entry_point function in execute_transactions.cairo). For syscalls such as get_execution_info, which returns the block hash and number, correctness means consistency with the value given to SNOS as input. For contract calls, however, one needs to execute the called contract and verify that the actual response and the guessed response are identical. But how can we guess the responses to all the contract calls before executing them? For that, it is important to distinguish two different styles-of-execution that a Starknet block goes through: The first one is done by a sequencer, when constructing the block from incoming transactions The second one is done by a prover, when executing SNOS in order to generate a proof for the (already finalized) block Therefore, when running the OS, we already know what is going to happen: the block has already been executed by the sequencer, and so we know exactly what contracts and storage slots will be accessed, what each internal call will return, and so on. It’s worth noting that in the first execution, the sequencer can run in whatever way he chooses. In fact, he doesn’t even have to run through the Cairo VM at all, but rather precompile contracts to machine code and run them natively. Moreover, sequencers can also impose restrictions that are not enforced by SNOS. Such discrepancy between the two executions may seem like a bug, but as long as these restrictions only protect the sequencers themselves, rather than the correctness of execution, there is no reason for SNOS to enforce them. A good example for such restriction is the limits on validation functions that protect the sequencer from DoS attacks. It is crucial, however, that both executions agree on the execution semantics, since, as mentioned in What is SNOS?, SNOS is the final arbiter and if it disagrees on the validity of the block, the sequencer will not be able to produce a proof for that block (and the only way forward would be a reorg on Starknet). The Starknet Core contract is the contract responsible for storing and updating Starknet’s state on Ethereum. As of Starknet v0.13.2 and as part of SHARP’s applicative recursion feature, proofs of SNOS’s execution are not enough to update the Starknet Core contract. Instead, it is required to submit an \"applicative proof\" of a different program called the applicative bootloader. The way the applicative bootloader works is by verifying a proof of one or more executions of a base program \\(B\\) and then using their outputs as input to an aggregator program \\(A\\). In the case of Starknet, \\(B\\) is the SNOS program and \\(A\\) is a new cairo program that squashes the state diffs of several blocks (the code of which can be found in the cairo-lang GitHub repository). This way, individual executions of SNOS for some block range can be \"squashed\" into a single program whose valid execution attests to the validity of all blocks within that range and whose output is the squashed state diff of these blocks. In order to verify that an \"applicative proof\" used the correct SNOS and aggregator programs, their program hashes must be stored in the Starknet Core contract. As each Starknet version is associated with a given SNOS program, this means that breaking protocol changes must be accompanied by an update to SNOS’s (and possibly the aggregator’s) program hash registered in the Starknet Core contract. You can read the program hashes currently registered in the Starknet Core contract by using its programHash (for SNOS’s program hash) and aggregatorProgramHash (for the aggregator’s program hash) functions. Finally, the Starknet Core contract is also responsible for verifying the few things that SNOS can’t, including: Verifying that the state given to SNOS as input is Starknet’s current state on Ethereum Verifying that all L1→L2 messages were sent on Ethereum The Cairo code of SNOS is available in the cairo-lang GitHub repository. However, this repository does not include all the hints implementation, which are necessary to locally run SNOS. The current implementation of these hints in Python is now deprecated, and will no longer be maintained in future Starknet versions. As part of the transition of Starknet’s infrastructure to Rust, SNOS’s Pythonic hints implementation is deprecated, and will no longer be maintained in future Starknet versions. Instead, a new Rust implementation of the hints, including initializing all inputs of SNOS via a Starknet full node connection, is available in the SNOS GitHub repository. At the time of writing, this codebase supports the execution of SNOS for Starknet version 0.13.2.","title":"The Starknet operating system (SNOS)","component":"ROOT","version":"","name":"os","url":"/architecture-and-concepts/network-architecture/os/","titles":[{"text":"What is the SNOS?","hash":"what_is_the_snos","id":1},{"text":"How does SNOS work?","hash":"how_does_snos_work","id":2},{"text":"High-level overview","hash":"high_level_overview","id":3},{"text":"Syscall mechanism","hash":"syscall-mechanism","id":4},{"text":"SNOS and the Starknet Core contract","hash":"os-and-core-contract","id":5},{"text":"Implementations","hash":"implementations","id":6}]},"69":{"id":69,"text":"Starknet is a coordinated system, with each component—sequencers, provers, and nodes—playing a specific yet interconnected role. Although Starknet is not yet fully decentralized, it’s actively moving toward that goal. This description of the system’s roles and how they interact should help you better grasp the intricacies of the Starknet ecosystem. Starknet’s operation begins when a transaction is received by a gateway, which serves as the Mempool. This stage could also be managed by the sequencer. The transaction is initially marked as RECEIVED. The sequencer then incorporates the transaction into the network state and tags it as ACCEPTED_ON_L2. The final step involves the prover, which executes the operating system on the new block, calculates its proof, and submits it to Layer 1 (L1) for verification. For more information on the transaction flow, see Transaction lifecycle. In essence, Starknet’s architecture involves multiple components: The sequencer receives transactions, orders them, and produces blocks. It operates similarly to validators in Ethereum or Bitcoin. The prover generates proofs for the created blocks and transactions. It uses the Cairo Virtual Machine (Cairo VM) to run provable programs, thereby creating execution traces necessary for generating STARK proofs. L1, in this case, Ethereum, hosts a smart contract capable of verifying these STARK proofs. If the proofs are valid, Starknet’s state root on L1 is updated. Starknet’s state is a comprehensive snapshot maintained through Merkle trees, much like in Ethereum. This establishes the architecture of the validity roll-up and the roles of each component. Sequencers are the backbone of the Starknet network, similar to Ethereum’s validators. They usher transactions into the system. Validity Rollups, also known as ZK-Rollups, excel at offloading some network chores, like bundling and processing transactions, to specialized players. This setup is similar to how Ethereum and Bitcoin delegate security to miners. Sequencing, like mining, demands hefty resources. Validity Rollups like Starknet outsource transaction processing to specialized entities and then verify their work. These specialized entities, in the context of Validity Rollups, are known as sequencers. Instead of providing security, as miners do, sequencers provide transaction capacity. They order, that is, sequence, multiple transactions into a single batch, execute them, and produce a block that is later proved by the prover and submitted to the Layer 1 network as a single, compact proof, known as a rollup. Just as validators in Ethereum and miners in Bitcoin are specialized actors securing the network, sequencers in Validity Rollup-based networks are specialized actors that provide transaction capacity. This mechanism enables Validity Rollups to handle a higher volume of transactions while maintaining the security of the underlying Ethereum network, enhancing scalability without compromising on security. Sequencers follow a systematic method for processing transactions: Sequencing: They collect transactions from users and order them. Executing: Sequencers then process these transactions. Batching: Transactions are grouped together in batches for efficiency. Block Production: Sequencers produce blocks that contain batches of processed transactions. Sequencers must be reliable and highly available, as their role is critical to the network’s smooth functioning. They need powerful and well-connected machines to perform their role effectively, as they must process transactions rapidly and continuously. The current roadmap for Starknet includes decentralizing the sequencer role. This shift towards decentralization will enable more participants to become sequencers, contributing to the robustness of the network. Provers serve as the second line of verification in the Starknet network. Their main task is to validate the work of the sequencers, when they receive the block produced by the sequencer, and to generate proofs that these processes were correctly performed. A prover does the following: Receives blocks: Provers receive blocks of processed transactions from sequencers. Processes blocks: Provers process these blocks a second time, ensuring that all transactions within the block have been correctly handled. Generates a proof: After processing, provers generate a proof of correct transaction processing. Sends the proof to Ethereum: Finally, the proof is sent to the Ethereum network for validation. If the proof is correct, the Ethereum network accepts the block of transactions. Provers need even more computational power than sequencers because they have to calculate and generate proofs, a process that is computationally heavy. However, the work of provers can be split into multiple parts, allowing for parallelism and efficient proof generation. The proof generation process is asynchronous, meaning it doesn’t have to occur immediately or in real-time. This flexibility allows for the workload to be distributed among multiple provers. Each prover can work on a different block, allowing for parallelism and efficient proof generation. The design of Starknet relies on these two types of actors—sequencers and provers—working in tandem to ensure efficient processing and secure verification of transactions. The relationship between sequencers and provers in blockchain technology often sparks debate. A common misunderstanding suggests that either the prover or the sequencer is the main bottleneck. To set the record straight, let’s discuss the optimization of both components. Starknet, which uses the Cairo programming language, currently supports only sequential transactions. Plans are in place to introduce parallel transactions in the future. However, as of now, the sequencer operates one transaction at a time, making it the bottleneck in the system. In contrast, provers operate asynchronously and can execute multiple tasks in parallel. The use of proof recursion allows for task distribution across multiple machines, making scalability less of an issue for provers. When it comes to defining what nodes do in Bitcoin or Ethereum, people often misinterpret their role as keeping track of every transaction within the network. This, however, is not entirely accurate. Nodes serve as auditors of the network, maintaining the state of the network, such as how much Bitcoin each participant owns or the current state of a specific smart contract. They maintain network state by processing transactions and preserving a record of all transactions, but that is a means to an end, not the end itself. In Validity Rollups and specifically within Starknet, this concept is somewhat reversed. Nodes don’t necessarily have to process transactions to get the state. In contrast to Ethereum or Bitcoin, Starknet nodes aren’t required to process all transactions to maintain the state of the network. You can access network state data by using the Starknet API, which uses the JSON RPC protocol, to communicate with a node. Previously, Starknet’s Gateway and Feeder Gateway APIs enabled querying the sequencer, but as the network has matured, the JSON RPC has become the standard. Operating your own node is typically faster than using a shared architecture, like the gateway. It’s worth noting that more people running nodes increases the resilience of the network and prevents server flooding, which has been an issue in other L2 networks. Currently, there are primarily three methods for a node to keep track of the network’s state and nodes can implement any of these methods: Replaying Old Transactions: Like Ethereum or Bitcoin, a node can take all the transactions and re-execute them. Although this approach is accurate, it isn’t scalable unless you have a powerful machine that’s capable of handling the load. If you can replay all transactions, you can become a sequencer. Relying on L2 Consensus: Nodes can trust the sequencer to execute the network correctly. When the sequencer updates the state and adds a new block, nodes accept the update as accurate. Checking Proof Validation on L1: Nodes can monitor the state of the network by observing L1 and ensuring that every time a proof is sent, they receive the updated state. This way, they don’t have to trust anyone and only need to keep track of the latest valid transaction for Starknet. Each type of node setup comes with its own set of hardware requirements and trust assumptions. Nodes that replay transactions require powerful machines to track and execute all transactions. These nodes don’t have trust assumptions; they rely solely on the transactions they execute, guaranteeing that the state at any given point is valid. Nodes that rely on L2 consensus require less computational power. They need sufficient storage to keep the state but don’t need to process a lot of transactions. The tradeoff here is a trust assumption. Currently, Starknet revolves around one sequencer, so these nodes trust StarkWare not to disrupt the network. However, once a consensus mechanism and leader election amongst sequencers are in place, these nodes will only need to trust that a sequencer who staked their stake to produce a block is not willing to lose it. Nodes that only update their state based on proof validation on L1 require the least hardware. They have the same requirements as an Ethereum node, and once Ethereum light nodes become a reality, maintaining such a node could be as simple as using a smartphone. The only tradeoff is higher latency. Proofs are sent to Ethereum intermittently, not for every block, resulting in delayed state updates. Plans are in place to produce proofs more frequently, even if they are not sent to Ethereum immediately, lowering node latency.","title":"Starknet architecture: Overview","component":"ROOT","version":"","name":"starknet-architecture-overview","url":"/architecture-and-concepts/network-architecture/starknet-architecture-overview/","titles":[{"text":"Transaction flow","hash":"transaction_flow","id":1},{"text":"Starknet’s state","hash":"starknets_state","id":2},{"text":"Sequencers","hash":"sequencers","id":3},{"text":"Provers","hash":"provers","id":4},{"text":"Optimizing sequencers and provers: Debunking common misconceptions","hash":"optimizing_sequencers_and_provers_debunking_common_misconceptions","id":5},{"text":"Nodes","hash":"nodes","id":6},{"text":"Nodes that replay transactions","hash":"nodes_that_replay_transactions","id":7},{"text":"Nodes that rely on L2 consensus","hash":"nodes_that_rely_on_l2_consensus","id":8},{"text":"Nodes that check proof validation on L1","hash":"nodes_that_check_proof_validation_on_l1","id":9}]},"70":{"id":70,"text":"Starknet’s state consists of: Contract classes a mapping between the class hash and the class definition Contract instances a mapping between addresses (251-bit field elements) and the contract’s state A contract instance’s state consists of: Class hash defines the functionality of the contract Contract storage a key-value mapping where the key/values are field elements Contract nonce the number of transactions sent from this contract A transaction \\(tx\\) transitions the system from state \\(S\\) to state \\(S'\\) if: \\(tx\\) is an Invoke transaction, and the storage of \\(S'\\) is the result of executing the target contract code with respect to the previous state \\(S\\). The arguments, contract instance’s address, and the specific function entry point are part of the transaction. \\(tx\\) is a Deploy account transaction, and \\(S'\\) contains the new contract instance’s state at the contract instance’s address. Additionally, the storage of \\(S\\) is updated according to the execution of the contract instance’s constructor. \\(tx\\) is a Declare transaction, and \\(S'\\) contains the class hash and definition in the contract class’s mapping The state commitment is a digest that represents the state. In Starknet, the state commitment combines the roots of two binary Merkle-Patricia tries of height 251 in the following manner: state_commitment = hPos( \"STARKNET_STATE_V0\", contract_trie_root, class_trie_root ) Where: hPos is the Poseidon hash function. STARKNET_STATE_V0 is a constant prefix string encoded in ASCII (and represented as a field element). contract_trie_root is the root of the contract trie, a Merkle-Patricia trie whose leaves are the contracts' states. class_trie_root is the root of the class trie, a Merkle-Patricia trie whose leaves are the compiled class hashes. As with Ethereum, this trie is a two-level structure, whose leaves correspond to distinct contracts. The address of each contract determines the path from the trie’s root to its corresponding leaf, whose content encodes the contract’s state. The information stored in the leaf is as follows: hPed( hPed( hPed( class_hash, storage_root ), nonce ), 0 ) Where: hPed is the Pedersen hash function. class_hash is the hash of the contract’s definition. storage_root is the root of another Merkle-Patricia trie of height 251 that is constructed from the contract’s storage. nonce is the current nonce of the contract. The class trie encodes the information about all existing classes in Starknet’s state. This trie maps class hashes to their compiled class hashes. The information stored in a leaf at a path corresponding to some class hash is as follows: hPos( CONTRACT_CLASS_LEAF_V0, compiled_class_hash ) Where: hPos is the Poseidon hash function CONTRACT_CLASS_LEAF_V0 is a constant prefix string encoded in ASCII (and represented as a field element). compiled_class_hash is the hash of the Cairo assembly resulting from compiling the given class via the Sierra-to-Casm compiler. Compiled class hash The compiled class hash identifies the output of a specific Casm compilation as unique. Cairo classes that are part of the state commitment are defined with Sierra, an intermediate representation between Cairo and Cairo assembly (Casm). However, the prover only works with Casm. So in order to prevent needing to compile from Sierra to Casm in every block in which the class is used, the state commitment must have some information about the corresponding Cairo assembly. The compiled class hash provides this information. For more information, see Cairo and Sierra. The party that declares the contract signs the compiled class hash, which they obtain using an SDK, as part of the DECLARE transaction. If the transaction is included in a block, then the compiled class hash becomes part of the state commitment. In the future, when Sierra-to-Casm compilation becomes part of the Starknet OS, this value might be updated via a proof of the Sierra-to-Casm compiler execution, showing that compiling the same class with a newer compiler version results in some new compiled class hash. The state commitment scheme uses a binary Merkle-Patricia trie with the Pedersen hash function. Each node in the trie is represented by a triplet \\((length, path, value)\\), where: \\(length\\) is the length of the path, measured in nodes. \\(path\\) is the path from the current node to its unique non-empty subtrie. \\(path\\) is an integer in the set \\(\\{0,\\ldots,2^{length}-1\\}\\), and the binary expansion of \\(path\\) indicates how to proceed along the trie, as follows: Expand \\(path\\) to its binary representation. Starting with the most significant bit, representing the root of the trie, traverse the tree node by node, where the bit values \\(0\\) and \\(1\\) indicate left and right, respectively. \\(value\\) is the value of the node, which can be either data, or the hash of two non-empty child nodes. An empty node is one whose triplet values are \\((0,0,0)\\). Leaf nodes and internal nodes can be empty. A subtrie rooted at a node \\((length, path, value)\\) has a single non-empty subtrie, rooted at the node obtained by following the path specified by \\(path\\). Length is specified, and cannot be deduced from \\(path\\), because the numbers in the triplet \\((length, path, value)\\) are field elements of fixed size, 251 bits each. For a node where \\(length>0\\), \\(path\\) leads to the highest node whose left and right children are not empty. The following rules specify how the trie is constructed from a given set of leaves: The hash of a node \\(N =(length, path, value)\\), denoted by \\(H(N)\\), is: \\[H(N)=\\begin{cases} value, & \\text{if } length = 0 \\\\ h_{Ped}(value, path) + length, & \\text{otherwise} \\end{cases}\\] All arithmetic operations in the above description of \\(H\\) are done in the STARK field, as described in The STARK field. The triplet representing the parent of the nodes \\(left=(\\ell_L, p_L, v_L)\\), \\(right=(\\ell_R, p_R, v_R)\\) is defined as follows: \\[parent= \\begin{cases} (0,0,0), & \\text{if } left=right=(0,0,0)\\\\ (\\ell_L + 1, p_L, v_L), & \\text{if } right=(0,0,0) \\text{ and } left \\neq (0,0,0)\\\\ (\\ell_R + 1, p_R + 2^{\\ell_R}, v_R), & \\text{if } right\\neq (0,0,0) \\text{ and } left = (0,0,0)\\\\ (0, 0, h_{Ped}(H(left), H(right))), & \\text{otherwise} \\end{cases}\\] The diagram A three-level Merkle-Patricia trie illustrates the construction of a three-level-high Merkle-Patricia trie from the leaves whose values are \\((0,0,1,0,0,1,0,0)\\): Figure 1. A three-level Merkle-Patricia trie Where \\(r=h_{Ped}(H(2,2,1),H((2,1,1))\\). Notice that the example does not skip from the root, whose length is zero, so the final state commitment to the trie is \\(H((0,0,r))=r\\). Suppose that you want to prove, with respect to the state commitment just computed, that the value of the leaf whose path is given by \\(101\\) is \\(1\\). In a standard Merkle trie, the proof would consist of data from three nodes, which are siblings along the path to the root. In a Merkle-Patricia trie, because the trie is sparse, you only need to send the two children of the root, which are \\((2,2,1)\\) and \\((2,1,1)\\). These two children are enough to reproduce the state commitment \\(r\\), and because you know that the height of the trie is three, and that it is fixed, you know that the path \\(01\\) of length \\(2\\) specified by the right-hand child, \\((2,1,1)\\), leads to the desired leaf. Starknet uses special contract addresses to provide distinct capabilities beyond regular contract deployment. Two such addresses are 0x0 and 0x1. These addresses are reserved for specific purposes and are characterized by their unique behavior in comparison to traditional contract addresses. Address 0x0 functions as the default caller_address for external calls, including interactions with the L1 handler or deprecated Deploy transactions. Unlike regular contracts, address 0x0 does not possess a storage structure and does not accommodate storage mapping. Address 0x1 is another special contract address within Starknet’s architecture. It functions as a storage space for mapping block numbers to their corresponding block hashes. The storage structure at this address is organized as follows: Keys Block numbers between \\(\\text{first_v0_12_0_block}\\) and \\(\\text{current_block - 10}\\). Values Corresponding block hashes for the specified blocks. Default Values For all other block numbers, the values are set to 0. The storage organization of address 0x1 supports the efficient retrieval of block hashes based on block numbers within a defined range and is also used by the get_block_hash system call.","title":"Starknet state","component":"ROOT","version":"","name":"starknet-state","url":"/architecture-and-concepts/network-architecture/starknet-state/","titles":[{"text":"Transitioning to a new state","hash":"transitioning_to_a_new_state","id":1},{"text":"State commitment","hash":"state_commitment","id":2},{"text":"The contract trie","hash":"contracts_trie","id":3},{"text":"The class trie","hash":"classes_trie","id":4},{"text":"Merkle-Patricia trie","hash":"merkle_patricia_trie","id":5},{"text":"About nodes","hash":"about_nodes","id":6},{"text":"Trie construction","hash":"trie_construction","id":7},{"text":"Mathematical definition of the nodes in the trie","hash":"mathematical_definition_of_the_nodes_in_the_trie","id":8},{"text":"Example trie","hash":"example_trie","id":9},{"text":"Special addresses","hash":"special_addresses","id":10},{"text":"Address 0x0","hash":"address_0x0","id":11},{"text":"Address 0x1","hash":"address_0x1","id":12}]},"71":{"id":71,"text":"The high-level steps in the Starknet transaction lifecycle are as follows: Transaction submission: A transaction is submitted to one of the gateways, which functions as the mempool, and marks the transaction status as RECEIVED. Mempool validation: The mempool performs a preliminary validation on the transaction, such as ensuring that the current account balance exceeds the value of max_fee (prior to v3 transactions) or assuring the transaction’s calldata length is within the legal limit. If the transaction is invalid, it does not proceed. Mempool validation in this context is analogous to Ethereum’s signature checking, including running the account’s __validate__ function on an INVOKE transaction, __validate_declare__ on a DECLARE transaction, or __validate_deploy__ on a DEPLOY_ACCOUNT transaction, ensuring that the current account balance exceeds the value of max_fee (prior to v3 transactions), and more. Sequencer validation: The sequencer performs preliminary validation on the transaction before executing it to ensure that the transaction is still valid. If the transaction is invalid, it does not proceed. This validation stage repeats the same validation run during the mempool validation. Execution: The sequencer operation sequentially applies all transactions that passed the preliminary validation to the state. If a transaction fails during execution, it is included in the block with the status REVERTED. Proof generation and verification: The Prover executes the operating system on the new block, computes the proof, and transmits it to the L1 verifier, which verifies the proof. At this point, the L1 state is updated to include the transaction. The diagram below illustrates how each transaction status fits into the overall transaction flow: The following are the possible statuses of a transaction from the moment a user sends it until the moment it passes the L1 verifier: Status type Status Explanation Finality NOT_RECEIVED The transaction is not yet known to the sequencer. RECEIVED The transaction was received by the mempool. The transaction now either executes successfully, is rejected, or reverted. The transaction has no execution status. REJECTED The transaction was received by the mempool but failed validation in the sequencer. Such transactions are not included in a block. The transaction has no execution status. A rejected transaction is stored in the mempool. You cannot send another transaction with the same transaction hash. ACCEPTED_ON_L2 The transaction was executed and entered an actual created block on L2. ACCEPTED_ON_L1 The transaction was accepted on Ethereum. Execution REVERTED The transaction passed validation but failed during execution in the sequencer. It is included in the block with the status REVERTED. Since only INVOKE transactions have an execution phase, DEPLOY_ACCOUNT and DECLARE transactions cannot be reverted. If either the __VALIDATE_DEPLOY__ or the __VALIDATE_DECLARE__ function fails when run in the sequencer, then the transaction is rejected. SUCCEEDED The transaction was successfully executed by the sequencer. It is included in the block. When a transaction is marked as REVERTED, the following state implications occur: Nonce increases The nonce value for the account of the failed transaction iterates despite the failure. Fee charge The sequencer charges a fee for the execution of the transaction up to the point of failure. A Transfer event is emitted. Partial reversion All changes that occurred during the validation stage are not reverted. However, all changes that occurred during the execution stage are reverted, including all messages to L1 or any events that were emitted during this stage. Events might still be emitted from the validation stage or the fee charge stage. Fee calculation The fee charged for REVERTED transactions is the smaller of the following two values: The maximum fee that the user is willing to pay, either max_fee (pre-v3 transactions) or \\(\\text{max_amount} \\cdot \\text{max_price_per_unit}\\) (v3 transactions). The total consumed resources. Consumed Resources The resources used for the execution of the transaction up to the point of failure. This includes Cairo steps, builtins, syscalls, L1 messages, events, and state diffs during the validation and execution stages. To get a receipt, use the JSON RPC method starknet_getTransactionReceipt. The transaction receipt contains the following fields: transaction_hash The hash of the transaction. actual_fee The actual fee paid for the transaction. finality_status The finality status of the transaction. execution_status The execution status of the transaction. block_hash The hash of the block that includes the transaction block_number The sequential number of the block that includes the transaction messages_sent A list of messages sent to L1. events The events emitted. execution_resource A summary of the execution resources used by the transaction. type The type of the transaction. The following is an example of a receipt: { \"jsonrpc\": \"2.0\", \"result\": { \"actual_fee\": \"0x221db5dbf6db\", \"block_hash\": \"0x301fc0d09c5810600af7bb9610be10596ad6f4e6d28a60d397dd148f0962a88\", \"block_number\": 906096, \"events\": [ { \"data\": [ \"0x181de8b0cd32999a5cc962c5f724bc0f6a322f02957b80e1d5fef49a87588b7\", \"0x0\", \"0x9184e72a000\", \"0x0\" ], \"from_address\": \"0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\", \"keys\": [ \"0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9\" ] }, { \"data\": [ \"0x764da020183e28a48ee38a9474f84e7e5ff13194\", \"0x9184e72a000\", \"0x0\", \"0x181de8b0cd32999a5cc962c5f724bc0f6a322f02957b80e1d5fef49a87588b7\" ], \"from_address\": \"0x73314940630fd6dcda0d772d4c972c4e0a9946bef9dabf4ef84eda8ef542b82\", \"keys\": [ \"0x194fc63c49b0f07c8e7a78476844837255213824bd6cb81e0ccfb949921aad1\" ] }, { \"data\": [ \"0x181de8b0cd32999a5cc962c5f724bc0f6a322f02957b80e1d5fef49a87588b7\", \"0x1176a1bd84444c89232ec27754698e5d2e7e1a7f1539f12027f28b23ec9f3d8\", \"0x221db5dbf6db\", \"0x0\" ], \"from_address\": \"0x49d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\", \"keys\": [ \"0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9\" ] } ], \"execution_status\": \"SUCCEEDED\", \"finality_status\": \"ACCEPTED_ON_L2\", \"messages_sent\": [ { \"from_address\": \"0x73314940630fd6dcda0d772d4c972c4e0a9946bef9dabf4ef84eda8ef542b82\", \"payload\": [ \"0x0\", \"0x764da020183e28a48ee38a9474f84e7e5ff13194\", \"0x9184e72a000\", \"0x0\" ], \"to_address\": \"0xc3511006c04ef1d78af4c8e0e74ec18a6e64ff9e\" } ], \"transaction_hash\": \"0xdeadbeef\", \"type\": \"INVOKE\" }, \"id\": 1 }","title":"Transaction lifecycle","component":"ROOT","version":"","name":"transaction-life-cycle","url":"/architecture-and-concepts/network-architecture/transaction-life-cycle/","titles":[{"text":"Transaction flow","hash":"transaction_flow","id":1},{"text":"Transaction status","hash":"transaction_status","id":2},{"text":"State implications of a reverted transaction","hash":"transaction-state-implications","id":3},{"text":"Transaction receipt","hash":"transaction_receipt","id":4}]},"72":{"id":72,"text":"Starknet supports the following types of transactions, as defined in the Starknet API: DECLARE Declares new contract classes, enabling new contract instances. INVOKE Invokes an existing function in a contract. DEPLOY_ACCOUNT Deploys new account contracts in smart wallets. To see how these transaction types appear in the Starknet API, see starknet_api_openrpc.json. This topic describes the available fields for these transaction types and how each transaction’s hash is calculated. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. Deprecated transaction versions are still supported, but support will be removed in a future release of Starknet. Table 1. Supported versions of Starknet transaction types Transaction name Current version Deprecated versions Unsupported versions INVOKE v3 v1, v0 N/A DECLARE v3 v2, v1 v0 DEPLOY_ACCOUNT v3 v1 N/A DEPLOY N/A N/A v0 Additionally, see information on the L1 handler transaction type. Do not submit a transaction that uses an unsupported transaction type, because it cannot be included in a proof, and so cannot become part of a Starknet block. While the L1HandlerTransaction type is a valid transaction type within Starknet, be aware that it cannot be broadcast through the Starknet API like the other transaction types listed in the table above. This transaction type is specifically designed for internal Starknet operations, particularly for handling messages from L1 to L2. For more details, refer to the L1 handler transaction page. The INVOKE transaction type invokes a function in an existing contract instance. The contract code of the account that sends the INVOKE transaction determines how to process the transaction. Because an account’s __validate__ and __execute__ functions can contain any logic, the account ultimately determines how to handle the INVOKE transaction. Every INVOKE transaction in Starknet undergoes the validation and execution stages, initiated by the __validate__ and __execute__ functions. The validation stage verifies that the account that sent the transaction approves it. Field name Type Description account_deployment_data List For future use. Currently this value is always empty. For more information, see SNIP 8: Transaction V3 Structure calldata List The arguments that are passed to the validate and execute functions. chain_id FieldElement The id of the chain to which the transaction is sent. fee_data_availability_mode FieldElement For future use. Currently this value is always 0. For more information, see SNIP 8: Transaction V3 Structure nonce FieldElement The transaction nonce. nonce_data_availability_mode FieldElement For future use. Currently this value is always 0. For more information, see SNIP 8: Transaction V3 Structure paymaster_data List For future use. Currently this value is always empty. For more information, see SNIP 8: Transaction V3 Structure resource_bounds Dict[Resource, ResourceBounds] Used for enabling the fee market. A dictionary that maps resource type to resource bounds. The resource is the amount of L1 or L2 gas used to pay for the transaction. Resource A felt. Possible values are the felt representation of the strings L1_GAS or L2_GAS. ResourceBounds A struct containing the following felts: max_amount: The maximum amount of the resource allowed for usage during the execution. max_price_per_unit: The maximum price the user is willing to pay for the resource. L1_GAS and L2_GAS are specified in units of fri, where 1 fri = 10-18 STRK. sender_address FieldElement The address of the account initiating the transaction. signature List` Additional information given by the sender, used to validate the transaction. tip FieldElement For future use. Currently this value is always 0. version FieldElement The transaction’s version. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. Transaction version, where n specifies version n transaction. For example: 3 version 3 transaction The INVOKE v3 transaction hash is calculated as a Poseidon hash over the given transaction elements, specifically: invoke_v3_tx_hash = h( \"invoke\", version, sender_address, h(tip, l1_gas_bounds, l2_gas_bounds), h(paymaster_data), chain_id, nonce, data_availability_modes, h(account_deployment_data), h(calldata) ) Where: invoke is a constant prefix string, encoded in ASCII. chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. l1_gas_bounds is constructed as follows: \\[\\underbrace{\\text{L1_GAS}}_{\\text{60 bits}} | \\underbrace{\\text{max_amount}}_{\\text{64 bits}} | \\underbrace{\\text{max_price_per_unit}}_{\\text{128 bits}}\\] l2_gas_bounds is constructed as follows: \\[\\underbrace{\\text{L2_GAS}}_{\\text{60 bits}} | \\underbrace{\\text{max_amount}}_{\\text{64 bits}} | \\underbrace{\\text{max_price_per_unit}}_{\\text{128 bits}}\\] data_availability_modes is a concatenation of fee_data_availability_mode and nonce_data_availability_mode, as follows: \\[\\underbrace{0\\cdots0}_{\\text{188 bits}} | \\underbrace{\\text{nonce_data_availability_mode}}_{\\text{32 bits}} | \\underbrace{\\text{fee_data_availability_mode}}_{\\text{32 bits}}\\] h is the Poseidon hash. Table 2. INVOKE v1 transaction fields Name Type Description sender_address FieldElement The address of the sender of this transaction. calldata List The arguments that are passed to the validate and execute functions. signature List Additional information given by the sender, used to validate the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. The value is 1. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. The INVOKE v1 transaction hash is calculated as a hash over the given transaction elements, specifically: invoke_v1_tx_hash = h( \"invoke\", version, sender_address, 0, h(calldata), max_fee, chain_id, nonce ) Where: invoke is a constant prefix string, encoded in ASCII. The placeholder zero is used to align the hash computation for the different types of transactions. chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. h is the Pedersen hash The hash of a v0 INVOKE transaction is computed as follows: invoke_v0_tx_hash = h( \"invoke\", version, contract_address, entry_point_selector, h(calldata), max_fee, chain_id ) Where: invoke is a constant prefix string, encoded in (ASCII). chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. v2 and v3 h is the Pedersen hash The DECLARE transaction introduces new contract classes into the state of Starknet, enabling other contracts to deploy instances of those classes or use them in a library call. For more information, see contract classes. Field name Type Description account_deployment_data List For future use. Currently this value is always empty. For more information, see SNIP 8: Transaction V3 Structure chain_id FieldElement The id of the chain to which the transaction is sent. compiled_class_hash FieldElement The hash of the compiled class. For more information, see Class hash. contract_class ContractClass The class definition. For more information, see Class hash. fee_data_availability_mode FieldElement For future use. Currently this value is always 0. For more information, see SNIP 8: Transaction V3 Structure nonce FieldElement The transaction nonce. nonce_data_availability_mode FieldElement For future use. Currently this value is always 0. For more information, see SNIP 8: Transaction V3 Structure paymaster_data List For future use. Currently this value is always empty. For more information, see SNIP 8: Transaction V3 Structure resource_bounds Dict[Resource, ResourceBounds] Used for enabling the fee market. A dictionary that maps resource type to resource bounds. The resource is the amount of L1 or L2 gas used to pay for the transaction. Resource A felt. Possible values are the felt representation of the strings L1_GAS or L2_GAS. ResourceBounds A struct containing the following felts: max_amount: The maximum amount of the resource allowed for usage during the execution. max_price_per_unit: The maximum price the user is willing to pay for the resource. L1_GAS and L2_GAS are specified in units of fri, where 1 fri = 10-18 STRK. sender_address FieldElement The address of the account initiating the transaction. signature List` Additional information given by the sender, used to validate the transaction. tip FieldElement For future use. Currently this value is always 0. version FieldElement The transaction’s version. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. Transaction version, where n specifies version n transaction. For example: 3 version 3 transaction The hash of a v3 DECLARE transaction is computed as follows: declare_v3_tx_hash = h( \"declare\", version, sender_address, h(tip, l1_gas_bounds, l2_gas_bounds), h(paymaster_data), chain_id, nonce, data_availability_modes, h(account_deployment_data), class_hash, compiled_class_hash ) Where: declare is a constant prefix string, encoded in ASCII. chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. l1_gas_bounds is constructed as follows: \\[\\underbrace{\\text{L1_GAS}}_{\\text{60 bits}} | \\underbrace{\\text{max_amount}}_{\\text{64 bits}} | \\underbrace{\\text{max_price_per_unit}}_{\\text{128 bits}}\\] l2_gas_bounds is constructed as follows: \\[\\underbrace{\\text{L2_GAS}}_{\\text{60 bits}} | \\underbrace{\\text{max_amount}}_{\\text{64 bits}} | \\underbrace{\\text{max_price_per_unit}}_{\\text{128 bits}}\\] data_availability_modes is a concatenation of fee_data_availability_mode and nonce_data_availability_mode, as follows: \\[\\underbrace{0\\cdots0}_{\\text{188 bits}} | \\underbrace{\\text{nonce_data_availability_mode}}_{\\text{32 bits}} | \\underbrace{\\text{fee_data_availability_mode}}_{\\text{32 bits}}\\] h is the Poseidon hash. class_hash is the hash of the contract class. See Class Hash for details about how the hash is computed compiled_class_hash is the hash of the compiled class generated by the Sierra→Casm compiler that is used in Starknet Table 3. DECLARE v2 transaction fields Name Type Description chain_id FieldElement The id of the chain to which the transaction is sent. contract_class ContractClass The (Cairo 1.0) class. compiled_class_hash FieldElement The hash of the compiled class (see here for more information) sender_address FieldElement The address of the account initiating the transaction. signature List Additional information given by the sender, used to validate the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction. nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. The value is 2. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. The hash of a v2 DECLARE transaction is computed as follows: declare_v2_tx_hash = h( \"declare\", version, sender_address, 0, h(class_hash), max_fee, chain_id, nonce, compiled_class_hash ) Where: h is the Poseidon hash function class_hash is the hash of the contract class. See Class Hash for details about how the hash is computed compiled_class_hash is the hash of the compiled class generated by the Sierra→Casm compiler that is used in Starknet This transaction version was used to declare Cairo 0 classes. Table 4. DECLARE v1 transaction fields Name Type Description contract_class ContractClass The class object. sender_address FieldElement The address of the account initiating the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction. signature List Additional information given by the sender, used to validate the transaction. nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. Possible values are 1 or 0. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. The hash of a v1 DECLARE transaction is computed as follows: declare_v1_tx_hash = h( \"declare\", version, sender_address, 0, h(class_hash), max_fee, chain_id, nonce ) Where: declare is a constant prefix string, encoded in ASCII. class_hash is the hash of the contract class. See Class Hash for details about how the hash is computed. The placeholder zero is used to align the hash computation for the different types of transactions. chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. h is the Pedersen hash This transaction version was used to declare Cairo 0 classes. The hash of a v0 DECLARE transaction is computed as follows: declare_v0_tx_hash = h( \"declare\", version, sender_address, 0, h(), max_fee, chain_id, class_hash ) Where: declare is a constant prefix string, encoded in ASCII. The placeholder zeros are used to align the hash computation for the different types of transactions. h is the Pedersen hash chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. class_hash is the hash of the contract class. See Class Hash for details about how the hash is computed. Since StarkNet v0.10.1 the DEPLOY_ACCOUNT transaction replaces the DEPLOY transaction for deploying account contracts. To use it, you should first pre-fund your new account address so that you can pay the transaction fee. You can then send the DEPLOY_ACCOUNT transaction. For more information, see Deploying a new account. Field name Type Description chain_id FieldElement The id of the chain to which the transaction is sent. class_hash FieldElement The hash of the desired account class. For more information, see Class hash. constructor_calldata List The arguments to the account constructor. contract_address_salt FieldElement A random salt that determines the account address. fee_data_availability_mode FieldElement For future use. Currently this value is always 0. For more information, see SNIP 8: Transaction V3 Structure nonce FieldElement The transaction nonce. nonce_data_availability_mode FieldElement For future use. Currently this value is always 0. For more information, see SNIP 8: Transaction V3 Structure paymaster_data List For future use. Currently this value is always empty. For more information, see SNIP 8: Transaction V3 Structure resource_bounds Dict[Resource, ResourceBounds] Used for enabling the fee market. A dictionary that maps resource type to resource bounds. The resource is the amount of L1 or L2 gas used to pay for the transaction. Resource A felt. Possible values are the felt representation of the strings L1_GAS or L2_GAS. ResourceBounds A struct containing the following felts: max_amount: The maximum amount of the resource allowed for usage during the execution. max_price_per_unit: The maximum price the user is willing to pay for the resource. L1_GAS and L2_GAS are specified in units of fri, where 1 fri = 10-18 STRK. signature List` Additional information given by the sender, used to validate the transaction. tip FieldElement For future use. Currently this value is always 0. version FieldElement The transaction’s version. When the fields that comprise a transaction change, either with the addition of a new field or the removal of an existing field, then the transaction version increases. Transaction version, where n specifies version n transaction. For example: 3 version 3 transaction The hash of a DEPLOY_ACCOUNT transaction is computed as follows: deploy_account_v3_tx_hash = h( \"deploy_account\", version, contract_address, h(tip, l1_gas_bounds, l2_gas_bounds), h(paymaster_data), chain_id, nonce, data_availability_modes, h(constructor_calldata), class_hash, contract_address_salt ) Where: deploy_account is a constant prefix string, encoded in ASCII. chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. l1_gas_bounds is constructed as follows: \\[\\underbrace{\\text{L1_GAS}}_{\\text{60 bits}} | \\underbrace{\\text{max_amount}}_{\\text{64 bits}} | \\underbrace{\\text{max_price_per_unit}}_{\\text{128 bits}}\\] l2_gas_bounds is constructed as follows: \\[\\underbrace{\\text{L2_GAS}}_{\\text{60 bits}} | \\underbrace{\\text{max_amount}}_{\\text{64 bits}} | \\underbrace{\\text{max_price_per_unit}}_{\\text{128 bits}}\\] data_availability_modes is a concatenation of fee_data_availability_mode and nonce_data_availability_mode, as follows: \\[\\underbrace{0\\cdots0}_{\\text{188 bits}} | \\underbrace{\\text{nonce_data_availability_mode}}_{\\text{32 bits}} | \\underbrace{\\text{fee_data_availability_mode}}_{\\text{32 bits}}\\] h is the Poseidon hash. class_hash is the hash of the contract class. See Class Hash for details about how the hash is computed. contract_address is the address of the newly deployed account. For information on how this address is calculated, see Contract address. Table 5. DEPLOY_ACCOUNT transaction fields Name Type Description class_hash FieldElement The hash of the desired account class. constructor_calldata List The arguments to the account constructor. contract_address_salt FieldElement A random salt that determines the account address. signature List Additional information given by the sender, used to validate the transaction. max_fee FieldElement The maximum fee that the sender is willing to pay for the transaction nonce FieldElement The transaction nonce. version FieldElement The transaction’s version. The value is 1. The hash of a DEPLOY_ACCOUNT transaction is computed as follows: deploy_account_v1_tx_hash = h( \"deploy_account\", version, contract_address, 0, h(class_hash, contract_address_salt, constructor_calldata), max_fee, chain_id, nonce ) Where: deploy_account is a constant prefix string, encoded in ASCII. The placeholder zero is used to align the hash computation for the different types of transactions. h is the Pedersen hash chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. class_hash is the hash of the contract class. See Class Hash for details about how the hash is computed. If you need to retrieve the hash of an existing DEPLOY transaction, you can use this information to calculate the hash of the transaction. Before you can calculate the transaction hash, get the deployed contract address. The DEPLOY transaction’s hash is calculated as shown in the following pseudo code: deploy_tx_hash = h( \"deploy\", version, contract_address, sn_keccak(\"constructor\"), h constructor_calldata), 0, chain_id ) Where: The placeholder zero is used to align the hash computation for the different types of transactions. deploy and constructor are constant strings encoded in ASCII. h is the Pedersen hash and sn_keccak is Starknet Keccak. chain_id is a constant value that specifies the network to which this transaction is sent. See Chain-Id. contract_address is calculated as described here. While Starknet does not have a specific signature scheme built into the protocol, the Cairo language, in which smart contracts are written, does have an efficient implementation for ECDSA signature with respect to a STARK-friendly curve. The generator used in the ECDSA algorithm is \\(G=\\left(g_x, g_y\\right)\\) where: \\(g_x=874739451078007766457464989774322083649278607533249481151382481072868806602\\) \\(g_y=152666792071518830868575557812948353041420400780739481342941381225525861407\\) Chain IDs are given as numbers, representing the ASCII encoding of specific constant strings, as illustrated by the following Python snippet: chain_id = int.from_bytes(value, byteorder=\"big\", signed=False) The following constants are currently used. They correspond to the chain IDs that Starknet currently supports: SN_MAIN for Starknet’s main network. SN_SEPOLIA for Starknet’s public testnet on Sepolia. Sepolia testnet replaces Goerli testnet. Goerli testnet support is now removed. For more information, including bridge support for Sepolia, see Starknet Goerli Deprecation in the Starknet Dev News newsletter.","title":"Transaction types","component":"ROOT","version":"","name":"transactions","url":"/architecture-and-concepts/network-architecture/transactions/","titles":[{"text":"Transaction versions","hash":"transaction_versioning","id":1},{"text":"INVOKE transaction","hash":"invoke_transaction","id":2},{"text":"v3 transaction fields","hash":"v3_transaction_fields","id":3},{"text":"v3 hash calculation","hash":"v3_hash_calculation","id":4},{"text":"v1 (deprecated) transaction fields","hash":"v1_deprecated_transaction_fields","id":5},{"text":"v1 (deprecated) hash calculation","hash":"v1_deprecated_hash_calculation","id":6},{"text":"v0 (deprecated) hash calculation","hash":"v0_deprecated_hash_calculation","id":7},{"text":"DECLARE transaction","hash":"declare-transaction","id":8},{"text":"v3 transaction fields","hash":"v3_transaction_fields_2","id":9},{"text":"v3 hash calculation","hash":"v3_hash_calculation_2","id":10},{"text":"v2 (deprecated) transaction fields","hash":"declare_v2","id":11},{"text":"v2 (deprecated) hash calculation","hash":"v2_deprecated_hash_calculation","id":12},{"text":"v1 (deprecated) transaction fields","hash":"v1_deprecated_transaction_fields_2","id":13},{"text":"v1 (deprecated) hash calculation","hash":"v1_deprecated_hash_calculation_2","id":14},{"text":"v0 (unsupported) hash calculation","hash":"v0_unsupported_hash_calculation","id":15},{"text":"DEPLOY_ACCOUNT transaction","hash":"deploy_account_transaction","id":16},{"text":"v3 transaction fields","hash":"v3_transaction_fields_3","id":17},{"text":"v3 hash calculation","hash":"v3_hash_calculation_3","id":18},{"text":"v1 (deprecated) transaction fields","hash":"v1_deprecated_transaction_fields_3","id":19},{"text":"v1 (deprecated) hash calculation","hash":"v1_deprecated_hash_calculation_3","id":20},{"text":"DEPLOY (unsupported) transaction hash calculation","hash":"deploy_transaction","id":21},{"text":"Signature","hash":"signature","id":22},{"text":"Chain ID","hash":"chain-id","id":23}]},"73":{"id":73,"text":"Before Starknet Alpha v0.11.0 a developer would write contracts in Cairo 0 and compile them locally to Cairo assembly (or Casm for short). Next, the developer would submit the compilation output, the contract class, to the Starknet sequencer via a DECLARE transaction. Starting with Cairo 1.0, the contract class resulting from compiling Cairo 1.0 does not include Casm. Instead of Casm, it includes instructions in an intermediate representation called Safe Intermediate Representation, Sierra for short. This new contract class is then compiled by the sequencer, via the Sierra → Casm compiler, to generate the Cairo assembly associated with this class. The Casm code is then executed by the Starknet OS. Starknet is a validity rollup, which means that the execution inside every block needs to be proven, and this is where STARKs come in handy. However, STARK proofs can address statements that are formulated in the language of polynomial constraints, and have no knowledge of smart contract execution. To overcome this gap, we developed Cairo. Cairo instructions, previously referred to as Casm, are translated to polynomial constraints that enforce the correct execution of a program according to the Cairo semantics defined in Cairo-a Turing-complete STARK-friendly CPU architecture. Thanks to Cairo, we can formulate the statement \"This Starknet block is valid\" in a way that we can prove. Be aware that we can only prove things about Casm. That is, regardless of what the user sends to the Starknet sequencer, what’s proven is the correct Casm execution. This means that we need a way to translate Sierra into Casm, and this is achieved with the Sierra → Casm compiler. To understand why we chose to add an additional layer between the code that the user writes (Cairo 1.0) and the code that is being proven (Casm), we need to consider more components in the system, and the limitations of Cairo. A crucial property of every decentralized L2 is that the sequencers are guaranteed to be compensated for the work they do. The notion of reverted transactions is a good example: even if the user’s transaction failed mid execution, the sequencer should be able to include it in a block and charge execution fees up to the point of failure. If the sequencer cannot charge for such transactions, then sending transactions that will eventually fail (after a lot of computation steps) is an obvious DoS attack on the sequencer. The sequencer cannot look at a transaction and conclude that it would fail without actually doing the work (this is equivalent to solving the halting problem). The obvious solution to the above predicament is to include such transactions in the block, similar to Ethereum. However, this may not be as simple to do in a validity rollup. With Cairo 0, there is no separating layer between user code and what is being proven. This means that users can write code which is unprovable in some cases. In fact, such code is very easy to write, e.g. assert 0=1 is a valid Cairo instruction that cannot be proven, as it translates to polynomial constraints that are not satisfiable. Any Casm execution that contains this instruction cannot be proven. Sierra is the layer between user code and the provable statement, that allows us to make sure all transactions are eventually provable. The method by which Sierra guarantees that user code is always provable is by compiling Sierra instructions to a subset of Casm, which we call \"safe Casm\". The important property that we require from safe Casm is being provable for all inputs. A canonical example for safe Casm is using if/else instructions instead of assert, that is, making sure all failures are graceful. To better understand the considerations that go into designing the Sierra → Casm compiler, consider the find_element function from the common library of Cairo 0: func find_element{range_check_ptr}(array_ptr: felt*, elm_size, n_elms, key) -> (elm_ptr: felt*) { alloc_locals; local index; %{ ... %} assert_nn_le(a=index, b=n_elms - 1); tempvar elm_ptr = array_ptr + elm_size * index; assert [elm_ptr] = key; return (elm_ptr=elm_ptr); } Below we abuse the \"Casm\" notation by not distinguishing Cairo 0 from Casm and referring to the above as Casm (while we actually refer to the compilation result of the above). For brevity, we have omitted the hint in the above snippet, but it’s clear that this function can only execute correctly if the requested element exists in the array (otherwise it would fail for every possible hint - there is nothing we can substitute index for, that makes the following lines run successfully). Such Casm cannot be generated by the Sierra→Casm compiler. Furthermore, simply replacing the assertion with an if/else statement doesn’t do, as this results in non-deterministic execution. That is, for the same input, different hint values can yield different results. A malicious prover can use this freedom to harm the user - in this example, they are able to make it seem as if an element isn’t part of the array, even though it actually is. The safe Casm for finding an element in an array behaves like the above snippet in the happy flow (element is there): an index is given in a hint, and we verify that the array at the hinted index contains the requested element. However, in the unhappy flow (element isn’t there), we must go over the entire array to verify this. This was not the case in Cairo 0, as we were fine with certain paths not being provable (in the above snippet, the unhappy flow in which the element isn’t in the array is never provable). Sierra’s gas metering adds further complications to the above example. Even looking through the array to verify that the element isn’t there may leave some flexibility to the prover. If we take gas limitations into consideration, the user may have enough gas for the happy flow, but not for the unhappy one, making the execution stop mid-search, and allowing the prover to get away with lying about the element not being present. The way we plan to handle this is by requiring the user to have enough gas for the unhappy flow before actually calling find_element. Smart contracts written with Cairo 1.0 cannot contain user defined hints. This is already true with Cairo 0 contracts (only whitelisted hints are accepted), but with Cairo 1.0 the hints in use are determined by the Sierra → Casm compiler. Since this compilation is there to ensure that only \"safe\" Casm is generated, there is no room for hints that are not generated by the compiler. In the future, native Cairo 1.0 may contain hint syntax similar to Cairo 0, but it will not be available in Starknet smart contracts (L3s on top of Starknet may make use of such functionality). Note that this is currently not part of Starknet’s roadmap.","title":"Cairo and Sierra","component":"ROOT","version":"","name":"cairo-and-sierra","url":"/architecture-and-concepts/smart-contracts/cairo-and-sierra/","titles":[{"text":"Why do we need Casm?","hash":"why_do_we_need_casm","id":1},{"text":"Why do we need Sierra?","hash":"why_do_we_need_sierra","id":2},{"text":"Reverted transactions, unsatisfiable AIRs, and DoS attacks","hash":"reverted_transactions_unsatisfiable_airs_and_dos_attacks","id":3},{"text":"Safe Casm","hash":"safe_casm","id":4},{"text":"Hints in Cairo 1.0","hash":"hints_in_cairo_1_0","id":5}]},"74":{"id":74,"text":"Builtins in Cairo are predefined optimized low-level execution units that the Cairo VM refers to in order to perform predefined computations that are expensive to perform in standard Cairo. Builtins enhance the functionality of the Cairo VM, enabling you to perform certain tasks, such as using the Poseidon hash, range-checks, or ECDSA signature verifications, more efficiently, using fewer trace cells. In contrast to CairoZero, where you needed to consciously write code to take advantage of builtin optimizations, in Cairo, you simply write code without doing anything special, and when the Cairo VM executes the code, certain operations use builtins internally to optimize your program. Table 1. List of Cairo builtins Name of builtin Description Pedersen Computes the Pedersen hash over two elements. Used internally in pedersen.cairo. For more information see Hash functions. Poseidon Computes the Hades permutation on three field elements. Used internally in poseidon.cairo. For more information, see Hash functions. The Cairo corelib functions use this builtin internally. The Cairo corelib functions are defined in info.cairo in the Cairo GitHub repository. Range check Checks whether a field element is in the range [0,2128-1]. Used when instantiating and comparing the various integer types. All arithmetic comparisons use the range check builtin. ECDSA Verifies the validity of an ECDSA signature over the STARK curve. This is used in CairoZero, but is not used in Cairo because it fails on invalid signatures. In Cairo ECDSA verification is performed with high-level code, applying the EC_OP builtin twice. Keccak Computes the keccak-f[1600] permutation. For more information see Keccak page on the Keccak Team site. For high level Cairo keccak functions that use this builtin internally, see keccak.cairo in the Cairo corelib. Bitwise Computes the bitwise operations OR, AND, and XOR of two felts. Used internally when performing bitwise operations using the |, & and ^ operators. EC_OP Multiplies a point on the STARK curve by a scalar.","title":"Cairo builtins","component":"ROOT","version":"","name":"cairo-builtins","url":"/architecture-and-concepts/smart-contracts/cairo-builtins/","titles":[]},"75":{"id":75,"text":"The class hash is a hash chain of the components that define the class. Classes written in Cairo are compiled into Sierra code. The Sierra code generated is an intermediate representation of the class. This new contract class is then compiled by the sequencer, via the Sierra → Casm compiler, to generate the Cairo assembly associated with this class. The resulting Casm code is then executed by the Starknet OS. For information on how the compiler converts code from Cairo to Sierra, see Cairo and Sierra. The components that define a class are: contract_class_version The version of the contract class object. Currently, the Starknet OS supports version 0.1.0 Array of external functions entry points An entry point is a pair (selector, function_idx), where function_idx is the index of the function inside the Sierra program. The selector is an identifier through which the function is callable in transactions or in other classes. The selector is the starknet_keccak hash of the function name, encoded in ASCII. Array of L1 handlers entry points - Array of constructors entry points Currently, the compiler allows only one constructor. ABI A string representing the ABI of the class. The ABI hash (which affects the class hash) is given by: starknet_keccak(bytes(ABI, \"UTF-8\")) This string is supplied by the user declaring the class (and is signed on as part of the DECLARE transaction), and is not enforced to be the true ABI of the associated class. Without seeing the underlying source code (i.e. the Cairo code generating the class’s Sierra), this ABI should be treated as the \"intended\" ABI by the declaring party, which may be incorrect (intentionally or otherwise). The \"honest\" string would be the json serialization of the contract’s ABI as produced by the Cairo compiler. Sierra program An array of field elements representing the Sierra instructions. The hash of the class is the chain hash of its components, computed as follows: class_hash = ℎ( contract_class_version, external_entry_points, l1_handler_entry_points, constructor_entry_points, abi_hash, sierra_program_hash ) Where \\(h\\) is the Poseidon hash function The hash of an entry point array \\((selector,index)_{i=1}^n\\) is given by \\(h(\\text{selector}_1,\\text{index}_1,...,\\text{selector}_n,\\text{index}_n)\\) The sierra_program_hash is the Poseidon hash of the bytecode array The Starknet OS currently supports contract class version 0.1.0, which is represented in the above hash computation as the ASCII encoding of the string CONTRACT_CLASS_V0.1.0 (hashing the version in this manner gives us domain separation between the hashes of classes and other objects). For more details, see the Cairo implementation.","title":"Class hash","component":"ROOT","version":"","name":"class-hash","url":"/architecture-and-concepts/smart-contracts/class-hash/","titles":[{"text":"Components of a Cairo class definition","hash":"cairo1_class","id":1},{"text":"Computing the Cairo class hash","hash":"computing_the_cairo_1_class_hash","id":2}]},"76":{"id":76,"text":"The compiled class hash is a cryptographic hash that results from the compilation process of a Cairo class from its intermediate representation (Sierra) to Cairo assembly (Casm). This process is managed by the Sierra→Casm compiler. The compiled class hash is crucial for ensuring the uniqueness and integrity of compiled classes within Starknet. Whether you are a developer deploying contracts or a party interested in the inner workings of Starknet’s state commitment, understanding the compiled class hash is essential. For developers, the hash is an important part of the contract declaration process, ensuring that each compiled class is uniquely identifiable and verifiable. For those involved in maintaining the network, it contributes to the efficiency and performance of Starknet by optimizing the state commitment process. The state commitment uses the Sierra code that results when compiling Cairo classes. Sierra acts as an intermediate representation between Cairo and Casm. Provers, however, operate solely with Casm. In order to avoid recompiling, from Sierra to Casm, each block in which the class is deployed, the state commitment gets the information it needs about the corresponding Casm from the information contained in the compiled class hash. When declaring a contract, the party administering the contract endorses the compiled class hash, procured using an SDK, as an integral component of the DECLARE transaction. Following the inclusion of the transaction in a block, the compiled class hash integrates into the state commitment. Uniqueness: The compiled class hash ensures the uniqueness of each compiled class. It is essentially a fingerprint for the compiled output, allowing the network to verify the integrity and uniqueness of the class. State Commitment: In Starknet, state commitment includes various components, including the Cairo classes. These classes are initially defined using Sierra. However, for the prover to function efficiently, it requires Casm. Efficiency: By including the compiled class hash in the state commitment, Starknet avoids the need to recompile from Sierra to Casm in every block where the class is used. This optimization significantly enhances the network’s efficiency and performance. When a new contract is declared on Starknet, the compiled class hash plays a pivotal role. Here’s how: Declaration Process: The party declaring the contract computes the compiled class hash using an SDK provided by Starknet. DECLARE Transaction: This hash is then included as part of the DECLARE transaction is a specific type of transaction in Starknet used to register new contracts. Inclusion in State Commitment: Once the DECLARE transaction is included in a block, the compiled class hash becomes part of the state commitment. This inclusion ensures that the network recognizes and stores the unique compiled output of the contract. Prospectively, as Sierra-to-Casm compilation integrates into the Starknet OS, the value might undergo updates via proof of the Sierra-to-Casm compiler execution. Such verification demonstrates that compiling the same class with an updated compiler version yields a fresh compiled class hash. The compiled class hash is a basic element in Starknet’s architecture, enabling efficient state commitment and ensuring the integrity and uniqueness of compiled classes.","title":"Compiled class hash","component":"ROOT","version":"","name":"compiled-class-hash","url":"/architecture-and-concepts/smart-contracts/compiled-class-hash/","titles":[{"text":"Purpose and Significance","hash":"purpose_and_significance","id":1},{"text":"Usage","hash":"usage","id":2}]},"77":{"id":77,"text":"A contract ABI is a representation of a Starknet contract interface. It is formatted as JSON and describes the functions, structs and events which are defined in the contract. You can get the contract’s ABI by using starknet-compile: cargo run --bin starknet-compile -- --single-file The following is an example contract ABI: Cairo v2 Cairo v1 [ { \"type\": \"impl\", \"name\": \"CounterContract\", \"interface_name\": \"new_syntax_test_contract::new_syntax_test_contract::ICounterContract\" }, { \"type\": \"interface\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::ICounterContract\", \"items\": [ { \"type\": \"function\", \"name\": \"increase_counter\", \"inputs\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"decrease_counter\", \"inputs\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"get_counter\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::integer::u128\" } ], \"state_mutability\": \"view\" } ] }, { \"type\": \"constructor\", \"name\": \"constructor\", \"inputs\": [ { \"name\": \"initial_counter\", \"type\": \"core::integer::u128\" }, { \"name\": \"other_contract_addr\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ] }, { \"type\": \"event\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterIncreased\", \"kind\": \"struct\", \"members\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\", \"kind\": \"data\" } ] }, { \"type\": \"event\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterDecreased\", \"kind\": \"struct\", \"members\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\", \"kind\": \"data\" } ] }, { \"type\": \"event\", \"name\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::Event\", \"kind\": \"enum\", \"variants\": [ { \"name\": \"CounterIncreased\", \"type\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterIncreased\", \"kind\": \"nested\" }, { \"name\": \"CounterDecreased\", \"type\": \"new_syntax_test_contract::new_syntax_test_contract::counter_contract::CounterDecreased\", \"kind\": \"nested\" } ] } ] [ { \"type\": \"function\", \"name\": \"constructor\", \"inputs\": [ { \"name\": \"name_\", \"type\": \"core::felt252\" }, { \"name\": \"symbol_\", \"type\": \"core::felt252\" }, { \"name\": \"decimals_\", \"type\": \"core::integer::u8\" }, { \"name\": \"initial_supply\", \"type\": \"core::integer::u256\" }, { \"name\": \"recipient\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"get_name\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::felt252\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"get_symbol\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::felt252\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"get_decimals\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::integer::u8\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"get_total_supply\", \"inputs\": [], \"outputs\": [ { \"type\": \"core::integer::u256\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"balance_of\", \"inputs\": [ { \"name\": \"account\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ], \"outputs\": [ { \"type\": \"core::integer::u256\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"allowance\", \"inputs\": [ { \"name\": \"owner\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" } ], \"outputs\": [ { \"type\": \"core::integer::u256\" } ], \"state_mutability\": \"view\" }, { \"type\": \"function\", \"name\": \"transfer\", \"inputs\": [ { \"name\": \"recipient\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"amount\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"transfer_from\", \"inputs\": [ { \"name\": \"sender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"recipient\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"amount\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"approve\", \"inputs\": [ { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"amount\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"increase_allowance\", \"inputs\": [ { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"added_value\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"function\", \"name\": \"decrease_allowance\", \"inputs\": [ { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"subtracted_value\", \"type\": \"core::integer::u256\" } ], \"outputs\": [], \"state_mutability\": \"external\" }, { \"type\": \"event\", \"name\": \"Transfer\", \"inputs\": [ { \"name\": \"from\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"to\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"value\", \"type\": \"core::integer::u256\" } ] }, { \"type\": \"event\", \"name\": \"Approval\", \"inputs\": [ { \"name\": \"owner\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"spender\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"value\", \"type\": \"core::integer::u256\" } ] } ] With Cairo v2.3.0 the limitations on the Event enum have been relaxed, allowing more flexibility on the events that can be emitted from a given contract. For example: It is no longer enforced that the Event enum variants are structs of the same name as the variant, they can now be a struct or an enum of any name. Enum variants inside event ABI entries (entries in the abi with \"type\": \"event\" and \"kind\": \"enum\") now have two possible kinds. Before v2.3.0 it was always \"kind\": \"nested\", now \"kind: \"flat\" is also possible. v2.3.0 is backward compatible with version ≥ 2.0.0 ABI, so the same structure of the ABI is kept, while allowing flexibility. Between versions v2.0.0 and v2.2.0, to identify all potential serializations of events (what raw keys, data arrays can be emitted given the ABI), it was sufficient to iterate over the abi entries with \"type\": \"event\" and \"kind\": \"struct\", skipping the encapsulating Event type which has \"kind\": \"enum\". With v2.3.0 onwards, doing so may result in losing information. To illustrate this, consider the following example: //high-level code defining the events #[event] #[derive(Drop, starknet::Event)] enum Event { ComponentEvent: test_component::Event, TestCounterIncreased: CounterIncreased, TestCounterDecreased: CounterDecreased, TestEnum: MyEnum } #[derive(Drop, starknet::Event)] struct CounterIncreased { amount: u128 } #[derive(Drop, starknet::Event)] struct CounterDecreased { amount: u128 } #[derive(Copy, Drop, starknet::Event)] enum MyEnum { Var1: MyStruct } #[derive(Copy, Drop, Serde, starknet::Event)] struct MyStruct { member: u128 } In v2.3.0 enum variant types can now have any name. As an example the TestCounterIncreased variant and the CounterIncreased type, as they appear in the ABI: { \"type\": \"event\", \"name\": \"::Event\", \"kind\": \"enum\", \"variants\": [ { \"name\": \"ComponentEvent\", \"type\": \"::test_component::Event\", \"kind\": \"nested\" }, { \"name\": \"TestCounterIncreased\", \"type\": \"::CounterIncreased\", \"kind\": \"nested\" }, { \"name\": \"TestCounterDecreased\", \"type\": \"::CounterDecreased\", \"kind\": \"nested\" }, { \"name\": \"TestEnum\", \"type\": \"::MyEnum\", \"kind\": \"nested\" } ] }, { \"type\": \"event\", \"name\": \"::CounterIncreased\", \"kind\": \"struct\", \"members\": [ { \"name\": \"amount\", \"type\": \"core::integer::u128\", \"kind\": \"data\" } ] } When the contract emits the TestCounterIncreased event, for example by writing self.emit(CounterIncreased { amount })), the event that is emitted has the following keys and data: One key based on the variant name: sn_keccak(TestCounterIncreased). This information only appears in the ::Event type entry in the ABI, as the name TestCounterIncreased does not appear in the \"kind\": \"struct\" ABI entry. This did not matter in previous versions when the variant name and type had to be equal. One data element based on the struct CounterIncreased which is associated with TestCounterIncreased via one of the Event type variants. The introduction of components allows variants of Event to be enums. In the following example, we have two such variants: TestEnum (unrelated to components) and ComponentEvent. The serialization to keys and data is the same in both cases, so this example will focus on TestEnum: This example shows the TestEnum variant entry inside Event: { \"name\": \"TestEnum\", \"type\": \"::MyEnum\", \"kind\": \"nested\" } This example shows the MyEnum event entry: { \"type\": \"event\", \"name\": \"::MyEnum\", \"kind\": \"enum\", \"variants\": [ { \"name\": \"Var1\", \"type\": \"::MyStruct\", \"kind\": \"nested\" } ] } This example shows the MyStruct event entry: { \"type\": \"event\", \"name\": \"::MyStruct\", \"kind\": \"struct\", \"members\": [ { \"name\": \"member\", \"type\": \"core::integer::u128\", \"kind\": \"data\" } ] } If a TestEnum event is being emitted via self.emit(Event::TestEnum(MyEnum::Var1(MyStruct {member: 5}))), you can implement the trait Into to avoid having to write it out in full. When the event is emitted, the serialization to keys and data happens as follows: Since the TestEnum variant has kind nested, add the first key: sn_keccak(TestEnum), and the rest of the serialization to keys and data is done recursively via the starknet::event trait implementation of MyEnum. Next, you can handle a \"kind\": \"nested\" variant (previously it was TestEnum, now it’s Var1), which means you can add another key depending on the sub-variant: sn_keccak(Var1), and proceed to serialize according to the starknet::event implementation of MyStruct. Finally, proceed to serialize MyStruct, which gives us a single data member. This results in keys = [sn_keccak(TestEnum), sn_keccak(Var1)] and data=[5] Allowing variants that are themselves enums (TestEnum is an enum variant here) means further nesting is possible. For example, if the high level code is changed to: #[event] #[derive(Drop, starknet::Event)] enum Event { ComponentEvent: test_component::Event, TestCounterIncreased: CounterIncreased, TestCounterDecreased: CounterDecreased, TestEnum: MyEnum } #[derive(Copy, Drop, starknet::Event)] enum MyEnum { Var1: AnotherEnum } #[derive(Copy, Drop, Serde, starknet::Event)] enum AnotherEnum { Var2: MyStruct } #[derive(Copy, Drop, Serde, starknet::Event)] struct MyStruct { member: u128, } then self.emit(Event::TestEnum(MyEnum::Var1(AnotherEnum::Var2(MyStruct { member: 5 })))) (as before, Into implementations can shorten this) will emit an event with keys = [sn_keccak(TestEnum), sn_keccak(Var1), sn_keccak(Var2)] and data=[5]. This will look as follows in the ABI (only the relevant parts are shown): { \"type\": \"event\", \"name\": \"::Event\", \"kind\": \"enum\", \"variants\": [ // ignoring all the other variants for brevity { \"name\": \"TestEnum\", \"type\": \"::MyEnum\", \"kind\": \"nested\" } ] }, { \"type\": \"event\", \"name\": \"::MyEnum\", \"kind\": \"enum\", \"variants\": [ { \"name\": \"Var1\", \"type\": \"::AnotherEnum\", \"kind\": \"nested\" } ] }, { \"type\": \"event\", \"name\": \"::AnotherEnum\", \"kind\": \"enum\", \"variants\": [ { \"name\": \"Var2\", \"type\": \"::MyStruct\", \"kind\": \"nested\" } ] } As TestEnum, Var1 and Var2 are of kind nested, a selector should be added to the list of keys, before continuing to recursively serialize. You might not want to nest enums when serializing the event. For example, if you write an ERC-20 as a component, not a contract, that is pluggable anywhere, you might not want the contract to modify the keys of known events such as Transfer. To avoid nesting, write the following high level code: #[event] #[derive(Drop, starknet::Event)] enum Event { ComponentEvent: test_component::Event, TestCounterIncreased: CounterIncreased, TestCounterDecreased: CounterDecreased, #[flat] TestEnum: MyEnum } By writing the above, the TestEnum variant entry in the ABI will change to: { \"name\": \"TestEnum\", \"type\": \"::MyEnum\", \"kind\": \"flat\" } This means that self.emit(Event::TestEnum(MyEnum::Var1(MyStruct {member: 5}))) will emit an event with keys=[sn_keccak(Var1)] and data=[5]. With the transition to v2.0.0, the contract ABI underwent some changes. Consider the following high level code that generates the ABI in the following example: #[starknet::interface] trait IOtherContract { fn decrease_allowed(self: @TContractState) -> bool; } #[starknet::interface] trait ICounterContract { fn increase_counter(ref self: TContractState, amount: u128); fn decrease_counter(ref self: TContractState, amount: u128); fn get_counter(self: @TContractState) -> u128; } #[starknet::contract] mod counter_contract { use starknet::ContractAddress; use super::{ IOtherContractDispatcher, IOtherContractDispatcherTrait, IOtherContractLibraryDispatcher }; #[storage] struct Storage { counter: u128, other_contract: IOtherContractDispatcher } #[event] #[derive(Drop, starknet::Event)] enum Event { CounterIncreased: CounterIncreased, CounterDecreased: CounterDecreased } #[derive(Drop, starknet::Event)] struct CounterIncreased { amount: u128 } #[derive(Drop, starknet::Event)] struct CounterDecreased { amount: u128 } #[constructor] fn constructor( ref self: ContractState, initial_counter: u128, other_contract_addr: ContractAddress ) { self.counter.write(initial_counter); self .other_contract .write(IOtherContractDispatcher { contract_address: other_contract_addr }); } #[external(v0)] impl CounterContract of super::ICounterContract { fn get_counter(self: @ContractState) -> u128 { self.counter.read() } fn increase_counter(ref self: ContractState, amount: u128) { let current = self.counter.read(); self.counter.write(current + amount); self.emit(CounterIncreased { amount }); } fn decrease_counter(ref self: ContractState, amount: u128) { let allowed = self.other_contract.read().decrease_allowed(); if allowed { let current = self.counter.read(); self.counter.write(current - amount); self.emit(CounterDecreased { amount }); } } } } Since the CounterContract impl is annotated with the #[external(v0)] attribute, you’ll find the following impl entry in the ABI: { \"type\": \"impl\", \"name\": \"CounterContract\", \"interface_name\": \"new_syntax_test_contract::new_syntax_test_contract::ICounterContract\" } ---- This means that every function appearing in the ICounterContract interface is a possible entry point of the contract. Standalone functions in the contract outside an external impl can also be annotated with #[external(v0)] (currently, this is the only way to add L1 handlers). In such cases, a corresponding function (or l1_handler) entry will be found in the ABI in the same hierarchy as impls and interfaces. In Cairo v2, a dedicated type for the contract’s events was introduced. Currently, the contract event type must be an enum named Event, whose variants are structs of the same name as the variant. Types that can be emitted via self.emit(_) must implement the Event trait, which defines how this type should be serialized into two felt252 arrays, keys and data. The Event enum variants appear in the ABI under \"type\" = \"event\" rather than regular structs. For such entries, each member has an additional kind field that specifies how the serialization into keys and data takes place: If the kind is key, then this member or variant are serialized into the event’s keys. If the kind is data, then this member or variant are serialized into the event’s data. If the kind is nested, then the member or variant are serialized according to the Event attribute, potentially adding to both keys and data. This feature is not yet supported, so no high level code written in Cairo v2.0.0 can generate such an ABI. You can find a JSON schema specification of the ABI in the starknet-specs repository. For a UI-friendly version, you can use the OPEN-RPC playground.","title":"Contract ABI","component":"ROOT","version":"","name":"contract-abi","url":"/architecture-and-concepts/smart-contracts/contract-abi/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"An example contract ABI","hash":"an_example_contract_abi","id":2},{"text":"Cairo v2.3.0 changes","hash":"cairo_v2_3_0_changes","id":3},{"text":"Nested events","hash":"nested_events","id":4},{"text":"Variant names different from types","hash":"variant_names_different_from_types","id":5},{"text":"Enum variants inside Event","hash":"enum_variants_inside_event","id":6},{"text":"Flattened enum variants","hash":"flattened_enum_variants","id":7},{"text":"Cairo v2.0.0 changes","hash":"cairo_v2_0_0_changes","id":8},{"text":"Interface and Impl ABI entries","hash":"interface_and_impl_abi_entries","id":9},{"text":"Events","hash":"events","id":10},{"text":"Specification","hash":"specification","id":11}]},"78":{"id":78,"text":"The contract address is a unique identifier of the contract on Starknet. It is a chain hash of the following information: prefix The ASCII encoding of the constant string STARKNET_CONTRACT_ADDRESS. deployer_address One of the following: When the contract is deployed via a DEPLOY_ACCOUNT transaction: 0 When the contract is deployed via a deploy system call from another contract, the value of the deploy_from_zero parameter determines this value. For information on the deploy_from_zero parameter, see the deploy system call salt The salt passed by the contract calling the syscall, provided by the transaction sender. class_hash See the class hash documentation. constructor_calldata_hash Array hash of the inputs to the constructor. The address is computed as follows: contract_address = pedersen( “STARKNET_CONTRACT_ADDRESS”, deployer_address, salt, class_hash, constructor_calldata_hash) A random salt ensures unique addresses for smart contract deployments, preventing conflicts when deploying identical contract classes. It also thwarts replay attacks by influencing the transaction hash with a unique sender address. Additional resources For more information on the address computation, see contract_address.cairo in the Cairo code repository. deploy system call","title":"Contract address","component":"ROOT","version":"","name":"contract-address","url":"/architecture-and-concepts/smart-contracts/contract-address/","titles":[]},"79":{"id":79,"text":"As in object-oriented programming, Starknet distinguishes between a contract and its implementation by separating contracts into classes and instances. A contract class is the definition of a contract. It includes Cairo byte code, hint information, entry point names, and everything that defines its semantics. Each class is uniquely identified by its class hash, comparable to a class name in traditional object-oriented programming languages. A contract instance is a deployed contract that corresponds to a class. Only contract instances act as true contracts, in that they have their own storage and can be called by transactions or other contracts. A contract class does not necessarily have a deployed instance in Starknet. A contract class does not necessarily require a deployed instance in Starknet. A contract instance has a nonce, the value of which is the number of transactions originating from this address plus 1. For example, when you deploy an account with a DEPLOY_ACCOUNT transaction, the nonce of the account contract in the transaction is 0. After the DEPLOY_ACCOUNT transaction, until the account contract sends its next transaction, the nonce is 1. Adding new classes To introduce new classes to Starknet’s state, use the DECLARE transaction. Deploying instances To deploy a new instance of a previously declared class, use the deploy system call. Using class functionality To use the functionality of a declared class without deploying an instance, use the library_call system call. Analogous to Ethereum’s delegatecall, it enables you to use code in an existing class without deploying a contract instance. Class hash DECLARE transaction deploy system call library_call system call","title":"Contract classes and instances","component":"ROOT","version":"","name":"contract-classes","url":"/architecture-and-concepts/smart-contracts/contract-classes/","titles":[{"text":"Contract classes","hash":"contract_classes_2","id":1},{"text":"Contract instances","hash":"contract_instances","id":2},{"text":"Working with classes","hash":"working_with_classes","id":3},{"text":"Additional resources","hash":"additional_resources","id":4}]},"80":{"id":80,"text":"The contract’s storage is a persistent storage space where you can read, write, modify, and persist data. The storage is a map with \\(2^{251}\\) slots, where each slot is a felt which is initialized to 0. The basic function for writing to storage writes, value to key is: storage_write_syscall(address_domain, address, value) storage_read is a basic function that is used for getting the storage address, this function is created by the compiler when defining a storage variable, as explained below. This function returns the address of the storage variable. Below we discuss how this address is determined from the variable’s name and keys. Both storage_read and storage_write are system calls that can be imported by adding the line: use starknet::syscalls::storage_read_syscall; use starknet::syscalls::storage_write_syscall; The most common way to interact with a contract’s storage is through storage variables. The #[storage] attribute above the Storage struct declares that the contents of this struct are part of the contract storage. The storage variables stored inside this struct can consist of a single felt, or it can be a mapping from multiple arguments to a tuple of felts or structs. To use this variable, the var.read(args), var.write(args, value) and var.address(args) functions are automatically created by the #[storage] attribute, for reading the storage value, writing the storage value and getting the storage address, respectively. The Starknet contract compiler generates the Cairo code that maps the storage variable’s name and argument values to an address — so that it can be part of the generated proof. The address of a storage variable is computed as follows: If it is a single value, then the address is sn_keccak(variable_name), where variable_name is the ASCII encoding of the variable’s name. If it is a (nested) mapping, then the address of the value at key k_1,...,k_n is h(...h(h(sn_keccak(variable_name),k_1),k_2),...,k_n) where \\(h\\) is the Pedersen hash and the final value is taken \\(\\bmod 2^{251}-256\\) If it is a mapping to complex values (e.g., tuples or structs), then this complex value lies in a continuous segment starting from the address calculated in the previous point. Note that 256 field elements is the current limitation on the maximal size of a complex storage value. Note that when calling var.address(args) for a storage variable with complex values, the returned value is the address of the first element in the storage. We can summarize the above as follows: storage variable address := pedersen(keccak(variable name), keys) The following example defines storage variables with complex values. #[storage] struct Storage { name: felt252, symbol: felt252, decimals: u8, total_supply: u256, balances: LegacyMap::, allowances: LegacyMap::, }","title":"Contract storage","component":"ROOT","version":"","name":"contract-storage","url":"/architecture-and-concepts/smart-contracts/contract-storage/","titles":[{"text":"Storage layout","hash":"storage_layout","id":1},{"text":"Storage low level functions","hash":"storage_low_level_functions","id":2},{"text":"Storage variables","hash":"storage_variables","id":3}]},"81":{"id":81,"text":"With the v2.0.0 release of the Cairo compiler, the Starknet contract syntax has evolved, affecting the organization of functions, storage, and events. For more information on the latest syntax changes, see the Community Forum post Cairo 1: Contract Syntax is Evolving. Prerequisites A contract written with the Cairo compiler v1 The most recent version of the Cairo compiler Procedure Change the contract annotation from #[contract] to #[starknet::contract]. For example:: Cairo v1 Cairo v2 #[contract] mod CounterContract { ... } #[starknet::contract] mod CounterContract { ... } Annotate the Storage struct with the #[storage] attribute. For example: Cairo v1 Cairo v2 struct Storage { counter: u128, other_contract: IOtherContractDispatcher } #[storage] struct Storage { counter: u128, other_contract: IOtherContractDispatcher } Gather your contract’s external and view function signatures under a trait annotated with #[starknet::interface] as follows: Add a generic parameter to the trait. In the following example, the name TContractState represents the state of your contract. For view functions, add the self: @TContractState argument. For external functions, add the ref self: TContractState argument. Static functions that do not touch storage or emit events do not require an additional argument. For example: Cairo v1 Cairo v2 #[contract] mod CounterContract { #[external] fn increase_counter(amount: u128) { ... } #[external] fn decrease_counter(amount: u128) { ... } #[view] fn get_counter() -> u128 { ... } } #[starknet::interface] trait ICounterContract { fn increase_counter(ref self: TContractState, amount: u128); fn decrease_counter(ref self: TContractState, amount: u128); fn get_counter(self: @TContractState) -> u128; } #[starknet::contract] mod CounterContract { ... } Add the external and view function bodies under an impl of the interface trait, and mark the impl with the [external(v0)] attribute, which generates the type of dispatcher that is used to call the contract. For example: Cairo v1 Cairo v2 #[contract] mod CounterContract { #[external] fn increase_counter(amount: u128) { ... } #[external] fn decrease_counter(amount: u128) { ... } #[view] fn get_counter() -> u128 { ... } } #[starknet::interface] trait ICounterContract { fn increase_counter(ref self: TContractState, amount: u128); fn decrease_counter(ref self: TContractState, amount: u128); fn get_counter(self: @TContractState) -> u128; } #[starknet::contract] mod CounterContract { #[external(v0)] impl CounterContract of super::ICounterContract { fn increase_counter(ref self: ContractState, amount: u128) { ... } fn decrease_counter(ref self: ContractState, amount: u128) { ... } fn get_counter(self: @ContractState) -> u128 { ... } } } Replace the #[abi] attribute with #[starknet::interface]. While it doesn’t affect the generated code, adding to the trait a generic parameter T representing the contract’s state, and adding the ref self: T argument to external functions and self: @T argument for view functions makes the implementation more complete. For example: Cairo v1 Cairo v2 #[abi] trait IOtherContract { fn decrease_allowed() -> bool; } #[starknet::interface] trait IOtherContract { fn decrease_allowed(self: @TContractState) -> bool; } Modify storage accesses to happen through ContractState or @ContractState. No external functions in the contract that access storage also need to get it as an argument. For example: Cairo v1 Cairo v2 let current = counter::read(); let current = self.counter.read(); Unify all the contract’s events under the Event enum, and add a corresponding struct for every variant. All the structs must derive the Event trait, and each member type must implement the Serde trait. For example: Cairo v1 Cairo v2 #[event] fn counter_increased(amount: u128) {} #[event] fn counter_decreased(amount: u128) {} #[event] #[derive(Drop, starknet::Event)] enum Event { CounterIncreased: CounterIncreased, CounterDecreased: CounterDecreased } #[derive(Drop, starknet::Event)] struct CounterIncreased { amount: u128 } #[derive(Drop, starknet::Event)] struct CounterDecreased { amount: u128 } Emit events via the ContractState type. For example: Cairo v1 Cairo v2 fn increase_counter(amount: u128) { ... counter_increased(amount); } fn increase_counter(ref self: ContractState, amount: u128) { ... self.emit(Event::CounterIncreased(CounterIncreased { amount })); }","title":"Migrating a contract from Cairo v1 to Cairo v2","component":"ROOT","version":"","name":"contract-syntax","url":"/architecture-and-concepts/smart-contracts/contract-syntax/","titles":[]},"82":{"id":82,"text":"For the most up-to-date information, see the info.cairo contract. The struct ExecutionInfo contains the following information about the currently executing block and the transactions in the block. block_info: Box Contains information about a block. For details, see The BlockInfo struct tx_info: Box Contains information about a transaction. For details, see Transaction information: The TxInfo struct caller_address: ContractAddress The address of the contract that invokes the get_execution_info syscall. contract_address: ContractAddress The address of the contract in which the get_execution_info syscall appears. entry_point_selector: felt252 The function that includes the get_execution_info syscall. block_number: u64 The number of the block that is currently being executed. When called from an account contract’s `__validate__`, `__validate_deploy__`, or `__validate_declare__` function, this value is rounded down to the nearest multiple of 100. block_timestamp: u64 The timestamp showing the creation time of the block, in seconds since the Unix epoch, based on UTC time, rounded down to the nearest second. When called from an account contract’s `__validate__`, `__validate_deploy__`, or `__validate_declare__` function, this value is rounded down to the nearest hour. sequencer_address: ContractAddress The address of the Starknet sequencer contract. version: felt252 The version of the transaction. It is fixed (currently, 3) in the OS, and should be signed by the account contract. This field allows invalidating old transactions, whenever the meaning of the other transaction fields is changed (in the OS). account_contract_address: ContractAddress The account contract from which this transaction originates. max_fee: u128 The max_fee field of the transaction. signature: Span The signature of the transaction. transaction_hash: felt252 The hash of the transaction. chain_id: felt252 The identifier of the chain. This field can be used to prevent replay of testnet transactions on mainnet. nonce: felt252 The transaction’s nonce. resource_bounds: Span A span of ResourceBounds structs. For details, see The ResourceBounds struct. tip: u128 The tip. paymaster_data: Span If specified, the paymaster should pay for the execution of the tx. The data includes the address of the paymaster sponsoring the transaction, followed by extra data to send to the paymaster. nonce_data_availability_mode: u32 The data availability mode for the nonce. fee_data_availability_mode: u32 The data availability mode for the account balance from which fee will be taken. account_deployment_data: Span If nonempty, will contain the required data for deploying and initializing an account contract: its class hash, address salt and constructor calldata. resource: felt252 The name of the resource. max_amount: u64 The maximum amount of the resource allowed for usage during the execution. max_price_per_unit: u128 The maximum price the user is willing to pay for the resource unit.","title":"Execution information","component":"ROOT","version":"","name":"execution-info","url":"/architecture-and-concepts/smart-contracts/execution-info/","titles":[{"text":"The ExecutionInfo struct","hash":"the_executioninfo_struct","id":1},{"text":"The BlockInfo struct","hash":"block_info","id":2},{"text":"Transaction information: The TxInfo struct","hash":"tx_info","id":3},{"text":"The ResourceBounds struct","hash":"resource_bounds","id":4}]},"83":{"id":83,"text":"When you interact with contracts, especially if you are a library or SDK developer that wants to construct transactions, you need to understand how Cairo handles types that are larger than 252 bits so you can correctly formulate the calldata in a transaction. The field element (felt252), which contains 252 bits, is the only actual type in the Cairo VM. So all high-level Cairo types that are larger than 252 bits, such as u256 or arrays, are ultimately represented by a list of felts. In order to interact with a contract, you need to know how to encode its arguments as a list of felts so you can correctly formulate the calldata in the transaction. SDKs, such as starknet.js, encode the calldata for you, so you can simply specify any type and the SDK properly formulates the calldata. For example, you don’t need to know that a u256 value is represented by two felt252 values. You can simply specify a single integer in your code, and the SDK takes care of the serialization and encoding. The following types are smaller than 252 bits. For these types, each value is serialized as a single-member list that contains one felt252 value. ContractAddress EthAddress StorageAddress ClassHash Unsigned integers smaller than 252 bits: u8, u16, u32, u64, u128, and usize bytes31 felt252 Signed integers smaller than 252 bits: i8, i16, i32, i64, and i128. A negative value, \\(-x\\), is serialized as \\(P-x\\), where: \\[P = 2^{251} + 17*2^{192} + 1\\] For example, -5 is serialized as \\(P-5\\). For more information on the value of \\(P\\), see The STARK field. The following Cairo data types have non-trivial serialization: u256 and u512 arrays enums structs ByteArray, which represents strings Among unsigned integers, only u256 and u512 have non-trivial serialization. A u256 value in Cairo is represented by two felt252 values, as follows: The first felt252 value contains the 128 least significant bits, usually referred to as the low part of the original u256 value. The second felt252 value contains the 128 most significant bits, usually referred to as the high part of the original u256 value. For example: A u256 variable whose decimal value is 2 is serialized as [2,0]. To understand why, examine the binary representation of 2 and split it into two 128-bit parts, as follows: \\[\\underbrace{0\\cdots0}_{\\text{128 high bits}} | \\underbrace{0\\cdots10}_{\\text{128 low bits}}\\] A u256 variable whose decimal value is 2128 is serialized as [0,1]. To understand why, examine the binary representation of 2128 and split it into two 128-bit parts, as follows: \\[\\underbrace{0\\cdots01}_{\\text{128 high bits}} | \\underbrace{0\\cdots0}_{\\text{128 low bits}}\\] A u256 variable whose decimal value is 2129+2128+20, is serialized as [20,3]. To understand why, examine the binary representation of the 2129+2128+20 and split it into two 128-bit parts, as follows: \\[\\underbrace{0\\cdots011}_{\\text{128 high bits}} | \\underbrace{0\\cdots10100}_{\\text{128 low bits}}\\] The u512 type in Cairo is a struct containing four felt252 members, each representing a 128-bit limb of the original integer, similar to the u256 type. Arrays are serialized as follows: , ,…​, For example, consider the following array of u256 values: let POW_2_128: u256 = 0x100000000000000000000000000000000 let array: Array = array![10, 20, POW_2_128] Each u256 value in the array is represented by two felt252 values. So the array above is serialized as follows: \\[\\underbrace{3}_{\\textit{number_of_array_members}} , \\underbrace{10,0}_{\\textit{serialized_member_0}} , \\underbrace{20,0}_{\\textit{serialized_member_1}} , \\underbrace{0,1}_{\\textit{serialized_member_2}}\\] Combining the above, the array is serialized as follows: [3,10,0,20,0,0,1] An enum is serialized as follows: , Note that enum variants indices are 0-based, not to confuse with their storage layout, which is 1-based, to distinguish the first variant from an uninitialized storage slot. Enum serialization example 1 Consider the following definition of an enum named Week: enum Week { Sunday: (), // Index=0. The variant type is the unit type (0-tuple). Monday: u256, // Index=1. The variant type is u256. } Now consider instantiations of the Week enum’s variants as shown in the table below: Table 1. Serialization of Week variants Instance Description Serialization Week::Sunday Index=0. The variant’s type is the unit type. [0] Week::Monday(5) Index=1. The variant’s type is u256, hence serialized to [5,0], as shown in Serialization of u256 values . [1,5,0] Enum serialization example 2 Consider the following definition of an enum named MessageType: enum MessageType { A, #[default] B: u128, C } Now consider instantiations of the MessageType enum’s variants as shown in the table below: Table 2. Serialization of MessageType variants Instance Description Serialization MessageType::A Index=1. The variant’s type is the unit type. [0] MessageType::B(6) Index=0. The variant’s type is u128. [1,6] MessageType::C Index=2. The variant’s type is the unit type. [2] As you can see about, the #[default] attribute does not affect serialization. It only affects the storage layout of MessageType, where the default variant B will be stored as 0. You serialize a struct by serializing its members one at a time. Its members are serialized in the order in which they appear in the definition of the struct. For example, consider the following definition of the struct MyStruct: struct MyStruct { a: u256, b: felt252, c: Array } The serialization is the same for both of the following instantiations of the struct’s members: let my_struct = MyStruct { a: 2, b: 5, c: [1,2,3] }; let my_struct = MyStruct { b: 5, c: [1,2,3], a: 2 }; The serialization of MyStruct is determined as shown in the table Serialization for a struct in Cairo. Table 3. Serialization for a struct in Cairo Member Description Serialization a: 2 For information on serializing u256 values, see Serialization of u256 values [2,0] b: 5 One felt252 value 5 c: [1,2,3] An array of three felt252 values [3,1,2,3] Combining the above, the struct is serialized as follows: [2,0,5,3,1,2,3] A string is represented in Cairo as a ByteArray type. A byte array is actually a struct with the following members: data: Array Contains 31-byte chunks of the byte array. Each felt252 value has exactly 31 bytes. If the number of bytes in the byte array is less than 31, then this array is empty. pending_word: felt252 The bytes that remain after filling the data array with full 31-byte chunks. The pending word consists of at most 30 bytes. pending_word_len: usize The number of bytes in pending_word. Example 1: A string shorter than 31 characters Consider the string hello, whose ASCII encoding is the 5-byte hex value 0x68656c6c6f. The resulting byte array is serialized as follows: 0, // Number of 31-byte words in the data array. 0x68656c6c6f, // Pending word 5 // Length of the pending word, in bytes Example 2: A string longer than 31 bytes Consider the string Long string, more than 31 characters., which is represented by the following hex values: 0x4c6f6e6720737472696e672c206d6f7265207468616e203331206368617261 (31-byte word) 0x63746572732e (6-byte pending word) The resulting byte array is serialized as follows: 1, // Number of 31-byte words in the array construct. 0x4c6f6e6720737472696e672c206d6f7265207468616e203331206368617261, // 31-byte word. 0x63746572732e, // Pending word 6 // Length of the pending word, in bytes Integer types in The Cairo Programming Language.","title":"Serialization of Cairo types","component":"ROOT","version":"","name":"serialization-of-cairo-types","url":"/architecture-and-concepts/smart-contracts/serialization-of-cairo-types/","titles":[{"text":"Data types of 252 bits or less","hash":"data_types_of_252_bits_or_less","id":1},{"text":"Data types greater than 252 bits","hash":"data_types_greater_than_252_bits","id":2},{"text":"Serialization of unsigned integers","hash":"serialization_of_unsigned_integers","id":3},{"text":"Serialization of u256 values","hash":"serialization_in_u256_values","id":4},{"text":"Serialization of u512 values","hash":"serialization_in_u512_values","id":5},{"text":"Serialization of arrays","hash":"serialization_of_arrays","id":6},{"text":"Serialization of enums","hash":"serialization_of_enums","id":7},{"text":"Serialization of structs","hash":"serialization_of_structs","id":8},{"text":"Serialization of byte arrays","hash":"serialization_of_byte_arrays","id":9},{"text":"Additional resources","hash":"additional_resources","id":10}]},"84":{"id":84,"text":"A contract may emit events throughout its execution. Each event contains the following fields: from_address: address of the contract emitting the events keys: a list of field elements data: a list of field elements The keys can be used for indexing the events, while the data may contain any information that we wish to log (note that we are dealing with two separate lists of possibly varying size, rather than a list of key-value pairs). Events can be defined in a contract using the @event decorator. Once an event E has been defined, the compiler automatically adds the function E.emit(). The following example illustrates how an event is defined and emitted: #[event] fn Transfer(from: ContractAddress, to: ContractAddress, value: u256) {} Transfer(12345, 12345, 1) The emit function emits an event with a single key, which is an identifier of the event, given by \\(\\text{sn_keccak}(event\\_name)\\), where \\(event\\_name\\) is the ASCII encoding of the event’s name and \\(\\text{sn_keccak}\\) is defined here. To emit custom keys, one should use the low level emit_event system call: use starknet::syscalls::emit_event_syscall; let keys = array!['key', 'deposit']; let values = array![1, 2, 3]; emit_event_syscall(keys, values).unwrap_syscall(); The above code emits an event with two keys, the strings key and deposit (think of those as identifiers of the event that can be used for indexing) and three data elements 1, 2, 3. When using the higher level emit syntax, the event’s data may be of complex types, for example: struct Point: member x : felt member y : felt end @event func message_received(arr_len : felt, arr: felt*, p: Point): end # ... let (data : felt*) = alloc() assert data[0] = 1 assert data[1] = 2 let p = Point(3,4) message_received.emit(2, data, p) The emitted events are part of the transaction receipt. For more information, see Transaction receipt. The event definition appears in the contract’s ABI. It contains the list of data fields, with the name and type for each, and the list of the custom keys, that is, all keys except the event identifier discussed above. Below is an example of an event inside the ABI: Example of an event in the ABI { \"type\": \"event\", \"name\": \"Transfer\", \"inputs\": [ { \"name\": \"from\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"to\", \"type\": \"core::starknet::contract_address::ContractAddress\" }, { \"name\": \"value\", \"type\": \"core::integer::u256\" } ] } The event hash is given by: \\[h(h(h(h(0,from\\_address),keys\\_hash),data\\_hash),3)\\] Where: \\(keys\\_hash\\) and \\(data\\_hash\\) are the hashes of the keys list and data list respectively. For more information, see Array hashing. \\(h\\) is the Pedersen hash function. The event hashes are included in the event_commitment field of a block. architecture-and-concepts:cryptography/hash-functions.adoc#array_hashing Pedersen hash function The event_commitment field in Block structure","title":"Events","component":"ROOT","version":"","name":"starknet-events","url":"/architecture-and-concepts/smart-contracts/starknet-events/","titles":[{"text":"Emitting events","hash":"emitting_events","id":1},{"text":"Event definition in the ABI","hash":"event_abi","id":2},{"text":"Event hash","hash":"event_hash","id":3},{"text":"Additional resources","hash":"additional_resources","id":4}]},"85":{"id":85,"text":"Writing smart contracts requires various associated operations, such as calling another contract or accessing the contract’s storage, that standalone programs do not require. The Starknet contract language supports these operations by using system calls. System calls enable a contract to require services from the Starknet OS. You can use system calls in a function to get information that depends on the broader state of Starknet, which would otherwise be inaccessible, rather than local variables that appear in the function’s scope. extern fn get_block_hash_syscall( block_number: u64 ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Gets the hash of a specific Starknet block within the range of [first_v0_12_0_block, current_block - 10]. block_number: u64 The number of the block whose hash you want to get. The hash of the specified block. syscalls.cairo Block number out of range block_number is greater than current_block - 10. 0 block_number is less than the first block number of v0.12.0. extern fn get_execution_info_syscall() -> SyscallResult> implicits( GasBuiltin, System ) nopanic; Gets information about the currently executing block and the transactions in the block. For a complete description of this information, see Execution information This single system call contains all information for a block, transaction, and execution context. When an account’s __validate__, __validate_deploy__, or __validate_declare__ function calls get_execution_info, the return values for block_timestamp and block_number are modified as follows: block_timestamp returns the hour, rounded down to the nearest hour. block_number returns the block number, rounded down to the nearest multiple of 100. None. ExecutionInfo A struct that contains information about the currently executing function, transaction, and block. syscalls.cairo This example shows how to pull the block number from the ExecutionInfo struct. let execution_info = get_execution_info().unbox(); let block_info = execution_info.block_info.unbox(); let block number = block_info.block_number; extern fn call_contract_syscall( address: ContractAddress, entry_point_selector: felt252, calldata: Span ) -> SyscallResult> implicits(GasBuiltin, System) nopanic; Calls a given contract. This system call expects the address of the called contract, a selector for a function within that contract, and call arguments. An internal call can’t return Err(_) as this is not handled by the sequencer and the Starknet OS. If call_contract_syscall fails, this can’t be caught and will therefore result in the entire transaction being reverted. address: ContractAddress The address of the contract you want to call. entry_point_selector: felt252 A selector for a function within that contract. calldata: Span The calldata array. The call response, of type SyscallResult>. syscalls.cairo This is considered a lower-level syntax for calling contracts. If the interface of the called contract is available, then you can use a more straightforward syntax. extern fn deploy_syscall( class_hash: ClassHash, contract_address_salt: felt252, calldata: Span, deploy_from_zero: bool, ) -> SyscallResult)> implicits(GasBuiltin, System) nopanic; Deploys a new instance of a previously declared class. class_hash: ClassHash The class hash of the contract to be deployed. contract_address_salt: felt252 The salt, an arbitrary value provided by the sender, used in the computation of the contract’s address. calldata: Span The constructor’s calldata. An array of felts. deploy_from_zero: bool A flag that determines whether the deployer’s address affects the computation of the contract address. When not set, or when set to FALSE, the caller address is used as the new contract’s deployer address. When set to TRUE, 0 is used. A tuple wrapped with SyscallResult where: The first element is the address of the deployed contract, of type ContractAddress. The second element is the response array from the contract’s constructor, of type Span::. syscalls.cairo extern fn emit_event_syscall( keys: Span, data: Span ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Emits an event with a given set of keys and data. For more information, and for a higher-level syntax for emitting events, see Starknet events. keys: Span The event’s keys. These are analogous to Ethereum’s event topics, you can use the starknet_getEvents method to filter by these keys. data: Span The event’s data. None. syscalls.cairo The following example emits an event with two keys, the strings key and deposit and three data elements: 1, 2, and 3. let keys = array!['key', 'deposit']; let values = array![1, 2, 3]; emit_event_syscall(keys, values).unwrap_syscall(); extern fn library_call_syscall( class_hash: ClassHash, function_selector: felt252, calldata: Span ) -> SyscallResult> implicits(GasBuiltin, System) nopanic; Calls the requested function in any previously declared class. The class is only used for its logic. This system call replaces the known delegate call functionality from Ethereum, with the important difference that there is only one contract involved. class_hash: ClassHash The hash of the class you want to use. function_selector: felt252 A selector for a function within that class. calldata: Span The calldata. The call response, of type SyscallResult>. syscalls.cairo extern fn send_message_to_l1_syscall( to_address: felt252, payload: Span ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Sends a message to L1. This system call includes the message parameters as part of the proof’s output and exposes these parameters to the Starknet Core Contract on L1 once the state update, including the transaction, is received. For more information, see Starknet’s messaging mechanism. to_address: felt252 The recipient’s L1 address. payload: Span The array containing the message payload None. syscalls.cairo The following example sends a message whose content is (1,2) to the L1 contract whose address is 3423542542364363. let payload = ArrayTrait::new(); payload.append(1); payload.append(2); send_message_to_l1_syscall(payload).unwrap_syscall(); extern fn replace_class_syscall( class_hash: ClassHash ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Once replace_class is called, the class of the calling contract (i.e. the contract whose address is returned by get_contract_address at the time the syscall is called) will be replaced by the class whose hash is given by the class_hash argument. After calling replace_class, the code currently executing from the old class will finish running. The new class will be used from the next transaction onwards or if the contract is called via the call_contract syscall in the same transaction (after the replacement). class_hash_: ClassHash The hash of the class you want to use as a replacement. None. syscalls.cairo extern fn storage_read_syscall( address_domain: u32, address: StorageAddress ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Gets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with var.read(), which enables you to read storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. address_domain: u32 The domain of the key, used to separate between different data availability modes. This separation is used in Starknet to offer different data availability modes. Currently, only the onchain mode (where all updates go to L1), indicated by domain 0, is supported. Other address domains which will be introduced in the future will behave differently in terms of publication (in particular, they will not be posted on L1, creating a tradeoff between cost and security). address: StorageAddress The requested storage address. The value of the key, of type SyscallResult. syscalls.cairo use starknet::storage_access::storage_base_address_from_felt252; ... let storage_address = storage_base_address_from_felt252(3534535754756246375475423547453) storage_read_syscall(0, storage_address).unwrap_syscall() extern fn storage_write_syscall( address_domain: u32, address: StorageAddress, value: felt252 ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Sets the value of a key in the storage of the calling contract. This system call provides direct access to any possible key in storage, in contrast with var.write(), which enables you to write to storage variables that are defined explicitly in the contract. For information on accessing storage by using the storage variables, see storage variables. address_domain: u32 The domain of the key, used to separate between different data availability modes. This separation is used in Starknet to offer different data availability modes. Currently, only the onchain mode (where all updates go to L1), indicated by domain 0, is supported. Other address domains which will be introduced in the future will behave differently in terms of publication (in particular, they will not be posted on L1, creating a tradeoff between cost and security). address: StorageAddress The requested storage address. value: felt252 The value to write to the key. None. Common library syscalls.cairo extern fn keccak_syscall( data: Span ) -> SyscallResult implicits(GasBuiltin, System) nopanic; Computes the Keccak-256 hash of the input data. This system call is particularly useful when interacting with Ethereum contracts or implementing Ethereum-compatible functionality, as Keccak-256 is widely used in the Ethereum ecosystem. Note that instead of using this syscall directly, it is recommended to use the functions provided in keccak.cairo which provide a more convenient interface and handle the syscall under the hood. data: Span The input data to be hashed, represented as an array of field elements. The Keccak-256 hash of the input data as a u256 value. syscalls.cairo The following example demonstrates how to compute a Keccak-256 hash using the recommended functions from keccak.cairo: use array::ArrayTrait; use keccak::keccak_u256s_le_inputs; // Create input data let mut data = ArrayTrait::new(); data.append(1_u256); data.append(2_u256); // Compute Keccak hash using the recommended function let hash = keccak_u256s_le_inputs(data.span());","title":"System Calls","component":"ROOT","version":"","name":"system-calls-cairo1","url":"/architecture-and-concepts/smart-contracts/system-calls-cairo1/","titles":[{"text":"get_block_hash","hash":"get_block_hash","id":1},{"text":"Function signature","hash":"function_signature","id":2},{"text":"Description","hash":"description","id":3},{"text":"Arguments","hash":"arguments","id":4},{"text":"Return values","hash":"return_values","id":5},{"text":"Common library","hash":"common_library","id":6},{"text":"Error messages","hash":"error_messages","id":7},{"text":"get_execution_info","hash":"get_execution_info","id":8},{"text":"Function signature","hash":"function_signature_2","id":9},{"text":"Description","hash":"description_2","id":10},{"text":"Arguments","hash":"arguments_2","id":11},{"text":"Return values","hash":"return_values_2","id":12},{"text":"Common library","hash":"common_library_2","id":13},{"text":"Example","hash":"example","id":14},{"text":"call_contract","hash":"call_contract","id":15},{"text":"Function signature","hash":"function_signature_3","id":16},{"text":"Description","hash":"description_3","id":17},{"text":"Arguments","hash":"arguments_3","id":18},{"text":"Return values","hash":"return_values_3","id":19},{"text":"Common library","hash":"common_library_3","id":20},{"text":"deploy","hash":"deploy","id":21},{"text":"Function signature","hash":"function_signature_4","id":22},{"text":"Description","hash":"description_4","id":23},{"text":"Arguments","hash":"arguments_4","id":24},{"text":"Return values","hash":"return_values_4","id":25},{"text":"Common library","hash":"common_library_4","id":26},{"text":"emit_event","hash":"emit_event","id":27},{"text":"Function signature","hash":"function_signature_5","id":28},{"text":"Description","hash":"description_5","id":29},{"text":"Arguments","hash":"arguments_5","id":30},{"text":"Return values","hash":"return_values_5","id":31},{"text":"Common library","hash":"common_library_5","id":32},{"text":"Example","hash":"example_2","id":33},{"text":"library_call","hash":"library_call","id":34},{"text":"Function signature","hash":"function_signature_6","id":35},{"text":"Description","hash":"description_6","id":36},{"text":"Arguments","hash":"arguments_6","id":37},{"text":"Return values","hash":"return_values_6","id":38},{"text":"Common library","hash":"common_library_6","id":39},{"text":"send_message_to_L1","hash":"send_message_to_L1","id":40},{"text":"Function signature","hash":"function_signature_7","id":41},{"text":"Description","hash":"description_7","id":42},{"text":"Arguments","hash":"arguments_7","id":43},{"text":"Return values","hash":"return_values_7","id":44},{"text":"Common library","hash":"common_library_7","id":45},{"text":"Example","hash":"example_3","id":46},{"text":"replace_class","hash":"replace_class","id":47},{"text":"Function signature","hash":"function_signature_8","id":48},{"text":"Description","hash":"description_8","id":49},{"text":"Arguments","hash":"arguments_8","id":50},{"text":"Return values","hash":"return_values_8","id":51},{"text":"Common library","hash":"common_library_8","id":52},{"text":"storage_read","hash":"storage_read","id":53},{"text":"Function signature","hash":"function_signature_9","id":54},{"text":"Description","hash":"description_9","id":55},{"text":"Arguments","hash":"arguments_9","id":56},{"text":"Return values","hash":"return_values_9","id":57},{"text":"Common library","hash":"common_library_9","id":58},{"text":"Example","hash":"example_4","id":59},{"text":"storage_write","hash":"storage_write","id":60},{"text":"Function signature","hash":"function_signature_10","id":61},{"text":"Description","hash":"description_10","id":62},{"text":"Arguments","hash":"arguments_10","id":63},{"text":"Return values","hash":"return_values_10","id":64},{"text":"keccak","hash":"keccak","id":65},{"text":"Function signature","hash":"function_signature_11","id":66},{"text":"Description","hash":"description_11","id":67},{"text":"Arguments","hash":"arguments_11","id":68},{"text":"Return values","hash":"return_values_11","id":69},{"text":"Common library","hash":"common_library_10","id":70},{"text":"Example","hash":"example_5","id":71}]},"86":{"id":86,"text":"Scaffold-Stark is built using NextJS, Starknet.js, Scarb, Starknet-React, Starknet Foundry and Typescript, and designed to make it easier for developers to create, deploy and interact with smart contracts. Starknet-Scaffold is an open-source, up-to-date toolkit for building decentralized applications on Starknet, that help you move from prototyping to production-grade apps seamlessly. Decentralized applications are at the heart of Starknet. These libraries help developers build Dapps on Starknet and connect to prominent Starknet wallets. Starknet React, developed by Apibara using starknet.js, is a wagmi-inspired collection of React hooks for Starknet. Get Starknet is a Starknet wallet<>dApp connection bridge, that enables easy discovery and UI for Starknet wallets, including ArgentX, Braavos, Metamask Snaps, and OKx. Starknetkit is a Starknet wallet connection kit, built by Argent using Starknet.js and starknet-react.","title":"Devtools for building Starknet dApps","component":"ROOT","version":"","name":"building-dapps","url":"/tools/devtools/building-dapps/","titles":[{"text":"Scaffold-Stark","hash":"scaffold-stark","id":1},{"text":"Starknet Scaffold","hash":"starknet-scaffold","id":2},{"text":"Starknet React","hash":"starknet-react","id":3},{"text":"Get Starknet","hash":"get-starknet","id":4},{"text":"Starknetkit","hash":"starknetkit","id":5}]},"87":{"id":87,"text":"Scarb is much more than a package manager for Cairo: It is the easiest and most recommended way to build and maintain Cairo code. Developed by Software Mansion and inspired by Cargo for Rust, Scarb includes: Initiating a new Cairo project. Compiling Cairo projects. Adding and removing Cairo dependencies. Generating Cairo documentation. Fetching and uploading packages Scarbs.xyz, the Cairo Registry. Integrating with the Cairo language server, as well as other tools in the Cairo ecosystem, such as Starknet Foundry and the Dojo gaming engine. VS Code Cairo extension is an extension for the Microsoft Visual Studio (VS) Code IDE that provides assistance when writing Cairo smart contracts, including live diagnostic highlighting for compile errors, quick fixes with suggestions, code formatting and completion, and more. It integrates with Scarb, and works best when Scarb is installed via asdf. Universal-Sierra-Compiler is a utility tool for compiling single Sierra files (unlike Scarb, which compiles full projects) from any Sierra version into CASM. Universal-Sierra-Compiler comes bundled with Starknet Foundry and does not need to be installed separately if Starknet Foundry is installed. cairo-profiler is a utility tool that can be used to create profiles of Cairo executions from execution traces, which can be analyzed and used to show flame graphs and other useful information. cairo-profiler comes bundled with Starknet Foundry and does not need to be installed separately if Starknet Foundry is installed. Cairo Playground an online tool that can be used to both experiment with Cairo without deploying a smart contract on Starknet, as well as dive deep into the Cairo virtual machine. Sierra Analyzer, developed by FuzzingLabs is a security toolkit for analyzing Sierra files, including decompiling a Sierra file, printing the contract’s control flow graph, and running static analysis detectors. Cairo lint is a collection of lints that can either be used as either a library or as a standalone binary to help both detect and fix common mistakes and improve your Cairo code. Stark-utils is a simple web application that aims to be a toolbox for Cairo developers, allowing you to convert any input to a felt, string, hexadecimal value, etc.","title":"Devtools for coding in Cairo","component":"ROOT","version":"","name":"coding-in-cairo","url":"/tools/devtools/coding-in-cairo/","titles":[{"text":"Scarb","hash":"scarb","id":1},{"text":"VS Code Cairo extension","hash":"vs-code-cairo-extension","id":2},{"text":"Universal-Sierra-Compiler","hash":"usc","id":3},{"text":"cairo-profiler","hash":"cairo-profiler","id":4},{"text":"Cairo Playground","hash":"cairo-playground","id":5},{"text":"Sierra Analyzer","hash":"sierra-analyzer","id":6},{"text":"Cairo lint","hash":"cairo_lint","id":7},{"text":"Stark-utils","hash":"stark_utils","id":8}]},"88":{"id":88,"text":"Starkli, developed by Jonathan Lei, is a fast command-line interface for interacting with Starknet. It supports fetching data from the Starknet network, deploying accounts, interacting with contracts, and other useful utilities for developers. Part of the Starknet Foundry suite, sncast is a command line interface for interacting with Starknet, which includes deep integration with Starknet Foundry projects. A Software Development Kit (SDK) is a library that abstracts the complexities of Starknet when building transactions and interacting with the blockchain. SDKs implement the Starknet JSON RPC specification, and are updated to support the latest API changes. There are SDKs for various languages, so you can choose the SDK according to your needs. SDK name Maintainer Code Package Docs Support Starknet.js SpaceShard starknet.js on GitHub starknet.js on NPM starknet.js Book starknet.js channel on Starknet Discord Starknet.py Software Mansion starknet.py on GitHub starknet.py on PyPi starknet.py Docs starknet.py on Telegram Starknet-rs Jonathan Lei starknet-rs on GitHub starknet-rs on Crates starknet-rs Docs starknet-rs on Telegram Starknet.go Nethermind starknet.go on GitHub N/A starknet.go Docs starknet.go on Telegram starknet-jvm Software Mansion starknet-jvm on GitHub starknet-jvm on Maven starknet-jvm Docs N/A starknet.swift Software Mansion starknet.swift on GitHub N/A starknet.swift Docs N/A starknet.dart Focustree starknet.dart on GitHub starknet.dart on Pub starknet.dart Docs starknet.dart on Telegram Entro helps decoding and analyzing Starknet transactions and events, including decoding contract ABI and transaction data and getting contract class history, Starknet RPC Request Builder is a useful tool for generating RPC queries for Starknet, with support for basic example for JavaScript, Go, and Rust. Walnut is a transaction debugger and simulator for Starknet that supports Starknet Mainnet, Starknet Sepolia and Starknet Appchains and includes transaction call trace analysis, visual transaction step by step debugger, and transaction simulator.","title":"Devtools for interacting with Starknet","component":"ROOT","version":"","name":"interacting-with-starknet","url":"/tools/devtools/interacting-with-starknet/","titles":[{"text":"Starkli","hash":"starkli","id":1},{"text":"sncast","hash":"sncast","id":2},{"text":"Starknet SDKs","hash":"sdks","id":3},{"text":"Entro","hash":"entro","id":4},{"text":"Starknet RPC Request Builder","hash":"rpc-request-builder","id":5},{"text":"Walnut","hash":"walnut","id":6}]},"89":{"id":89,"text":"To support its unique architecture, Starknet boasts its own suite of developer tools (devtools) that aim to streamline the development process for Starknet developers. While sometimes developed in coordination with StarkWare, the majority of these tools are community-driven projects, showcasing the collaborative and innovative spirit of the Starknet ecosystem. The list of devtools in this section is dynamic and continuously updated. If a tool you are using is missing, please consider opening an issue or editing the page by yourself. Devtools for coding in Cairo: Scarb VS Code Cairo extension Universal-Sierra-Compiler cairo-profiler Cairo Playground Sierra Analyzer Cairo lint Devtools for writing Starknet smart contracts: Starknet Foundry Starknet Remix plugin Open Zeppelin Contract Wizard Devtools for interacting with Starknet: Starkli sncast Starknet SDKs Entro Starknet RPC Request Builder Walnut Devtools for building Starknet decentralized apps (dApps): Scaffold-Stark Starknet Scaffold Starknet React Get Starknet Starknetkit Devtools for using Starknet developer networks (devnets): Starknet Devnet RS Starknet Devnet JS Katana","title":"Starknet devtools","component":"ROOT","version":"","name":"overview","url":"/tools/devtools/overview/","titles":[{"text":"Introduction","hash":"introduction","id":1},{"text":"List of devtools","hash":"list_of_devtools","id":2}]},"90":{"id":90,"text":"Starknet Devnet RS , developed by SpaceShard, is a Rust implementation of a local Starknet node that includes many featured tailored for testing and development, which are not present on testnet or mainnet,including * Pre-deployed and pre-funded accounts * Forking the chain at a specific block. * Dumping current state (and loading in future runs) * Impersonating account * Mock L1<>L2 communication Starknet Devnet JS is a JavaScript package that abstracts the Starknet Devnet API, making it easier to interact with it and write end-to-end tests for L1<>L2 communications. Katana, developed by Cartridge, is an extremely fast devnet designed to support local development with the Dojo Starknet gaming engine but can be used as a general purpose devnet as well.","title":"Devtools for running a Starknet devnet","component":"ROOT","version":"","name":"running-devnets","url":"/tools/devtools/running-devnets/","titles":[{"text":"Starknet Devnet RS","hash":"starknet-devnet-rs","id":1},{"text":"Starknet Devnet JS","hash":"starknet-devnet-js","id":2},{"text":"Katana","hash":"katana","id":3}]},"91":{"id":91,"text":"Starknet Foundry is the go-to toolchain for developing Starknet smart contracts, which includes: snforge, a command line interface that enables using of various \"cheatcodes\" for testing various aspects of the contracts, such as setting caller address, manipulating the timestamp and block number, forking the chain at a specific block, getting accurate gas and resource reports, profiling and more. sncast, a command line interface with Starknet Foundry projects that enable to interact with Starknet with deep integration, including declaring, deploying, and interacting with contracts, deploying accounts, and more. Remix is a browser-based integrated development environment (IDE) for Ethereum that you can use for learning, experimenting and finding vulnerabilities in smart contracts, without installing anything. Starknet Remix plugin lets you use Remix for testing Starknet smart contracts, so you can focus on learning Cairo and Starknet in the comfort of your browser. The plugin is also integrated with Starknet By Example, a rich repository of practical learning content. Open Zeppelin Contract Wizard is a tool that helps you create smart contracts with Open Zeppelin libraries by easily toggling on and off features for popular smart contract patterns.","title":"Devtools for writing Starknet smart contracts","component":"ROOT","version":"","name":"writing-smart-contracts","url":"/tools/devtools/writing-smart-contracts/","titles":[{"text":"Starknet Foundry","hash":"starknet-foundry","id":1},{"text":"Starknet Remix plugin","hash":"starknet-remix-plugin","id":2},{"text":"Open Zeppelin Contract Wizard","hash":"open-zeppelin-contract-wizard","id":3}]}},"components":{},"componentVersions":{"ROOT/":{"displayVersion":"default","title":"Starknet","version":"","name":"ROOT","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Starknet documentation","site-url":"https://docs.starknet.io/","idprefix":"","stem":"latexmath","page-pagination":"","experimental":"","starknet_mainnet_version":"Mainnet: 0.13.1.1","starknet_testnet_version":"Sepolia: 0.13.1.1","page-starknet_version":"Mainnet: 0.13.1.1 | Sepolia: 0.13.1.1"},"sourcemap":false,"extensions":[{}]},"url":"/","navigation":[{"items":[{"content":"Overview","url":"/","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Quickstart","items":[{"content":"Overview","url":"/quick-start/overview/","urlType":"internal"},{"content":"Setting up your environment","url":"/quick-start/environment-setup/","urlType":"internal"},{"content":"Compiling <code>HelloStarknet</code>","url":"/quick-start/compiling-hellostarknet/","urlType":"internal"},{"content":"Declaring, deploying, and interacting with <code>HelloStarknet</code> locally","url":"/quick-start/devnet/","urlType":"internal"},{"content":"Deploying and interacting with <code>HelloStarknet</code> on Sepolia","url":"/quick-start/sepolia/","urlType":"internal"},{"content":"Recommended next steps","url":"/quick-start/next-steps/","urlType":"internal"},{"content":"Troubleshooting","url":"/quick-start/troubleshooting/","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Architecture","items":[{"content":"Accounts","items":[{"content":"What is an account?","url":"/architecture-and-concepts/accounts/introduction/","urlType":"internal"},{"content":"Starknet&#8217;s account interface","url":"/architecture-and-concepts/accounts/approach/","urlType":"internal"},{"content":"Account interface function reference","url":"/architecture-and-concepts/accounts/account-functions/","urlType":"internal"},{"content":"Deploying new accounts","url":"/architecture-and-concepts/accounts/deploying-new-accounts/","urlType":"internal"},{"content":"Universal Deployer Contract","url":"/architecture-and-concepts/accounts/universal-deployer/","urlType":"internal"}]},{"content":"Block structure","url":"/architecture-and-concepts/network-architecture/block-structure/","urlType":"internal"},{"content":"Contracts","items":[{"content":"Contract classes and instances","url":"/architecture-and-concepts/smart-contracts/contract-classes/","urlType":"internal"},{"content":"Class hash","url":"/architecture-and-concepts/smart-contracts/class-hash/","urlType":"internal"},{"content":"Compiled class hash","url":"/architecture-and-concepts/smart-contracts/compiled-class-hash/","urlType":"internal"},{"content":"Contract address","url":"/architecture-and-concepts/smart-contracts/contract-address/","urlType":"internal"},{"content":"Contract storage","url":"/architecture-and-concepts/smart-contracts/contract-storage/","urlType":"internal"},{"content":"Contract ABI","url":"/architecture-and-concepts/smart-contracts/contract-abi/","urlType":"internal"},{"content":"Cairo and Sierra","url":"/architecture-and-concepts/smart-contracts/cairo-and-sierra/","urlType":"internal"},{"content":"Cairo builtins","url":"/architecture-and-concepts/smart-contracts/cairo-builtins/","urlType":"internal"},{"content":"Serialization of Cairo types","url":"/architecture-and-concepts/smart-contracts/serialization-of-cairo-types/","urlType":"internal"},{"content":"System calls","url":"/architecture-and-concepts/smart-contracts/system-calls-cairo1/","urlType":"internal"},{"content":"Execution information for the current block","url":"/architecture-and-concepts/smart-contracts/execution-info/","urlType":"internal"}]},{"content":"Cryptography","items":[{"content":"The STARK field","url":"/architecture-and-concepts/cryptography/p-value/","urlType":"internal"},{"content":"The STARK curve","url":"/architecture-and-concepts/cryptography/stark-curve/","urlType":"internal"},{"content":"Hash functions","url":"/architecture-and-concepts/cryptography/hash-functions/","urlType":"internal"}]},{"content":"Data availability","url":"/architecture-and-concepts/network-architecture/data-availability/","urlType":"internal"},{"content":"Fee mechanism","url":"/architecture-and-concepts/network-architecture/fee-mechanism/","urlType":"internal"},{"content":"L1-L2 messaging","items":[{"content":"L1-L2 messaging mechanism","url":"/architecture-and-concepts/network-architecture/messaging-mechanism/","urlType":"internal"},{"content":"L1-L2 Messaging reference","url":"/architecture-and-concepts/network-architecture/messaging-reference/","urlType":"internal"}]},{"content":"Operating system","url":"/architecture-and-concepts/network-architecture/os/","urlType":"internal"},{"content":"State","url":"/architecture-and-concepts/network-architecture/starknet-state/","urlType":"internal"},{"content":"Tokenomics","url":"/architecture-and-concepts/economics-of-starknet/","urlType":"internal"},{"content":"Transactions","items":[{"content":"Transaction lifecycle","url":"/architecture-and-concepts/network-architecture/transaction-life-cycle/","urlType":"internal"},{"content":"Transaction types","url":"/architecture-and-concepts/network-architecture/transactions/","urlType":"internal"}]}]}],"root":true,"order":2},{"items":[{"content":"Tooling","items":[{"content":"Devtools","items":[{"content":"Overview","url":"/tools/devtools/overview/","urlType":"internal"},{"content":"Coding in Cairo","url":"/tools/devtools/coding-in-cairo/","urlType":"internal"},{"content":"Writing smart contracts","url":"/tools/devtools/writing-smart-contracts/","urlType":"internal"},{"content":"Building dApps","url":"/tools/devtools/building-dapps/","urlType":"internal"},{"content":"Interacting with Starknet","url":"/tools/devtools/interacting-with-starknet/","urlType":"internal"},{"content":"Running devnets","url":"/tools/devtools/running-devnets/","urlType":"internal"}]},{"content":"Full nodes and API services","url":"/tools/api-services/","urlType":"internal"},{"content":"Block explorers","url":"/tools/ref-block-explorers/","urlType":"internal"},{"content":"Oracles","url":"/tools/oracles/","urlType":"internal"},{"content":"Data indexers","url":"/tools/data-indexers/","urlType":"internal"},{"content":"Audit providers","url":"/tools/audit/","urlType":"internal"},{"content":"Compatibility tables","url":"/tools/compatibility/","urlType":"internal"}]}],"root":true,"order":3},{"items":[{"content":"Guides","items":[{"content":"Staking","items":[{"content":"Overview","url":"/staking/overview/","urlType":"internal"},{"content":"Architecture","url":"/staking/architecture/","urlType":"internal"},{"content":"Procedures","items":[{"content":"Becoming a validator","url":"/staking/entering-staking/","urlType":"internal"},{"content":"Increasing stake","url":"/staking/increasing-staking/","urlType":"internal"},{"content":"Claiming rewards","url":"/staking/claiming-rewards/","urlType":"internal"},{"content":"Delegating stake","url":"/staking/delegating-stake/","urlType":"internal"},{"content":"Switching delegation pools","url":"/staking/switching-delegation-pools/","urlType":"internal"},{"content":"Exiting the staking protocol","url":"/staking/exiting-staking/","urlType":"internal"},{"content":"Managing staking and delegation operations","url":"/staking/managing-staking-and-delegation-operations/","urlType":"internal"},{"content":"Using staking events and read functions","url":"/staking/staking-events-and-read-functions/","urlType":"internal"}]}]},{"content":"StarkGate","items":[{"content":"Overview","url":"/starkgate/overview/","urlType":"internal"},{"content":"Architecture","url":"/starkgate/architecture/","urlType":"internal"},{"content":"Procedures","items":[{"content":"Depositing funds","url":"/starkgate/depositing/","urlType":"internal"},{"content":"Withdrawing funds","url":"/starkgate/withdrawing/","urlType":"internal"},{"content":"Performing a Smart Deposit","url":"/starkgate/automated-actions-with-bridging/","urlType":"internal"},{"content":"Adding a token","url":"/starkgate/adding-a-token/","urlType":"internal"},{"content":"Cancelling a deposit","url":"/starkgate/cancelling-a-deposit/","urlType":"internal"},{"content":"Estimating StarkGate fees","url":"/starkgate/estimating-fees/","urlType":"internal"},{"content":"Migrating DAI v0 to DAI","url":"/tools/dai-token-migration/","urlType":"internal"}]}]},{"content":"\"counter-DAPP\" guide","url":"/counter-dapp/counter-contract/","urlType":"internal","items":[{"content":"Connect a wallet","url":"/counter-dapp/counter-dapp/","urlType":"internal"},{"content":"Interact with contract","url":"/counter-dapp/counter-interact/","urlType":"internal"}]}]},{"content":"Resources","items":[{"content":"Glossary","url":"/glossary/","urlType":"internal"},{"content":"Chain info","url":"/chain-info/","urlType":"internal"},{"content":"Release notes","url":"/starknet-versions/version-notes/","urlType":"internal"}]}],"root":true,"order":4}]},"docs-common-content/1.0.0":{"displayVersion":"1.0.0","title":"Common Starknet content","version":"1.0.0","name":"docs-common-content","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Starknet documentation","site-url":"https://docs.starknet.io/","idprefix":"","stem":"latexmath","page-pagination":"","experimental":"","starknet_mainnet_version":"Mainnet: 0.13.1.1","starknet_testnet_version":"Sepolia: 0.13.1.1","page-starknet_version":"Mainnet: 0.13.1.1 | Sepolia: 0.13.1.1"},"sourcemap":false,"extensions":[{}]},"url":"/docs-common-content/1.0.0/"}}}})